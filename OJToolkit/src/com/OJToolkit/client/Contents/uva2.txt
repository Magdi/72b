767||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Game</TITLE>
<META NAME="description" CONTENT="Game">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Game</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A child has drawn <I>N</I> (<IMG
 WIDTH="70" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/767img1.gif" 
 ALT="$N \le 100$">)
numbered circles of different colors. 
He has connected some of the
circles by colored oriented line segments. Every pair of circles may have 
any number of segments,
with any colors, connecting them. Each color (either circle color or segment 
color) is assigned its
own unique positive integer number not greater than 100.

<P>

<P>
<BR>
Starting the game the child first of all chooses three different integers 
<I>L</I>, <I>K</I> and <I>Q</I> within the range
between 1 and <I>N</I>. Then he places one pawn into the circle number <I>L</I> and 
another one into the circle
number <I>K</I>, whereupon he begins to move them using the following rules:
<UL>
<LI>a pawn can be moved along the line segment, if this segment has the 
same color with the
circle where another pawn is placed,
<LI>the pawn can be moved only in the direction of the segment (all 
segments are oriented),
<LI>two pawns can never be placed in the same circle at the same time,
<LI>the move order is free (i.e. it is not necessary to move pawns 
alternately),
<LI>the game ends, when one of the pawns (any of the two) reaches the 
last circle number <I>Q</I>.
</UL>

<P>
You are to write a program to find out the shortest (i.e. containing a 
minimal number of moves)
solution for this game, if it exists.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>The first line of the input
contains an integer indicating the number of datasets, and it's followed by a blank line.
The first line of each dataset contains integers 
<!-- MATH: $N, L, K, Q$ -->
<I>N</I>, <I>L</I>, <I>K</I>, <I>Q</I> separated 
by spaces.
The second line
consists of <I>N</I> integers 
<!-- MATH: $c_1, c_2, \dots , c_n$ -->
<IMG
 WIDTH="98" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/767img1.gif" 
 ALT="$c_1, c_2, \dots , c_n$">
, separated by spaces, 
in the given order,
where <I>c</I><SUB><I>i</I></SUB> is the color of
the circle number <I>i</I>. The third line consists of a single integer <I>M</I> 
(
<!-- MATH: $0 \le M \le 10000$ -->
<IMG
 WIDTH="122" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/767img1.gif" 
 ALT="$0 \le M \le 10000$">)
denoting the total
number of segments. Then follow <I>M</I> lines, each containing a description 
of one oriented segment.
Each segment is described by three integer numbers 
<!-- MATH: $A_j, B_j, C_j$ -->
<I>A</I><SUB><I>j</I></SUB>, <I>B</I><SUB><I>j</I></SUB>, <I>C</I><SUB><I>j</I></SUB>, separated by spaces,
where <I>A</I> and <I>B</I>
are the numbers of the circles connected by the <I>j</I>-th segment with direction from <I>A</I><SUB><I>j</I></SUB> to <I>B</I><SUB><I>j</I></SUB> ,
and <I>C</I><SUB><I>j</I></SUB> represents the color of this segment.

<P>There's a blank line between datasets.
<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The first line of each dataset should contain the word ``<TT>YES</TT>", if 
the game can
come to the end, and ``<TT>NO</TT>" otherwise (without quotes). If the answer 
is ``<TT>YES</TT>",
the second line of the output should contain just a single integer - the 
minimum number of the
moves the child should make to finish the game.

<P>Print a blank line between datasets.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1

5 3 4 1
2 3 2 1 4
8
2 1 2
4 1 5
4 5 2
5 1 3
3 2 2
3 2 4
5 3 1
3 5 1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
YES
3
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
768||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Crossword</TITLE>
<META NAME="description" CONTENT="Crossword">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Crossword</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A double linear crossword of length <I>L</I> is a string of <I>L</I> lowercase alphabetic characters arranged in a
line in such a way that there are at least two methods (so called decompositions) to split this string
into the words from the given list. Look at the example for <I>L</I>=17:

<P>
<PRE>
   |       |       |       |
a n d a t a r e a l l a s t a s k
     |   |     |     |   |
</PRE>

<P>
The words were taken from the following list: all, an, and, are, area, as, ask, at, data, last, or, read,
real, task.

<P>

<P>
<BR>
The words from the first decomposition may not appear in the second one and vice versa. In
addition, no word can be repeated in any decomposition.

<P>
No word in one decomposition can end in the same place of the string where a word in the other
composition ends, except, naturally, for the end of the string (otherwise the crossword can be
separated into two independent crosswords). One of the compositions may consist of a single word.

<P>

<P>
<BR>
You should write a program to construct the first, in lexicographic order, double linear crossword
of length <I>L</I> for a given list of words.

<P>
Strings are arranged in the lexicographic order with respect of the following rules:
<UL>
<LI>If the first letter of a string appears in latin alphabet before the first letter of another string,
then the former string precedes in lexicographic order.
<LI>If the first letters of some strings match, then the corresponding letters of these strings are
compared until they stop matching.
<LI>If a mismatching is not found, the shorter string goes first.
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file contains several test cases, each of them as described below.
The first line of the case consists of the single integer number <I>L</I> (
<!-- MATH: $4 \le L \le 50$ -->
<IMG
 WIDTH="89" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/768img2.gif" 
 ALT="$4 \le L \le 50$">)
denoting the
desired crossword length. The second line consists of the single positive integer <I>N</I> (at most 1000)
indicating the number of words in the list. Each of the followings <I>N</I> lines consists
of a string of 20 or less (but at least 2) latin lowercase alphabetic characters. The words in the list are arranged in
lexicographic order and no word is repeated.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, write to the output on a line by itself. For the given input data set your program 
should write to the output the first, in lexicographic
order, double linear crossword with the given length. If it is impossible for the given input file to
construct a double linear crossword with the given length, the program should write only the
message ``<TT>NO SOLUTION</TT>" (without the quotation marks).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
17
19
all
an
and
area
as
ask
at
data
do
for
last
of
or
ort
read
real
task
to
tor
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
andatareadofortor
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
769||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Magic of David Copperfield</TITLE>
<META NAME="description" CONTENT="Magic of David Copperfield">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Magic of David Copperfield</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The well-known magician David Copperfield loves to show the following trick: a square with
<I>N</I> rows and <I>N</I> columns of different pictures appears on a TV screen. Let us number all
the pictures in the following order:

<P>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">2</TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>N</I></TD>
</TR>
<TR><TD ALIGN="CENTER"><IMG
 WIDTH="9" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\vdots$"></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="9" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\vdots$"></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="28" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\ddots$"></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="9" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\vdots$"></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>N</I>*(<I>N</I>-1)+1</TD>
<TD ALIGN="CENTER"><I>N</I>*(<I>N</I>-1)+2</TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>N</I>*<I>N</I></TD>
</TR>
</TABLE></DIV>

<P>
Each member of the audience is asked to put a finger on the upper left picture (i.e., picture number
one) and The Magic begins: the magician tells the audience to move the finger <I>k</I><SUB>1</SUB> times through the
pictures (each move is a shift of the finger to the adjacent picture up, down, left or right provided
that there is a picture to move to), then with a slight movement of his hand he removes some of the
pictures with an exclamation ``<EM>You are not there!</EM>", and ... it is true - your finger is not pointing to
any of the pictures removed. Then again, he tells the audience to make <I>k</I><SUB>2</SUB> moves, and so on. At the
end he removes all the pictures but one and smiling triumphantly declares, ``<EM>I've caught you</EM>"
(applause).

<P>

<P>
<BR>
Just now, David is trying to repeat this trick. Unfortunately, he had a hard day before, and you
know how hard to conjure with a headache. You have to write a program that will help David to
make his trick.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<P>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<P>
Each test case consists of a single integer number <I>N</I> (
<!-- MATH: $2 \le N \le 100$ -->
<IMG
 WIDTH="102" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$2 \le N \le 100$">).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<P>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
Your program should write the following lines with numbers to the output file:

<P>

<P>
<BR>


<!-- MATH: $k_1 \ x_{1,1} \ x_{1,2} \ \dots \ x_{1,m1}$ -->
<IMG
 WIDTH="167" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$k_1 \ x_{1,1} \ x_{1,2} \ \dots \ x_{1,m1}$">

<P>


<!-- MATH: $k_2 \ x_{2,1} \ x_{2,2} \ \dots \ x_{2,m2}$ -->
<IMG
 WIDTH="167" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$k_2 \ x_{2,1} \ x_{2,2} \ \dots \ x_{2,m2}$">

<P>

<IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$\dots$">

<P>


<!-- MATH: $k_e \ x_{e,1} \ x_{e,2} \ \dots \ x_{e,me}$ -->
<IMG
 WIDTH="164" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$k_e \ x_{e,1} \ x_{e,2} \ \dots \ x_{e,me}$">

<P>

<P>
<BR>
where <I>k</I><SUB><I>i</I></SUB> is a number of moves the audience should make on the <I>i</I>-th turn (
<!-- MATH: $2N \le k \le 10000$ -->
<IMG
 WIDTH="129" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$2N \le k \le 10000$">).
All <I>k</I><SUB><I>i</I></SUB>
should be different (i.e. 
<!-- MATH: $k_i <> k_j$ -->
<I>k</I><SUB><I>i</I></SUB> &lt;&gt; <I>k</I><SUB><I>j</I></SUB> when <I>i</I> &lt;&gt; <I>j</I>). 
<!-- MATH: $x_{i,1}, x_{i,2}, \dots, x_{i,mi}$ -->
<IMG
 WIDTH="138" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/769img1.gif" 
 ALT="$x_{i,1}, x_{i,2}, \dots, x_{i,mi}$">
are the numbers of the pictures
David should remove after the audience will make <I>k</I><SUB><I>i</I></SUB> moves (the number of the pictures removed is
arbitrary, but each picture should be listed only once, and at least one picture should be removed on
each turn).

<P>

<P>
<BR>
A description of the every next turn should begin with a new line. All numbers on each line should
be separated by one or more spaces. After <I>e</I> iterations, all pictures except one should be removed.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1

3
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
8     4 6
13    9
10    7 1
7     8
11    3 5
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
770||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Puncher</TITLE>
<META NAME="description" CONTENT="Puncher">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Puncher</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Puncher is a device with several needles for making holes in tickets. At the factory there is a
rectangular form with <I>M</I> rows and <I>N</I> columns, as shown in the picture (<I>M</I>=3, <I>N</I>=4), to make
different punchers with 
<!-- MATH: $1, 2, \dots, M \times N$ -->
<IMG
 WIDTH="124" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/770img1.gif" 
 ALT="$1, 2, \dots, M \times N$">
needles. The rows and columns
of needles are perpendicular to each other. The distance between rows is equal
to the distance between columns. Obviously, it is possible to make

<!-- MATH: $2^{M \times N}-1$ -->
<IMG
 WIDTH="81" HEIGHT="38" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/770img1.gif" 
 ALT="$2^{M \times N}-1$">
different punchers in this way.

<center>
<IMG
  SRC="http://uva.onlinejudge.org/external/7/770img1.gif" 
   ALT="p770.eps">
</center>

<p>
However, sometimes it is not possible to distinguish tickets that are perforated by different
punchers. Let us assume that while punching two opposite borders of the ticket are parallel to the
rows of the needles, the other pair of opposite borders being parallel to the columns of the needles.
The number of the holes in a perforated ticket is always equal to the number of the needles in the
corresponding puncher. A composition of the following transformations is allowed:

<P>
<UL>
<LI>a ticket may be perforated on any side (axial symmetry),
<LI>it may be inserted into the puncher with any of its four borders downwards (rotation by 90,
180 and 270 degrees),
<LI>parallel translations are also available.
</UL>

<P>
Your task is to write a program to determine how many actually different punchers can be made
with an 
<!-- MATH: $M \times N$ -->
<IMG
 WIDTH="61" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/770img1.gif" 
 ALT="$M \times N$">
form. Two punchers are considered actually different, if
it is impossible to match using any combination of the above described
operations the holes in the two tickets perforated by these punchers.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file contains several test cases, each of them (on a line by itself) consists of two positive integer numbers <I>M</I> (not greater than 4) and <I>N</I> (not greater than 8) separated by a single space.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case, write to the output a single integer indicating the number of the actually different punchers, on a line by itself

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
3 3
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
85
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
771||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Flying Stars</TITLE>
<META NAME="description" CONTENT="Flying Stars">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Flying Stars</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
When pop stars make their international tours they usually prefer to spend as little time as possible
for travel and to save more time for rehearsal, shows and for their private life. Therefore they travel
only by airplanes and constantly search for the fastest route to destination. However, nowadays
there are so many possibilities for traveling that finding the fastest way for a long distant trip is not
an easy task. That is why a program capable to solve this problem would be prized on the market
and you as an independent software developer are strongly encouraged to write such a program.

<P>

<P>
<BR>
Since pop stars travel only by airplanes your task is greatly simplified. You need to take into
account only international airports and flights connecting them.

<P>
There are some facts about a journey by airplanes that you should know:

<P>
<UL>
<LI>international airports are located in different time zones,
<LI>each airport has flight schedule which defines destination, departure time and travel time for
each flight; this schedule works on daily basis,
<LI>boarding the airplane (as well as changing from one airplane to another) takes time, which
differs from one airport to another.
</UL>

<P>
To formalize the problem, we make the following steps:

<P>
<UL>
<LI>all international airport names are coded as identifiers represented by sequences of no more
than 20 alphanumeric characters or underline characters
(i.e. '<TT>a</TT>'...'<TT>z</TT>', '<TT>A</TT>'...'<TT>Z</TT>', '<TT>0</TT>'...'<TT>9</TT>' or '<TT>_</TT>'); all identifiers are unique,
<LI>all flight identifiers are combination of company code and flight number with a total length of
no more than 5 alphanumeric characters; all such identifiers are unique,
<LI>all identifiers are case sensitive,
<LI>all data which represent time have a format of ``<I>hh</I><TT>:</TT><I>mm</I>", where ``<I>hh</I>" and ``<I>mm</I>" are
digits from
'<TT>0</TT>' to '<TT>9</TT>' representing hours and minutes respectively; if not specified otherwise the local
time is used.
</UL>

<P>
Using these assumptions, you should write a program to find the fastest route from the airport of
origin to the destination one.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

The first line of the input file contains identifiers of the airports of origin and of destination and
starting time of the journey separated by spaces. The starting time is the time when pop star arrives
to the airport of origin.

<P>
The second line of the input file contains single integer <I>N</I>. This integer represents the number of
international airports and is not less than 2 and not greater than 100.

<P>
The rest of the input file consists of descriptions of international airports. Each description starts
with a headline and may contain some complementary lines.

<P>

<P>
<BR>
The headline consists of the airport identifier, airport time zone, boarding time and integer
<I>M</I> separated by spaces. Time zone is time difference between local time and Greenwich Mean Time
and has a format of ``<I>shh</I><TT>:</TT><I>mm</I>", where ``<I>s</I>" is the sign of time difference and
are either ``<TT>+</TT>" or ``<TT>-</TT>".
Boarding time is the time delay needed for boarding or airplane change in that particular airport.
Integer <I>M</I> defines a number of flights in the airport schedule (not greater than 300), each flight is
described on its separate line following the headline.

<P>

<P>
<BR>
The description of the flight consists of the flight identifier, destination airport identifier, departure
time and travel time, separated by spaces. The travel time is the time gap between departure and
landing (arrival).

<P>
The task will always have a solution for the given data.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


In the first line of the output file your program should print the total travel time which is counted
from the moment when pop star arrives to the airport of origin till the moment of arrival to the
destination airport using the format of ``<I>d</I><TT>:</TT><I>hh</I><TT>:</TT><I>mm</I>", where ``<I>d</I>" is the number of full days of travel (no
trip can last more than 9 full days).

<P>
In the second line the program should print the local time of the arrival of the star to the destination
airport. In the following lines program should print the list of flight identifiers of the best route -
one flight identifier per line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
Pulkovo JFK 11:15
3
Pulkovo +03:00 01:30 2
BA347 Heathrow 12:10 04:25
Z8805 Heathrow 18:25 04:30
Heathrow +00:00 00:45 3
BA160 JFK 09:20 08:10
BA346 Pulkovo 14:45 04:20
Z8804 Pulkovo 21:30 04:25
JFK -05:00 00:45 1
BA161 Heathrow 14:25 08:05
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1:09:15
12:30
Z8805
BA160
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
772||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Divide et unita</TITLE>
<META NAME="description" CONTENT="Divide et unita">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Divide et unita</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A polyomino is a two-dimensional figure formed from several squares with adjacent sides so that
all the squares of polyomino can be visited by the rook moving each turn from one square
belonging to the figure to its vertical or horizontal neighbour, also belonging to the figure.

<P>
On an infinite squared paper sheet <I>N</I><SUP>2</SUP> squares are marked (
<!-- MATH: $2 \le N \le 5$ -->
<IMG
 WIDTH="84" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/772img1.gif" 
 ALT="$2 \le N \le 5$">)
that
forms a polyomino P.
You should write a program that divides this polyomino into two other polyominos, A and B,
wherefrom using rotations and parallel translations (mirror reflection is not allowed), it is possible
to assemble a square <I>N</I>*<I>N</I>. Only one of the possible solutions should be found.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>


The input will contain an image of a part of the sheet that contains the polyomino P, represented
by the characters '<TT>.</TT>' (dot) denoting empty spaces and '<TT>*</TT>' (asterisk) denoting squares that belong to
the figure (because it is impossible to put infinite squared sheet in a file, the input file describes
only part of it; all the omitted squares are considered empty). There will be no other characters in
the lines of the input file. The input file will not contain lines that are longer than 100 characters
and there will be no more than 100 lines. There will be always at least one solution for the given
input.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


Echo the image of the given part of sheet with polyomino into the output file replacing each asterisk
with characters 'A' or 'B' in accordance with which of polyominos (parts), A or B, this square
belongs to. The output file should contain the same lines in same order except
for the above described changes.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
..
......
....*.
..*.*
..***
..****
..*..*
..****
.......
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
..
......
....B.
..B.B
..BBB
..AABA
..A..A
..AAAA
.......
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
773||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>The JustaPox Language</TITLE>
<META NAME="description" CONTENT="The JustaPox Language">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
The JustaPox Language</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A new programming language is being designed. One of its new features is related to the
specification of arrays. The language deals only with arrays of integers, and there are two
ways of specifying new arrays:

<P>
<DL COMPACT>
<DT>1.
<DD>by explicit declaration of its size. For example:
<DIV ALIGN="CENTER">
<I>A</I> is [1]
<P>
<I>B</I> is [3]
</DIV>
These sentences specify <I>A</I> and <I>B</I> as arrays of 1 and 3 elements, respectively. This
implies that any sequence with the specified size is a possible value for the array.
<DT>2.
<DD>by inclusion of previously defined arrays. For example:
<DIV ALIGN="CENTER">
<I>C</I> is <IMG
 WIDTH="38" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$A \ B$">

<P>
<I>D</I> is <IMG
 WIDTH="36" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$A \ A$">

<P>
<I>SEQ</I> is [1] <I>A</I> [4] <IMG
 WIDTH="57" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$C \ B \ A$"></DIV>
The size for arrays specified in this manner is determined by the size of its sub-arrays.
Besides, if a specification includes the same array more than once, the subsequences in
the array corresponding to the repeated parts have to hold the same value.

<P>
For the aforementioned specification of <I>A</I> and <I>B</I>, we have <I>C</I> with size 4, <I>D</I> with size
2, and <I>SEQ</I> with size 14.
</DL>

<P>
Assignments are expressed in the language by the following statement:
<DIV ALIGN="CENTER">
&lt; <I>array</I> &gt; <TT>=</TT> 
<!-- MATH: $< sequence\ of\ integers >$ -->
<IMG
 WIDTH="205" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$< sequence\ of\ integers >$"></DIV>

<P>
For example,
<DIV ALIGN="CENTER">
<I>B</I> = 3 4 15
</DIV>
is a valid assignment for <I>B</I>. Notice that the assignment <I>B</I> = 3 4 would be inconsistent
with <I>B</I>'s specification (which stated that <I>B</I> would hold a sequence of integers with size 3).
The assignment <I>D</I> = 1 2 would also be inconsistent, since <I>D</I>'s specification implies that
<I>D</I> is formed by the repetition of a size 1 sequence of integers. <I>D</I> = 1 1 is an example of a
consistent assignment for <I>D</I>.

<P>

<P>
<BR>
In other words, for the specification
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
S \mbox{ is } S_1 \ S_2 \ \dots \ S_m ,
\end{displaymath} -->


<IMG
 WIDTH="141" HEIGHT="30"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="\begin{displaymath}S \mbox{ is } S_1 \ S_2 \ \dots \ S_m ,
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
the assignment
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
S = i_1 \ i_2 \ \dots \ i_n
\end{displaymath} -->


<IMG
 WIDTH="119" HEIGHT="29"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="\begin{displaymath}S = i_1 \ i_2 \ \dots \ i_n
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
is said to be <B>consistent</B> if and only if <I>S</I> is a sequence
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
i_{11} i_{12} \dots i_{1k_1} i_{21} \dots i_{2k_2} \dots i_{m1} i_{m2} \dots i_{mk_m},
\end{displaymath} -->


<IMG
 WIDTH="312" HEIGHT="31"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="\begin{displaymath}i_{11} i_{12} \dots i_{1k_1} i_{21} \dots i_{2k_2} \dots i_{m1} i_{m2} \dots i_{mk_m},
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
where
<UL>
<LI>
<!-- MATH: $k_i = |S_i| \ (1 \le i \le m)$ -->
<IMG
 WIDTH="164" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$k_i = \vert S_i\vert \ (1 \le i \le m)$"></UL>
and
<UL>
<LI>for every previously defined subsequences <I>S</I><SUB><I>a</I></SUB>, <I>S</I><SUB><I>b</I></SUB> (
<!-- MATH: $1 \le a, b \le m$ -->
<IMG
 WIDTH="100" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$1 \le a, b \le m$">)
such
that <I>S</I><SUB><I>a</I></SUB> = <I>S</I><SUB><I>b</I></SUB> we have (
<!-- MATH: $i_{a1}, i_{a2}, \dots, i_{ak_a}$ -->
<IMG
 WIDTH="121" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$i_{a1}, i_{a2}, \dots, i_{ak_a}$">)
= (
<!-- MATH: $i_{b1}, i_{b2}, \dots,
i_{bk_b}$ -->
<IMG
 WIDTH="115" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$i_{b1}, i_{b2}, \dots,
i_{bk_b}$">).
</UL>

<P>
The language designers want you to cooperate with the compiler construction effort: you
have to write a program that receives as input a collection of array specifications and a
sequence of assignments, and produces as output the list of inconsistent assignments.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file is composed by a list of array specifications followed by a list of assignments.

<P>

<P>
<BR>
An array specification has the following format:
<DL>
<DT><STRONG>&lt;<I>id</I>&gt;</STRONG>
<DD>is 
<!-- MATH: $d_1 \ d_2 \ \dots d_m$ -->
<IMG
 WIDTH="97" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$d_1 \ d_2 \ \dots d_m$">.
<DT><STRONG>&lt;<I>id</I>&gt;</STRONG>
<DD>is a sequence of characters representing the array name.
You can assume that (1) the length of this sequence is between 1 and 32 and
(2) the sequence follows the rules for identifier names in the programming
language that you are using. <DT><STRONG><I>d</I><SUB><I>i</I></SUB></STRONG>
<DD>is
<P>
either [<I>k</I>] where <I>k</I> is a strictly positive integer (there may be spaces between <I>k</I> and its
surrounding brackets)

<P>
or &lt;<I>id</I>&gt;, where &lt;<I>id</I>&gt; is the name of a previously specified array.
</DL>

<P>

<P>
<BR>
The sequence of <I>d</I><SUB><I>i</I></SUB>'s is terminated by a period.

<P>

<P>
<BR>
An assignment sepcification has the following format:

<P>

&lt;<I>id</I>&gt; = 
<!-- MATH: $i_1 \ i_2 \ \dots \ i_n$ -->
<IMG
 WIDTH="90" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/773img1.gif" 
 ALT="$i_1 \ i_2 \ \dots \ i_n$">.

<P>
&lt;<I>id</I>&gt; is the name of a previously specified array and <I>i</I><SUB><I>j</I></SUB> are
positive integers. The list of <I>i</I><SUB><I>j</I></SUB>'s is terminated by a period.

<P>

<P>
<BR>
In both types of specifications, an arbritrary number of spaces or empty lines can appear
between the tokens.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The output file must contain the list of assignment specifications from the input file that are
inconsistent. The output for each of the inconsistent assignments should be its specification
as it appeared in the input file.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
A is [1].
B is [3].
C is A B.
SEQ is [1 ] A [4] B A.
A = 10.
B = 1 2 3.
C = 1 1 2 3 4.
SEQ = 1 10 1 1 1 1 2 2 2 10.
SEQ = 1 10 1 1 1 1 1 2 3 9.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
C = 1 1 2 3 4.
SEQ = 1 10 1 1 1 1 1 2 3 9.
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
774||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Driving in City Squares</TITLE>
<META NAME="description" CONTENT="Driving in City Squares">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Driving in City Squares</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The city <EM>AllSquared</EM> has been designed by many famous architects and engineers. 
The city
lays in a retangular area of 
<!-- MATH: $n \times m$ -->
<IMG
 WIDTH="52" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$n \times m$">
squared miles (<I>n</I> refers to the retangle 
basis, and <I>m</I> to
its height). The streets are horizontal divisions distributed uniformly at every one 
mile, and
the avenues are vertical divisions also uniformly distributed at every one mile. 
Streets are
numbered from north to south, starting from zero; avenues from west to east, also 
starting
from zero.

<P>
The figure (a) below portrays the city layout for <I>n</I> = 11 and <I>m</I> = 8. The city is also

<P>

<P>
<BR>

<P>

 

 
#1#2#3#4#5
@font#1#2pt
#3#4#5


 
<BR>
<IMG
 WIDTH="675" HEIGHT="249" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="\begin{picture}(6525,2415)(361,-1951)
%\linethickness{.1in}
\thinlines
\put(21...
...mash{\SetFigFont{8}{9.6}{\rmdefault}{\mddefault}{\updefault}(b)}}}
\end{picture}">
<BR>

<P>

<P>

<P>
<BR>
divided in horizontal and vertical strips, with the intersection of these strips 
defining the
city subregions (counties). Figure (b) pictures a city divided into 12 counties.

<P>
Every county is associated with a vehicle circulation fee, which should be paid every 
time
a car enters the county. If the car origin is a street or avenue delimiting the county, 
there
is no fee. For example, in the above figure a car whose origin is street = 2 and 
avenue = 3
and whose target is street = 2 and avenue = 9 will have to pay only the county 
crossing fee
relative to avenue 6.

<P>

<P>
<BR>
You should write a program that has the following input:
<UL>
<LI>two strictly positive integers <I>n</I> and <I>m</I> specifying the city dimensions;
<LI>two positive integers  <I>h</I> and <I>v</I> specifying the number of horizontal and vertical strips,
respectively (for the city in the figure, 
<!-- MATH: $h = 4, v = 3$ -->
<I>h</I> = 4, <I>v</I> = 3);
<LI><I>h</I> - 1 integers 
<!-- MATH: $s_1, \dots, s_{h-1}$ -->
<IMG
 WIDTH="93" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$s_1, \dots, s_{h-1}$">
(
<!-- MATH: $1 \le s_i \le n - 1$ -->
<IMG
 WIDTH="114" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$1 \le s_i \le n - 1$">)
which denote the streets in which there is a
county division line (in the previous figure, the numbers are 1, 6, and 7);
<LI><I>v</I> - 1 integers 
<!-- MATH: $a_1, \dots, a_{v-1}$ -->
<IMG
 WIDTH="94" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$a_1, \dots, a_{v-1}$">
(
<!-- MATH: $1 \le a_i \le m - 1$ -->
<IMG
 WIDTH="120" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$1 \le a_i \le m - 1$">)
which denote the avenues in which there is
a county division line (in the the previous figure, the numbers are 3 and 6);
<LI>the circulation fees for each county in the city, i.e., <I>h</I> * <I>v</I> positive real numbers
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
\begin{array}{l}
p_{11}, p_{12}, \dots, p_{1v} \\
p_{21}, p_{22}, \dots, p_{2v} \\
\dots \\
p_{h1}, p_{h2}, \dots, p_{hv}
\end{array}
\end{displaymath} -->


<IMG
 WIDTH="119" HEIGHT="93"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="\begin{displaymath}\begin{array}{l}
p_{11}, p_{12}, \dots, p_{1v} \\
p_{21}, p_...
... p_{2v} \\
\dots \\
p_{h1}, p_{h2}, \dots, p_{hv}
\end{array}\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
where <I>p</I><SUB><I>ij</I></SUB> is the circulation fee for the county delimited by <I>a</I><I>i</I>-1 (west),
<I>a</I><SUB><I>i</I>+1</SUB>
(east), <I>s</I><SUB><I>j</I>-1</SUB> (north), and <I>s</I><SUB><I>j</I>+1</SUB> (south);
<LI>two pairs of positive integers 
<!-- MATH: $local_1 = (str_1, av_1)$ -->
<I>local</I><SUB>1</SUB> = (<I>str</I><SUB>1</SUB>, <I>av</I><SUB>1</SUB>) e 
<!-- MATH: $local_2 = (str_2,av_2)$ -->
<I>local</I><SUB>2</SUB> = (<I>str</I><SUB>2</SUB>,<I>av</I><SUB>2</SUB>)</UL>

<P>
The output should be the smallest possible price to pay for going from local 1 to local 2 .

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input format may contain several instances of the problem. Each instance is terminated
by a line starting with % (percentage symbol).

<P>
The description for one instance has the following format:

<P>
<TABLE CELLPADDING=3>
<TR><TD ALIGN="CENTER"><I>n</I></TD>
<TD ALIGN="CENTER"><I>m</I></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER"><I>h</I></TD>
<TD ALIGN="CENTER"><I>v</I></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER"><I>s</I><SUB>1</SUB></TD>
<TD ALIGN="CENTER"><I>s</I><SUB>2</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>s</I><SUB><I>h</I>-1</SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>a</I><SUB>1</SUB></TD>
<TD ALIGN="CENTER"><I>a</I><SUB>2</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>a</I><SUB><I>v</I>-1</SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>p</I><SUB>11</SUB></TD>
<TD ALIGN="CENTER"><I>p</I><SUB>12</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>p</I><SUB>1<I>v</I></SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>p</I><SUB>21</SUB></TD>
<TD ALIGN="CENTER"><I>p</I><SUB>22</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>p</I><SUB>2<I>v</I></SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER"><I>p</I><SUB><I>h</I>1</SUB></TD>
<TD ALIGN="CENTER"><I>p</I><SUB><I>h</I>2</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>p</I><SUB><I>hv</I></SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>w</I><SUB>1</SUB></TD>
<TD ALIGN="CENTER"><I>t</I><SUB>1</SUB></TD>
<TD ALIGN="CENTER"><I>w</I><SUB>2</SUB></TD>
<TD ALIGN="CENTER"><I>t</I><SUB>2</SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><TT> %</TT></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
</TABLE>

<P>
where
<UL>
<LI>
<!-- MATH: $n, m, h, v$ -->
<I>n</I>, <I>m</I>, <I>h</I>, <I>v</I> are integers such that 
<!-- MATH: $0 < n, 0 < m, 0 < h \le n, 0 < v \le m$ -->
<IMG
 WIDTH="273" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$0 < n, 0 < m, 0 < h \le n, 0 < v \le m$">;
<LI>
<!-- MATH: $s_1, \dots, s_{h - 1}$ -->
<IMG
 WIDTH="93" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$s_1, \dots, s_{h-1}$">
are such that 
<!-- MATH: $1 \le s_i \le n - 1$ -->
<IMG
 WIDTH="114" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$1 \le s_i \le n - 1$">
for 
<!-- MATH: $1 \le i \le h - 1$ -->
<IMG
 WIDTH="106" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$1 \le i \le h - 1$">;
<LI>
<!-- MATH: $a_1, \dots, a_{v - 1}$ -->
<IMG
 WIDTH="94" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$a_1, \dots, a_{v-1}$">
are such that 
<!-- MATH: $1 \le a_i \le m - 1$ -->
<IMG
 WIDTH="120" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$1 \le a_i \le m - 1$">
for 
<!-- MATH: $1 \le v - 1$ -->
<IMG
 WIDTH="76" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$1 \le v - 1$">;
<LI><I>p</I><SUB><I>ij</I></SUB> are positive real numbers;
<LI>
<!-- MATH: $w_1, t_1, w_2, t_2$ -->
<I>w</I><SUB>1</SUB>, <I>t</I><SUB>1</SUB>, <I>w</I><SUB>2</SUB>, <I>t</I><SUB>2</SUB> are integers such that 
<!-- MATH: $0 \le w_1, w_2 \le n$ -->
<IMG
 WIDTH="118" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$0 \le w_1, w_2 \le n$">
and 
<!-- MATH: $0 \le t_1, t_2 \le m$ -->
<IMG
 WIDTH="110" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$0 \le t_1, t_2 \le m$">.
 (<I>w</I><SUB>1</SUB>, <I>t</I><SUB>1</SUB>) is the
origin and (<I>w</I><SUB>2</SUB>, <I>t</I><SUB>2</SUB>) is the target point for the problem;
<LI>there can be an arbitrary number of spaces or empty lines between the numbers in the
file.
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For an input file with <I>k</I> instances of the problem, the output file should follow the format:

<P>

<I>c</I><SUB>1</SUB>

<P>

<I>c</I><SUB>2</SUB>

<P>

<IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/774img1.gif" 
 ALT="$\dots$">

<P>

<I>c</I><SUB><I>k</I></SUB>

<P>
where <I>c</I><SUB><I>i</I></SUB> is the result for the <I>i</I><SUP><I>th</I></SUP> instance in the input file.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
100 100
3 4
30 60
10 70 80
5 100 1 20
1 100 1 20
1 1 1 20
5 5 10 75
%
11 8
4 3
1 6 7
3 6
10 10 10
10 10 10
10 10 10
10 10 10
2 3 2 9
%
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
6
10
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
775||||||false||||||
<!-- saved from url=(0022)http://internet.e-mail -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Hamiltonian Cycle</TITLE>
<META NAME="description" CONTENT="Hamiltonian Cycle">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Hamiltonian Cycle</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A few definitions first:
<DL>
<DT><STRONG>Definition 1</STRONG>
<DD>A graph G = (V, E) is called ``dense'' if for each pair of non-adjacent
vertices <I>u</I> and <I>v</I>,
<!-- MATH: $d(u) + d(v) \ge n$ -->
<IMG
 WIDTH="124" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$d(u) + d(v) \ge n$">
where <I>n</I> = |<I>V</I>| and

<!-- MATH: $d(\bullet)$ -->
<IMG
 WIDTH="36" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$d(\bullet)$">
denotes the degree of the vertex <IMG
 WIDTH="13" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$\bullet$">.
<DT><STRONG>Definition 2</STRONG>
<DD>A ``Hamiltonian cycle'' on G is a sequence of vertices
(
<!-- MATH: $v_{i_1} v_{i_2} \dots v_{i_n} v_{i_1}$ -->
<IMG
 WIDTH="114" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$v_{i_1} v_{i_2} \dots v_{i_n} v_{i_1}$">)
such that
<!-- MATH: $v_{i_l} \neq v_{i_h}$ -->
<IMG
 WIDTH="68" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$v_{i_l} \neq v_{i_h}$">
for all <IMG
 WIDTH="43" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$l \neq h$">
and {
<!-- MATH: $v_{i_l}, v_{i_l}$ -->
<I>v</I><SUB><I>i</I><SUB><I>l</I></SUB></SUB>, <I>v</I><SUB><I>i</I><SUB><I>l</I></SUB></SUB>} is an edge of G.
</DL>

<P>
The problem is: write a program that, given a dense undirected graph G = (V; E) as input, determines
whether G admits a Hamiltonian cycle on G and outputs that cycle, if there is one,
or outputs ``<TT>N</TT>'' if there is none.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
A file containing descriptions of graphs, in the form:

<P>

<I>n</I><SUB>1</SUB>

<P>


<!-- MATH: $u_{i_1} \ u_{j_1}$ -->
<IMG
 WIDTH="55" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$u_{i_1} \ u_{j_1}$">

<P>


<!-- MATH: $u_{i_2} \ u_{j_2}$ -->
<IMG
 WIDTH="55" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$u_{i_2} \ u_{j_2}$">

<P>

<IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$\dots$">

<P>
<i>%</i>
<P>

<I>n</I><SUB>2</SUB>

<P>


<!-- MATH: $u_{i_1} \ u_{j_1}$ -->
<IMG
 WIDTH="55" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$u_{i_1} \ u_{j_1}$">

<P>


<!-- MATH: $u_{i_2} \ u_{j_2}$ -->
<IMG
 WIDTH="55" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$u_{i_2} \ u_{j_2}$">

<P>

<IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$\dots$">

<P>
<i>%</i>

<P>
where <I>n</I><SUB><I>i</I></SUB> is the number of vertices
(0 &lt; <I>n</I><SUB><I>i</I></SUB> &lt; 256)
and
<!-- MATH: $u_{i_h} \ u_{i_l}$ -->
<IMG
 WIDTH="54" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$u_{i_h} \ u_{i_l}$">
are integers between 1 and <I>n</I> indicating that
there exists an edge between vertex <I>u</I><SUB><I>i</I><SUB><I>h</I></SUB></SUB> and <I>u</I><SUB><I>i</I><SUB><I>l</I></SUB></SUB>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The output file must contain the sequence of vertices that form a Hamiltonian cycle in the
form:

<P>


<!-- MATH: $u_{i_1} \ u_{i_2} \ u_{i_3 } \ \dots$ -->
<IMG
 WIDTH="111" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/775img1.gif" 
 ALT="$u_{i_1} \ u_{i_2} \ u_{i_3 } \ \dots$">

<P>
or containing:

<P>

<TT>N</TT>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
4
1 2
2 3
2 4
3 4
3 1
%
6
1 2
1 3
1 6
3 2
3 4
5 2
5 4
6 5
6 4
%
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1 2 4 3 1
1 3 2 5 4 6 1
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
<BR>Update: <I>Mahbub Mushed Suman</I>
<BR><I>2003-12-17</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
776||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Monkeys in a Regular Forest</TITLE>
<META NAME="description" CONTENT="Monkeys in a Regular Forest">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Monkeys in a Regular Forest</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Consider the situation of an ideal forest, where trees grow on a regular finite euclidean lattice.
At every site only one tree grows, and it can be of one among <I>n</I> species. Each species is
denoted by a single character ({
<!-- MATH: $A, B, C, \dots$ -->
<IMG
 WIDTH="88" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/776img1.gif" 
 ALT="$A, B, C, \dots$">} are valid species, for instance). Two trees of
the same species are considered neighbors if the maximum absolute difference between their
coordinates is one.

<P>
Families of (rather specialized) monkeys are released, one at a time, in this euclidean
forest. Each family will occupy all neighboring tress of a single species which have not been
taken yet by another family. The monkeys are released from left to right and from top to bottom.

<P>
Given the map of the forest, build the map of the monkeys families, starting with ``1''
and numbering them consecutively.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input file has the lines of a matrix of single characters, separated by single blank spaces.

<P>
Next matrices (each matrix is a different instance to the problem) will be preceded by a
line with a single ``<TT>%</TT>'' character and then the same structure as before.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Output file has to show lines of integers separated by as many blank spaces as required
to align columns to the right.

<P>
The solution to each instance must be finished by a line with a single ``<TT>%</TT>'' character.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
A B D E C C D
F F W D D D D
P W E W W W W
%
a A b B c d E t
a a a a a c c t
e f g h c a a t
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1 2 3 4 5 5 3
6 6 7 3 3 3 3
8 7 9 7 7 7 7
%
1  2  3  4 5 6 7 8
1  1  1  1 1 5 5 8
9 10 11 12 5 1 1 8
%
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
777||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
  <title>Codebreakers</title>
  <meta name="description" content="Codebreakers">
  <meta name="keywords" content="htmlatex">
  <meta name="resource-type" content="document">
  <meta name="distribution" content="global">
  <meta http-equiv="Content-Type"
 content="text/html; charset=iso-8859-1">
  <link rel="STYLESHEET" href="htmlatex.css">
</head>
<body lang="EN" bgcolor="#ffffff">
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Codebreakers</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
Alice and Bob use a key, a code, to communicate in privacy. This code
is just an ordered
sequence of <i>m</i> different characters out of a set S of <i>n</i>
characters. For example, if S =
{1, 2, 3, 4, 5, 6, 7, 8, 9} and <i>m</i> = 4, then one possible key is
(3, 8, 1, 5).
</p>
<p>No one knows the key except Alice and Bob. However, Steve the Spy
knows the set S
and length <i>m</i> of the key, and he will try to deduce the key by
posing different guesses of the
code. To each guess, Alice or Bob will reply with an answer of the form
(<i>c</i>, <i>w</i>), where <i>c</i> is
the number of correctly placed characters in Steve's guess, and w is the
number of characters in the
guess which are present in the code but in the wrong position, i.e.,
they are misplaced.
</p>
<p>For instance, these are guesses and answers for the aforementioned
code.
</p>
<p></p>
<pre>(1,1,1,1) -&gt; (1,0)<br>(2,2,2,2) -&gt; (0,0)<br>(9,8,3,1) -&gt; (1,2)<br></pre>
<p>
Note that a correct guess will produce the answer (<i>m</i>, 0). You
will be given S, <i>m</i> and a
list (of arbitrary length) of trials and answers, and your program has
to take either one of
the following courses of action:
</p>
<dl compact="compact">
  <dt>1. </dt>
  <dd>claim that the given information is not enough to find out the
correct code, or </dd>
  <dt>2. </dt>
  <dd>give the correct code, i.e., the code for which the answer is (<i>m</i>,
0). </dd>
</dl>
<p>
</p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
First line of input file has the set S with its elements separated by
blank spaces (without
brackets). Second line has the value of <i>m</i>. The following lines
are the guesses, in the form
``(
<!-- MATH: $g_1, \dots, g_m$ --><img width="80" height="30"
 align="middle" border="0" src="http://uva.onlinejudge.org/external/7/777img1.gif"  alt="$g_1, \dots, g_m$">)''
with <img width="35" height="30" align="middle" border="0"
 src="http://uva.onlinejudge.org/external/7/777img1.gif"  alt="$g_i \in $">
S for all<!-- MATH: $1 \le i \le m$ --> <img width="81" height="31"
 align="middle" border="0" src="http://uva.onlinejudge.org/external/7/777img1.gif"  alt="$1 \le i \le m$">,
the ``<tt>-&gt;</tt>'' symbol
and the answer, in the form
``(<i>c</i>, <i>w</i>)''. Each instance ends with a line with a single
``<tt>%</tt>'' character; next instance has the
same presentation structure as the previous one. Note that n is less
than or equal to 10, and m is less than or equal to n.
<p></p>
<h2><font color="#0070e8"><a name="SECTION0001002000000000000000">Output</a>&nbsp;</font>
</h2>
Either the solution in the form ``(
<!-- MATH: $s_1, \dots, s_m$ --><img width="80" height="30"
 align="middle" border="0" src="http://uva.onlinejudge.org/external/7/777img1.gif"  alt="$s_1, \dots, s_m$">)''
with <img width="35" height="30" align="middle" border="0"
 src="http://uva.onlinejudge.org/external/7/777img1.gif"  alt="$s_i \in $">
S for
all<!-- MATH: $1 \le i \le m$ --> <img width="81" height="31"
 align="middle" border="0" src="http://uva.onlinejudge.org/external/7/777img1.gif"  alt="$1 \le i \le m$">
or the character
``<tt>N</tt>'' to denote the impossibility of finding a solution.
<p></p>
<h2><font color="#0070e8"><a name="SECTION0001003000000000000000">Sample
Input</a>&nbsp;</font>
</h2>
<p>
</p>
<pre>1 2 3 4 5 6 7 8 9<br>3<br>(1,1,1) -&gt; (0,0)<br>(2,2,2) -&gt; (0,0)<br>(3,3,3) -&gt; (0,0)<br>(4,4,4) -&gt; (1,0)<br>(5,5,5) -&gt; (0,0)<br>(6,6,6) -&gt; (0,0)<br>(7,7,7) -&gt; (1,0)<br>(8,8,8) -&gt; (1,0)<br>(4,7,8) -&gt; (1,2)<br>(4,8,7) -&gt; (0,3)<br>(8,7,4) -&gt; (0,3)<br>(7,8,4) -&gt; (1,2)<br>(8,4,7) -&gt; (1,2)<br>%<br>1 2 3 4 5 6 7 8 9<br>3<br>(1,1,1) -&gt; (0,0)<br>(2,2,2) -&gt; (0,0)<br>(3,3,3) -&gt; (0,0)<br>(4,4,4) -&gt; (1,0)<br>(5,5,5) -&gt; (0,0)<br>(6,6,6) -&gt; (0,0)<br>(7,7,7) -&gt; (1,0)<br>(8,8,8) -&gt; (1,0)<br>(9,9,9) -&gt; (0,0)<br>%<br></pre>
<p>
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">Sample
Output</a>&nbsp;</font>
</h2>
<p>
</p>
<pre>(7,4,8)<br>N<br></pre>
<p>
</p>
<p><br>
</p>
<hr>
<address><i>Miguel Revilla</i>
<br>
<i>2000-12-30</i>
</address>
</body>
</html>

______________________________________________________
778||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Recording a tape</TITLE>
<META NAME="description" CONTENT="Recording a tape">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Recording a tape</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The market offers several types of cassette tapes, with standard time durations. You have
some of these types at home, and you want to record all songs from a given list. The songs
you hope to record have their time durations expressed, as usual, in minutes and seconds.
Given the list of songs, find the list per side in which they have to be recorded in order to
use the shortest possible available cassette for recording them.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The first line in the input file informs the cassette durations available; each of the following
lines contain the duration of one song. The input file contains several instances, that follow
this same specification, which finish with a line containing only a <TT>%</TT> (percentage symbol).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The first line should contain the duration of the cassette. Next, ``<TT>Side A</TT>'' should
be printed
followed by lines with the song durations for this side. ``<TT>Side B</TT>'' follows in the
same manner.
The output file should have a <TT>%</TT> (percentage symbol) printed after the output of each of the
several input instances.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
56 90 120
20m 44s
4m 36s
7m 18s
13m 8s
9m 6s
8m 12s
%
30 45
3m 11s
4m 45s
13m 45s
6m 8s
%
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
90
Side A
20m 44s
4m 36s
7m 8s
Side B
13m 8s
9m 6s
8m 12s
%
30
Side A
3m 11s
4m 45s
6m 8s
Side B
13m 45s
%
</PRE>

<P>

<P><P>
<BR>

<B>Observations:</B>
No pair of songs have the same duration.

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-30</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
779||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Author" content="bdf">
   <meta name="GENERATOR" content="Mozilla/4.76 [en] (Windows NT 5.0; U) [Netscape]">
   <title>Wily Hacker's Problem</title>
</head>
<body>
&nbsp;
<br>&nbsp;
<br>&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>
&nbsp;Wily Hacker's Problem&nbsp;</font></font></b></td>
</tr>
</table></center>

<p>Wily Hacker finds on his chief's desk the encryption scheme of the chief's
most important messages. He also finds, in his chief's computer, files
with cryptograms and the associated encryption keys. He wishes to write
a program for decrypting these cryptograms.
<p>Wily read a book about modern encryption. He discovered that twenty
years ago cryptography became the subject of many applications in the domain
of computer data security. More and more persons wish to make their messages
and files confidential. A cipher is a secret method of transforming plaintext
(message) into ciphertext (cryptogram). This operation, called encryption,
is controlled by an encryption key. There must exist the reverse transformation,
called decryption, which transforms ciphertext into plaintext using a decryption
key, which is derived using the encryption key.
<p>Wily observes that the algorithm shown in the figure encrypts the 64-bit
message M into the 64-bit cryptogram C, under the control of the 64-bit
key K.
<p>The encryption function uses 3 types of operations:
<ul>
<li>
exclusive-or, marked with the symbol <img src=779a.png>;</li>

<li>
addition module 216, marked with the symbol +;</li>

<li>
left circular shift, with a number of positions indicated by the input
K, marked with the symbol <img src=779b.png>.</li>
</ul>
All these functions operate on 16-bit operands.
<p>The algorithm uses the following notations:
<ul>
<li>
M<sub>i</sub>, i=1...4 represents four 16-bit blocks of plaintext;</li>

<li>
C<sub>i</sub>, i=1...4 represents four 16-bit blocks of cryptogram;</li>

<li>
K<sub>i</sub>, i=1...4 represents four 16-bit blocks of the encryption
key.</li>
</ul>
After much hard work, Wily finds the correct decryption scheme and the
method to obtain the decryption keys.
<p>Your task is to write a program that obtains plain messages from cryptograms
and decryption keys by discovering a suitable scheme, just like Wily Hacker
did.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file should contain several groups of cryptograms and keys. Each
line consists of a cryptogram, composed of 16 hexadecimal digits (64 bits)
and, after blank characters, the 16 hexadecimal digits (64 bits) of the
encryption key.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
On the output, your program will write the ASCII characters of messages
(plaintext), one message per line, representing the result of decrypting
the messages.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
85bfa0242caa796e&nbsp;&nbsp;&nbsp; 1111222233334444
4c0d17279cbf4222&nbsp;&nbsp;&nbsp; abcdabcdabcdabcd
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
TEACHERS
STUDENTS
</PRE>
</body>
</html>

______________________________________________________
780||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Sentence Generator</TITLE>
<META NAME="description" CONTENT="Sentence Generator">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Sentence Generator</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A grammar of a language is a set of rules which show the way syntactically
correct sentences are build in the language. If the number of sentences is
finite then these rules can be specified as a directed acyclic AND-OR graph,
as that illustrated in figure 1. We assume, by convention, that the AND nodes
are marked by `<TT>*</TT>', the OR nodes are marked by `<TT>|</TT>' and the <EM>
leaf</EM> nodes are labeled by any printable character different than `<TT>*</TT>' and
`<TT>|</TT>'. Each node of the graph designates a sequence of sentences.
Generally, such a sequence can contain identical members. We say that a node
can generate the sequence of sentences it designates as follows:

<P>
<UL>
<LI>A leaf generates a single sentence which is the label of the node. For example the
node labeled `a' in figure 1 generates the sentence `<TT>a</TT>'.

<P>
<LI>An OR node generates the sequence of sentences which is the union of the
sequences generated by its successors. For instance, the sole OR node in figure 1 generates
the sequence of sentences `<TT>a</TT>', `<TT>b</TT>'. The order of generation (i.e. the order
of sentences in the sequence) is the order of the node successors.

<P>
<LI>An AND node generates sentences computed as the concatenation of the
sentences generated by its successors. If there are <I>n</I> successors the concatenation uses <I>n</I>
sentences, each generated by a successor.  In addition, the concatenation is performed left
to right according to the order of the successors. For example, the AND node from figure
1 generates the sequence of sentences `<TT>ab</TT>', `<TT>bb</TT>'. This sequence is computed by
appending
the sentence generated by the leaf node `b' to each sentence generated by the OR node.
Generally, if 
<!-- MATH: $i_0,i_1,\dots,i_n$ -->
<IMG
 WIDTH="93" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$i_0,i_1,\dots,i_n$">
is the compound index of the <I>i</I>-th sentence generated by an
AND node with <I>n</I> successors, where <I>i</I><SUB><I>k</I></SUB> is the index of a sentence corresponding to the
<I>k</I>-th successor, then the sequence of sentences generated by the AND node is in
lexicographic ascending order of the compound indexes of its members.
</UL>

<P>

<P>
 
<DIV ALIGN="CENTER">
<IMG
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" >


<P>
Figure 1: An AND-OR graph
</DIV>

<P>

<P>
The sentences generated by the <EM>root</EM> node of the graph are the sentences of the
language whose syntax is described by the graph. The graph from figure 1 describes a
language with two sentences `<TT>ab</TT>' and `<TT>bb</TT>'.

<P>

<P>
<BR>
The sentences designated by a node of the graph can be generated all at once, or
incrementally, a number of sentences at a time. The term incrementally means that the
sentences generated at a given time are the next sentences which follow from those
previously generated. For example, an incremental generator working for the root node of
the graph in figure 1 will be able to generate on its first call the sentence `<TT>ab</TT>'
and on its
second call the sentence `<TT>bb</TT>'. By convention, if the sentences the node are exhausted the
generator restarts with the first sentence of the node. In the example above for the third
call the generator will produce `<TT>ab</TT>'.

<P>

<P>
<BR>
Your  problem  is  to write a program which  behaves  as  an incremental
sentence generator.  The program reads a  graph,  as explained  below, and then, one at a
time, an integer <I>k</I>. Let  |<I>k</I>| be  the absolute value of <I>k</I>. The program generates the
 next  |<I>k</I>|
sentences of the root node of the graph, prints <I>k</I> and, if <I>k</I> &gt;  0, prints the generated
sentences. The program continues with a  new set of data, if any, when it reads a null
value.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
        The program reads all its data sets from a text input  file. The integer from the first
line of the file is the number of data sets.  Each data set contains a graph description and a
sequence of integers which control the sentence generation process for the graph.
    The graph is read from the input file as follows:
<DL COMPACT>
<DT>1.
<DD>The  first  line  of the graph  data  contains  a  positive integer, say <I>n</I>, which is the
number of graph nodes.
<DT>2.
<DD>The next <I>n</I> input lines describe the nodes, a line for  each node of the graph. The
nodes are numbered from 0 to <I>n</I>-1. The root node is always numbered 0. For a leaf node
the input line has the format
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
node\_number \ node\_symbol
\end{displaymath} -->

<IMG
 WIDTH="203" HEIGHT="30"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="\begin{displaymath}node\_number \ node\_symbol
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
where  
<!-- MATH: $node\_number$ -->
<IMG
 WIDTH="107" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$node\_number$">
is a positive integer and  
<!-- MATH: $node\_symbol$ -->
<IMG
 WIDTH="101" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$node\_symbol$">
is  a character.
If the node is an AND or an OR node the input line is
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
node\_number \ node\_mark \ number\_of\_successors \ succ_0 \dots succ_m
\end{displaymath} -->


<IMG
 WIDTH="490" HEIGHT="30"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="\begin{displaymath}node\_number \ node\_mark \ number\_of\_successors \ succ_0 \dots succ_m
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
where  
<!-- MATH: $node\_number$ -->
<IMG
 WIDTH="107" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$node\_number$">
is  a  positive  integer,  
<!-- MATH: $node\_mark$ -->
<IMG
 WIDTH="89" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$node\_mark$">
is  the character
 `<TT>*</TT>' for an
AND node or the character `<TT>|</TT>' for an  OR  node, the  
<!-- MATH: $number\_of\_successors$ -->
<IMG
 WIDTH="178" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$number\_of\_successors$">
is a strictly
positive  integer,  and  <I>succ</I><SUB><I>i</I></SUB>, <I>i</I>= 0,<I>m</I> (
<!-- MATH: $m= number\_of\_successors - 1$ -->
<IMG
 WIDTH="247" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/780img1.gif" 
 ALT="$m= number\_of\_successors - 1$">), is a
positive integer
designating  the number of a graph node which is a  successor  of the currently described node.
</DL>

<P>
All  the elements of an input line start from the  beginning of  the line and are
separated by single spaces. Moreover, it  is known  that a graph can have at most 50
nodes, each node with  at most  10 successors, and the length of a sentence can be at
most 80  characters. In the example below, the first line declares  a single  data  set, the
next  5 lines  specify   the   graph  from figure  1  and   the   remaining 3  lines  control
the  sentence generation process.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For  each graph read from the input file, the output of  the
program (on a text file) is as follows: for each integer <I>k</I>,
which is read after a graph description, the program outputs <I>k</I>
and,  if <I>k</I>  &gt; 0 the next <I>k</I> sentences of the root node, one
sentence  on  a line. Each sentence starts at the beginning of the
line and there are  no  spaces  between the sentence characters.
If <I>k</I>  &lt;  0 the generated sentences are not printed. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1             
4
0 * 2 1 3
1 | 2 2 3
2 a
3 b
-1
3
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
-1
3
bb
ab
bb
0
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
781||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Optimisation</TITLE>
<META NAME="description" CONTENT="Optimisation">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Optimisation</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A company decides to simulate on computer the process of manufacturing its own goods.
In order to do that, it makes the following observations:
<DL COMPACT>
<DT>1.
<DD>The whole process can be splitted into several steps; between them there are some
dependencies. This can be represented by a diagram (graph), which we suppose to be only one
for all goods produced by company as in figure 1;
<P>

<P>
<BR>

<DIV ALIGN="CENTER">

<img src=p781a.gif>
</DIV>

<P>
<DT>2.
<DD>First step designates the start of manufacturing process;there is only one first step,
denoted by the number 1;
<DT>3.
<DD>There are not steps isolated or outside the process (every step is linked by a path with
the first step);
<DT>4.
<DD>Some steps are total dependants; so, we claim that the step <I>i</I> is total dependant of
step <I>j</I> if every path in the fabrication process cannot arrive to
<I>i</I> without was passing through <I>j</I>.
</DL>

<P>
So, all steps are total dependants of step 1.

<P>

<P>
<BR>

<B>Example:</B> In the process shown by the figure 1 the step 4
is total dependant of step 3, steps 5,6 and 7 are total dependants
of 4 (hence of 3), but step 3 is not total dependant of step 2.

<P>

<P>
<BR>
The Computing Center Dept. of company notes that whole manufacturing process is
easier to be controlled if it would be structured by a tree, as follows:
<UL>
<LI>All steps of manufacturing process are nodes of the tree;
<LI>Each node ensures total dependence of all its own descendants;
</UL>

<P>
The tree associated to the diagram from figure 1 is shown in figure 2.

<P>

<P>
<BR>

<DIV ALIGN="CENTER">

<img src=p781b.gif>
</DIV>

<P>
Your task is to write a program that builds this dependence tree.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
    The input file contains several input data sets. An input data set has the following format:

<P>

<P>
<BR>

<I>n</I> - number of steps of manufacturing process (
<!-- MATH: $2 \le n \le 99$ -->
<IMG
 WIDTH="88" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$2 \le n \le 99$">);

<P>

<TABLE CELLPADDING=3>
<TR><TD ALIGN="CENTER"><I>a</I><SUB>11</SUB></TD>
<TD ALIGN="CENTER"><I>a</I><SUB>12</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>a</I><SUB>1<I>n</I></SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>a</I><SUB>21</SUB></TD>
<TD ALIGN="CENTER"><I>a</I><SUB>22</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>a</I><SUB>2<I>n</I></SUB></TD>
</TR>
<TR><TD ALIGN="CENTER"><IMG
 WIDTH="9" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\vdots$"></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="9" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\vdots$"></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="28" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\ddots$"></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="9" HEIGHT="27" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\vdots$"></TD>
</TR>
<TR><TD ALIGN="CENTER"><I>a</I><SUB><I>n</I>1</SUB></TD>
<TD ALIGN="CENTER"><I>a</I><SUB><I>n</I>2</SUB></TD>
<TD ALIGN="CENTER"><IMG
 WIDTH="25" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$\dots$"></TD>
<TD ALIGN="CENTER"><I>a</I><SUB><I>nn</I></SUB></TD>
</TR>
</TABLE>

<P>

<P>
<BR>
where <I>a</I><SUB><I>i</I></SUB><I>j</I>=1 if step <I>j</I> follows directly step <I>i</I> in the process diagram, otherwise <I>a</I><SUB><I>i</I></SUB><I>j</I>=0.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
    At output, the program must write <I>n</I>-1 lines for every input data set; each line has
the format:

<P>

<IMG
 WIDTH="25" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/781img2.gif" 
 ALT="$i \ j$">

<P>
with the meaning that node <I>j</I> is a direct descendant of node <I>i</I> in the tree.
    The pair (<I>i</I><SUB>1</SUB> <I>j</I><SUB>1</SUB>) follows (<I>i</I><SUB>2</SUB> <I>j</I><SUB>2</SUB>) if and only if (<I>i</I><SUB>1</SUB>&lt;<I>i</I><SUB>2</SUB>) or (<I>i</I><SUB>1</SUB>=<I>i</I><SUB>2</SUB>
    and <I>j</I><SUB>1</SUB>&lt;<I>j</I><SUB>2</SUB>).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
10
0 1 1 0 0 0 0 0 0 0
0 0 1 0 0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0
0 0 1 0 1 1 0 0 0 0
0 0 0 0 0 0 1 0 0 0
0 0 0 0 0 0 1 0 0 0
0 0 0 1 0 0 0 1 0 0
0 0 1 0 0 0 0 0 1 1
1 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 1 0 0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1 2
1 3
3 4
4 5
4 6
4 7
7 8
8 9
8 10
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
782||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Contour Painting</TITLE>
<META NAME="description" CONTENT="Contour Painting">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Contour Painting</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A contour of points is represented on a two dimensional (2D)
grid  as illustrated in figure 1. The points of the  contour  are
specified  by  the  same character which  can  be  any  printable
character, different than `<TT>*</TT>',`<TT>#</TT>',`<TT>_</TT>' and
space. In figure 1 this character is `<TT>X</TT>'. All the other
points of  the grid are represented by spaces.  The contour is
connected, i.e. any two points on the contour can be reached from
one another by traveling vertically, horizontally and diagonally.
Moreover, it is considered that a contour can close a single  non
empty zone of grid points.

<P>
<DIV ALIGN="LEFT">
<PRE>
                  012345678901234567890123456789
                  ------------------------------
                0|
                1|       XXXXXXXXXX
                2|      XXXX       XX
                3|      X            X
                4|     X      X      XXXXXXX
                5|     XXXXXXXX             XX
                6|     X      X      XXXXXXX
                7|      X            X
                8|      XXXX       XX
                9|       XXXXXXXXXX
                0|
</PRE>
<!--DIV ALIGN="CENTER"-->
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Figure 1:  A contour on a 2D grid
</DIV>

<P>
The  character `<TT>#</TT>' represents  the  colour
used  to paint the contour as illustrated in figure 3. The  paint
is  added  on  one side of the contour in such a  way  that  each
contour  point  of the painted side  has at least  one `<TT>#</TT>'
neighbour horizontally or vertically as shown in figure 2:

<P>
<PRE>
                                                            ####
                   ###                X###                  XXXX#
                   XXX                XXXX                     X#
</PRE>
<DIV ALIGN="CENTER">
<P>
flat zone  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
concave corner  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
convex corner

<P>

<P>
<BR>
Figure 2: Cases of point painting
</DIV>

<P>
A contour can be painted either from inside or from outside.
The painting side is specified by the presence of the character
`<TT>*</TT>' inside  or outside the contour as shown in figure 3.
Notice that the star is removed from the grid once the painting is
done.

<P>

<PRE>
                XXXXXXXXXX                      XXXXXXXXXX        interior
               XXXX       XX                   XXXX#######XX      painting
               X   *        X                  X###  #    ##X
              X      X      XXXXXXX           X######X#    #XXXXXXX
              XXXXXXXX             XX         XXXXXXXX#     #######XX
              X      X      XXXXXXX           X######X#    #XXXXXXX
               X            X                  X###  #    ##X
               XXXX       XX                   XXXX#######XX
                XXXXXXXXXX                      XXXXXXXXXX
          

             *                                  ##########        exterior
                XXXXXXXXXX                     #XXXXXXXXXX##      painting
               XXXX       XX                  #XXXX       XX#
               X            X                 #X            X######
              X      X      XXXXXXX          #X      X      XXXXXXX##
              XXXXXXXX             XX        #XXXXXXXX             XX#
              X      X      XXXXXXX          #X      X      XXXXXXX##
               X            X                 #X            X######
               XXXX       XX                  #XXXX       XX#
                XXXXXXXXXX                     #XXXXXXXXXX##
                                                ##########
</PRE>
<DIV ALIGN="CENTER">
before painting&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;         after painting

<P>

<P>
<BR>
Figure 3:  Painting a closed contour
</DIV>

<P>

<P>
<BR>
Your problem is to write a program which: reads from a  text
file  a  number  <I>n</I> and <I>n</I> grids, each  grid  containing  a  single
contour  and  a single star,  paints each grid  according  to  the
position  of  the star and outputs the painted grids  to  a  text
file. Each contour is placed on its grid in such a way that it is
fully surrounded by free grid points (spaces).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The first line of the input text file contains the number of grids
to  be  painted. The next lines of the  file  contain  the grids.
The  lines which represent a grid are  terminated  by  a
separation  line  full of underscores (`<TT>_</TT>'). There are at
most 30 lines  and  at most 80 characters in a line for  each
grid. The lines can be of different length.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
     The standard output file contains the grids with the painted
contours  and with the stars removed. Each grid is output in  the
same  format it has been read from the input file, including  the
separation  line.  It follows an example of the  input and the
output of the program for a single simple contour.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3

XXXXXXX
X  *  X
XXXXXXX

__________

       XXXXXXXXXX
      XXXX       XX
      X            X
     X      X      XXXXXXX
     XXXXXXXX             XX
     X      X      XXXXXXX
      X            X
      XXXX      *XX
       XXXXXXXXXX

__________

       XXXXXXXXXX
 *    XXXX       XX
      X            X
     X      X      XXXXXXX
     XXXXXXXX             XX
     X      X      XXXXXXX
      X            X
      XXXX       XX
       XXXXXXXXXX

__________
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>

XXXXXXX
X#####X
XXXXXXX

__________

       XXXXXXXXXX
      XXXX#######XX
      X###  #    ##X
     X######X#    #XXXXXXX
     XXXXXXXX#     #######XX
     X######X#    #XXXXXXX
      X###  #    ##X
      XXXX#######XX
       XXXXXXXXXX

__________
       ##########
      #XXXXXXXXXX##
     #XXXX       XX#
     #X            X######
    #X      X      XXXXXXX##
    #XXXXXXXX             XX#
    #X      X      XXXXXXX##
     #X            X######
     #XXXX       XX#
      #XXXXXXXXXX##
       ##########
__________
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
783||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Trains</TITLE>
<META NAME="description" CONTENT="Trains">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Trains</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Two towns T1 and T2 are connected through a double railroad. The distance
between T1 and T2 is <I>d</I> meters. From T1 to T2 the trains are
leaving every <I>t</I><SUB>1</SUB> seconds. From T2 to T1 the trains are leaving
every <I>t</I><SUB>2</SUB> seconds. The trains from T1 to T2 have a speed of
<I>v</I><SUB>1</SUB> m/s. The trains from T2 to T1 have a speed of <I>v</I><SUB>2</SUB> m/s.

<P>

<P>
<BR>
Your task is to write a program that computes the number of train ``rendezvous" on
the railroad which links T1 and T2, and which occur during the
time interval [0, <I>tf</I>] seconds.

<P>

<P>
<BR>
We consider that:

<P>
<DL COMPACT>
<DT>a)
<DD>at time 0 two trains are leaving (from T1 to T2,
and from T2 to T1);
<P>
<DT>b)
<DD>the input and output data are integers.
</DL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
    Your program reads data sets, one per line, in the following format:

<P>


<!-- MATH: $d \ v1 \ v2 \ t1 \ t2 \ tf$ -->
<IMG
 WIDTH="125" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/783img2.gif" 
 ALT="$d \ v1 \ v2 \ t1 \ t2 \ tf$">.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
    The program writes to the output the number of  ``rendezvous".

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
10  5  5  1  1  2
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
6
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
784||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Maze Exploration</TITLE>
<META NAME="description" CONTENT="Maze Exploration">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Maze Exploration</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A  maze  of  rectangular  rooms  is  represented  on  a  two
dimensional  grid as illustrated in figure 1a. Each point of  the
grid is represented by a character. The points of room walls  are
marked by the same character which can be any printable character
different  than `<TT>*</TT>', `<TT>_</TT>'  and space. In figure 1 this character is
`<TT>X</TT>'. All the other points of the grid are  marked
by spaces.

<P>
<PRE>
               XXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXX
               X   X   X   X   X   X             X###X###X###X   X   X
               X           X   X   X             X###########X   X   X
               X   X   X   X   X   X             X###X###X###X   X   X
               XXXXXX XXX XXXXXXXXXX             XXXXXX#XXX#XXXXXXXXXX
               X   X   X   X   X   X             X   X###X###X###X###X
               X   X     *         X             X   X###############X
               X   X   X   X   X   X             X   X###X###X###X###X
               XXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXX
</PRE>
<DIV ALIGN="CENTER">
a) Initial maze      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;         b) Painted maze

<P>
Figure 1. Mazes of rectangular rooms
</DIV>

<P>
All  rooms  of  the maze are equal sized with  all  walls  3
points  wide  and 1 point thick as illustrated in  figure  2.  In
addition,  a wall is shared on its full length by  the  separated
rooms.  The  rooms  can  communicate  through  doors,  which  are
positioned in the middle of walls. There are no outdoor doors.

<P>
<PRE>
                     door
                       |
                     XX XX
                     X . X   measured from within the room
               door - ...--  walls are 3 points wide
                     X . X__
                     XXXXX  |
                       |___  walls are one point thick
</PRE>
<DIV ALIGN="CENTER">
Figure 2. A room with 3 doors
</DIV>

<P>
Your  problem is to paint all rooms of a maze which  can  be
visited  starting from a given room, called the `start room' which
is  marked by a star (`<TT>*</TT>') positioned in the middle of the
room. A room  can be visited from another room if there is a door
on the wall which separates the rooms. By convention, a room is
painted if  its  entire surface, including the doors, is  marked
by  the character `<TT>#</TT>' as shown in figure 1b.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The program input is a text file structured as follows:

<P>
<DL COMPACT>
<DT>1.
<DD>The first line contains a positive integer which shows  the
number of mazes to be painted.
<DT>2.
<DD>The rest of the file contains the mazes.
</DL>

<P>
The lines of the input file can be of different length.  The
text  which represents a maze is terminated by a separation  line
full  of underscores (`<TT>_</TT>'). There are at most 30 lines and
at most 80 characters in a line for each maze

<P>
The program reads the mazes from the input file, paints them
and writes the painted mazes on the standard output.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The  output  text of a painted maze has the same format  as  that
which  has  been  read for that maze,  including  the  separation
lines. The example below illustrates a simple input  which
contains a single maze and the corresponding output.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
XXXXXXXXX
X   X   X
X *     X
X   X   X
XXXXXXXXX
X   X
X   X
X   X
XXXXX
_____
XXXXX
X   X
X * X
X   X
XXXXX
_____
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
XXXXXXXXX
X###X###X
X#######X
X###X###X
XXXXXXXXX
X   X
X   X
X   X
XXXXX
_____
XXXXX
X###X
X###X
X###X
XXXXX
_____
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
785||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Grid Colouring</TITLE>
<META NAME="description" CONTENT="Grid Colouring">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Grid Colouring</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A  set of contours is represented on a two dimensional grid as
illustrated in the sample below. The contours are made of any
printable character different than space and `<TT>_</TT>'
(underscore). In the sample this character is `<TT>X</TT>'. All the
other points of the grid are represented by spaces and <EM>marking</EM>
characters.

<P>

<P>
<BR>
A grid <EM>zone</EM> is defined as the set of points enclosed within a closed contour
such that any two zone points can be connected by a path which does not cross
any contour and whose segments run vertically or horizontally. A zone is
marked if it contains identical characters, called <EM>marking</EM> characters,
different than space and the character used to draw the grid contours. No
zone can contain different marking characters. However, observe that while all
the contours are drawn with the same character, the markings of different zones
can be different. A zone is unmarked if it contains only spaces. Any grid zone
can be either marked or unmarked and the marking characters can appear inside
grid zones only.

<P>

<P>
<BR>
Write a program to fill all the marked zones on each grid read from the input
file. A marked zone is filled with its marking character, as shown in the sample.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
On input, each grid is terminated by a separation line full of underscores `<TT>_</TT>'.
There are at most 30 lines and at most 80 characters in a line for each grid.
The lines can be of different length.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The standard output file contains the painted grids. Each grid is output in
the same format it is read from the input file, including the separation line,
blank lines and possible leading or trailing spaces.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>

  XXXXXXXXXXXXXXXXXXXX
  X      X           X
  X # #  XXXXXXXX /  X
  X             X    X
  XXXXXXXXXXXXXXXXXXXX
_____________________________

   XXXXXXXXXXXX       XXXXXX
  X       #   XXX  XXX   X X
  X  XX         X  X     X X
 X  X  X  XXXXXXX  XXXXXXX
 X   XX   X
  X       X  XXXX  XXXXXXXX
   XX     XXXX  X  X  /   X
    X           X  X    / X
    XXXXXXXXXXXXX  XXXXXXXX
_____________________________
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>

  XXXXXXXXXXXXXXXXXXXX
  X######X///////////X
  X######XXXXXXXX////X
  X#############X////X
  XXXXXXXXXXXXXXXXXXXX
_____________________________

   XXXXXXXXXXXX       XXXXXX
  X###########XXX  XXX   X X
  X##XX#########X  X     X X
 X##X  X##XXXXXXX  XXXXXXX
 X###XX###X
  X#######X  XXXX  XXXXXXXX
   XX#####XXXX##X  X//////X
    X###########X  X//////X
    XXXXXXXXXXXXX  XXXXXXXX
_____________________________
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
786||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Working with Relations</TITLE>
<META NAME="description" CONTENT="Working with Relations">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Working with Relations</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The wages of the employees of a company are computed on the basis of a set of
relative rankings of the form <I>x</I><TT> R </TT><I>y</I>, where <I>x</I> and <I>y</I> are names and/or numbers,
and <TT>R</TT> is a relational operator from the set {<TT>&lt;, &lt;=, &gt;, &gt;=, =</TT>}.
The meaning of <I>x</I><TT> R </TT><I>y</I> is:

<P>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="RIGHT">the salary of <I>x</I></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="LEFT">the salary of <I>y</I></TD>
</TR>
<TR><TD ALIGN="RIGHT">&nbsp;</TD>
<TD ALIGN="CENTER">must be in relation <TT> R</TT> with</TD>
<TD ALIGN="LEFT">&nbsp;</TD>
</TR>
<TR><TD ALIGN="RIGHT">number <I>x</I></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="LEFT">number <I>y</I></TD>
</TR>
</TABLE></DIV>

<P>
The problem is to compute the minimum and the maximum wage which each of the
employees can get according to a given set of relations. It is known that: the
name of an employee is at most 8 characters long; the wages are integers
from 1 to 99999; only integer numbers appear in relations; the number of
employees cannot exceed 100 and the number of relations is at most 1000.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The program input is from a file which contains several sets of relations as
shown in the sample input below. The relations of a set are one on a line and their elements
are separated by spaces. Each set of relations ends with a line which contains
a minus sign only. The format of input data is correct.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The result of the program is on standard output. For each consistent set of
relations the result is the message `<TT>OK</TT>' followed by the list of employees (if
any), in alphabetical order, together with their minimum and maximum wages as
shown in the sample output. If a set of relations is inconsistent then the message
`<TT>No solution</TT>' is printed for that set. Notice that for a set of relations which
contains only numbers the result can be either the message `<TT>OK</TT>' or `<TT>No solution</TT>'. Print a blank line between two consecutive test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
Fido &lt; 20
Bibo &lt;= Fido
Fred &lt; Bibo
20 &gt; Fred
-
1 &lt;= 3
1 = 1
-
Fido &lt; 20
Bibo &lt; Fido
20 &lt; Fido
-
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
OK
Bibo         2    19
Fido         2    19
Fred         1    18

OK

No solution
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
787||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Maximum Sub-sequence Product</TITLE>
<META NAME="description" CONTENT="Maximum Sub-sequence Product">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Maximum Sub-sequence Product</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Bob needs money, and since he knows you are here, he decided to gamble
intelligently. The game is rather simple: each player gets a sequence of
integers. The players must determine, by using their mega-pocket computers,
which is the maximum product value which can be computed with non empty
sub-sequences of consecutive numbers from the given sequence. The winner is
the one which gets first the right result.

<P>

<P>
<BR>
Can you help Bob with a program to compute quickly the wanted product,
particularly when the sequence is quite long ?

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file contains sequences of numbers. Each
number will have at most 5 digits. There will be at
most 100 numbers in each sequence. Each sequence starts on a new
line and may continue on several subsequent lines. Each sequence ends with
the number -999999 (which is not part of the sequence).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The maximum sub-sequence product for each sequence must be written on the
standard output, on a different line. A simple example is illustrated in
the sample below.

<P>

<!--P>
<BR>
It is known that the products of sub-sequences are numbers which can be
represented as long integers.-->

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1 2 3 -999999
-5 -2 2 -30 -999999
-8 -999999
-1 0 -2 -999999
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
6
120
-8
0
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
788||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>One Day Tours</TITLE>
<META NAME="description" CONTENT="One Day Tours">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
One Day Tours</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A hotel needs a program to assist any tourist who wants to visit <I>N</I> different
places (<IMG
 WIDTH="61" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/788img1.gif" 
 ALT="$N \le 20$">). Every day the tourist leaves the hotel,
visits <I>M</I> places (may be fewer on the last day) and comes back to the hotel.

<P>
Let us consider that the hotel is identified by 0, the places to visit by
consecutive positive integers and the available roads by triples (<I>i</I>,<I>j</I>,<I>d</I>),
where <I>d</I> represents the road length (in km) and 
<!-- MATH: $0 \le i < j \le N$ -->
<IMG
 WIDTH="113" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/788img1.gif" 
 ALT="$0 \le i < j \le N$">.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file includes data about several tourists. For each tourist
the available roads (at least 2) and a negative value (<I>v</I> &lt; -1) which
designates the number of visits to be scheduled for one day (<I>M</I> = -<I>v</I>) are given,
as in the sample input below.

<P>

<P>
<BR>
The program must schedule the visits according to the following
constraints:

<P>
<UL>
<LI>each place is visited only once;
<LI>a place must be visited when reached for the first time (afterwards it
can be included in any tour as a passing by point);
<LI>the total travel must be as short as possible;
<LI>ties are solved by applying the 'shorter one day tour' rule,
from the last to the first day
([ ... 180 km 50 km] is preferred to [... 200 km 50 km]);

<P>
<LI>if the tie is not solved by the above rule, the 'preferred place
first' rule is applied (the schedule 1 3 5 ... is preferred to 1 3 7 ...).
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The resulting schedules are stored in the output file in the following
format:

<P>

<P>
<BR>

<code>== Tourist  </code><I>i</I><code>  -- </code><I>M</I><code> visits a day --</code>

<P>

<code> Day  1: [</code><I>dfh</I><code>] - </code><I>fvp</I><code> - [</code><I>dpp</I><code>] - ..... - </code><I>lvp</I><code> - [</code><I>dth</I><code>]</code>

<P>

<code>   . . . . . . </code>

<P>

<code>===</code>

<P>

<P>
<BR>
where, for each day tour

<P>
<UL>
<LI><I>dfh</I> - distance from hotel to the first visited place
<LI><I>fvp</I> - index of the first visited place
<LI><I>dpp</I> - distance between consecutive visited places
<LI><I>lvp</I> - index of the last visited place
<LI><I>dfh</I> - distance from last visited place to the hotel
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
0 1 10
0 2 10
0 3 10
0 4 10
1 2 10
3 4 15
4 5 10
-3
0 1 2
1 2 2
2 3 2
3 1 2
0 4 2
0 5 2
-2
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
== Tourist  1  --  3 visits a day --
 Day  1: [10] - 3 - [15] - 4 - [10] - 5 - [20]
 Day  2: [10] - 1 - [10] - 2 - [10]
===
== Tourist  2  --  2 visits a day --
 Day  1: [2] - 1 - [4] - 4 - [2]
 Day  2: [4] - 2 - [2] - 3 - [4]
 Day  3: [2] - 5 - [2]
===
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
789||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Indexing</TITLE>
<META NAME="description" CONTENT="Indexing">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Indexing</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Consider several lines of text written with capital letters and one character
called KEY, specified on a line preceding the text. The words in the text are
separated by spaces. The maximum word length is <IMG
 WIDTH="40" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/789img1.gif" 
 ALT="$\le 80$">.
There are no words splitted
between two lines. The line length is also <IMG
 WIDTH="40" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/789img1.gif" 
 ALT="$\le 80$">.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Write a program to display an  index of all words within the text starting
with the KEY. The index must be alphabetically sorted. Each word appears in
the index only once and must be followed by the numbers of all the lines in
which it appears. Only a single occurrence of each word on a line must
be included in the index.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
T
CONSIDER SEVERAL LINES OF TEXT AND ONE CHARACTER CALLED KEY,
SPECIFIED ON A LINE PRECEDING THE TEXT. THE WORDS IN THE TEXT ARE
SEPARATED BY SINGLE SPACE. THERE ARE NO WORDS SPLITTED BETWEEN TWO
LINES.
WRITE A PROGRAM TO DISPLAY AN INDEX OF ALL WORDS WITHIN THE TEXT
STARTING WITH THE KEY. THE INDEX MUST BE ALPHABETICALLY SORTED. EACH
WORD IN THE INDEX MUST BE FOLLOWED BY THE LIST OF THE LINE NUMBERS IN
WHICH IT APPEARS.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
TEXT 1 2 5
THE 2 5 6 7
THERE 3
TO 5
TWO 3
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
790||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Head Judge Headache</TITLE>
<META NAME="description" CONTENT="Head Judge Headache">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Head Judge Headache</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
You are the Head Judge of the ACM Eastern European Regional Programming
Contest. The master Judge computer has been infected by computer virus which
has formated the hard disk.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The first line of the input indicates the number of test cases, and it's followed by a blank line.
<p>
For each dataset you have only the listing of submitted problems
log formatted as follows:

<P>

<P>
<BR>

<IMG
 WIDTH="80" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/790img1.gif" 
 ALT="$Team \_No$">(<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/790img1.gif" 
 ALT="$\le$">
25)  
<!-- MATH: $Problem \_Letter$ -->
<IMG
 WIDTH="127" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/790img1.gif" 
 ALT="$Problem \_Letter$">(<TT>A..G</TT>)  
<!-- MATH: $Time \_of
\_submittion$ -->
<IMG
 WIDTH="162" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/790img1.gif" 
 ALT="$Time \_of
\_submittion$">(<I>h</I><TT>:</TT><I>mm</I>)  
<!-- MATH: $Status \_of \_the \_run$ -->
<IMG
 WIDTH="147" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/790img1.gif" 
 ALT="$Status \_of \_the \_run$">(<TT>Y/N</TT>)

<P>There's a blank line between datasets.

<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Write a program to compute the final standing for each dataset by using the following rules:

<P>
<UL>
<LI>Teams are ranked according to the most problems solved.
<LI>Teams who have solved the same number of problems are ranked by least total time.
<LI>The total time is the sum of the time consumed for each problem solved.
<LI>The time consumed for a solved problem is the time elapsed from the beginning
of the contest to the submital of the accepted run plus 20 minutes for each
previously rejected run. Further
submisions will be ignored.
<LI>There is no time consumed for  a problem that is not solved.
<LI>Teams with equal score are assigned equal rank sorted by team number.
</UL>

<P>Print a blank line between datasets.
<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

1 A 0:50 N
3 A 1:12 Y
2 B 1:19 N
1 A 1:20 Y
2 B 1:35 N
1 B 1:36 N
3 B 1:40 Y
3 C 1:41 N
4 A 1:40 Y
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
RANK TEAM PRO/SOLVED TIME
   1    3    2        172
   2    1    1        100
   2    4    1        100
   4    2
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
791||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Term Reductions</TITLE>
<META NAME="description" CONTENT="Term Reductions">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Term Reductions</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Input terms are defined inductively as follows:

<P>
<DL COMPACT>
<DT>1.
<DD>X is a term;
<DT>2.
<DD>if A and B are terms, then (A B) is also a term;
<DT>3.
<DD>no other terms.
</DL>

<P>
The terms are transformed by the rewriting rule: the pattern (((X A) B) C),
where A, B, and C are terms, is replaced by ((A C)(B C)).

<P>

<P>
<BR>
Reducing a term means applying this rule. A term is called reduced if it
contains no subterm that can be further reduced. A term is considered as a
subterm of itself, too.

<P>

<P>
<BR>
Write a program that reads input terms and writes the corresponding reduced terms.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file will contain several lines with one term per line.
Each line will contain no more than 80 characters. The input terms will be
syntactically correct. Possible input characters are <TT>X</TT>, <TT>(</TT>, and <TT>)</TT>
(without blanks
in between). The input data will be terminated by a line containing
a single character 0 (zero).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each input term, write its corresponding reduced term in a line,
followed by a line containing digits in positions in which output term has
parentheses, and an empty line. A term without parentheses must be followed
by two empty lines. These digits mark the nesting level of parentheses
in the corresponding positions. It is guaranteed that the maximum nesting
level is less than 9, and that the number of reductions is finite, and that
the output lines will be shorter than 80 characters. The top level is
denoted by 0. Possible characters in the output terms are also <TT>X</TT>, <TT>(</TT>, and <TT>)</TT>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
(((XX)X)X)
(((XX)(XX))X)
(XX)
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
((XX)(XX))
01  11  10
((XX)((XX)X))
01  112  2 10
(XX)
0  0
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
792||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Program Modules</TITLE>
<META NAME="description" CONTENT="Program Modules">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Program Modules</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The relations 
<!-- MATH: $\rightarrow$ -->
<IMG
 WIDTH="22" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$\rightarrow$">
and 
<!-- MATH: $\Rightarrow$ -->
<IMG
 WIDTH="22" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$\Rightarrow$">
are defined over the set of functions of a program.
<UL>
<LI>
<!-- MATH: $A \rightarrow B$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \rightarrow B$">
means that the function <I>A</I> directly calls the function <I>B</I>;
<LI>
<!-- MATH: $A \Rightarrow B$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \Rightarrow B$">
means that the function <I>A</I> calls the function <I>B</I> (directly or indirectly).
</UL>

<P>
In addition, it is known that:
<UL>
<LI>if 
<!-- MATH: $A \rightarrow B$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \rightarrow B$">
then 
<!-- MATH: $A \Rightarrow B$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \Rightarrow B$">
<LI>if 
<!-- MATH: $A \Rightarrow B$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \Rightarrow B$">
and 
<!-- MATH: $B \Rightarrow C$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$B \Rightarrow C$">
then 
<!-- MATH: $A \Rightarrow C$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \Rightarrow C$"></UL>

<P>
A  computer aided software engineering system  is  able  to  group  the  functions  of  a  program  into  modules
according to the following rules:
<DL COMPACT>
<DT>1.
<DD>If 
<!-- MATH: $A \Rightarrow B$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$A \Rightarrow B$">6 and 
<!-- MATH: $B \Rightarrow A$ -->
<IMG
 WIDTH="59" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$B \Rightarrow A$">
then the functions <I>A</I> and <I>B</I> are grouped in the same module.
<DT>2.
<DD>Any two functions which do not satisfy (1) must be in different modules.
</DL>

<P>

<P>
<BR>
Write a program  that  is  able  to modularize a program according  to  the  rules  (1)  and  (2) given above. The
program reads sets of data from a text file. Each set of data stands for a different program  to be modularized
and has the format:
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
(Fun_1 \ Fun_{11} \dots  Fun_{1n_1})\ (Fun_2 \ Fun_{21} \dots  Fun_{2n_2}) \dots (Fun_m \ Fun_{m1} \dots  Fun_{mn_m}).
\end{displaymath} -->


<IMG
 WIDTH="623" HEIGHT="31"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="\begin{displaymath}(Fun_1 \ Fun_{11} \dots Fun_{1n_1})\ (Fun_2 \ Fun_{21} \dots Fun_{2n_2}) \dots (Fun_m \ Fun_{m1} \dots Fun_{mn_m}).
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
where <I>Fun</I><SUB><I>i</I></SUB> and <I>Fun</I><SUB><I>ij</I></SUB>, <I>i</I>=1,<I>m</I>, <I>j</I>=1,<I>n</I><SUB><I>j</I></SUB>, 
<!-- MATH: $m,n_j \ge 0$ -->
<IMG
 WIDTH="77" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$m,n_j \ge 0$">,
are letters
(case sensitive) designating names of functions. The
meaning of the term 
<!-- MATH: $(Fun_i \ Fun_{i1} \dots \ Fun_{in_i})$ -->
<IMG
 WIDTH="194" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$(Fun_i \ Fun_{i1} \dots \ Fun_{in_i})$">,
<IMG
 WIDTH="52" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$n_i \ge 0$">,
is: 
<!-- MATH: $Fun_i \rightarrow Fun_{ij}$ -->
<IMG
 WIDTH="117" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$Fun_i \rightarrow Fun_{ij}$">,
<I>j</I>=1,<I>n</I><SUB><I>j</I></SUB>. The data set is ended by a dot. Spaces,
tabs and line breaks are used freely in the input. Input data are correct,  i.e. each data
set contains exactly one
term 
<!-- MATH: $(Fun \ Fun_1 \dots \ Fun_n)$ -->
<IMG
 WIDTH="175" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$(Fun \ Fun_1 \dots \ Fun_n)$">,
for each <I>Fun</I> of the program encoded by the data set,
and 
<!-- MATH: $Fun_i \neq Fun_j$ -->
<IMG
 WIDTH="108" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$Fun_i \neq Fun_j$">
for <IMG
 WIDTH="42" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/792img1.gif" 
 ALT="$i \neq j$">,
<I>i</I>,<I>j</I> = 1,<I>n</I>.

<P>

<P>
<BR>
The result of the program  is on standard output. For each data set the program  lists the function names of
each computed module, one module per  line. The names of the functions of a module are  listed  in  ascending
lexicographic order and are separated by single spaces. The modules are  listed ascendingly according  to  the
lexicographic order of their first component (function name). The output for the data set is followed by an empty
line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
The example below shows an input file, which contains three data sets, and the
corresponding output.
The first data set stands  for an empty set of  functions and  the corresponding output
is an empty  line. For  the
second data set there are two singleton modules `<TT>a</TT>' and `<TT>b</TT>', whereas for the
third data set there are three modules `<TT>a b e</TT>', `<TT>c</TT>' and `<TT>d</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
.

(a a) (a b) (b).

(a b c) (b a e) (c d)
(d d) (e b).
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
a
b

a b e
c
d
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
793||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Network Connections</TITLE>
<META NAME="description" CONTENT="Network Connections">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Network Connections</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Bob,  who  is  a  network  administrator,  supervises    a  network  of  computers.
He  is  keeping  a  log  connections
between the computers  in the network. Each connection  is bi-directional. Two computers
are  interconnected  if
they  are  directly  connected  or  if  they  are  interconnected  with  the  same
computer.  Occasionally,  Bob  has  to
decide,  quickly,  whether  two  given  computers  are  connected,  directly  or
indirectly,  according  to  the  log
information.

<P>

<P>
<BR>
Write a program which based on information input from a text file
counts the number of successful and  the  number  of  unsuccessful
answers  to  the  questions  of  the kind  :

<P>

<P>
<BR>
is  
<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> interconnected with 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB> ?

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>The first line of the input contains the number of dataset, and it's followed by a blank line.
Each dataset is defined as follows:
<DL COMPACT>
<DT>1.
<DD>The number of computers in the network (a strictly positive integer);
<DT>2.
<DD>A list of pairs of the form:
<DL COMPACT>
<DT>(a)
<DD><TT>c</TT> 
<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB>, where 
<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> and 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB>
are  integers  from 1  to  
<!-- MATH: $no\_of\_computers$ -->
<IMG
 WIDTH="136" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/793img1.gif" 
 ALT="$no\_of\_computers$">.
A pair of this form shows that

<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> and 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB> <B>get interconnected</B>.
<DT>(b)
<DD><TT>q</TT> 
<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB>, where 
<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> and 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB>
are  integers  from 1  to  
<!-- MATH: $no\_of\_computers$ -->
<IMG
 WIDTH="136" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/793img1.gif" 
 ALT="$no\_of\_computers$">.
A pair of this
form stands for the question: is 
<!-- MATH: $computer_i$ -->
<I>computer</I><SUB><I>i</I></SUB> <B>interconnected</B>
with 
<!-- MATH: $computer_j$ -->
<I>computer</I><SUB><I>j</I></SUB>?
</DL></DL>

<P>There's a blank line between datasets.

<P>
Each pair  is on a separate
line. Pairs can appear  in any order, regardless of their type.
The  log  is updated after each pair of type (a) and each pair of
type (b) is processed according to the current network
configuration.

<P>

<P>
<BR>
For example, the input file illustrated in the sample below
corresponds to a network of 10 computers and 7 pairs. There are <I>N</I>1
successfully answered questions and <I>N</I>2 unsuccessfully answered
questions. The program prints these two numbers to the standard
output on the same line, in the order: successful answers,
unsuccessful answers, as shown in the sample output. Print a blank line between datasets.

<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

10
c 1 5
c 2 7
q 7 1
c 3 9
q 9 6
c 2 5
q 7 5
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1,2
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
794||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Straightest Paths</TITLE>
<META NAME="description" CONTENT="Straightest Paths">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Straightest Paths</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A digitized map is represented on a two dimensional grid as a set
of points enclosed within a contour. The closed contour of the map
(which can be of any rectangular shape) and  the obstacles on  the
map (inside  the contour) are marked using the character `<TT>X</TT>'.
The free points on the map are designated by
spaces. There are exactly  two start-stop points on  the map which
are marked using  the character `<TT>@</TT>'. The
start-stop points cannot appear outside the map or on the contour
of the map. There are no other  points  on  the  map  except  free
points  (spaces),  obstacles (<TT>X</TT>) and
start-stop  points (<TT>@</TT>).

<P>

<P>
<BR>
A path between two map points
runs vertically and/or horizontally through the free points on the
map (inside the map contour). The <EM>length</EM> of the path is the number
of points the path runs through,  including the start-stop points.
The <EM>turns</EM> of the path are the direction changes while traversing
the path.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
Write a program that, for each map read from a text
file, finds all possible shortest paths with the minimum number
of  turns  between  the  start-stop  points  on  the  map  and
marks  the  points  of  these  paths  using  the character `<TT>#</TT>'.
All paths are marked on  the same map. The
start-stop points preserve their  initial markings. For example,
the  first  map  in sample below has 6 shortest paths of 32 points
long and with 3 turns each.

<P>

<P>
<BR>
Each map is terminated by a line full of
underscores `<TT>_</TT>'. There are at most 40 lines and at most 80
characters in a line for each map, including the termination line.
The lines can be of different length. Input data are correct.

<P>

<P>
<BR>
The standard output file contains the maps with the marked paths. Each
map is output in the same format it is read from the input file,
including the termination line, and is preceded by a line which
specifies the number of shortest paths, their length and turns as
shown in the sample output.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
X           X             @  X
X                   X        X
X                            X
XXXXXX          X            X
X               X            X
X        X              XXXXXX
X@       X              X
XXXXXXXXXXXXXXXXXXXXXXXXX
______________________________
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
X                            X
X        @@             XXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXX
______________________________
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
6 paths, 32 points, 3 turns
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
X           X#############@  X
X            ###    X     #  X
X     #####################  X
XXXXXX###    ###X            X
X###############X            X
X#    ###X              XXXXXX
X@#######X              X
XXXXXXXXXXXXXXXXXXXXXXXXX
______________________________
1 paths, 2 points, 0 turns
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
X                            X
X        @@             XXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXX
______________________________
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
795||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Sandorf's Cipher</TITLE>
<META NAME="description" CONTENT="Sandorf's Cipher">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Sandorf's Cipher</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Count Mathias Sandorf, a hero of Jules Verne, encrypted the secret
messages of the Trieste conspirators by using a <EM>cipher key</EM> a
6<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/795img1.gif" 
 ALT="$\times$">6 hard paper square with some holes in it. In figure 1
the holes are marked white.
One edge of the cipher key has a
pinch-mark. Empty messages are coded as empty strings. For
encrypting a non empty message follow the Sandorf's algorithm
below.

<P>
<DIV ALIGN="CENTER">

<img src= p795.gif>

<P>

Figure 1: Sandorf's cipher key
</DIV>

<P>
<DL COMPACT>
<DT>1.
<DD>Extend the message, by appending trailing `<TT>#</TT>'
characters, until its  length equals a multiple of 36, and then
reverse  the  extended message. By convention,  original  messages
do not end  with <TT>#</TT>  but,  however,  they  can contain <TT>#</TT>. For
example, the message:
<P>

<P>
<BR>

<TT>Real Programmers use Fortran. Quiche Eaters use Pascal.</TT>

<P>

<P>
<BR>
is 55 characters long and has to be extended by appending 17
trailing <TT>#</TT>. Right after step 1, the message is:

<P>

<P>
<BR>

<TT>#################.lacsaP esu sretaE ehciuQ .nartroF esu sremmargorP laeR</TT>

<P>

<P>
<BR>

<P>
<DT>2.
<DD>Position the cipher key on a sheet of paper, the pinch-mark
facing upwards.
<DT>3.
<DD>Copy  the next 9 characters  from  the message
(initially  the first 9 characters) onto the paper through  the
holes of  the cipher key, one character per hole, from left to
right and top to bottom.
<DT>4.
<DD>Turn the cipher key 90 degrees
clockwise and repeat  from step 3 until the key gets to  its
initial position, with the pinch-mark up. The result is a 6<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/795img1.gif" 
 ALT="$\times$">6
matrix of characters, called a <EM>coded group</EM>.
<DT>5.
<DD>Repeat  from step
2 until all characters of  the message are copied  into  coded
groups,  then append  the rows  of  the  coded groups  from  the
first  row  of  the  first  generated  coded group  to  the  last
row  of  the  last generated  coded  group, following  the  order
of  rows  in  each  group  and  the  order of  groups.  For  the
given message there are two coded groups, shown below,
</DL>

<P>

<P>
<BR>

<PRE>
                              u#l# #          geuhoc
                              as#r##           raPir
                              ec##st           sutrl
                              ##aa##          rQae o
                              EP# ##          emFR .
                               #e#s.          meanrs
</PRE>

<P>
which, when appended, yield the final encrypted message:

<P>

<P>
<BR>

<code>u#l# #as#r##ec##st##aa##EP# ## #e#s.geuhoc raPir sutrlrQae oemFR .meanrs</code>

<P>

<P>
<BR>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
Write  a  program  that  decrypts  messages  encrypted  by  using
the  Sandorf's  algorithm.  The  encrypted messages are  read from
a  text  file,  one message per  line  ending with a line-break.
Lines can be of  different length. All characters of a  line
(except the  line-break) are part of the encrypted message which
cannot exceed 108 characters. The decrypted messages are printed
on  the standard output  file.  Each output  line contains a
message  in  its  original  form, starting  from  the beginning of
the  line.  Decoding  the  above encrypted message yields the
result:

<P>

<P>
<BR>

<TT>Real Programmers use Fortran. Quiche Eaters use
Pascal.</TT>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
irdetn ihtoteao  pesms soiaCet snaoi
 #e#r# edt#aasdrtltn ca reyor feneiv
o#kginasksoaemlt f  odatrnip  as ene
w#lerhiomfte t rSp se ntt.is id,raal
o#r#i#etbanagvareioml  nbfooheo  lny
e# #s#holp#lpt#iiok# w#so  ts.tiis h

H### ##d#l##a####n##o)##Dg#(##i#n#o#
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Competition is a disease that sooner
or later infects every trade and
profession and makes it take a long
step forward. Still, it remains the
obligation of every honorable man
to oppose it with his skills.

(Donald Honig)
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
796||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Critical Links</TITLE>
<META NAME="description" CONTENT="Critical Links">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Critical Links</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
In a computer network a link L, which interconnects two servers, is considered critical
if there are at least two
servers  A  and B such  that  all  network  interconnection  paths  between A  and  B
pass  through  L.  Removing a
critical link generates two disjoint sub-networks such that any two servers of a
sub-network are interconnected.
For example, the network shown in figure 1 has three critical links that are marked
bold: <TT>0 -1</TT>, <TT>3 - 4</TT> and <TT>6 - 7</TT>.

<P>
<DIV ALIGN="CENTER">

<img src=p796.gif>

<P>

Figure 1: Critical links
</DIV>

<P>
It is known that:
<DL COMPACT>
<DT>1.
<DD>the connection links are bi-directional;
<DT>2.
<DD>a server  is  not  directly  connected  to  itself;
<DT>3.
<DD>two  servers  are
interconnected  if  they  are  directly  connected  or  if  they  are
interconnected  with  the  same  server;
<DT>4.
<DD>the  network  can  have stand-alone sub-networks.
</DL>

<P>

<P>
<BR>
Write a program that finds all critical links of a given computer network.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The program reads sets of data from
a text file. Each data set specifies the structure of a network and has the format:

<P>

<P>
<BR>


<!-- MATH: $no\_of\_servers$ -->
<IMG
 WIDTH="113" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$no\_of\_servers$">

<P>


<!-- MATH: $server_0\ (no\_of\_direct\_connections)\ connected\_server\ \dots\ connected\_server$ -->
<IMG
 WIDTH="582" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$server_0\ (no\_of\_direct\_connections)\ connected\_server\ \dots\ connected\_server$">

<P>

...

<P>


<!-- MATH: $server_{no\_of\_servers}\ (no\_of\_direct\_connections)\ connected\_server\ \dots\ connected\_server$ -->
<IMG
 WIDTH="661" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$server_{no\_of\_servers}\ (no\_of\_direct\_connections)\ connected\_server\ \dots\ connected\_server$">

<P>

<P>
<BR>
The first  line contains a positive  integer 
<!-- MATH: $no\_of\_servers$ -->
<IMG
 WIDTH="113" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$no\_of\_servers$">(possibly 0) which  is
the number of network servers.
The  next 
<!-- MATH: $no\_of\_servers$ -->
<IMG
 WIDTH="113" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$no\_of\_servers$">
lines,  one  for  each  server  in  the  network,  are  randomly  ordered  and  show  the  way
servers are connected. The line corresponding to <I>server</I><SUB><I>k</I></SUB>, 
<!-- MATH: $0 \le k \le no\_of\_servers - 1$ -->
<IMG
 WIDTH="208" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$0 \le k \le no\_of\_servers - 1$">,
specifies the number of direct
connections  of <I>server</I><SUB><I>k</I></SUB> and  the  servers  which  are  directly  connected  to <I>server</I><SUB><I>k</I></SUB>.
Servers  are  represented  by
integers  from 0  to 
<!-- MATH: $no\_of\_servers - 1$ -->
<IMG
 WIDTH="143" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/796img1.gif" 
 ALT="$no\_of\_servers - 1$">.
Input  data are correct. The  first  data set
 from  sample input below corresponds  to  the
network in figure 1, while the second data set specifies an empty network.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The result of the program is on standard output. For each data set the program prints
the number of critical
links and the critical links, one link per line, starting from the beginning of the
line, as shown in the sample output below. The links
are listed in ascending order according to their first element. The output for the
data set is followed by an empty line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
8
0 (1) 1
1 (3) 2 0 3
2 (2) 1 3
3 (3) 1 2 4
4 (1) 3
7 (1) 6
6 (1) 7
5 (0)

0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
3 critical links
0 - 1
3 - 4
6 - 7

0 critical links
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
797||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Two Way Traffic</TITLE>
<META NAME="description" CONTENT="Two Way Traffic">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Two Way Traffic</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A  motorway  is  passing  through  a  tunnel,  <I>d</I> meters  long,
as illustrated  in  figure  1.  The  rate  of  the  traffic
directed eastwards  is of one vehicle every <I>t</I><SUB>1</SUB> seconds, and  the
rate of the  traffic directed westwards  is  of one vehicle every
<I>t</I><SUB>2</SUB> seconds. The vehicles going east have a constant speed of <I>v</I><SUB>1</SUB>
m/s, while  the vehicles going west have a constant speed of <I>v</I><SUB>2</SUB>
m/s.

<P>
<DIV ALIGN="CENTER">

<img src=p797.gif>

<P>

Figure 1: The motorway
</DIV>

<P>
Write a program that computes the number of vehicle `rendezvous'
that occur inside the tunnel during the closed time interval
[<I>t</I><SUB><I>i</I></SUB>,<I>t</I><SUB><I>f</I></SUB>] that is measured in seconds. It is known that:

<P>
<UL>
<LI>A rendezvous  point  is  considered  inside  the  tunnel if
it is in  between  the  entrances  of  the  tunnel. Rendezvous at
the tunnel entrances are outside the tunnel, as shown in figure 1.
<LI>At time 0 there is a vehicle advancing eastwards that is
<I>d</I><SUB>1</SUB> meters away from the entrance of the tunnel, and there is
another vehicle advancing westwards that is <I>d</I><SUB>2</SUB> meters away from
the entrance of the tunnel. These vehicles are part of the already
existing traffic on the motorway.
<LI>Input and output data are integers. The magnitude range of the
problem parameters  is as
follows: 
<!-- MATH: $0 \le d, d_1, d_2 \le 100000$ -->
<IMG
 WIDTH="170" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/797img1.gif" 
 ALT="$0 \le d, d_1, d_2 \le 100000$">,

<!-- MATH: $0 < t_1, t_2 \le 10000$ -->
<IMG
 WIDTH="139" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/797img1.gif" 
 ALT="$0 < t_1, t_2 \le 10000$">,

<!-- MATH: $-10000 \le t_i, t_f \le 10000$ -->
<IMG
 WIDTH="186" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/797img1.gif" 
 ALT="$-10000 \le t_i, t_f \le 10000$">.
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
The program reads sets of data from a text file. Each data set is
on a separate line and has the format: 
<!-- MATH: $d\ d_1\ d_2\ v_1\ v_2\
t_1\ t_2\ t_i\ t_f$ -->
<IMG
 WIDTH="180" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/797img1.gif" 
 ALT="$d\ d_1\ d_2\ v_1\ v_2\
t_1\ t_2\ t_i\ t_f$">.
The  input data are correct. For each data
set the program writes to the standard output the number of
rendezvous. Each result is on a separate line. An example of
program input/output for six data sets is shown in the sample below.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1 0 0 1 1 1 1 0 10
2 1 1 1 1 1 1 0 1
3 2 1 1 1 1 1 0 0
3 2 1 1 1 1 1 1 1
3 2 1 1 1 1 1 0 1
6525 100000 55000 22 33 3 4 -10000 -3600
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
10
4
2
2
7
263450
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
798||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Tile Puzzle</TITLE>
<META NAME="description" CONTENT="Tile Puzzle">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Tile Puzzle</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
In a puzzle a rectangular surface of width <I>w</I> and height <I>h</I> is split into a collection
of rectangular tiles. The tiles
with the same dimensions form a similarity group. Solving the puzzle is to rebuild
 the surface by using the tiles
from the collection. There can be many solutions. Two solutions are considered different
if the tiles from at least
one similarity  group  follow  different  placement patterns  in  the  two  solutions.
For example,  in  the  puzzle  from
figure 1  there are  two groups of  two similar  tiles  each. The  tiles  can be combined
in  eleven different  ways  to solve the puzzle.

<P>
<DIV ALIGN="CENTER">

<img src=p798.gif>

<P>

Figure 1: Combining tiles to rebuild a surface
</DIV>

<P>
Write a program that for a given puzzle, as described above, computes the total number of different solutions
of the puzzle. The puzzle surface and the tiles have integer dimensions.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
The program reads sets of data from a text file. Each data set, that describes a puzzle,
has the format 
<!-- MATH: $w\ h\ n\ m_1\ w_1\ h_1\ \dots\ m_n\ w_n\ h_n$ -->
<IMG
 WIDTH="242" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/798img1.gif" 
 ALT="$w\ h\ n\ m_1\ w_1\ h_1\ \dots\ m_n\ w_n\ h_n$">,
where 
<!-- MATH: $0 < w,h \le 100$ -->
<IMG
 WIDTH="117" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/798img1.gif" 
 ALT="$0 < w,h \le 100$">
are
 the dimensions of  the surface  to be  rebuild, 
<!-- MATH: $0 < n \le 10$ -->
<IMG
 WIDTH="88" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/798img1.gif" 
 ALT="$0 < n \le 10$">
is  the
number of groups of similar tiles, <I>m</I><SUB><I>k</I></SUB> is the number of similar tiles in the <I>k</I>-th group
and <IMG
 WIDTH="49" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/798img1.gif" 
 ALT="$w_k\ h_k$">
are the width and
the height of the tiles  in the <I>k</I>-th group. Input data are correct,  i.e. the tiles can be always combined to rebuild
the surface and all tiles must be used in the process.

<P>

<P>
<BR>
For each set of data, the program writes the number of tile combinations on a separate line.
The first data set in the sample below corresponds to the puzzle shown in figure 1.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3 2 2
2 1 1
2 1 2

5 2 2
2 1 1
4 1 2
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
11
56
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
799||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Safari Holiday</TITLE>
<META NAME="description" CONTENT="Safari Holiday">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Safari Holiday</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A safari holiday is organized for <I>n</I> people according to the following rules:

<P>
<UL>
<LI>During the safari, the participants are going out every day, in groups of
exactly <I>k</I> persons, to enjoy wild-life watching in deep savanna.
<LI>The number of persons  in a group  is the same every day and cannot exceed a
maximum value <I>kmax</I> agreed by the safari organizers.
<LI>For any given day, during the safari, each participant is member of a group in that day.
<LI>Each day every person is in a totally new company, i.e. the remaining <I>n</I>-1
  persons of his/her group are different from those in the previous days.
<LI>At  the  end  of  the  safari  everybody  must  have  been  in  the  company  of  everybody,  i.e.  for  any  two
participants A and B there is a day, during the safari, such that A and B are in the same
group that day.
</UL>

<P>

<P>
<BR>
For example, for 4 safari participants and for <I>kmax</I>=3 there are 2 groups of 2 persons
each every day and the safari schedule can be as follows:

<P>
<PRE>
                                    group 1  group 2
                            day 1:   1,2      3,4
                            day 2:   1,3      2,4
                            day 3:   1,4      2,3
</PRE>

<P>
Write a program that, for a given pair <I>n</I>, <I>kmax</I> (the number of safari participants and the
maximum size of the
groups), computes  the  largest possible size of  the safari groups (the  largest possible
value of <I>k</I> such  that 
<!-- MATH: $k \le kmax$ -->
<IMG
 WIDTH="82" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/799img2.gif" 
 ALT="$k \le kmax$">)
and the corresponding number of days of the safari
holiday.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
The program reads sets of data  from a  text  file.  Each data set  is on a separate
line and has  the  format: <IMG
 WIDTH="65" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/7/799img2.gif" 
 ALT="$n \ kmax$">,
where <I>n</I> and <I>kmax</I> are strictly positive integers, that can have large values. For each data set the program
prints to the standard output the corresponding size of  the safari groups and  the
number of days of  the safari
holiday, as  illustrated  in  the sample below.  If  the problem has no solution
the  program prints  the message `<TT>No solution</TT>'.
Each result is on a separate line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
4 1
4 2
4 3
4 4
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
No solution
2 persons/group, 3 days
2 persons/group, 3 days
4 persons/group, 1 day
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2001-01-05</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
800||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Crystal Clear</TITLE>
<META NAME="description" CONTENT="Crystal Clear">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Crystal Clear</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A new high technology company has developed a material that it hopes to market as an insulator.
The material
consists of crystals and the square lattice on which the crystals are grown. The points on
the lattice are at 1
centimeter intervals. The crystals are formed from seeds that are planted at the lattice
points. Each crystal grows into
a circle of diameter 1 centimeter.

<P>
Using this material in applications will require cutting the lattice into pieces. One of the
problems in cutting the
lattice is that some crystals will be sliced in the process. Slicing a crystal other than
through the center completely
destroys that crystal's insulation properties. (A cut touching a crystal tangentially does
not destroy that crystal's
insulation property.)

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p800a.eps}$
 -->
<IMG
 WIDTH="588" HEIGHT="140" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p800a.jpg" 
 ALT="\epsfbox{p800a.eps}">
</DIV>

<P>
The insulation capacity of a piece is directly proportional to the total area of the insulating
crystals (or parts of
crystals) that are on the piece. The following figure shows a polygonal piece with its
insulating crystals shaded.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p800b.eps}$
 -->
<IMG
 WIDTH="549" HEIGHT="473" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p800a.jpg" 
 ALT="\epsfbox{p800b.eps}">
</DIV>

<P>
Your job is to determine the insulating capacity of such polygonal pieces by computing the total
area of the insulating crystals in it.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of a sequence of polygon descriptions. Each description consists of a
positive integer <SPAN CLASS="MATH"><I>n</I></SPAN>
(<!-- MATH
 $3 \le n \le 25$
 -->
<SPAN CLASS="MATH">3<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p800a.jpg" 
 ALT="$ \le$"><I>n</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p800a.jpg" 
 ALT="$ \le$">25</SPAN>) representing the number of vertices, followed by <SPAN CLASS="MATH"><I>n</I></SPAN> pairs of integers.
Each pair is the <SPAN CLASS="MATH"><I>x</I></SPAN> and <SPAN CLASS="MATH"><I>y</I></SPAN> coordinates
of one vertex of the polygon. (The coordinate system is aligned with the lattice such
that the integer coordinates are
precisely the lattice points.)

<P>
Vertices of each polygon are given in clockwise order. No polygon will be degenerate.
No coordinate will be larger than 250 in absolute value.

<P>
The input is terminated by zero for the value of <SPAN CLASS="MATH"><I>n</I></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each polygon, first print its number (`<TT>Shape 1</TT>', `<TT>Shape 2</TT>', etc.) and then
the area of the insulating crystals
in <code>cm^2</code>, exact to three digits to the right of the decimal point.

<P>
The following sample corresponds to the previous illustration.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
5
0 2
3 5
6 3
6 0
1 0
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Shape 1
Insulating area = 15.315 cm^2
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
801||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Flight Planning</TITLE>
<META NAME="description" CONTENT="Flight Planning">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Flight Planning</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Your job is to write a program that plans airplane flights. Each flight consists of a
series of one or more legs. Your
program must choose the best altitude for each leg to minimize the amount of fuel
consumption during the trip.

<P>

<P>
<BR>
The airplane has a fixed airspeed, given by the constant VCRUISE, and a most-efficient
cruising altitude, AOPT.
When flying at altitude AOPT, fuel consumption in gallons per hour is given by GPHOPT.
When flying at an
altitude that is different from AOPT, fuel consumption increases by GPHEXTRA for
each 1000 feet above or below
AOPT. The flight starts and finishes at an altitude of 0. Each 1000 foot climb
burns an extra amount of fuel given by
CLIMBCOST (there is no reduction in fuel consumption when you descend).
Make the approximation that all
climbing and descending is done in zero time at the beginning of each flight leg.
Thus each leg is flown at a constant
airspeed and altitude. For this problem, the airplane characteristics are given by
the following constants:

<P>

<P>
<BR>
<TABLE COLS=3>
<COL ALIGN=LEFT><COL ALIGN=RIGHT><COL ALIGN=LEFT>
<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP>
VCRUISE </TD><TD VALIGN=BASELINE ALIGN=RIGHT NOWRAP> 400 </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> knots (a knot is one nautical mile per hour) </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> 
AOPT </TD><TD VALIGN=BASELINE ALIGN=RIGHT NOWRAP> 30,000 </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> feet </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> 
GPHOPT </TD><TD VALIGN=BASELINE ALIGN=RIGHT NOWRAP> 2000 </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> gallons per hour </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> 
GPHEXTRA </TD><TD VALIGN=BASELINE ALIGN=RIGHT NOWRAP> 10 </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> gallons per hour for each 1000 feet </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> 
CLIMBCOST </TD><TD VALIGN=BASELINE ALIGN=RIGHT NOWRAP> 50 </TD><TD VALIGN=BASELINE ALIGN=LEFT NOWRAP> gallons per 1000 feet of climb
</TD></TR>
</TABLE>

<P>

<P>
<BR>
Before each flight, you are given the length of each leg and the tailwind expected
for each leg. A positive tailwind
increases the airplane's speed over the ground, and a negative tailwind decreases
its speed over the ground. For
example, if airspeed is 400 knots and the tailwind is -50 knots, speed over the
ground is 350 knots.

<P>
By policy, altitude for each leg must be some integer multiple of 1000 feet,
between 20,000 and 40,000 feet,
inclusive. Your program must compute the best altitude for each leg to minimize
overall fuel consumption for the
trip, and must compute the fuel required for the trip.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The first line contains an integer <SPAN CLASS="MATH"><I>N</I></SPAN>, representing the number of flights you are
required to plan. Each flight consists of the following input lines:

<P>

<UL>
<LI>The first input line in a flight contains an integer <SPAN CLASS="MATH"><I>K</I></SPAN> (<!-- MATH
 $0 < K < 10$
 -->
<SPAN CLASS="MATH">0 &lt; <I>K</I> &le; 100</SPAN>), representing
the number of legs in the flight.
</LI>
<LI>The next <SPAN CLASS="MATH"><I>K</I></SPAN> input lines each contain the following three integers:

<OL>
<LI>The length of the leg, in nautical miles
</LI>
<LI>The expected tailwind at 20,000 feet, in knots
</LI>
<LI>The expected tailwind at 40,000 feet, in knots
</LI>
</OL>
</LI>
</UL>

<P>
The expected tailwind at altitudes between 20,000 and 40,000 feet is computed by
linear interpolation. For example,
the expected tailwind at 30,000 feet is halfway between the expected tailwind at
20,000 feet and the expected tailwind at 40,000 feet.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Your program must produce one output line for each flight. The output line must
contain the flight number (counting
from the beginning of the problem), the chosen altitude for each leg
(in thousands of feet), and the fuel required for the trip (in gallons, to the upper gallon). If several solutions exist, choose the one with the lower altitude in the earlier legs of the flight.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
2
2
1500 -50 50
1000 0 0
3
1000 50 0
2000 0 20
1800 50 100
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
Flight 1: 35 30 13986
Flight 2: 20 30 30 23502
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
802||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Lead or Gold</TITLE>
<META NAME="description" CONTENT="Lead or Gold">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Lead or Gold</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
How to make gold from lead has baffled alchemists for centuries. At the last
Alchemists Club Meeting (ACM), a
sensational breakthrough was announced. By mixing the three chemicals Algolene,
Basicine and Cobolase in the
correct ratio, one can create a mixture that transforms lead into gold. Since Algolene,
Basicine and Cobolase (or A,
B, C for short) are generally not sold individually, but rather mixed into solutions,
this may not be easy as it seems.

<P>
Consider the following example. Two mixtures of Algolene, Basicine and Cobolase are
available, in weights 1:2:3
and 3:7:1, respectively. By mixing these solutions in a ratio of 1:2 we obtain a
solution of A, B, C with weights 7:16:5.
But there is no way to combine these mixtures into a new one with weights 3:4:5.
If we additionally had a solution of
weights 2:1:2, then a 3:4:5 mixture would be possible by combining eight
parts of 1:2:3, one part of 3:7:1 and five parts
of 2:1:2. As you see in both examples, weights for each component must be integers.

<P>
Determining which mixing weights we can obtain from a given set of solutions is
no trivial task. But, as the ACM has
shown, it is possibly a very profitable one. You must write a program to find mixing ratios.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file contains several test cases. The first line of each test case contains an
integer <SPAN CLASS="MATH"><I>n</I></SPAN> (<!-- MATH
 $0 \le n < 100$
 -->
<SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/802img1.png" 
 ALT="$ \le$"><I>n</I> &lt; 100</SPAN>) that
represents the number of mixtures in the test case. The next <SPAN CLASS="MATH"><I>n</I></SPAN> lines each contain
three non-negative integers <!-- MATH
 $a_i, b_i, c_i$
 -->
<SPAN CLASS="MATH"><I>a</I><SUB>i</SUB>, <I>b</I><SUB>i</SUB>, <I>c</I><SUB>i</SUB></SPAN>,
specifying the weights <!-- MATH
 $a_i : b_i : c_i$
 -->
<SPAN CLASS="MATH"><I>a</I><SUB>i</SUB> : <I>b</I><SUB>i</SUB> : <I>c</I><SUB>i</SUB></SPAN> of A, B, C in the <SPAN CLASS="MATH"><I>i</I></SPAN>-th mixture.
At least one of these integers is not 0 for
each mixture, and none of them will be greater than 15000.

<P>
Finally, there is one line containing three non-negative integers <SPAN CLASS="MATH"><I>a</I>, <I>b</I>, <I>c</I></SPAN>, which
specify the weights <SPAN CLASS="MATH"><I>a</I> : <I>b</I> : <I>c</I></SPAN> in the desired
solution. At least one of these integers is not 0.

<P>
The input file is terminated with the integer `<TT>0</TT>' on a line by itself following
the last test case.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, output the word `<TT>Mixture</TT>', followed by the ordinal number
of the test case. On the next line, if
it is possible to obtain the desired solution by mixing the input solutions, output
the word `<TT>Possible</TT>'. Otherwise,
output the word `<TT>Impossible</TT>'. Print a blank line between consecutive test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
2
1 2 3
3 7 1
3 4 5
3
1 2 3
3 7 1
2 1 2
3 4 5
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Mixture 1
Impossible

Mixture 2
Possible
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
803||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Page Selection by Keyword Matching</TITLE>
<META NAME="description" CONTENT="Page Selection by Keyword Matching">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Page Selection by Keyword Matching</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Anyone who has used the World Wide Web is familiar with search engines used to
find pages matching a user-
generated query. Many of these engines are quite sophisticated, using advanced
algorithms and parallel searching
techniques to provide fast, accurate responses.

<P>
This problem is somewhat simpler. A group of web pages has been classified by
associating a list of keywords,
given in decreasing order of relevance, with each page (i.e., the order of
keywords is from the most specific keyword
to the least specific). For example, a page on programming in Smalltalk has
the keywords Smalltalk, programming,
and computers in that order; the most relevant keyword is Smalltalk.

<P>
Queries also include a list of keywords, again from most to least relevant.
For example, in a query consisting of the
keyword Smalltalk followed by the keyword computers, Smalltalk is more
important than computers.

<P>
In this problem you are to determine the top five (or fewer) pages that match
each of an arbitrary number of queries.
To determine the strength of the relationship between a query and a web page,
assume the keywords for each page
and each query are assigned integer weights, in descending order, starting
with <SPAN CLASS="MATH"><I>N</I></SPAN>, where <SPAN CLASS="MATH"><I>N</I></SPAN> is the maximum number
of keywords allowed for a web page and query. The strength of the relationship
is the sum of the products of the
weights associated with each keyword that appears both in the web page list
and the query list. For example, assume
the following web pages and keyword lists:

<P>
<DL>
<DT><STRONG>Page 1:</STRONG></DT>
<DD>Smalltalk, programming, computers
</DD>
<DT><STRONG>Page 2:</STRONG></DT>
<DD>computers, programming
</DD>
<DT><STRONG>Page 3:</STRONG></DT>
<DD>computers, Smalltalk
</DD>
</DL>

<P>
For <SPAN CLASS="MATH"><I>N</I></SPAN> equal 8, a query with keywords Smalltalk and programming in that order
yields a strength rating of 113 for
Page 1 (8*8 + 7*7), 49 for Page 2 (7*7), and 56 for Page 3 (8*7).
A query with keywords Smalltalk and computers
yields a strength rating of 106 for Page 1 (8*8 + 7*6), 56 for
Page 2 (7*8), and 112 for Page 3 (8*7 + 7*8).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input data consist of one line for each web page and query. A line consists of
a code letter followed by a list of
keywords. Code letters <TT>P</TT>, <TT>Q</TT>, and <TT>E</TT> denote a page, a query, and the
end of file respectively. Code letters and
keywords are separated by at least one space. <TT>P</TT>'s and <TT>Q</TT>'s may occur
in any order. Pages are added sequentially
starting with one. Each page has at least one but no more than 8 keywords.
Each word consists of no more than 20
alphabetic characters. The case of characters in the keywords is not significant.
There will be a maximum of 25 pages in the input.

<P>
Each query also has of a list of between one and eight keywords. Again, a keyword
has no more than 20 alphabetic
characters, case being insignificant. Number the queries sequentially starting with one.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each query, identify the 5 (or fewer) pages read so far that are most relevant
to the query. Print a single line
containing the query identifier, a colon, and the page identifiers of the five most
relevant pages in the decreasing
order of relevance. Page identifiers consist of the letter `<TT>P</TT>' followed by the
page number. Query identifiers consist
of the letter `<TT>Q</TT>' followed by the query number. If several pages have
the same relevance, list them by increasing
page number. Do not list pages that have no relationship (zero strength),
even if fewer than five pages are identified.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
P Smalltalk programming computers
P computers programming
P computers Smalltalk
P FORTRAN programming
P COBOL programming
P programming
Q Smalltalk
Q programming
Q computers
Q Smalltalk computers
Q Smalltalk programming
Q cooking French
E
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Query Pages
Q1:   P1 P3
Q2:   P6 P1 P2 P4 P5
Q3:   P2 P3 P1
Q4:   P3 P1 P2
Q5:   P1 P3 P6 P2 P4
Q6:
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
804||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Petri Net Simulation</TITLE>
<META NAME="description" CONTENT="Petri Net Simulation">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Petri Net Simulation</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Input: petri.in
A Petri net is a computational model used to illustrate concurrent activity.
Each Petri net contains some number of
places (represented by circles), transitions (represented by black rectangles),
and directed edges used to connect
places to transitions, and transitions to places. Each place can hold zero or
more tokens (represented by black dots).
Here are two examples:

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p804.eps}$
 -->
<IMG
 WIDTH="550" HEIGHT="597" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p804.jpg" 
 ALT="\epsfbox{p804.eps}">
</DIV>

<P>
In the first Petri net above, there are two places (P1 and P2) and two transitions
(T1 and T2). P1 initially has one
token; P2 has none. P1 is an input place for transition T1, and P2 is an
output place for T1. In the second example
there are three places and three transitions, with three tokens in P1.
T2 has two input places, both of which are P2.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Operation of a Petri Net</A>&nbsp;</FONT>
</H2>
Each transition in a Petri net is either enabled or disabled. A transition is
enabled if there is at least one token in each
of its input places. Any transition can fire whenever it is enabled. If multiple
transitions are enabled, any one of them
may fire. When a transition fires, one token is removed from each of the
input places, and one token is added to each
of the output places; this is effectively done atomically, as one action.
When there are no enabled transitions, a Petri
net is said to be dead.

<P>
In the top example only T1 is enabled. When it fires one token is removed from P1,
and one token is added to P2.
Then T2 is enabled. When it fires one token is removed from P2, and one token
is added to P1. Clearly this Petri net
will repeat this cycle forever.

<P>
The bottom example is more interesting. T1 is enabled and fires, effectively
moving a token to P2. At this point T1
is still the only enabled transition (T2 requires that P2 have two tokens
before it is enabled). T1 fires again, leaving
one token in P1 and two tokens in P2. Now both T1 and T2 are enabled.
Assume T2 fires, removing two tokens
from P2 and adding one token to P3. Now T1 and T3 are enabled. Continuing until
no more transitions are enabled,
you should see that only one token will be left in P2 after 9 transition firings.
(Note that if T1 had fired instead of T2
when both were enabled, this result would have been the same after 9 firings.)

<P>
In this problem you will be presented with descriptions of one or more Petri nets.
For each you are to simulate some
specified number of transition firings, <SPAN CLASS="MATH"><I>NF</I></SPAN>, and then report the number of tokens
remaining in the places. If the net
becomes dead before <SPAN CLASS="MATH"><I>NF</I></SPAN> transition firings, you are to report that fact as well.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Each Petri net description will first contain an integer <SPAN CLASS="MATH"><I>NP</I></SPAN> (<!-- MATH
 $0 < NP < 100$
 -->
<SPAN CLASS="MATH">0 &lt; <I>NP</I> &lt; 100</SPAN>)
followed by <SPAN CLASS="MATH"><I>NP</I></SPAN> integers specifying the
number of tokens initially in each of the places numbered <!-- MATH
 $1, 2, \dots, NP$
 -->
<SPAN CLASS="MATH">1, 2,..., <I>NP</I></SPAN>.
Next there will appear an integer <SPAN CLASS="MATH"><I>NT</I></SPAN>
(<!-- MATH
 $0 < NT < 100$
 -->
<SPAN CLASS="MATH">0 &lt; <I>NT</I> &lt; 100</SPAN>) specifying the number of transitions. Then, for each transition
(in increasing numerical order <!-- MATH
 $1, 2, \dots, NT$
 -->
<SPAN CLASS="MATH">1, 2,..., <I>NT</I></SPAN>) there will appear a list of
integers terminated by zero.

<P>
The negative numbers in the list will represent the input
places, so the number <SPAN CLASS="MATH">- <I>n</I></SPAN> indicates there is an input place at <SPAN CLASS="MATH"><I>n</I></SPAN>.
The positive numbers in the list will indicate the
output places, so the number <SPAN CLASS="MATH"><I>p</I></SPAN> indicates an output place at <SPAN CLASS="MATH"><I>p</I></SPAN>.
There will be at least one input place and at least one
output place for each transition. Finally, after the description of all <SPAN CLASS="MATH"><I>NT</I></SPAN>
transitions, there will appear an integer
indicating the maximum number of firings you are to simulate, <SPAN CLASS="MATH"><I>NF</I></SPAN>.
The input will contain one or more Petri net
descriptions followed by a zero.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each Petri net description in the input display three lines of output.
On the first line indicate the number of the
input case (numbered sequentially starting with 1) and whether or not <SPAN CLASS="MATH"><I>NF</I></SPAN>
transitions were able to fire. If so, indicate
the net is still live after <SPAN CLASS="MATH"><I>NF</I></SPAN> firings. Otherwise indicate the net is dead,
and the number of firings which were
completed. In either case, on the second line give the identities of the
places which contain one or more tokens after
the simulation, and the number of tokens each such place contains.
This list should be in ascending order. The third
line of output for each set should be blank.

<P>
The input data will be selected to guarantee the uniqueness of the correct output displays.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
2
1 0
2
-1 2 0
-2 1 0
100
3
3 0 0
3
-1 2 0
-2 -2 3 0
-3 1 0
100
3
1 0 0
3
-1 2 3 0
-2 1 0
-3 1 0
1
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case 1: still live after 100 transitions
Places with tokens: 1 (1)

Case 2: dead after 9 transitions
Places with tokens: 2 (1)

Case 3: still live after 1 transitions
Places with tokens: 2 (1) 3 (1)
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
805||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Polygon Intersections</TITLE>
<META NAME="description" CONTENT="Polygon Intersections">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Polygon Intersections</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Most drawing or illustration programs have simple tools for creating polygon objects.
The better ones can find the
regions that are the intersections of two polygons. The picture below shows
two polygons, one is a pentagon and the
other is a triangle. Their intersection consists of the two dark regions.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p805.eps}$
 -->
<IMG
 WIDTH="308" HEIGHT="240" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p805.jpg" 
 ALT="\epsfbox{p805.eps}">
</DIV>

<P>
IBM has just hired you as a member of a programming team that will create a very
sophisticated drawing/illustration
program. Your task is to write the part of the program that deals with polygon
intersections. Your boss has told you
to delay work on the user interface and focus only on the geometric
representations of the intersections.

<P>
A polygon in the Cartesian plane can be represented by a sequence of points
that are its vertices. The vertices in the
sequence appear in the order in which they are visited when traveling
clockwise around the polygon's boundary; so
any two adjacent vertices in the sequence are the endpoints of a line segment
that is one of the polygon's sides. The
last and the first vertices in the sequence are also endpoints of a side.
Vertices are identified by their <SPAN CLASS="MATH"><I>x</I></SPAN>- and <SPAN CLASS="MATH"><I>y</I></SPAN>-
coordinates. Assume the following about each polygon.

<P>

<UL>
<LI>No point will occur as a vertex (on the same polygon) more than once.
</LI>
<LI>Two sides can intersect only at a common endpoint (vertex).
</LI>
<LI>The angle between any two sides with a common vertex has a measure
that is greater than 0 and less than 360.
</LI>
<LI>The polygon has at least 3 vertices.
</LI>
</UL>

<P>
The intersection of two polygons consists of 0 or more connected regions.
Your problem is to take two polygons and
determine the regions of their intersection that are polygons satisfying the criteria above.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input contains several data sets, each consisting of two polygons.
Each polygon appears as a sequence of
numbers:
<!-- MATH
 \begin{displaymath}
n \ x_1 \ y_1 \ x_2 \ y_2 \dots x_n \ y_n
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>n</I>&nbsp;<I>x</I><SUB>1</SUB>&nbsp;<I>y</I><SUB>1</SUB>&nbsp;<I>x</I><SUB>2</SUB>&nbsp;<I>y</I><SUB>2</SUB>...<I>x</I><SUB>n</SUB>&nbsp;<I>y</I><SUB>n</SUB>
</DIV><P></P>
where the integer <SPAN CLASS="MATH"><I>n</I></SPAN> is the number of vertices of the polygon, and the real
coordinates (<SPAN CLASS="MATH"><I>x</I><SUB>1</SUB>, <I>y</I><SUB>1</SUB></SPAN>) through (<SPAN CLASS="MATH"><I>x</I><SUB>n</SUB>, <I>y</I><SUB>n</SUB></SPAN>) are the
boundary vertices. The end of input is indicated by two <TT>0</TT>'s for the values
of <SPAN CLASS="MATH"><I>n</I></SPAN>. These two <TT>0</TT>'s merely mark the end of
data and should not be treated as an additional data set.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each data set, your program should output its number (`<TT>Data set 1</TT>',
`<TT>Data set 2</TT>', etc.), and the number of regions in
the intersection of its two polygons. Label each region in the data
set (`<TT>Region 1</TT>', `<TT>Region 2</TT>', etc.) and list its vertices
in the order they appear when they are visited going either clockwise or
counterclockwise around the boundary of
the region. The first vertex printed should be the vertex with the smallest
<SPAN CLASS="MATH"><I>x</I></SPAN>-coordinate (to break ties, use the smallest
<SPAN CLASS="MATH"><I>y</I></SPAN>-coordinate). No region may include degenerate parts (consisting of adjacent
sides whose angle of intersection is
0). If the three endpoints of two adjacent sides are collinear, the two
sides should be merged into a single side. Print
each vertex in the standard form (<SPAN CLASS="MATH"><I>x</I>, <I>y</I></SPAN>), where <SPAN CLASS="MATH"><I>x</I></SPAN> and <SPAN CLASS="MATH"><I>y</I></SPAN> have two digits to
the right of the decimal.

<P>
The following sample input contains exactly one data set.
(The data set corresponds to the illustration at the
beginning of this problem description.)

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3 2 1 0.5 3.5 8 5
5 1.5 3 2 7 6.5 6.5 6.5 3.25 4 4.5
0
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Data Set 1
Number of intersection regions: 2
Region 1:(1.50,3.00)(1.59,3.72)(3.25,4.05)
Region 2:(4.43,4.29)(6.50,4.70)(6.50,4.00)(5.86,3.57)
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
806||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Spatial Structures</TITLE>
<META NAME="description" CONTENT="Spatial Structures">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Spatial Structures</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Computer graphics, image processing, and GIS (geographic information systems) all
make use of a data structure
called a quadtree. Quadtrees represent regional or block data efficiently
and support efficient algorithms for
operations like the union and intersection of images.

<P>
A quadtree for a black and white image is constructed by successively
dividing the image into four equal quadrants.
If all the pixels in a quadrant are the same color (all black or all white)
the division process for that quadrant stops.
Quadrants that contain both black and white pixels are subdivided into
four equal quadrants and this process
continues until each subquadrant consists of either all black or all
white pixels. It is entirely possible that some
subquadrants consist of a single pixel.

<P>
For example, using <TT>0</TT> for white and <TT>1</TT> for black, the region on the
left below is represented by the matrix of zeros and
ones in the middle. The matrix is divided into subquadrants as shown on
the right where gray squares represent
subquadrants that consist entirely of black pixels.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p806a.eps}$
 -->
<IMG
 WIDTH="753" HEIGHT="192" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p806a.jpg" 
 ALT="\epsfbox{p806a.eps}">
</DIV>

<P>
A quadtree is constructed from the block structure of an image. The root of
the tree represents the entire array of
pixels. Each non-leaf node of a quadtree has four children, corresponding to
the four subquadrants of the region
represented by the node. Leaf nodes represent regions that consist of pixels of
the same color and thus are not
subdivided. For example, the image shown above, with the block structure
on the right, is represented by the quadtree below.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p806b.eps}$
 -->
<IMG
 WIDTH="435" HEIGHT="191" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p806a.jpg" 
 ALT="\epsfbox{p806b.eps}">
</DIV>

<P>
Leaf nodes are white if they correspond to a block of all white pixels, and
black if they correspond to a block of all
black pixels. In the tree, each leaf node is numbered corresponding to
the block it represents in the diagram above.
The branches of a non-leaf node are ordered from left-to-right as shown
for the northwest, northeast, southwest, and
southeast quadrants (or upper-left, upper-right, lower-left, lower-right).

<P>
A tree can be represented by a sequence of numbers representing the root-to-leaf
paths of black nodes. Each path is a
base five number constructed by labeling branches
with 1, 2, 3, or 4 with NW = 1, NE = 2, SW = 3, SE = 4, and
with the least significant digit of the base five number corresponding to
the branch from the root. For example, the
node labeled 4 has path NE, SW which is <SPAN CLASS="MATH">32<SUB>5</SUB></SPAN> (base 5) or <SPAN CLASS="MATH">17<SUB>10</SUB></SPAN> (base 10);
the node labeled 12 has path SW, SE or
<!-- MATH
 $43_5 = 23_{10}$
 -->
<SPAN CLASS="MATH">43<SUB>5</SUB> = 23<SUB>10</SUB></SPAN> ; and the node labeled 15 has path SE, SW, NW
or <!-- MATH
 $134_5 = 44_{10}$
 -->
<SPAN CLASS="MATH">134<SUB>5</SUB> = 44<SUB>10</SUB></SPAN> . The entire tree is represented by the
sequence of numbers (in base 10)

<P>
<DIV ALIGN="CENTER">
9 14 17 22 23 44 63 69 88 94 113

</DIV>

<P>
Write a program that converts images into root-to-leaf paths and converts root-to-leaf
paths into images.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input contains one or more images. Each image is square, and the data for
an image starts with an integer <SPAN CLASS="MATH"><I>n</I></SPAN>,
where <SPAN CLASS="MATH">| <I>n</I>|</SPAN> is the length of a side of the square (always a power of two,
with <SPAN CLASS="MATH">| <I>n</I>| &le; 64</SPAN>) followed by a representation of
the image. A representation is either a sequence of <SPAN CLASS="MATH"><I>n</I><SUP>2</SUP></SPAN> zeros and ones comprised
of <SPAN CLASS="MATH">| <I>n</I>|</SPAN> lines of <SPAN CLASS="MATH">| <I>n</I>|</SPAN> digits per line, or
the sequence of numbers that represent the root-to-leaf paths of each
black node in the quadtree that represents the image.

<P>
If <SPAN CLASS="MATH"><I>n</I></SPAN> is positive, the zero/one representation follows; if <SPAN CLASS="MATH"><I>n</I></SPAN> is negative,
the sequence of black node path numbers (in
base 10) follows. The sequence is terminated by the number <TT>-1</TT>. A one-node tree
that represents an all-black image is
represented by the number <TT>0</TT>. A one-node tree that represents an all-white
image is represented by an empty sequence (no numbers).

<P>
The end of data is signaled by a value of <TT>0</TT> for <SPAN CLASS="MATH"><I>n</I></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each image in the input, first output the number of the image, as shown in
the sample output. Then output the
alternate form of the image.

<P>
If the image is represented by zeros and ones, the output consists of
root-to-leaf paths of all black nodes in the
quadtree that represents the image. The values should be base 10 representations
of the base 5 path numbers, and the
values should be printed in sorted order. If there are more than 12 black nodes,
print a newline after every 12 nodes.
The total number of black nodes should be printed after the path numbers.

<P>
If the image is represented by the root-to-leaf paths of black nodes, the
output consists of an ASCII representation of
the image with the character `<TT>.</TT>' used for white/zero and the
character `<TT>*</TT>' used for black/one. There should be <SPAN CLASS="MATH"><I>n</I></SPAN>
characters per line for an <!-- MATH
 $n \times n$
 -->
<SPAN CLASS="MATH"><I>n</I>&#215;<I>n</I></SPAN> image.
<p>Print a blank line between cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
8
00000000
00000000
00001111
00001111
00011111
00111111
00111100
00111000
-8
9 14 17 22 23 44 63 69 88 94 113 -1
2
00
00
-4
0 -1
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Image 1
9 14 17 22 23 44 63 69 88 94 113
Total number of black nodes = 11

Image 2
........
........
....****
....****
...*****
..******
..****..
..***...

Image 3
Total number of black nodes = 0

Image 4
****
****
****
****
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
807||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Towers of Powers</TITLE>
<META NAME="description" CONTENT="Towers of Powers">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Towers of Powers</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
One of the many problems in computer-generated graphics is realistically
modeling the ``orderly randomness'' of
things like mountain ranges and city skylines. A new student intern at a
graphics company had an idea--use
fluctuations in number representations to model height. In this problem you
will compute several such number representations and show the ``skylines'' they produce.

<P>
Let <SPAN CLASS="MATH"><I>n</I></SPAN> be any positive integer, and let <SPAN CLASS="MATH"><I>b</I></SPAN> be an integer greater than or
equal to 2. The <!-- MATH
 $complete base-b expansion of n$
 -->
<SPAN CLASS="MATH"><I>completebase</I> - <I>bexpansionofn</I></SPAN>
is obtained as follows. First write the usual base-<SPAN CLASS="MATH"><I>b</I></SPAN> expansion of <SPAN CLASS="MATH"><I>n</I></SPAN>,
which is just a sum of powers of <SPAN CLASS="MATH"><I>b</I></SPAN>, each
multiplied by a coefficient between 1 and <SPAN CLASS="MATH"><I>b</I> - 1</SPAN>, omitting terms with zero
coefficients. For example, if <SPAN CLASS="MATH"><I>n</I> = 20000</SPAN> and
<SPAN CLASS="MATH"><I>b</I> = 3</SPAN>, the base-3 expansion of 20000 is given by
<!-- MATH
 \begin{displaymath}
20000 = 3^9 + 3^5 + 2 \times 3^3 + 2 \times 3^2 + 2
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
20000 = 3<SUP>9</SUP> + 3<SUP>5</SUP> + 2&#215;3<SUP>3</SUP> + 2&#215;3<SUP>2</SUP> + 2
</DIV><P></P>

<P>
To obtain the <EM>complete</EM> base-<SPAN CLASS="MATH"><I>b</I></SPAN> expansion, we apply the same procedure to
the exponents until all numbers are
represented in base <SPAN CLASS="MATH"><I>b</I></SPAN>. For <SPAN CLASS="MATH"><I>n</I> = 20000</SPAN> and <SPAN CLASS="MATH"><I>b</I> = 3</SPAN> we would have
<!-- MATH
 \begin{displaymath}
20000 = 3^{3^2} + 3^{3+2} +2 \times 3^3 + 2 \times 3^2 + 2
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
20000 = 3<SUP>3<SUP>2</SUP></SUP> + 3<SUP>3 + 2</SUP> + 2&#215;3<SUP>3</SUP> + 2&#215;3<SUP>2</SUP> + 2
</DIV><P></P>

<P>
As another example, consider <SPAN CLASS="MATH"><I>n</I> = 16647</SPAN> and <SPAN CLASS="MATH"><I>b</I> = 2</SPAN>. The resulting expansion is
<!-- MATH
 \begin{displaymath}
16647 = 2^{2^{2+1} + 2^2 + 2} + 2^{2^{2+1}} + 2^2 + 2 + 1
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
16647 = 2<SUP>2<SUP>2 + 1</SUP> + 2<SUP>2</SUP> + 2</SUP> + 2<SUP>2<SUP>2 + 1</SUP></SUP> + 2<SUP>2</SUP> + 2 + 1
</DIV><P></P>

<P>
The rising and falling heights of the numbers form the number's ``skyline.''

<P>
For each pair of integers <SPAN CLASS="MATH"><I>n</I></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN> in the input, display the complete base-<SPAN CLASS="MATH"><I>b</I></SPAN>
representation of <SPAN CLASS="MATH"><I>n</I></SPAN>. Your display should
use multiple output lines for different exponent heights. The display
must begin with <SPAN CLASS="MATH"><I>n</I> =</SPAN> , followed by the
expansion. Answers should use an asterisk (<TT>*</TT>) as the multiplication symbol
between coefficients and powers of <SPAN CLASS="MATH"><I>b</I></SPAN>.
Zero terms must not be printed, and unnecessary coefficients and exponents must
not be shown (for example,
display 1 instead of <SPAN CLASS="MATH"><I>b</I><SUP>0</SUP></SPAN>, <SPAN CLASS="MATH"><I>b</I><SUP>2</SUP></SPAN> instead of <SPAN CLASS="MATH">1*<I>b</I><SUP>2</SUP></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN> instead of <SPAN CLASS="MATH"><I>b</I><SUP>1</SUP></SPAN>).
To assist in accurately viewing the skyline of the
number, the display must show one character (either a digit, <TT>+</TT>, or <TT>*</TT>)
per column of the multi-line display; there must
be no unnecessary spaces. The correct format is illustrated in the sample output shown below.

<P>
Answers must be displayed using no more than 80 columns. Expansions requiring more than 80 columns
must be split between terms, into two or more sets of display lines to show the remaining portion of
the expansion. The second and following parts of the answer must begin in the same column as the
first part of the answer and should contain the same number of (possibly blank) lines. The split may 
only occur between terms of the number itself (the bottom line), not between terms in an exponent. 
See the sample output for an example. Note that each set of display lines starts with a blank line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input is a sequence of pairs of integers, <SPAN CLASS="MATH"><I>n</I></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN>, followed by a pair of zeroes.
Each value for <SPAN CLASS="MATH"><I>n</I></SPAN> will be positive, and
each value for <SPAN CLASS="MATH"><I>b</I></SPAN> will be greater than or equal to 2.
All values will fit into 64 bits unsigned integers (the maximum is therefore 18446744073709551615).
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each input pair, <SPAN CLASS="MATH"><I>n</I></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN>, print the complete base-<SPAN CLASS="MATH"><I>b</I></SPAN> expansion of <SPAN CLASS="MATH"><I>n</I></SPAN> as
described above. Print a line containing

<P>

<TT><SPAN CLASS="MATH"><I>n</I></SPAN> in complete base <SPAN CLASS="MATH"><I>b</I></SPAN>:</TT>

<P>
preceding each expansion. Separate the output for consecutive pairs by a line of exactly 80 hyphens.
All coefficients, bases, and
exponents are to be displayed as standard base 10 integers.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
20000 3
16647 2
1000 12
85026244 3
0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
20000 in complete base 3:

          2
         3   3+2    3    2
20000 = 3  +3   +2*3 +2*3 +2
--------------------------------------------------------------------------------
16647 in complete base 2:

          2+1  2     2+1
         2   +2 +2  2     2
16647 = 2         +2    +2 +2+1
--------------------------------------------------------------------------------
1000 in complete base 12:

           2
1000 = 6*12 +11*12+4
--------------------------------------------------------------------------------
85026244 in complete base 3:

             2           2         2         2         2       2       2
            3 +2*3+1    3 +2*3    3 +3+2    3 +3+1    3 +2    3 +1    3
85026244 = 3        +2*3      +2*3      +2*3      +2*3    +2*3    +2*3


               2*3+2  2*3+1    3
           +2*3     +3     +2*3 +3+1
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-17
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
808||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Bee Breeding</TITLE>
<META NAME="description" CONTENT="Bee Breeding">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Bee Breeding</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Professor B. Heif is conducting experiments with a species of South American
bees that he found during an expedition to
the Brazilian rain forest. The honey produced by these bees is of superior
quality compared to the honey from European
and North American honey bees. Unfortunately, the bees do not breed well in
captivity. Professor Heif thinks the reason
is that the placement of the different maggots (for workers, queens, etc.)
within the honeycomb depends on
environmental conditions, which are different in his laboratory and the rain forest.

<P>

<P>
<BR>
As a first step to validate his theory, Professor Heif wants to quantify the
difference in maggot placement. For this he
measures the distance between the cells of the comb into which the maggots
are placed. To this end, the professor has
labeled the cells by marking an arbitrary cell as number 1, and then
labeling the remaining cells in a clockwise fashion, as
shown in the following figure.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p808.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p808.gif" 
 ALT="\epsfbox{p808.eps}">
</DIV>

<P>
For example, two maggots in cells 19 and 30 are 5 cells apart. One of the shortest
paths connecting the two cells is via
the cells 19 - 7 - 6 - 5 - 15 - 30, so you must move five times to adjacent
cells to get from 19 to 30.

<P>

<P>
<BR>
Professor Heif needs your help to write a program that computes the distance,
defined as the number of cells in a shortest
path, between any pair of cells.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of several lines, each containing two integers
<SPAN CLASS="MATH"><I>a</I></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN> (<!-- MATH
 $a,b \le 10000$
 -->
<SPAN CLASS="MATH"><I>a</I>, <I>b</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p808.gif" 
 ALT="$ \le$">10000</SPAN>), denoting numbers of cells. The
integers are always positive, except in the last line where
<SPAN CLASS="MATH"><I>a</I> = <I>b</I> = 0</SPAN> holds. This last line terminates the input and should not
be processed.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each pair of numbers (<SPAN CLASS="MATH"><I>a</I>, <I>b</I></SPAN>) in the input file, output the distance between
the cells labeled <SPAN CLASS="MATH"><I>a</I></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN>. The distance is the
minimum number of moves to get from <SPAN CLASS="MATH"><I>a</I></SPAN> to <SPAN CLASS="MATH"><I>b</I></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
19 30
0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
The distance between cells 19 and 30 is 5.
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
809||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Bullet Hole</TITLE>
<META NAME="description" CONTENT="Bullet Hole">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Bullet Hole</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p809.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p809.gif" 
 ALT="\epsfbox{p809.eps}">
</DIV>

<P>
A cube is suspended in space. A Cartesian coordinate system is defined with
its origin at one of the bottom corners of the
cube, as shown in the figure. The cube has side dimension <SPAN CLASS="MATH"><I>d</I></SPAN>, so its
opposite corners are at coordinates (<SPAN CLASS="MATH">0, 0, 0</SPAN>) and
(<SPAN CLASS="MATH"><I>d</I>, <I>d</I>, <I>d</I></SPAN>). The positive <SPAN CLASS="MATH"><I>z</I></SPAN>-direction of the coordinate system
is ``up'' with respect to gravity.

<P>

<P>
<BR>
The interior of the cube contains partitions with uniform spacing in each
dimension, so that the cube is partitioned into <SPAN CLASS="MATH"><I>n</I><SUP>3</SUP></SPAN>
mini-cubes of equal size. The partitions are thin and watertight, and
each mini-cube is filled with water. The total volume
of water in all the minicubes is <SPAN CLASS="MATH"><I>d</I><SUP>3</SUP></SPAN> .

<P>

<P>
<BR>
A gun fires a bullet which may hit the cube. The muzzle of the gun
is at the point (<!-- MATH
 $x_1, y_1, z_1$
 -->
<SPAN CLASS="MATH"><I>x</I><SUB>1</SUB>, <I>y</I><SUB>1</SUB>, <I>z</I><SUB>1</SUB></SPAN>). The point (<!-- MATH
 $x_2, y_2, z_2$
 -->
<SPAN CLASS="MATH"><I>x</I><SUB>2</SUB>, <I>y</I><SUB>2</SUB>, <I>z</I><SUB>2</SUB></SPAN>) is a
point on the bullet's path that defines the direction of the bullet.
The bullet does not shatter the cube, but wherever the
bullet touches a side or interior partition of the cube, it makes a
small hole. Bullet holes may be made in the sides, edges,
or corners of the interior mini-cubes. Water, influenced by gravity,
may leak through these small holes. All the water that
leaks out of the large cube is collected and measured.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input data set consists of several trials. Each trial is described by
eight integers. The first integer is <SPAN CLASS="MATH"><I>n</I></SPAN> (<SPAN CLASS="MATH"><I>n</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p809.gif" 
 ALT="$ \le$">50</SPAN>), as
described above. The second integer is <SPAN CLASS="MATH"><I>d</I></SPAN> (<SPAN CLASS="MATH"><I>d</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p809.gif" 
 ALT="$ \le$">100</SPAN>). The remaining
six integers--<!-- MATH
 $x_1, y_1, z_1, x_2, y_2, z_2$
 -->
<SPAN CLASS="MATH"><I>x</I><SUB>1</SUB>, <I>y</I><SUB>1</SUB>, <I>z</I><SUB>1</SUB>, <I>x</I><SUB>2</SUB>, <I>y</I><SUB>2</SUB>, <I>z</I><SUB>2</SUB></SPAN>--represent the origin
and a point on the path of the bullet (<!-- MATH
 $-100 \le x_1, y_1, z_1, x_2, y_2, z_2 \le 100$
 -->
<SPAN CLASS="MATH">-100<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p809.gif" 
 ALT="$ \le$"><I>x</I><SUB>1</SUB>, <I>y</I><SUB>1</SUB>, <I>z</I><SUB>1</SUB>, <I>x</I><SUB>2</SUB>, <I>y</I><SUB>2</SUB>, <I>z</I><SUB>2</SUB><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p809.gif" 
 ALT="$ \le$">100</SPAN>).
The origin and the point on the path of the bullet
are not the same. The origin may be inside the cube. After the last trial, the integer `<TT>0</TT>' terminates the data set.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Your program must compute the total volume of water that leaks out of
the large cube. For each trial, print the trial
number, the notation `<TT>Volume =</TT>', and the total volume of water accurate
to two digits to the right of the decimal point.

<P>
Print a blank line between trials.

<P>

<P>
<BR>

<B>Note:</B> In this problem, two real numbers are considered equal if they are less
than <SPAN CLASS="MATH">10<SUP>-6</SUP></SPAN> apart.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
 5   25     5  15   0     5  15 100
 3   30     0 -35   0     3 -25   3
10   16     8  17  11    12  19   6
 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Trial 1, Volume = 2500.00

Trial 2, Volume = 1950.00

Trial 3, Volume = 0.00
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
810||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>A Dicey Problem</TITLE>
<META NAME="description" CONTENT="A Dicey Problem">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
A Dicey Problem</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The three-by-three array in Figure 1 is a maze. A standard six-sided die is needed
to traverse the maze (the layout of a
standard six--sided die is shown in Figure 2). Each maze has an initial position
and an initial die configuration. In Figure
1, the starting position is row 1, column 2--the ``2'' in the top row of the
maze--and the initial die configuration has the
``5'' on top of the die and the ``1'' facing the player
(assume the player is viewing the maze from the bottom edge of the
figure).

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p810a.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p810a.gif" 
 ALT="\epsfbox{p810a.eps}">
</DIV>

<P>

<P>
<BR>
To move through the maze you must tip the die over on an edge to land on an
adjacent square, effecting horizontal or
vertical movement from one square to another. However, you can only move onto a
square that contains the same
number as the number displayed on the top of the die before the move, or
onto a ``wild'' square which contains a star.
Movement onto a wild square is always allowed regardless of the number
currently displayed on the top of the die. The
goal of the maze is to move the die off the starting square and to then
find a way back to that same square.

<P>

<P>
<BR>
For example, at the beginning of the maze there are two possible moves.
Since the 5 is on top of the die, it is possible to
move down one square, and since the square to the left of the starting position
is wild it is also possible to move left. If
the first move chosen is to move down, this brings the 6 to the top of the
die and moves are now possible both to the right
and down. If the first move chosen is instead to the left, this brings the 3
to the top of the die and no further moves are
possible.

<P>

<P>
<BR>
If we consider maze locations as ordered pairs of row and column
numbers (<!-- MATH
 $row,column$
 -->
<SPAN CLASS="MATH"><I>row</I>, <I>column</I></SPAN>)
with row indexes starting at 1
for the top row and increasing toward the bottom, and column indexes
starting at 1 for the left column and increasing to
the right, the solution to this simple example maze can be
specified as: (1,2), (2,2), (2,3), (3,3), (3,2), (3,1), (2,1), (1,1),
(1,2). A bit more challenging example maze is shown in Figure 3.

<P>

<P>
<BR>
The goal of this problem is to write a program to solve dice mazes. The input
file will contain several mazes for which
the program should search for solutions. Each maze will have either a unique
solution or no solution at all. That is, each
maze in the input may or may not have a solution. For each input maze, either a solution or a message indicating no
solution is possible will be sent to the output.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p810b.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p810a.gif" 
 ALT="\epsfbox{p810b.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file begins with a line containing a string of no more than 20 non-blank
characters that names the first maze.
The next line contains six integers delimited by single spaces. These integers are,
in order, the number of rows in the
maze (an integer from 1 to 10, call this value <SPAN CLASS="MATH"><I>R</I></SPAN>), the number of columns in the
maze (an integer from 1 to 10, call this
value <SPAN CLASS="MATH"><I>C</I></SPAN>), the starting row, the starting column, the number that should be on
top of the die at the starting position, and
finally the number that should be facing you on the die at the starting position.
The next <SPAN CLASS="MATH"><I>R</I></SPAN> lines contain <SPAN CLASS="MATH"><I>C</I></SPAN> integers each,
again delimited by single spaces. This <!-- MATH
 $R \times C$
 -->
<SPAN CLASS="MATH"><I>R</I>&#215;<I>C</I></SPAN> array of integers defines the maze.
A value of zero indicates an empty
location in the maze (such as the two empty squares in the center column of the
maze in Figure 3), and a value of `<TT>-1</TT>'
indicates a wild square. This input sequence is repeated for each maze in the input.
An input line containing only the
word `<TT>END</TT>' (without the quotes) as the name of the maze marks the end of the input.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The output should contain the name of each maze followed by its solution or the
string `<TT>No Solution Possible</TT>' (without
the quotes). All lines in the output file except for the maze names should be
indented exactly two spaces. Maze names
should start in the leftmost column. Solutions should be output as a
comma-delimited sequence of the consecutive
positions traversed in the solution, starting and ending with the same
square (the starting square as specified in the input).
Positions should be specified as ordered pairs enclosed in parentheses.
The solution should list 9 positions per line (with
the exception of the last line of the solution for which there may not
be a full 9 positions to list), and no spaces should be
present within or between positions.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
DICEMAZE1
3 3 1 2 5 1
-1 2 4
5 5 6
6 -1 -1
DICEMAZE2
4 7 2 6 3 6
6 4 6 0 2 6 4
1 2 -1 5 3 6 1
5 3 4 5 6 4 2
4 1 2 0 3 -1 6
DICEMAZE3
3 3 1 1 2 4
2 2 3
4 5 6
-1 -1 -1
END
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
DICEMAZE1
  (1,2),(2,2),(2,3),(3,3),(3,2),(3,1),(2,1),(1,1),(1,2)
DICEMAZE2
  (2,6),(2,5),(2,4),(2,3),(2,2),(3,2),(4,2),(4,1),(3,1),
  (2,1),(2,2),(2,3),(2,4),(2,5),(1,5),(1,6),(1,7),(2,7),
  (3,7),(4,7),(4,6),(3,6),(2,6)
DICEMAZE3
  No Solution Possible
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
811||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>The Fortified Forest</TITLE>
<META NAME="description" CONTENT="The Fortified Forest">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
The Fortified Forest</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Once upon a time, in a faraway land, there lived a king. This king owned a
small collection of rare and valuable trees,
which had been gathered by his ancestors on their travels. To protect his trees
from thieves, the king ordered that a high
fence be built around them. His wizard was put in charge of the operation.

<P>

<P>
<BR>
Alas, the wizard quickly noticed that the only suitable material available to
build the fence was the wood from the trees
themselves. In other words, it was necessary to cut down some trees in
order to build a fence around the remaining trees.
Of course, to prevent his head from being chopped off, the wizard wanted to
minimize the value of the trees that had to
be cut. The wizard went to his tower and stayed there until he had found the
best possible solution to the problem. The
fence was then built and everyone lived happily ever after.

<P>

<P>
<BR>
You are to write a program that solves the problem the wizard faced.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input contains several test cases, each of which describes a hypothetical
forest. Each test case begins with a line
containing a single integer <SPAN CLASS="MATH"><I>n</I></SPAN>, <!-- MATH
 $2 \le n \le 15$
 -->
<SPAN CLASS="MATH">2<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/811img1.png" 
 ALT="$ \le$"><I>n</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/811img1.png" 
 ALT="$ \le$">15</SPAN>, the number of trees in the forest.
The trees are identified by consecutive integers
1 to <SPAN CLASS="MATH"><I>n</I></SPAN>. Each of the subsequent  lines contains 4 integers <!-- MATH
 $x_i, y_i, v_i, l_i$
 -->
<SPAN CLASS="MATH"><I>x</I><SUB>i</SUB>, <I>y</I><SUB>i</SUB>, <I>v</I><SUB>i</SUB>, <I>l</I><SUB>i</SUB></SPAN>
that describe a single tree. (<SPAN CLASS="MATH"><I>x</I><SUB>i</SUB>, <I>y</I><SUB>i</SUB></SPAN>) is the position of the
tree in the plane, <SPAN CLASS="MATH"><I>v</I><SUB>i</SUB></SPAN> is its value, and <SPAN CLASS="MATH"><I>l</I><SUB>i</SUB></SPAN> is the length of fence that
can be built using the wood of the tree. <SPAN CLASS="MATH"><I>v</I><SUB>i</SUB></SPAN> and <SPAN CLASS="MATH"><I>l</I><SUB>i</SUB></SPAN> are
between 0 and 10,000.

<P>
The input ends with an empty test case (<SPAN CLASS="MATH"><I>n</I> = 0</SPAN>).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, compute a subset of the trees such that, using the wood from that subset,
the remaining trees can be enclosed in a single fence. Find the subset with a minimum value.
If more than one such minimum-value subset exists, choose one with the smallest number of trees.
For simplicity, regard the trees as having zero diameter.

<P>
Display, as shown below, the test case numbers (1, 2, ...), the identity of each
tree to be cut, and the length of the excess
fencing (accurate to two fractional digits).

<P>
Display a blank line between test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
6
 0  0  8  3
 1  4  3  2
 2  1  7  1
 4  1  2  3
 3  5  4  6
 2  3  9  8
3
 3  0 10  2
 5  5 20 25
 7 -3 30 32
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Forest 1
Cut these trees: 2 4 5
Extra wood: 3.16

Forest 2
Cut these trees: 2
Extra wood: 15.00
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
812||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Trade on Verweggistan</TITLE>
<META NAME="description" CONTENT="Trade on Verweggistan">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Trade on Verweggistan</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Since the days of Peter Stuyvesant and Abel Tasman, Dutch merchants have been traveling all over the world to buy and
sell goods. Once there was some trade on Verweggistan, but it ended after a short time. After reading this story you will
understand why.

<P>
At that time Verweggistan was quite popular, because it was the only place in the world where people knew how to make
a `prul'. The end of the trade on Verweggistan meant the end of the trade in pruls (or `prullen', as the Dutch plural said),
and very few people nowadays know what a prul actually is.

<P>
Pruls were manufactured in workyards. Whenever a prul was finished it was packed in a box, which was then placed on
top of the pile of previously produced pruls. On the side of each box the price was written. The price depended on the
time it took to manufacture the prul. If all went well, a prul would cost one or two florins, but on a bad day the price
could easily rise to 15 florins or more. This had nothing to do with quality; all pruls had the same value.

<P>
In those days pruls sold for 10 florins each in Holland. Transportation costs were negligible since the pruls were taken as
extra on ships that would sail anyway. When a Dutch merchant went to Verweggistan, he had a clear purpose: buy pruls,
sell them in Holland, and maximize his profits. Unfortunately, the Verweggistan way of trading pruls made this more
complicated than one would think.

<P>
One would expect that merchants would simply buy the cheapest pruls, and the pruls that cost more than 10 florins would
remain unsold. Unfortunately, all workyards on Verweggistan sold their pruls in a particular order. The box on top of the
pile was sold first, then the second one from the top, and so on. So even if the fifth box from the top was the cheapest
one, a merchant would have to buy the other four boxes above to obtain it.

<P>

<P>
<BR>
As you can imagine, this made it quite difficult for the merchants to maximize their profits by buying the right set of
pruls. Not having computers to help with optimization, they quickly lost interest in trading pruls at all.

<P>
In this problem, you are given the description of several workyard piles. You have to calculate the maximum profit a
merchant can obtain by buying pruls from the piles according to the restrictions given above. In addition, you have to
determine the number of pruls he has to buy to achieve this profit.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input describes several test cases. The first line of input for each test case
contains a single integer <SPAN CLASS="MATH"><I>w</I></SPAN>, the number of
workyards in the test case (<!-- MATH
 $1 \le w \le 50$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/812img1.png" 
 ALT="$ \le$"><I>w</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/812img1.png" 
 ALT="$ \le$">50</SPAN>).

<P>
This is followed by <SPAN CLASS="MATH"><I>w</I></SPAN> lines, each describing a pile of pruls. The first number in
each line is the number <SPAN CLASS="MATH"><I>b</I></SPAN> of boxes in the
pile (<!-- MATH
 $0 \le b \le 20$
 -->
<SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/812img1.png" 
 ALT="$ \le$"><I>b</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/812img1.png" 
 ALT="$ \le$">20</SPAN>). Following it are <SPAN CLASS="MATH"><I>b</I></SPAN> positive integers, indicating the
prices (in florins) of the pruls in the stack, given from top to bottom.

<P>
The input is terminated by a description starting with <SPAN CLASS="MATH"><I>w</I> = 0</SPAN>. This description should
not be processed.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, print the case number (1, 2, ...). Then print two lines, the first containing the maximum profit the
merchant can achieve. The second line should specify the number of pruls the merchant has to buy to obtain this profit. If
this number is not uniquely determined, print the possible values in increasing order. If there are more than ten possible
values, print only the 10 smallest.

<P>
Display a blank line between test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1
6 12 3 10 7 16 5
2
5 7 3 11 9 10
9 1 2 3 4 10 16 10 4 16
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Workyards 1
Maximum profit is 8.
Number of pruls to buy: 4

Workyards 2
Maximum profit is 40.
Number of pruls to buy: 6 7 8 9 10 12 13
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
813||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Robot</TITLE>
<META NAME="description" CONTENT="Robot">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Robot</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A robot arm used in an automated factory consists of <SPAN CLASS="MATH"><I>N</I></SPAN> connected links: <SPAN CLASS="MATH"><I>link</I><SUB>1</SUB></SPAN>
 which is connected to <SPAN CLASS="MATH"><I>link</I><SUB>2</SUB></SPAN>, ..., and <!-- MATH
 $link_{N-1}$
 -->
<SPAN CLASS="MATH"><I>link</I><SUB>N - 1</SUB></SPAN>
which is connected to <SPAN CLASS="MATH"><I>link</I><SUB>N</SUB></SPAN>. Each link is a straight rod of a specified length,
<!-- MATH
 $len_1, len_2, \dots, len_N$
 -->
<SPAN CLASS="MATH"><I>len</I><SUB>1</SUB>, <I>len</I><SUB>2</SUB>,..., <I>len</I><SUB>N</SUB></SPAN>. Between each pair of
connected links is a servo, <SPAN CLASS="MATH"><I>servo</I><SUB>2</SUB></SPAN> (between <SPAN CLASS="MATH"><I>link</I><SUB>1</SUB></SPAN> and <SPAN CLASS="MATH"><I>link</I><SUB>2</SUB>), ...,
and <SPAN CLASS="MATH"><I>servo</I><SUB>N</SUB></SPAN> (between <!-- MATH
 $link_{N-1}$
 -->
<SPAN CLASS="MATH"><I>link</I><SUB>N - 1</SUB></SPAN> and <SPAN CLASS="MATH"><I>link</I><SUB>N</SUB></SPAN>) that can be
activated to adjust the angle between the connected links. <SPAN CLASS="MATH"><I>Link</I><SUB>1</SUB></SPAN> is also
connected by a servo, <SPAN CLASS="MATH"><I>servo</I><SUB>1</SUB></SPAN>, to the factory floor
(at the point <!-- MATH
 $x=0, y=0, z=0$
 -->
<SPAN CLASS="MATH"><I>x</I> = 0, <I>y</I> = 0, <I>z</I> = 0</SPAN> in a Cartesian coordinate system). At the free
(unconnected) end of the last link (<SPAN CLASS="MATH"><I>link</I><SUB>N</SUB></SPAN>) is a
``hand'' that can be used to grasp objects.

<P>

<P>
<BR>
In the initial setting of the robot arm, each servo is set to no rotation (0 degrees),
and the links in the robot arm coincide
with the <SPAN CLASS="MATH"><I>z</I></SPAN>-axis. The <SPAN CLASS="MATH"><I>xy</I></SPAN> plane is horizontal (the factory floor),
and the entire robot arm is initially pointing up, vertically.
From this initial setting, each servo can effect a rotation of up to 90 degrees
in either of two directions. <SPAN CLASS="MATH"><I>Servo</I><SUB>1</SUB></SPAN> moves the
entire robot arm in the <SPAN CLASS="MATH"><I>xz</I></SPAN> plane by rotation about the <SPAN CLASS="MATH"><I>y</I></SPAN>-axis. <SPAN CLASS="MATH"><I>Servo</I><SUB>2</SUB></SPAN>
moves the arm (except <SPAN CLASS="MATH"><I>link</I><SUB>1</SUB></SPAN>) in the (perhaps rotated)
<SPAN CLASS="MATH"><I>yz</I></SPAN> plane by rotation about the <SPAN CLASS="MATH"><I>x</I></SPAN>-axis. In a similar manner, each odd-numbered
servo can rotate the remaining part of the
arm in the (perhaps rotated) <SPAN CLASS="MATH"><I>xz</I></SPAN> plane, and each even-numbered servo can rotate
the remaining part of the arm in the
(perhaps rotated) <SPAN CLASS="MATH"><I>yz</I></SPAN> plane. In effect, the servos rotate the links about
the <SPAN CLASS="MATH"><I>y</I></SPAN> and <SPAN CLASS="MATH"><I>x</I></SPAN>-axes of coordinate systems fixed to the
end of each link. Counterclockwise rotations about a coordinate axis are produced
with positive rotation angles, if we are
looking along the positive half of the axis toward the coordinate origin.
The sample data has been carefully chosen to
illustrate the effects of these rotations.

<P>

<P>
<BR>
There are two restrictions on the final positioning of the robot's arm. No part
of the arm can be below the factory floor,
and the links in the robot's arm cannot intersect with each other
(except where they are connected by the servos).

<P>
You should check only the final position of the arm.

<P>

<P>
<BR>
Given the number of links in a robot's arm, their lengths, and the proposed settings of
the servos, first determine if the
proposed positioning of the arm is allowable. If the arm can be positioned as proposed,
then determine the coordinates of
the robot's hand, accurate to three fractional digits. Otherwise identify the first
(smallest numbered) servo that has an
inappropriate setting, and why that setting is inappropriate. Links are assumed to
intersect if they come within 0.001
length units of each other.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input data will contain multiple test cases. Each test case includes, in order,
the number of links, <SPAN CLASS="MATH"><I>N</I></SPAN>, their lengths, <!-- MATH
 $len_1, len_2, \dots, len_N$
 -->
<SPAN CLASS="MATH"><I>len</I><SUB>1</SUB>, <I>len</I><SUB>2</SUB>,..., <I>len</I><SUB>N</SUB></SPAN>, and the proposed
angles to which the servos (starting with <SPAN CLASS="MATH"><I>servo</I><SUB>1</SUB></SPAN>) are to be set. The lengths and servo
angles are real numbers, and the number of links is an integer. There will be no
more than 10 links in any robot arm. The
last test case is followed by a negative integer.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, display the test case number (starting with 1). Then, if the proposed
setting is allowable, display the
position of the robot's hand in the original (factory floor) coordinate system (with three
fractional digits). Otherwise
display the identity of the first servo with an inappropriate setting and why that setting
is inappropriate. An output format
similar to that shown below is acceptable.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2 25 15 0 90.0
1 1.0 45.0
2 1 1 0 45
4 1 2 3 4 90 0 0 0
3 1 1 1 0 90 90
2 1 1 45.0 45
4 1 1 1 2 0 90 0 90
8 10 1 1 1 1 1 1 2
   0 0 90 0 90 0 90 0
-1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case 1: robot's hand is at (0.000,-15.000,25.000)
Case 2: robot's hand is at (0.707,0.000,0.707)
Case 3: robot's hand is at (0.000,-0.707,1.707)
Case 4: robot's hand is at (10.000,0.000,0.000)
Case 5: robot's hand is at (1.000,-1.000,1.000)
Case 6: robot's hand is at (1.207,-0.707,1.207)
Case 7: servo 4 attempts to move arm below floor
Case 8: servo 8 causes link collision
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
814||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>The Letter Carrier's Rounds</TITLE>
<META NAME="description" CONTENT="The Letter Carrier's Rounds">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
The Letter Carrier's Rounds</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
For an electronic mail application you are to describe the SMTP-based communication
that takes place between pairs of
MTAs. The sender's User Agent gives a formatted message to the sending Message
Transfer Agent (MTA). The sending
MTA communicates with the receiving MTA using the Simple Mail Transfer Protocol (SMTP).
The receiving MTA
delivers mail to the receiver's User Agent. After a communication link is initialized,
the sending MTA transmits
command lines, one at a time, to the receiving MTA, which returns a three-digit coded
response after each command is
processed. The sender commands are shown below in the order sent for each message.
There is more than one RCPT TO
line when the same message is sent to several users at the same MTA. A message to
users at different MTAs requires separate SMTP sessions.

<P>
<PRE><TT>
<TT>HELO</TT> 		 <SPAN CLASS="MATH"><I>myname</I></SPAN> Identifies the sender to the receiver (yes, there is only one L) 
<BR><TT>MAIL</TT> 		 <TT>FROM:</TT><SPAN CLASS="MATH">&lt; <I>sender</I> &gt;</SPAN> Identifies the message sender 
<BR><TT>RCPT</TT> 		 <TT>TO:</TT><SPAN CLASS="MATH">&lt; <I>user</I> &gt;</SPAN> Identifies one recipient of the message 
<BR><TT>DATA</TT> 		 		 Followed by an arbitrary number of lines of text comprising the message 
<BR>
body, ending with a line containing a period in column one. 
<BR><TT>QUIT</TT> 		 		 Terminates the communication.
</TT></PRE>

<P>
The following response codes are sent by the receiving MTA:
<DL>
<DT><STRONG>221</STRONG></DT>
<DD>Closing connection (after QUIT)
</DD>
<DT><STRONG>250</STRONG></DT>
<DD>Action was okay (after MAIL FROM and RCPT TO specifying an acceptable user,
or completion of a message)
</DD>
<DT><STRONG>354</STRONG></DT>
<DD>Start sending mail (after DATA)
</DD>
<DT><STRONG>550</STRONG></DT>
<DD>Action not taken; no such user here (after RCPT TO with unknown user)
</DD>
</DL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input contains descriptions of MTAs followed by an arbitrary number of messages.
Each MTA description begins
with the MTA designation and its name (1 to 15 alphanumeric characters). Following
the MTA name is the number of
users that receive mail at that MTA and a list of the users (1 to 15 alphanumeric
characters each). The MTA description
is terminated by an asterisk in column 1. Each message begins with the sending
user's name and is followed by a list of
recipient identifiers. Each identifier has the form <EM>user@mtaname</EM>.
The message (each line containing no more than 72
characters) begins and terminates with an asterisk in column 1. A line with an
asterisk in column 1 instead of a sender
and recipient list indicates the end of the entire input.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each message, show the communication between the sending and receiving MTAs.
Every MTA mentioned in a
message is a valid MTA; however, message recipients may not exist at the
destination MTA. The receiving MTA rejects
mail for those users by responding to the RCPT TO command with the 550 code.
A rejection will not affect delivery to
authorized users at the same MTA. If there is not at least one authorized
recipient at a particular MTA, the DATA is not
sent. Only one SMTP session is used to send a message to users at a particular MTA.
For example, a message to 5 users
at the same MTA will have only one SMTP session. Also a message is addressed to
the same user only once. The order
in which receiving MTAs are contacted by the sender is the same as in the input file. As shown in the sample output, prefix the
communication with the communicating MTA names, and indent each non-empty communication line.

No innecessary spaces should be printed.
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
MTA London 4 Fiona Paul Heather Nevil
MTA SanFrancisco 3 Mario Luigi Shariff
MTA Paris 3 Jacque Suzanne Maurice
MTA HongKong 3 Chen Jeng Hee
MTA MexicoCity 4 Conrado Estella Eva Raul
MTA Cairo 3 Hamdy Tarik Misa
*
Hamdy@Cairo Conrado@MexicoCity Shariff@SanFrancisco Lisa@MexicoCity
*
Congratulations on your efforts !!
--Hamdy
*
Fiona@London Chen@HongKong Natasha@Paris
*
Thanks for the report!  --Fiona
*
*
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Connection between Cairo and MexicoCity
     HELO Cairo
     250
     MAIL FROM:&lt;Hamdy@Cairo&gt;
     250
     RCPT TO:&lt;Conrado@MexicoCity&gt;
     250
     RCPT TO:&lt;Lisa@MexicoCity&gt;
     550
     DATA
     354
     Congratulations on your efforts !!
     --Hamdy
     .
     250
     QUIT
     221
Connection between Cairo and SanFrancisco
     HELO Cairo
     250
     MAIL FROM:&lt;Hamdy@Cairo&gt;
     250
     RCPT TO:&lt;Shariff@SanFrancisco&gt;
     250
     DATA
     354
     Congratulations on your efforts !!
     --Hamdy
     .
     250
     QUIT
     221
Connection between London and HongKong
     HELO London
     250
     MAIL FROM:&lt;Fiona@London&gt;
     250
     RCPT TO:&lt;Chen@HongKong&gt;
     250
     DATA
     354
     Thanks for the report!  --Fiona
     .
     250
     QUIT
     221
Connection between London and Paris
     HELO London
     250
     MAIL FROM:&lt;Fiona@London&gt;
     250
     RCPT TO:&lt;Natasha@Paris&gt;
     550
     QUIT
     221
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
815||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Flooded!</TITLE>
<META NAME="description" CONTENT="Flooded!">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Flooded!</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
To enable homebuyers to estimate the cost of flood insurance, a real-estate firm
provides clients with the elevation of
each 10-meter by 10-meter square of land in regions where homes may be purchased.
Water from rain, melting snow,
and burst water mains will collect first in those squares with the lowest elevations,
since water from squares of higher
elevation will run downhill. For simplicity, we also assume that storm sewers enable
water from high-elevation squares
in valleys (completely enclosed by still higher elevation squares) to drain to lower
elevation squares, and that water will
not be absorbed by the land.

<P>

<P>
<BR>
From weather data archives, we know the typical volume of water that collects in a
region. As prospective homebuyers,
we wish to know the elevation of the water after it has collected in low-lying
squares, and also the percentage of the
region's area that is completely submerged (that is, the percentage of 10-meter
squares whose elevation is strictly less
than the water level). You are to write the program that provides these results.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of a sequence of region descriptions. Each begins with a pair
of integers, <SPAN CLASS="MATH"><I>m</I></SPAN> and <SPAN CLASS="MATH"><I>n</I></SPAN>, each less than 30,
giving the dimensions of the rectangular region in 10-meter units. Immediately
following are <SPAN CLASS="MATH"><I>m</I></SPAN> lines of <SPAN CLASS="MATH"><I>n</I></SPAN> integers giving
the elevations of the squares in row-major order. Elevations are given in meters,
with positive and negative numbers
representing elevations above and below sea level, respectively. The final value
in each region description is an integer
that indicates the number of cubic meters of water that will collect in the region.
A pair of zeroes follows the description
of the last region.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each region, display the region number (1, 2, ...), the water level (in meters
above or below sea level) and the
percentage of the region's area under water, each on a separate line. The water level
and percentage of the region's area
under water are to be displayed accurate to two fractional digits. Follow the output
for each region with a blank line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3 3
25 37 45
51 12 34
94 83 27
10000
0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Region 1
Water level is 46.67 meters.
66.67 percent of the region is under water.
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-25
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
816||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Abbott&#8217;s Revenge</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Abbott&#8217;s Revenge</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
The 1999 World Finals
Contest included a problem based on a &#8220;dice
maze.&#8221; At the time the problem was written, the judges were unable to
discover the original source of the dice maze concept. Shortly after
the contest, however, Mr. Robert Abbott, the creator of numerous mazes
and an author on the subject, contacted the contest judges and
identified himself as the originator of dice mazes. We regret that we
did not credit Mr. Abbott for his original concept in last year&#8217;s
problem statement. But we are happy to report that Mr. Abbott has
offered his expertise to this year&#8217;s contest with his original and
unpublished &#8220;walk-through arrow mazes.&#8221;</p>
<p>
As are most mazes, a
walk-through arrow maze is traversed by moving from intersection to
intersection until the goal intersection is reached. As each
intersection is approached from a given direction, a sign near the
entry to the intersection indicates in which directions the
intersection can be exited. These directions are always left, forward
or right, or any combination of these.</p>
<p>
Figure 1 illustrates a
walk-through arrow maze. The intersections are identified as &#8220;(row,
column)&#8221; pairs, with the upper left being (1,1). The &#8220;Entrance&#8221;
intersection for Figure 1 is (3,1), and the &#8220;Goal&#8221; intersection is
(3,3). You begin the maze by moving north from (3,1). As you walk from
(3,1) to (2,1), the sign at (2,1) indicates that as you approach (2,1)
from the south (traveling north) you may continue to go only forward.
Continuing forward takes you toward (1,1). The sign at (1,1) as you
approach from the south indicates that you may exit (1,1) only by
making a right. This turns you to the east now walking from (1,1)
toward (1,2). So far there have been no choices to be made. This is
also the case as you continue to move from (1,2) to (2,2) to (2,3) to
(1,3). Now, however, as you move west from (1,3) toward (1,2), you have
the option of continuing straight or turning left. Continuing straight
would take you on toward (1,1), while turning left would take you south
to (2,2). The actual (unique) solution to this maze is the following
sequence of intersections: (3,1) (2,1) (1,1) (1,2) (2,2) (2,3) (1,3)
(1,2) (1,1) (2,1) (2,2) (1,2) (1,3) (2,3) (3,3).</p>
<p>
You must write a program
to solve valid walk-through arrow mazes. Solving a maze means (if
possible) finding a route through the maze that leaves the Entrance in
the prescribed direction, and ends in the Goal. This route should not
be longer than necessary, of course. But if there are several solutions
which
are equally long, you can chose any of them.
</p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">
Input</a>&nbsp;</font>
</h2>
<p>
The input file will
consist of one or more arrow mazes. The first line of each maze
description contains the name of the maze, which is an alphanumeric
string of no more than 20 characters. The next line contains, in the
following order, the starting row, the starting column, the starting
direction, the goal row, and finally the goal column. All are delimited
by a single space. The maximum dimensions of a maze for this problem
are 9 by 9, so all row and column numbers are single digits from 1 to
9. The starting direction is one of the characters N, S, E or W,
indicating north, south, east and west, respectively.</p>
<p>
All remaining input
lines for a maze have this format: two integers, one or more groups of
characters, and a sentinel asterisk, again all delimited by a single
space. The integers represent the row and column, respectively, of a
maze intersection. Each character group represents a sign at that
intersection. The first character in the group is N, S, E or W to
indicate in what direction of travel the sign would be seen. For
example, S indicates that this is the sign that is seen when travelling
south. (This is the sign posted at the north entrance to the
intersection.) Following this first direction character are one to
three arrow characters. These can be L, F or R indicating left,
forward, and right, respectively.</p>
<p>
The list of
intersections is concluded by a line containing a single zero in the
first column. The next line of the input starts the next maze, and so
on. The end of input is the word END on a single line by itself.</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each maze, the
output file should contain a line with the name of the maze, followed
by one or more lines with either a solution to the maze or the phrase
&#8220;No Solution Possible&#8221;. Maze names should start in column 1, and all
other lines should start in column 3, i.e., indented two spaces.
Solutions should be output as a list of intersections in the format
&#8220;(R,C)&#8221; in the order they are visited from the start to the goal,
should be delimited by a single space, and all but the last line of the
solution should contain exactly 10 intersections.</p>
<p>
The first maze in the
following sample input is the maze in Figure 1.</p>
<br>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>SAMPLE<br>3 1 N 3 3<br>1 1 WL NR *<br>1 2 WLF NR ER *<br>1 3 NL ER *<br>2 1 SL WR NF *<br>2 2 SL WF ELF *<br>2 3 SFR EL *<br>0<br>NOSOLUTION<br>3 1 N 3 2<br>1 1 WL NR *<br>1 2 NL ER *<br>2 1 SL WR NFR *<br>2 2 SR EL *<br>0<br>END<br></pre>
      </td>
      <td valign="top">
      <pre>SAMPLE<br>  (3,1) (2,1) (1,1) (1,2) (2,2) (2,3) (1,3) (1,2) (1,1) (2,1)<br>  (2,2) (1,2) (1,3) (2,3) (3,3)<br>NOSOLUTION<br>  No Solution Possible<br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<br>
<img hspace="0" vspace="11" src="http://uva.onlinejudge.org/external/8/p816a.gif"  width="316" height="304"><br
 clear="YES">
<font face="arial" size="2"><b>Figure 1: An Example Walk-Through
Arrow Maze</b><br>
<br>
<br>
<img hspace="0" vspace="11" src="http://uva.onlinejudge.org/external/8/p816a.gif"  width="457" height="427"><br
 clear="YES">
</font><font face="arial" size="2"><b>Figure 2: Robert Abbott&#8217;s Atlanta
Maze</b><br>
<br>
<br>
<table border="0" width="80%" cellpadding="0" cellspacing="0">
  <tbody>
    <tr>
      <td>Robert Abbott&#8217;s
walk-through arrow mazes are actually intended for
large-scale construction, not paper. Although his mazes are
unpublished, some of them have actually been built. One of these is on
display at an Atlanta museum. Others have been constructed by the
American Maze Company over the past two summers. As their name suggests
these mazes are intended to be walked through.
      <p>For the adventurous, Figure 2 is a graphic of Robert Abbott&#8217;s
Atlanta maze. Solving it is
quite difficult, even when you have an overview of the entire maze.
Imagine trying to solve this by actually walking through the maze and
only seeing one sign at a time! Robert Abbott himself indicated that
the maze is too complex and most people give up before finishing. Among
the people that did not give up was Donald Knuth: it took him about
thirty minutes to solve the maze.</p>
      </td>
    </tr>
  </tbody>
</table>
</font>
<br>
<hr>ACM World Finals 2000, Problem A
</body>
</html>

______________________________________________________
817||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>According to Bartjens</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
According to Bartjens</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
The wide dissemination of calculators and computers has its
disadvantages. Even students in technical disciplines
tend to exhibit a surprising lack of calculating ability. Accustomed to
the use of calculators and computers, many of
them are unable to make calculations like 7 * 8 mentally or like 13 *
17 using pencil and paper. We all know, but
who cares?
</p>
<p>Professor Bartjens cares. Professor Bartjens is a bit old fashioned.
He
decided to give his students some training in
calculating without electronic equipment by creating a collection of
calculation problems, (like 2100 - 100 = ...). To
simplify grading the problems, he constructed them so that almost all
of them had 2000 as an answer. Not all of
them, of course. His students would be smart enough to recognize the
pattern, and fill in 2000 everywhere without
further thinking.
</p>
<p>
Unfortunately Professor Bartjens&#8217; printer driver turned out to be even
more old-fashioned than the professor himself,
and it could not interface with his new printer. Inspecting the printed
problems, he soon recognized the pattern: none
of the operations was transmitted to the printer. A problem like: <br>
2100-100= <br>
was printed as: <br>
2100100= <br>
Fortunately, all the digits and the equal sign were still printed.
</p>
<p>
To make this bad situation much worse, Professor Bartjens&#8217; source file
had disappeared. So Professor Bartjens has
another problem: what were his original problems? Given the fact that
the answer (most likely) should be 2000, the
line 2100100= could have been any one of the lines: <br>
</p>
<pre>2100-100=<br>2*100*10+0=<br>2*100*10-0=<br>2*10*0100=<br>2*-100*-10+0=<br></pre>
<p>
Professor Bartjens does remember a few things about how he wrote the
problems:<br>
</p>
<ul>
  <li>He is sure that whenever he wrote down a number (other than 0),
it
would not start with a zero. So
2*10*0100= could not have been one of his problems.</li>
  <li>He also knows he never wrote the number zero as anything but 0.
So he
would not have a problem like
2*1000+000=.</li>
  <li>He used only binary operators, not the unary minus or plus, so
2*-100*-10+0= was not an option either.</li>
  <li>He used the operators +, - and * only, avoiding the operator /
(after
all, they were first year students).</li>
  <li>He knew all problems followed the usual precedence and
associativity
rules.</li>
</ul>
You are to help Professor Bartjens recover his problem set by
writing a
program that when given a row of digits,
insert one or more of the operators +, - and * in such a way that the
value of the resulting expression equals 2000.
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
The input consists of one or more test cases. Each test case is a
single line containing n digits ('0'&#8211;'9'), 1 &#8804;n &#8804;9,
followed by an equal sign. There will not be any blanks embedded in the
input, but there may be some after the
equal sign.</p>
<p>
The last test case is followed by a line containing only the equal
sign. This line should not be processed.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each test case, print the word Problem, then the number of the
case, then all possible ways of inserting
operators in the row of digits such that the resulting expression has
the value 2000, subject to Professor Bartjens&#8217;
memory of how he wrote the problems. Use the format shown below. If
there is more than one possible problem,
write the problems in lexicographic order. Each possible problem
should be on a new line, indented 2 spaces. If there is no solution the
answer IMPOSSIBLE should be printed,
indented 2 spaces.</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>2100100=<br>77=<br>=<br></pre>
      </td>
      <td valign="top">
      <pre>Problem 1<br>  2*100*10+0=<br>  2*100*10-0=<br>  2100-100=<br>Problem 2<br>  IMPOSSIBLE<br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem B
<p align="center">Willem Bartjens (1569-1638) was the author of
Cijferinge, a much used Dutch textbook on arithmetic. The phrase
"...according to Bartjens" (uttered following a calculation) made his
name
immortal.</p>
</body>
</html>

______________________________________________________
818||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Cutting Chains</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Cutting Chains</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
What a find! Anna Locke has just bought several links of chain some of
which may be connected. They are made
from zorkium, a material that was frequently used to manufacture
jewelry in the last century, but is not used for that
purpose anymore. It has its very own shine, incomparable to gold or
silver, and impossible to describe to anyone
who has not seen it first hand.
</p>
<p>
Anna wants the pieces joined into a single end-to-end strand of chain.
She takes the links to a jeweler who tells her
that the cost of joining them depends on the number of chain links that
must be opened and closed. In order to
minimize the cost, she carefully calculates the minimum number of links
that have to be opened to rejoin all the
links into a single sequence. This turns out to be more difficult than
she at first thought. You must solve this
problem for her.
</p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
The input consists of descriptions of sets of chain links, one set per
line. Each set is a list of integers delimited by
one or more spaces. Every description starts with an integer n, which
is the number of chain links in the set, where
1 &#8804;n &#8804;15. We will label the links 1, 2,..., n. The integers following n
describe which links are connected to each
other. Every connection is specified by a pair of integers i,j where 1
&#8804;i,j &#8804;n and i &#8800;j, indicating that chain links i
and j are connected, i.e., one passes through the other. The
description for each set is terminated by the pair -1 -1,
which should not be processed.
</p>
<p>
The input is terminated by a description starting with n = 0. This
description should not be processed and will not
contain data for connected links.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each set of chain links in the input, output a single line which
reads</p>
<p>Set N: Minimum links to open is M</p>
<p>
where N is the set number and M is the minimal number of links that
have to be opened and closed such that all links
can be joined into one single chain.
</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>5 1 2 2 3 4 5 -1 -1<br>7 1 2 2 3 3 1 4 5 5 6 6 7 7 4 -1 -1<br>4 1 2 1 3 1 4 -1 -1<br>3 1 2 2 3 3 1 -1 -1<br>3 1 2 2 1 -1 -1<br>0<br></pre>
      </td>
      <td valign="top">
      <pre>Set 1: Minimum links to open is 1<br>Set 2: Minimum links to open is 2<br>Set 3: Minimum links to open is 1<br>Set 4: Minimum links to open is 1<br>Set 5: Minimum links to open is 1<br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem C
</body>
</html>

______________________________________________________
819||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Gifts Large and Small</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Gifts Large and Small</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
WrapIt.com specializes in wrapping gifts. Started several years ago as
a service offered to local department stores
and malls, today WrapIt serves customers world-wide and boasts that it
can package anything from half-carat
diamonds to whole apartment blocks.
</p>
<p>
WrapIt has found that some customers prefer their gifts to be wrapped
in the smallest possible packages, whereas
others prefer large packages that make their gifts seem larger than
they really are. The company needs a program
that computes the smallest and largest rectangular package into which a
gift can be ietightlylr wrapped. Since this is a
difficult problem, the company will initially settle for a
two-dimensional version of the program.
</p>
<p>
Each gift is approximated as a simple polygon, and all packages are
represented by rectangles. A gift is said to iofit
tightlyle in a package if the gift touches all four sides of the
package. The figure below shows how a triangular gift
might fit tightly in two packages of different sizes. For each gift,
your program must compute the areas of the
smallest and largest packages into which the gift can fit tightly.
</p>
<div style="text-align: center;"><img
 style="width: 311px; height: 113px;" alt="  src="http://uva.onlinejudge.org/external/8/p819a.jpg" >
</div>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
The input contains several gift descriptions. Each description begins
with a line containing an integer n
(3 &#8804;n &#8804;100), which is the number of vertices in the polygon that
represents the gift. The following n lines contain
pairs of integers that represent the coordinates of the polygon
vertices, in clockwise order. Each polygon will have a
non-zero area and will not intersect itself.
</p>
<p>
The input is terminated by a line containing the integer 0.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each gift, first print the number of the gift. Then on separate
lines, print the minimum and maximum areas of the
packages into which the gift fits tightly, using the format in the
sample output. Print a blank line after each test case.
The computed areas should be exact to three digits to the right of the
decimal point.
</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>3<br>-3 5<br>7 9<br>17 5<br>4<br>10 10<br>10 20<br>20 20<br>20 10<br>0<br></pre>
      </td>
      <td valign="top">
      <pre>Gift 1<br>Minimum area = 80.000<br>Maximum area = 200.000<br><br>Gift 2<br>Minimum area = 100.000<br>Maximum area = 200.000<br><br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem D
</body>
</html>

______________________________________________________
820||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Internet Bandwidth</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Internet Bandwidth</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
On the Internet, machines (nodes) are richly interconnected, and many
paths may exist between a given pair of
nodes. The total message-carrying capacity (bandwidth) between two
given nodes is the maximal amount of data per
unit time that can be transmitted from one node to the other. Using a
technique called packet switching, this data can
be transmitted along several paths at the same time.
</p>
For example, the following figure shows a network with four nodes
(shown as circles), with a total of five
connections among them. Every connection is labeled with a bandwidth
that represents its data-carrying capacity per
unit time.
<div style="text-align: center;"><img
 style="width: 419px; height: 279px;" alt="  src="http://uva.onlinejudge.org/external/8/p820a.jpg" ><br>
</div>
<p>
In our example, the bandwidth between node 1 and node 4 is 25, which
might be thought of as the sum of the
bandwidths 10 along the path 1-2-4, 10 along the path 1-3-4, and 5
along the path 1-2-3-4. No other combination of
paths between nodes 1 and 4 provides a larger bandwidth.
</p>
<p>
You must write a program that computes the bandwidth between two given
nodes in a network, given the individual
bandwidths of all the connections in the network. In this problem,
assume that the bandwidth of a connection is
always the same in both directions (which is not necessarily true in
the real world).
</p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
The input file contains descriptions of several networks. Every
description starts with a line containing a single
integer n (2 &#8804;n &#8804;100), which is the number of nodes in the network. The
nodes are numbered from 1 to n. The next
line contains three numbers s, t, and c. The numbers s and t are the
source and destination nodes, and the number c is
the total number of connections in the network. Following this are c
lines describing the connections. Each of these
lines contains three integers: the first two are the numbers of the
connected nodes, and the third number is the
bandwidth of the connection. The bandwidth is a non-negative number not
greater than 1000.
</p>
<p>
There might be more than one connection between a pair of nodes, but a
node cannot be connected to itself. All
connections are bi-directional, i.e. data can be transmitted in both
directions along a connection, but the sum of the
amount of data transmitted in both directions must be less than the
bandwidth.
</p>
<p>
A line containing the number 0 follows the last network description,
and terminates the input.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each network description, first print the number of the network.
Then print the total bandwidth between the
source node s and the destination node t, following the format of the
sample output. Print a blank line after each test
case.
</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>4<br>1 4 5<br>1 2 20<br>1 3 10<br>2 3 5<br>2 4 10<br>3 4 20<br>0<br></pre>
      </td>
      <td valign="top">
      <pre>Network 1<br>The bandwidth is 25.<br><br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem E
</body>
</html>

______________________________________________________
821||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Page Hopping</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Page Hopping</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
It was recently reported that, on the average, only 19 clicks are
necessary to move from any page on the World Wide
Web to any other page. That is, if the pages on the web are viewed as
nodes in a graph, then the average path length
between arbitrary pairs of nodes in the graph is 19.
</p>
<p>
Given a graph in which all nodes can be reached from any starting
point, your job is to find the average shortest path
length between arbitrary pairs of nodes. For example, consider the
following graph. Note that links are shown as
directed edges, since a link from page a to page b does not imply a
link from page b to page a.
</p>
<div style="text-align: center;"><img
 style="width: 486px; height: 183px;" alt="  src="http://uva.onlinejudge.org/external/8/p821a.jpg" ><br>
</div>
<p>
The length of the shortest path from node 1 to nodes 2, 3, and 4 is
1,1, and 2 respectively. From node 2 to nodes 1, 3
and 4, the shortest paths have lengths of 3, 2, and 1. From node 3 to
nodes 1, 2, and 4, the shortest paths have
lengths of 1, 2, and 3. Finally, from node 4 to nodes 1, 2, and 3 the
shortest paths have lengths of 2, 3, and 1. The
sum of these path lengths is 1 + 1 + 2 + 3 + 2 + 1 + 1 + 2 + 3 + 2 + 3
+ 1 = 22. Since there are 12 possible pairs of
nodes to consider, we obtain an average path length of 22/12, or 1.833
(accurate to three fractional digits).
</p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
The input data will contain multiple test cases. Each test case will
consist of an arbitrary number of pairs of integers,
a and b, each representing a link from a page numbered a to a page
numbered b. Page numbers will always be in the
range 1 to 100. The input for each test case will be terminated with a
pair of zeroes, which are not to be treated as
page numbers. An additional pair of zeroes will follow the last test
case, effectively representing a test case with no
links, which is not to be processed. The graph will not include
self-referential links (that is, there will be no direct
link from a node to itself), and at least one path will exist from each
node in the graph to every other node in the
graph.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each test case, determine the average shortest path length between
every pair of nodes, accurate to three
fractional digits. Display this length and the test case identifier
(they're numbered sequentially starting with 1) in a
form similar to that shown in the sample output below.
</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>1 2 2 4 1 3 3 1 4 3 0 0<br>1 2 1 4 4 2 2 7 7 1 0 0<br>0 0<br></pre>
      </td>
      <td valign="top">
      <pre>Case 1: average length between pages = 1.833 clicks<br>Case 2: average length between pages = 1.750 clicks<br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem F
</body>
</html>

______________________________________________________
822||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Queue and A</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Queue and A</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
The customer support group of Contest.com receives and responds to
requests for technical support via e-mail.
Requests may begin arriving when the office opens at 8:00 a.m. and all
requests must be serviced by the end of the
day.
</p>
<p>
As requests are received, they are classified according to a
predetermined list of topics. Each member of the support
staff has responsibility for one or more of these topics and each topic
has one or more support personnel assigned to
it. Because staff members have different levels of expertise, each
staff member has a prioritized list of topics that he
or she can handle. Staff personnel are not permitted to handle requests
outside their specified areas.
</p>
<p>
As staff members become available, they select from the pool of waiting
requests according to their priority list of
topics. All requests arriving at time t are available for allocation at
time t. If two staff members are simultaneously
available, scheduling preference is given to the one whose most recent
job was scheduled earliest. If there is still a
tie, scheduling preference is given to the person whose id number
appears earlier in the input list of staff people. At
the opening of business, all personnel are available to handle
requests.
</p>
<p>
You have been asked to perform a preliminary analysis of the technical
support environment based on a number of
different scenarios. For each scenario, information will be given about
the mix of requests and the division of labor
among the staff. For each topic, you will given the average number of
requests per day for that topic, the average
elapsed time before the first of these requests is received, the
average time between requests for this topic, and the
average time needed to service the request. All times are given in
minutes. You will also be given a list of support
personnel and, for each one, a list of the topics for which he or she
has responsibility. (Since data are based on
estimates, factors such as coffee breaks, lunch, computer failures,
etc., can be ignored.)
</p>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
Input consists of a number of scenarios. Each scenario begins with the
number of request topics, a positive integer
no larger than 20. This is followed by a description of each topic.
Each description consists of five integer values: a
unique topic identifier, the number of requests for that topic, the
elapsed time before the first request for that topic is
received, the time needed to service a request, and the time between
successive requests. All but the third of these
values are positive integers; the elapsed time until the first request
could be zero. Following this, the number of
personnel is given. This will be a positive integer not to exceed 5.
Finally, a description of each person is given in
the form of three or more positive integer values: a unique identifying
number for the person, the number of topics
covered by this person, and a list of the topic identifiers arranged
from highest priority to lowest priority for that
person. A zero follows the last scenario.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each scenario, the output consists of the scenario number followed
by the statement, "All requests are serviced
within m minutes.", where m is the number of minutes from the start of
the business day until the last request is
serviced.
</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>3<br>128 20 0 5 10<br>134 25 5 6 7<br>153 30 10 4 5<br>4<br>10 2 128 134<br>11 1 134<br>12 2 128 153<br>13 1 153<br>0<br></pre>
      </td>
      <td valign="top">
      <pre>Scenario 1: All requests are serviced within 195 minutes.<br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem G
</body>
</html>

______________________________________________________
823||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
  <title>Stopper Stumper</title>
</head>
<body>
<h1><br clear="all">
<center>
<table bgcolor="#0060f0">
  <tbody>
    <tr>
      <td><b><font size="5" color="#c0ffff">&nbsp;<a
 name="SECTION0001000000000000000000">
Stopper Stumper</a>&nbsp;</font></b></td>
    </tr>
  </tbody>
</table>
</center>
</h1>
<p>
Stephen Stepper's Supply Store sells stoppersrubber corks for sealing
jars, bottles, and other containers that have
round openings. A stopper is shaped like two concentric cylinders, each
of height 1.5 centimeters, glued together.
Figure 1 shows two stoppers of different sizes.
</p>
<div style="text-align: center;"><img
 style="width: 430px; height: 212px;" alt="  src="http://uva.onlinejudge.org/external/8/p823a.jpg" ><br>
</div>
<p>
When Stephen packages an order to be shipped by mail, he tries to use
space efficiently to conserve packing
material. Since stoppers are the smallest items in his store, he packs
them last, and finds that he must often pack
several stoppers into small triangular gaps at the top of the shipping
carton. Stoppers must inserted in one of the two
orientations shown in Figure 1. The triangular spaces are only 3 cm
deep, so stoppers cannot be placed on top of one
another; however, the large cylinder of one stopper is permitted to
overlap the large cylinder of another inverted
stopper as shown in Figures 1 and 2. Your job is to help Stephen decide
what collections of stoppers will fit into a
triangular space.
</p>
<p>
For instance, suppose a triangular space with side lengths 8, 7, and 10
were available, and we had to fit three
stoppers in it with inside/outside diameters of 2cm/3cm, 1.5cm/3cm, and
1cm/3cm. One way to pack them is as
shown in Figure 2. (The dotted circle indicates that the smaller
cylinder of one of the stoppers is underneath the
larger one.) The only packing Stephen will consider has the larger
cylinder of each stopper touching two sides of the
triangle, with no two larger cylinders touching the same pair of sides.
</p>
<div style="text-align: center;"><img
 style="width: 408px; height: 238px;" alt="  src="http://uva.onlinejudge.org/external/8/p823a.jpg" ><br>
</div>
<h2><font color="#0070e8"><a name="SECTION0001001000000000000000">Input</a>&nbsp;</font>
</h2>
<p>
The input consists of a sequence of triangle specifications and
descriptions of three stoppers for each triangle. Each
triangular space is specified by three positive integers representing
the lengths of the three sides; only valid triangles
will appear in the input. A pair of positive real numbers represents
each stopper. The first number in the pair
represents the diameter of the smaller cylinder, and the second
represents the diameter of the larger cylinder. The
final line of the input file contains zeros for all the data values.
</p>
<h2><font color="#0070e8"><a name="SECTION0001004000000000000000">
Output</a>&nbsp;</font>
</h2>
<p>
For each triangle, print a line identifying its sequence number in the
input data and a line indicating whether or not
the stoppers can be packed into the triangular space. Separate the
output for each triangle with a blank line. Do not
print anything for the final line of zeros in the input. Imitate the
sample output as closely as possible.
</p>
<br>
<table border="1" rules="all" cellpadding="9" cellspacing="0">
  <tbody>
    <tr>
      <th><font face="arial" size="4"><b>Sample Input</b></font></th>
      <th><font face="arial" size="4"><b>Output for the Sample Input</b></font></th>
    </tr>
    <tr>
      <td valign="top">
      <pre>6 6 6 0.5 1.0 0.3 2.0 0.4 1.0<br>10 10 10 2.0 3.0 1.0 2.0 1.5 3.5<br>20 6 20 3.0 4.5 0.5 1.0 4.0 5.0<br>8 7 10 2.0 3.0 1.5 3.0 1.0 3.0<br>8 7 10 2.0 3.0 2.5 3.0 2.0 3.0<br>0 0 0 0.0 0.0 0.0 0.0 0.0 0.0<br></pre>
      </td>
      <td valign="top">
      <pre>Triangle number 1:<br>All three stoppers will fit in the triangular space<br><br>Triangle number 2:<br>All three stoppers will fit in the triangular space<br><br>Triangle number 3:<br>Stoppers will not fit in the triangular space<br><br>Triangle number 4:<br>All three stoppers will fit in the triangular space<br><br>Triangle number 5:<br>Stoppers will not fit in the triangular space<br></pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>ACM World Finals 2000, Problem H
</body>
</html>

______________________________________________________
824||||||false||||||
<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Coast Tracker</TITLE>
<META NAME="description" CONTENT="Coast Tracker">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Coast Tracker</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
2222 AC. The Earth Space Agency (ESA)
is preparing a robot mission to Planet Atlantis, discovered just
one century ago. The planet was named upon the old legend of the
disappeared continent because its surface is almost entirely
occupied by an immense sea. There are no continents in that
planet, yet a significant part of its surface is covered by land:
millions of small, unexplored islands are known to exist all over
Atlantis.

<P>
One of the goals of the mission is to build a complete
map of the planets islands. As the visibility conditions are not
suitable for aerial observation, ESA decided to build a set of
rover robots specifically intended to make coast tracking by land.
The idea is to leave one of these robots at one point in the coast
of an island and let him autonomously discover the map of the
entire coast, then come back as the robot returns to the same
place and take it to the next island.

<P>
You are working with the
team that is programming the navigation software for these robots,
and some decisions were already taken: the surface will be
discretised into squared, equal-sized areas; for simplification
purposes, each area will be considered as being entirely covered
by land or water. Also, the robot will always start its job in a
square of the coast, with the sea at its right; therefore, the
coast will be tracked in a counter clockwise direction (see Figure
1).

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p824a.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p824a.jpg" 
 ALT="\epsfbox{p824a.eps}">
</DIV>

<P>
The robot will have a limited perception system that
will be able to determine the kind of surface of the 8 areas
neighbouring the one where the robot stands. Its movement
capabilities will also be limited: the robot will only have the
possibility of (i) rotating to one of 8 fixed directions (coded as
integers from 0 to 7, 0 being North - see Figure 2) and (ii)
moving to the neighbour position in front of him. Each time the
robot moves to a new position, the perception system gets a new
percept. There are no obstacles to worry about: God conveniently
arranged the islands to have smooth, sand coasts. There are lakes
(e.g., A, B, C, D and E in Figure 1), but the robot must not waste
time with them: the goal is to track the seacoast only.

<P>

<P>
<BR>
Given the current position and direction of the robot, and a
percept of the surrounding world, decide the direction of the next
move. Note that you are not being asked to program the whole
coasttracking software; you are just programming a part of it.
The direction must be computed in such a way that an iterative
call of the program, with percepts from an environment as the one
described, would allow the robot to track the coast.

<P>
Your program
must be able to process several scenarios. Each scenario comprises
the robots current position and direction, and a percept. Figure 3
illustrates three hypothetical scenarios and the intended result:
the direction of the next move.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p824b.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p824a.jpg" 
 ALT="\epsfbox{p824b.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file represents several scenarios. Input for each
scenario consists of 9 lines as follows:

<P>

<UL>
<LI>First line: <SPAN CLASS="MATH"><I>x</I>&nbsp;<I>y</I>&nbsp;<I>d</I></SPAN>, where <SPAN CLASS="MATH"><I>x</I></SPAN> and <SPAN CLASS="MATH"><I>y</I></SPAN> are the (always positive) coordinates
 of the robots current position, and <SPAN CLASS="MATH"><I>d</I></SPAN> is the
robots current direction, an integer such that <!-- MATH
 $0 \le d \le 7$
 -->
<SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p824a.jpg" 
 ALT="$ \le$"><I>d</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p824a.jpg" 
 ALT="$ \le$">7</SPAN> (see Figure 2);
</LI>
<LI>Next 8 lines: <!-- MATH
 $x_i \ y_i \ s_i$
 -->
<SPAN CLASS="MATH"><I>x</I><SUB>i</SUB>&nbsp;<I>y</I><SUB>i</SUB>&nbsp;<I>s</I><SUB>i</SUB></SPAN>, where <SPAN CLASS="MATH"><I>s</I><SUB>i</SUB></SPAN> is a number representing the surface
 type of the neighbouring position (<SPAN CLASS="MATH"><I>x</I><SUB>i</SUB>, <I>y</I><SUB>i</SUB></SPAN>);
land surface is represented by <TT>1</TT>, and water surface by <TT>0</TT>.
</LI>
</UL>

<P>
Successive values in a line are separated by one or more blanks. The
integer <TT>-1</TT> follows the data of the last scenario.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each given scenario, your program has to output the direction of
the next robot's movement. Output for successive
scenarios should be written in successive lines.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
22 25 2
22 26 0
21 26 1
21 25 1
21 24 1
22 24 1
23 24 1
23 25 1
23 26 0
21 26 1
21 27 1
20 27 1
20 26 1
20 25 0
21 25 1
22 25 1
22 26 0
22 27 0
21 27 0
21 28 0
20 28 1
20 27 1
20 26 1
21 26 1
22 26 0
22 27 0
22 28 0
-1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1
0
1
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Am&iacute;lcar Cardoso, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
825||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Walking on the Safe Side</TITLE>
<META NAME="description" CONTENT="Walking on the Safe Side">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Walking on the Safe Side</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Square City is a very easy place for people to walk around. The two-way
streets run North-South or East-West
dividing the city into regular blocks. Most street intersections are safe
for pedestrians to cross. In some of them,
however, crossing is not safe and pedestrians are forced to use the available
underground passages. Such intersections
are avoided by walkers. The entry to the city park is on the North-West
corner of town, whereas the railway station is
on the South-East corner.

<P>

<P>
<BR>
Suppose you want to go from the park to the railway station,
and do not want to walk more than the required number
of blocks. You also want to make your way avoiding the underground
passages, that would introduce extra delay.
Your task is to determine the number of different paths that you can
follow from the park to the station, satisfying both
requirements.

<P>
The example in the picture illustrates a city with 4 E-W
streets and 5 N-S streets. Three intersections
are marked as unsafe. The path from the park to the station is 3 + 4 = 7
blocks long and there are 4 such paths that
avoid the underground passages.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p825.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p825.jpg" 
 ALT="\epsfbox{p825.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The first line of the input contains the number of East-West streets <SPAN CLASS="MATH"><I>W</I></SPAN>
and the number of North-South streets <SPAN CLASS="MATH"><I>N</I></SPAN>. Each
one of the following <SPAN CLASS="MATH"><I>W</I></SPAN> lines starts with the number of an East-West
street, followed by zero or more numbers of the
North-South crossings which are unsafe. Streets are numbered from 1.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The number of different minimal paths from the park to the station
avoiding underground passages.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

4 5
1
2 2
3 3 5
4
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
4
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Cristina Ribeiro, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
826||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Symbolic Numerical System</TITLE>
<META NAME="description" CONTENT="Symbolic Numerical System">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Symbolic Numerical System</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Let <SPAN CLASS="MATH"><I>A</I></SPAN> be an alphabet defined by a list of <SPAN CLASS="MATH"><I>k</I></SPAN> different symbols,
<!-- MATH
 \begin{displaymath}
A = [s_0, \dots, s_k] \qquad (k \ge 3),
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>A</I> = [<I>s</I><SUB>0</SUB>,..., <I>s</I><SUB>k</SUB>]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(<I>k</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/826img1.png" 
 ALT="$\displaystyle \ge$">3),
</DIV><P></P>
and <SPAN CLASS="MATH"><I>p</I>(<SUP> . </SUP>)</SPAN> the function that associate to each symbol of the alphabet the
corresponding position in the list (first element
with position zero). The symbols in the alphabet will be called <EM>digits</EM>
and are assumed to be one character length. Fix
a digit <SPAN CLASS="MATH"><I>b</I></SPAN> of the alphabet, called the base, such that <!-- MATH
 $p(b) \ge 2$
 -->
<SPAN CLASS="MATH"><I>p</I>(<I>b</I>)<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/826img1.png" 
 ALT="$ \ge$">2</SPAN>. Then,
for any integer <SPAN CLASS="MATH"><I>N</I></SPAN> there exists a sequence of <SPAN CLASS="MATH"><I>r</I></SPAN> digits
<!-- MATH
 $d_0, \dots, d_{r-1}$
 -->
<SPAN CLASS="MATH"><I>d</I><SUB>0</SUB>,..., <I>d</I><SUB>r - 1</SUB></SPAN> (<SPAN CLASS="MATH"><I>r</I></SPAN> depending on <SPAN CLASS="MATH"><I>N</I></SPAN>) satisfying <!-- MATH
 $p(d_i) < p(b)$
 -->
<SPAN CLASS="MATH"><I>p</I>(<I>d</I><SUB>i</SUB>) &lt; <I>p</I>(<I>b</I>)</SPAN>
(<!-- MATH
 $i = 0, \dots, r-1$
 -->
<SPAN CLASS="MATH"><I>i</I> = 0,..., <I>r</I> - 1</SPAN>) and such that <SPAN CLASS="MATH"><I>N</I></SPAN> can be decomposed in
the following way:
<BR>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<!-- MATH
 \begin{eqnarray*}
N & = & p(d_0) \times [p(b)]^0 + p(d_1) \times [p(b)]^1
+ \dots   + p(d_{r-1}) \times  [p(b)]^{r-1} \\
 & = & p(d_0) + p(d_1) \times  p(b) + \dots   + p(d_{r-1}) \times [p(b)]^{r-1}.
\end{eqnarray*}
 -->
<TABLE CELLPADDING="0" ALIGN="CENTER" WIDTH="100%">
<TR VALIGN="MIDDLE"><TD NOWRAP ALIGN="RIGHT"><I>N</I></TD>
<TD WIDTH="10" ALIGN="CENTER" NOWRAP>=</TD>
<TD ALIGN="LEFT" NOWRAP><I>p</I>(<I>d</I><SUB>0</SUB>)&#215;[<I>p</I>(<I>b</I>)]<SUP>0</SUP> + <I>p</I>(<I>d</I><SUB>1</SUB>)&#215;[<I>p</I>(<I>b</I>)]<SUP>1</SUP> + ... + <I>p</I>(<I>d</I><SUB>r - 1</SUB>)&#215;[<I>p</I>(<I>b</I>)]<SUP>r - 1</SUP></TD>
<TD CLASS="eqno" WIDTH=10 ALIGN="RIGHT">
&nbsp;</TD></TR>
<TR VALIGN="MIDDLE"><TD NOWRAP ALIGN="RIGHT">&nbsp;</TD>
<TD WIDTH="10" ALIGN="CENTER" NOWRAP>=</TD>
<TD ALIGN="LEFT" NOWRAP><I>p</I>(<I>d</I><SUB>0</SUB>) + <I>p</I>(<I>d</I><SUB>1</SUB>)&#215;<I>p</I>(<I>b</I>) + ... + <I>p</I>(<I>d</I><SUB>r - 1</SUB>)&#215;[<I>p</I>(<I>b</I>)]<SUP>r - 1</SUP>.</TD>
<TD CLASS="eqno" WIDTH=10 ALIGN="RIGHT">
&nbsp;</TD></TR>
</TABLE></DIV>
<BR CLEAR="ALL"><P></P>

<P>
We say that <SPAN CLASS="MATH"><I>N</I></SPAN> is represented (under the alphabet <SPAN CLASS="MATH"><I>A</I></SPAN>) in base <SPAN CLASS="MATH"><I>b</I></SPAN> as
<!-- MATH
 \begin{displaymath}
(d_{r-1} \dots d_1 d_0)_b.
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
(<I>d</I><SUB>r - 1</SUB>...<I>d</I><SUB>1</SUB><I>d</I><SUB>0</SUB>)<SUB>b</SUB>.
</DIV><P></P>

<P>
For example, let <!-- MATH
 $A = [0,1,2,3,4,5,6,7]$
 -->
<SPAN CLASS="MATH"><I>A</I> = [0, 1, 2, 3, 4, 5, 6, 7]</SPAN>. As far as the decimal number 2548 is equal to
<BR>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<!-- MATH
 \begin{eqnarray*}
& & 0 + 0 \times 7 + 3 \times 7^2 + 0 \times 7^3 + 1 \times 7^4 \\
& = & p(0) + p(0) \times p(7) + p(3) \times [p(7)]^2 + p(0) \times [p(7)]^3
+ p(1) \times [p(7)]^4 ,
\end{eqnarray*}
 -->
<TABLE CELLPADDING="0" ALIGN="CENTER" WIDTH="100%">
<TR VALIGN="MIDDLE"><TD NOWRAP ALIGN="RIGHT">&nbsp;</TD>
<TD>&nbsp;</TD>
<TD ALIGN="LEFT" NOWRAP>0 + 0&#215;7 + 3&#215;7<SUP>2</SUP> + 0&#215;7<SUP>3</SUP> + 1&#215;7<SUP>4</SUP></TD>
<TD CLASS="eqno" WIDTH=10 ALIGN="RIGHT">
&nbsp;</TD></TR>
<TR VALIGN="MIDDLE"><TD NOWRAP ALIGN="RIGHT">&nbsp;</TD>
<TD WIDTH="10" ALIGN="CENTER" NOWRAP>=</TD>
<TD ALIGN="LEFT" NOWRAP><I>p</I>(0) + <I>p</I>(0)&#215;<I>p</I>(7) + <I>p</I>(3)&#215;[<I>p</I>(7)]<SUP>2</SUP> + <I>p</I>(0)&#215;[<I>p</I>(7)]<SUP>3</SUP> + <I>p</I>(1)&#215;[<I>p</I>(7)]<SUP>4</SUP>,</TD>
<TD CLASS="eqno" WIDTH=10 ALIGN="RIGHT">
&nbsp;</TD></TR>
</TABLE></DIV>
<BR CLEAR="ALL"><P></P>
it is represented in base 7 as
<!-- MATH
 \begin{displaymath}
(10300)_7
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
(10300)<SUB>7</SUB>
</DIV><P></P>

<P>
Another example: the usual binary system is obtained choosing <!-- MATH
 $A = [0,1,2]$
 -->
<SPAN CLASS="MATH"><I>A</I> = [0, 1, 2]</SPAN> and <SPAN CLASS="MATH"><I>b</I> = 2</SPAN>.

<P>

<P>
<BR>
Given an alphabet <SPAN CLASS="MATH"><I>A</I></SPAN>, not containing the symbol question mark (<TT>?</TT>),
and given (partial information about) three numbers
represented in an unknown base <SPAN CLASS="MATH"><I>b</I></SPAN>, write a program that determines,
if possible, the base <SPAN CLASS="MATH"><I>b</I></SPAN> for which the third number
is the sum of the first two. If there are several solutions, the
base <SPAN CLASS="MATH"><I>b</I></SPAN> with the smallest position <SPAN CLASS="MATH"><I>p</I>(<I>b</I>)</SPAN> must be presented.
Assume that the maximum length of the alphabet and of the numbers
is 70 characters.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input contains four lines terminated by newline character. The first
defines the alphabet <SPAN CLASS="MATH"><I>A</I></SPAN>; the others the three
numbers, possibly with some digits deleted (marked with the question
mark symbol). To ensure the uniqueness of the
output, it is assumed that for the same position the three numbers
have at most one digit deleted (at most one question
mark symbol for each position).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
In the output write four lines: the first with the desired base;
the others with the three numbers completely specified
(the question marks must be replaced with the appropriate digits).
If the sum is not possible, there must be no output.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

*!30zx9bdk
?z
b
!*?
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
d
bz
b
!*0
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Delfim Marado Torres, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
827||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Buddy Memory Allocator</TITLE>
<META NAME="description" CONTENT="Buddy Memory Allocator">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Buddy Memory Allocator</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Memory management, specially memory allocation to processes,
is a fundamental issue in operating systems. A fixed
partitioning scheme limits the number of active processes and
may use space inefficiently if there is a poor match
between available partition sizes and process sizes. A dynamic
partitioning scheme is more complex to maintain and
includes the overhead of compaction. An interesting compromise
is the buddy system.

<P>
In a buddy system, the entire memory space available for allocation
is initially treated as a single block whose size is
a power of 2. When the first request is made, if its size is greater
than half of the initial block then the entire block
is allocated. Otherwise, the block is split in two equal companion
buddies. If the size of the request is greater than
half of one of the buddies, then allocate one to it. Otherwise,
one of the buddies is split in half again. This method
continues until the smallest block greater than or equal to
the size of the request is found and allocated to it.

<P>
In this method, when a process terminates the buddy block
that was allocated to it is freed. Whenever possible, an
unnallocated buddy is merged with a companion buddy in
order to form a larger free block. Two blocks are said to be
companion buddies if they resulted from the split of the
same direct parent block.

<P>
The following figure illustrates the buddy system at work,
considering a 1024k (1-megabyte) initial block and the
process requests as shown at the left of the table.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p827.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p827.gif" 
 ALT="\epsfbox{p827.eps}">
</DIV>

<P>
Your task is to implement a buddy memory manager and simulate it at work.
You will be given the upper and lower
sizes admissible for blocks in the system and a list of requests.
A request is made for a process and it may either be for
a block of a certain size or just an indication of termination.
Requests should be attended in a firstcome firstserved
basis. After serving all requests, your program should display
the state of the buddy system at that point, indicating
which processes are in memory and which blocks are free.

<P>
Notice that, whenever there is a request that corresponds to a
block of size <SPAN CLASS="MATH"><I>s</I></SPAN>, your program should select the block of
that size that was most recently declared free. Furthermore,
when a block is split in two, the left-one (lower addresses)
should be selected before the right-one.

<P>
You can assume that the list of requests is such that all requests
can always be served. In other words, you can make
the following assumptions: no process will request more than
the available memory; processes are uniquely identified
while active; and no request for process termination is issued
before its corresponding request for memory allocation.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The first line of input consists of two numbers, <SPAN CLASS="MATH"><I>U</I></SPAN> and <SPAN CLASS="MATH"><I>L</I></SPAN>,
that determine the upper (<SPAN CLASS="MATH">2<SUP>U</SUP><I>k</I></SPAN>) and lower (<SPAN CLASS="MATH">2<SUP>L</SUP><I>k</I></SPAN>) block sizes
admissable. You can assume <SPAN CLASS="MATH"><I>U</I> &gt; <I>L</I> &gt; 0</SPAN>. The following input lines are
requests being made, one per line. A request is defined by two values,
<SPAN CLASS="MATH"><I>P</I></SPAN> and <SPAN CLASS="MATH"><I>S</I></SPAN>, where <SPAN CLASS="MATH"><I>P</I></SPAN> is a capital letter that identifies the
process associated with the request, and <SPAN CLASS="MATH"><I>S</I></SPAN> (<SPAN CLASS="MATH"><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p827.gif" 
 ALT="$ \geq$"> 0</SPAN>) is a number. If <SPAN CLASS="MATH"><I>S</I> &gt; 0</SPAN> then it is a memory block request; Otherwise (<SPAN CLASS="MATH"><I>S</I> = 0</SPAN>) it is a
request indicating that process <SPAN CLASS="MATH"><I>P</I></SPAN> has terminated.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
The output must list the state of the buddy immediatly after
having served the last request. This corresponds to listing
the processes still in memory, if any, and the free blocks
(holes) available. Processes and holes must be listed in a
left to right order as you traverse the buddy (i.e. from lower
addresses towards upper memory addresses). The output
format for processes is <SPAN CLASS="MATH"><I>P</I> : <I>S</I></SPAN>, <SPAN CLASS="MATH"><I>P</I></SPAN> is the process identifier and <SPAN CLASS="MATH"><I>S</I></SPAN>
its size, and for holes is <TT>Hole:</TT><SPAN CLASS="MATH"><I>S</I></SPAN> where <SPAN CLASS="MATH"><I>S</I></SPAN> is the size of
the free block.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

10 4
A 70
B 35
C 80
A 0
D 60
B 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Hole:128
Hole:64
D:60
C:80
Hole:128
Hole:512
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Fernando Silva, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
828||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Deciphering Messages</TITLE>
<META NAME="description" CONTENT="Deciphering Messages">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Deciphering Messages</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
The plaintext messages are written in the standard 26-letter
English alphabet, A-Z. The encryption is done with the
help of a cipher key. This cipher key is composed of an ordered
set <SPAN CLASS="MATH"><I>L</I></SPAN> of English alphabet letters, which is called the
alphabetical key, and an integer <SPAN CLASS="MATH"><I>N</I></SPAN> in the interval [1..25],
which is called the numerical key. Each word of <SPAN CLASS="MATH"><I>k</I></SPAN> characters
is encrypted into a word of length between <SPAN CLASS="MATH"><I>k</I></SPAN> and <SPAN CLASS="MATH"><I>k</I>*3</SPAN> characters.
The encryption rules are as follows:

<P>
<DL>
<DT><STRONG>Rule 1:</STRONG></DT>
<DD>Each word is encrypted separately; the space between
words is preserved. Each word is encrypted from the
leftmost to the rightmost letters.
</DD>
<DT><STRONG>Rule 2:</STRONG></DT>
<DD>A plaintext message letter <SPAN CLASS="MATH"><I>p</I></SPAN> that does not belong to <SPAN CLASS="MATH"><I>L</I></SPAN>
is enciphered as a ciphertext letter <!-- MATH
 $c = ciph(p)$
 -->
<SPAN CLASS="MATH"><I>c</I> = <I>ciph</I>(<I>p</I>)</SPAN> where
<SPAN CLASS="MATH"><I>ciph</I></SPAN> is a function defined below.
</DD>
<DT><STRONG>Rule 3:</STRONG></DT>
<DD>A plaintext message letter p that belongs to L is
enciphered as a string of three letters: the <SPAN CLASS="MATH"><I>m</I></SPAN>-th letter of <SPAN CLASS="MATH"><I>L</I></SPAN>,
followed by a ciphertext letter <!-- MATH
 $c = ciph(p)$
 -->
<SPAN CLASS="MATH"><I>c</I> = <I>ciph</I>(<I>p</I>)</SPAN>, followed by the
<SPAN CLASS="MATH">(<I>m</I> + 1)</SPAN>-th letter of <SPAN CLASS="MATH"><I>L</I></SPAN>. The value of <SPAN CLASS="MATH"><I>m</I></SPAN> is incremented
by one each time this rule is applied. Arithmetic is performed
as if <SPAN CLASS="MATH"><I>L</I></SPAN> were circular.
</DD>
</DL>

<P>
For each plaintext message the initial value for <SPAN CLASS="MATH"><I>m</I></SPAN> is one.

<P>
The function <SPAN CLASS="MATH"><I>ciph</I></SPAN> translates each letter to the letter <SPAN CLASS="MATH"><I>N</I></SPAN> letters
after it in the alphabet and arithmetic is performed as if
the alphabet were circular (for example, if <SPAN CLASS="MATH"><I>N</I></SPAN> is 2,
then <!-- MATH
 $ciph(A) = C, ciph(B) = D, \dots, ciph(X) = Z; ciph(Y ) =
A; ciph(Z) = B$
 -->
<SPAN CLASS="MATH"><I>ciph</I>(<I>A</I>) = <I>C</I>, <I>ciph</I>(<I>B</I>) = <I>D</I>,..., <I>ciph</I>(<I>X</I>) = <I>Z</I>;<I>ciph</I>(<I>Y</I>) = <I>A</I>;<I>ciph</I>(<I>Z</I>) = <I>B</I></SPAN>).

<P>

<P>
<BR>

<B>NOTE:</B> The keys used in the processes of ciphering and deciphering
are such that the ciphered text can always be
uniquely deciphered (that is, the keys do not contain images of
function <SPAN CLASS="MATH"><I>ciph</I></SPAN> for none of its elements).

<P>

<P>
<BR>
Your task is to write a program to decode messages encripted by
using the method just described.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
Input data file contains the alphabetical key in the first line,
the numerical key in the second line, the number of
messages that are to be deciphered in the third line, and a ciphered
text message in each of the remaining lines.
These text messages only contain uppercase letters in the standard 26-letter
English alphabet and, if it is the case,
also a space between words. These text messages supposedly result
from the encryption of several original plaintext
messages using the method described above with the cipher key given
in the first and second lines of the input file.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
For each of the input ciphered text messages, output of the original
plaintext message is required or an error message
(`<TT>error in encryption</TT>') in case the input text is not a correct
encryption of any plaintext message. The order
of the messages must be preserved.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

RSAEIO
2
5
RTSSKAEAGE
GRSCAV
RGSSCAV
RUSIQO
RUSSGAACEV JEGIITOOGR
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
RICE
error in encryption
EAT
error in encryption
SEAT HERE
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Isabel Nunes, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
829||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Almost Balanced Trees</TITLE>
<META NAME="description" CONTENT="Almost Balanced Trees">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Almost Balanced Trees</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
A tree is an <EM>almost well-balanced</EM> tree if at each node the depths
of the subtrees rooted at its children are the same or
differ at most by 1. The depth of a tree is 1 if the tree is a
single leaf, or 1 plus the maximum of the depths of subtrees
rooted at the children of its root.

<P>

<P>
<BR>
Write a program that, given two (non empty) trees A and B whose
nodes contain positive integers, checks that A is
almost wellbalanced and that B can be obtained from A by applying
<B>only once</B> one of the following operations:

<P>

<UL>
<LI>interchange the integers of two nodes;
</LI>
<LI>delete one leaf.
</LI>
</UL>

<P>
The following pictures illustrate each of these operations. In the
first one, the circled nodes have their integers
exchanged. In the second, the marked leaf is deleted. Note that
your program will apply only one of the operations
and only once.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p829a.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p829a.gif" 
 ALT="\epsfbox{p829a.eps}">
</DIV>

<P>

<P>
<BR>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p829b.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p829a.gif" 
 ALT="\epsfbox{p829b.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
Assume each tree is given as follows: the integer in its root,
the number of children of its root, and each subtree
rooted at them from left to right. Every node in A has a unique
integer (integers are not repeated) and the set of
integers appearing in nodes of B is contained in, or is equal
to the corresponding set of A.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
The output of the program should be a line (ended by newline and
having integers separated by a single space character)
with one of:

<UL>
<LI><TT>-1</TT>, if the given data does not correspond to the specification
 of the two trees as described above (i.e., your
program must check whether it is possible to build a tree from
the given numbers, and whether the conditions
on the integers are verified);
</LI>
<LI><TT>0</TT>, if first tree is not almost well-balanced;
</LI>
<LI>otherwise, <TT>1</TT> followed by either:

<UL>
<LI><TT>0</TT> if the second tree cannot be obtained from the first by
the method above; or,
</LI>
<LI><B>the two integers to be interchanged</B> if the first operation
above applies, written in increasing order; or,
</LI>
<LI><B>minus the integer of the leaf to be deleted</B>, if the second operation applies.
</LI>
</UL>
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

1 3 10 2 15 0 20 0 2 2 6 0 7 1 4 0 9 1 21 0
1 3 10 2 15 0 20 0 2 2 9 0 7 1 4 0 6 1 21 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1 6 9
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Filgueiras, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
830||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Shark</TITLE>
<META NAME="description" CONTENT="Shark">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Shark</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
After several attacks by sharks this summer, namely in Florida and
in Australia, but also in the Algarve, in southern Portugal, the
local beach guardians are worried. They got together and decided
to implement for the next beach season an automated shark
detection system. Its a simple idea. They will rent airtime in a
commercial satellite and take pictures of the seashore using
submarine vision mode. In this operating mode, cameras are able to
photograph underwater sea animals with incredible precision, even
if the waters are not very clear.

<P>

<P>
<BR>
The photos are transmitted by
radio to the central computer of the beach guardians association,
where they are analyzed. The main goal of such processing is to
detect sharks, in order to issue an immediate shark alarm to the
corresponding beach, if that is the case.

<P>

<P>
<BR>
Processing is rather
sophisticated, since not all sea animals are sharks: there are
small fish (sardines), slightly larger fish (mackerel, salmons),
large fish (groupers), sea mammals (dolphins, whales), reptiles
(turtles). When seen from afar (from the satellite, that is),
dolphins are similar to sharks, but the system must distinguish
them or we risk raising false alarms just because a group of
easygoing dolphins has approached the beach to play with the
tourists.

<P>

<P>
<BR>
Satellite photographs are digitally preprocessed and are
now represented by a grid. In each square in the grid there is
either a lower case letter (from `<TT>a</TT>' to `<TT>z</TT>') or there is nothing,
i.e., the square is empty. Each sea animal is represented by a set
of adjacent squares in the grid all bearing the same letter. Two
grid squares are adjacent if they have one side in common.

<P>

<P>
<BR>
All animals have a distinct rectangular shape, except sharks, as
explained below. Single square animals (i.e., animals which fill
one square only) are sardines. Two square animals (filling a 1 by
2 rectangle) are mackerels; longer animals with width 1 are
salmons. Square animals larger than sardines are turtles (there
can be 2 by 2, 3 by 3, etc., turtles). Groupers are rectangular
with width 2 and length greater than 2. Dolphins are rectangular
with width 3 and length greater than 3. Whales are rectangular
with width 4 and length greater than 4. Finally sharks are similar
to dolphins, having width 3, but their shape is not a rectangle.
As a matter of fact, the tail fin for dolphins is horizontal and
that is what gives dolphins a digitalized rectangular shape.
Sharks, on the other hand, have a vertical tail fin, which is
recognized by an extra square along the middle row of squares that
represent the body of the shark.

<P>

<P>
<BR>
All other shapes will have been
erased during preprocessing, which guarantees that no unknown
species can occur in the digitalized representation. As an
example, consider the following photograph, where we can observe
all the mentioned species.

<P>
<DIV ALIGN="CENTER">
<TABLE COLS=12 BORDER FRAME=BOX RULES=GROUPS>
<COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER>
<TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>
b </TD><TD></TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> c </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD></TD><TD></TD><TD></TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> a </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> a </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> c </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> a </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> j </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> k </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD></TR>
</TBODY><TBODY>
<TR><TD></TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> c </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> a </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> k </TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD></TR>
</TBODY><TBODY>
<TR><TD></TD><TD></TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> c </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> a </TD><TD></TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> y </TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD></TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> z </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD></TR>
</TBODY><TBODY>
<TR><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD></TR>
</TBODY><TBODY>
<TR><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> t </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> s </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> u </TD><TD></TD></TR>
</TBODY><TBODY>
<TR><TD></TD><TD></TD><TD></TD><TD></TD><TD></TD><TD></TD><TD></TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD></TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD></TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD></TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> f </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD></TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> h </TD><TD></TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> p </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> p </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> p </TD></TR>
</TBODY><TBODY>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> b </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> g </TD><TD></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> p </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> p </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> p </TD></TR>
</TBODY>
</TABLE>

</DIV>

<P>
On the upper left corner
we see 3 mackerels. More to the right there are 2 salmons (one
bigger than the other). Still more to the right, 6 beautiful
sardines swim merrily. On the upper right corner, a giant turtle
watches a ferocious shark, just below. There are 2 other smaller
sharks and a large dolphin in the center rows. On the lower left
corner a whale peacefully sits next to a second dolphin. On the
lower right corner, 3 groupers wonder what they are doing in this
crowded part of the ocean.

<P>

<P>
<BR>
Your task is to write a program
that processes a digitalized representation of a sea photograph in
the format explained above and outputs the number of sardines, the
number of mackerels, the number of salmons, the number of
groupers, the number of turtles, the number of dolphins, the
number of whales and the number of sharks present.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>
The first line of input contains two numbers, <SPAN CLASS="MATH"><I>L</I></SPAN> and <SPAN CLASS="MATH"><I>C</I></SPAN>, representing
the number of lines and the number of columns in
the grid, respectively. Each of the remaining <SPAN CLASS="MATH"><I>L</I></SPAN> lines contains
exactly <SPAN CLASS="MATH"><I>C</I></SPAN> characters, which are either lowercase letters or
points. These lines represent the grid. A letter means that an
animal or a part of an animal occupies the corresponding
square. Points indicate that the corresponding square is empty.

<P>
The maximum number of lines and number of columns
for the grid is 64.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
The output is just one line with 8 numbers: the number of sardines,
the number of mackerels, the number of salmons,
the number of groupers, the number of turtles, the number of dolphins,
the number of whales and the number of sharks,
as counted in the input. There is a single space between consecutive
numbers and nothing else on the line (other than
the end of line marker).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

16 12
b...c.fgh...
baabca.jkyyy
...bcak..yyy
....ca...yyy
zzzzzz...uuu
zzzzzz.s.uuu
zzzzzzsssuuu
.tttt.sssuuu
ttttt.sssuuu
.tttt.sss.u.
.........hh.
bbbb..fffhh.
bbbb..fffhh.
bbbbgggg.hh.
bbbbgggg.ppp
bbbbgggg.ppp
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
6 3 2 3 1 2 1 3
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Pedro Guerreiro, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
831||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Document Validator</TITLE>
<META NAME="description" CONTENT="Document Validator">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Document Validator</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Nowadays mark-up languages like <TT>LaTeX</TT>, <TT>HTML</TT>, <TT>SGML</TT>, and <TT>XML</TT> are widely
used to define, in a completely textual
mode, the structure of documents. Those languages are composed by tags,
or annotations, that are used to mark blocks
of text (their begin and end) in order:

<P>

<UL>
<LI>to specify the document structure - for instance, the <EM>front material</EM>
 like the <EM>title</EM>, the <EM>authors</EM>, the <EM>date</EM>, or a <EM>chapter</EM>,
with its <EM>sections</EM> and <EM>paragraphs</EM>;
</LI>
<LI>to give them some special interpretation, or a particular formatting
 information - for instance, to say that the
block designates a <EM>country</EM>, a <EM>profession</EM>, a <EM>king</EM>, or the block must
be printed out in <EM>italic</EM>, or <EM>boldface</EM>.
</LI>
</UL>

<P>
Tags are just words like all the others that belong to the original
plain text; so, it is necessary to use some lexical
convention to distinguish those special words (annotations). Also,
we need some convention to identify the beginning
and the end of the text block we want to annotate.

<P>
In the present
context, our mark-up language follows an approach
similar to the <TT>SGML</TT> based languages:

<P>

<UL>
<LI>special characters - square <code>[ ]</code> and curly  <code>{ }</code>
brackets - are used to identify the words that are tag names;
</LI>
<LI>the same tag name is used to setup block boundaries, and a lexical
 detail defines the opening and closing tag.
The convention is:
<code>[opening-tag[</code>, <code>]closing-tag]</code> and <code>{opening-closing-tag}</code>.
</LI>
</UL>

<P>
Paired tags are employed to define the document structure, while single
tags are used to give meaning or formatting
information. Tag names (one letter followed by zero or more letters or
digits) are free, i.e. not previously defined;
this means that the user of that mark-up language can choose the names
of the tags he will employ to annotate his
document. However, to be a <B>valid annotation</B> it must be in conformity
with the following rules:

<P>

<UL>
<LI>an <EM>opening-tag</EM> must always have a corresponding <EM>closing-tag</EM>;
</LI>
<LI>a <EM>closing-tag</EM> must always have a corresponding <EM>opening-tag</EM>;
</LI>
<LI>paired tags may be nested to any level, however the last opening-tag
 must be closed before any enclosing tag,
i.e. one external block can not be closed before an internal one;
</LI>
<LI>an <EM>opening-closing-tag</EM> can not have other tags inside; in that case,
 the corresponding block of text will appear
inside the curly brackets.
</LI>
</UL>

<P>
Given a structured document, supposed to be annotated accordingly to
the mark-up language above described, write
a program that validates it, that is that verifies if the tags are
properly used. If the document is valid (has no errors),
your program must identify all the different tag names used, separating
structural and semantic ones.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input is a plain text file with tags, following the above stated
conventions. Assume that lexical conventions
specified for the three tag types (<code>[opening-tag[</code>, <code>]closing-tag]</code> and
<code>{opening-closing-tag}</code>) are always complied.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
The output consists of:

<P>

<UL>
<LI>just 1 line with the word `<TT>ERROR</TT>' if one of the rules above is not
 observed, making the input an invalid annotated document;
</LI>
<LI>2 lists with the tag names found, without duplicates and in the order
 they appear in the document (from the beginning to the end), 1 word per line.
 The first list begins with the
heading line `<TT>STRUCTURAL TAGS</TT>', while
the second list will begin with the heading line `<TT>SEMANTIC TAGS</TT>.
Blank lines between those are not allowed.
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

[memo[
[de[ Comiss ao Cient fica do MIUP ]de]
[para[ Todos os Concorrentes ]para]
[data[{bold 2001.set.25}]data]
[mensagem[
[parag[Devem ter o m aximo cuidado na leitura dos enunciados.]parag]
[parag[Desejamos a todos {desejo Calma} e {desejo Boa Sorte}!]parag]
]mensagem]
]memo]
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
STRUCTURAL TAGS
memo
de
para
data
mensagem
parag
SEMANTIC TAGS
bold
desejo
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Pedro Henriques, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
832||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Financial Risk</TITLE>
<META NAME="description" CONTENT="Financial Risk">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Financial Risk</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
As a rule the ACME Corporation clients pay within 30 days from shipment.
Nevertheless, there is the risk that a client
may be unable to fulfill its responsibility. The ACME Corporation transfered
this risk to a financial insurance company
that covers the responsibility of each customer up to a certain debt ceiling,
depending on the customer financial record.

<P>
In order not to displease its clients the policy of the ACME Corporation is
to continue selling to a client after reaching
the debt ceiling imposed by the financial insurance company. In this case the
risk above the debt ceiling is assumed by
the ACME Corporation.

<P>
The CEO of the ACME Corporation has to decide if the client's debt ceiling
needs to be renegotiated with the financial
insurance company. For that she wants to know what percentage of the client's
debt is not being covered by the
insurance company in the present deal.

<P>
The ACME Financial Department came up with a formula to measure a client risk.
Consider the step function <SPAN CLASS="MATH"><I>D</I><SUB>c</SUB>(<I>t</I>)</SPAN>
- the debt of client <SPAN CLASS="MATH"><I>c</I></SPAN> at time <SPAN CLASS="MATH"><I>t</I></SPAN>, as exemplified bellow.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p832.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p832.png" 
 ALT="\epsfbox{p832.eps}">
</DIV>

<P>
The risk associated with a debt is the area defined by function and
the <SPAN CLASS="MATH"><I>x</I></SPAN> axis, i.e. the risk between time <SPAN CLASS="MATH"><I>t</I><SUB>0</SUB></SPAN> and <SPAN CLASS="MATH"><I>t</I><SUB>1</SUB></SPAN> the
integral <!-- MATH
 $\int ^{t_{1}}_{t_{0}}D_{c}(t)$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="27" HEIGHT="40" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p832.png" 
 ALT="$ \int^{t_{1}}_{t_{0}}$"><I>D</I><SUB>c</SUB>(<I>t</I>)</SPAN>.
Considering that each client <SPAN CLASS="MATH"><I>c</I></SPAN> has a debt ceiling <SPAN CLASS="MATH"><I>L</I><SUB>c</SUB></SPAN> the
uncovered risk is just the area above the
debt ceiling that can be defined as the integral
<!-- MATH
 \begin{displaymath}
\int ^{t_{1}}_{t_{0}}p(D_{c}(t)-L_{c})\qquad \qquad \mbox{where}
\qquad \qquad p(x)=\cases{x & if \quad $x \ge 0$ \cr 0 & if \quad $x < 0$ \cr}
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<IMG
 WIDTH="33" HEIGHT="57" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p832.png" 
 ALT="$\displaystyle \int^{t_{1}}_{t_{0}}$"><I>p</I>(<I>D</I><SUB>c</SUB>(<I>t</I>) - <I>L</I><SUB>c</SUB>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;where&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<I>p</I>(<I>x</I>) = <IMG
 WIDTH="130" HEIGHT="55" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p832.png" 
 ALT="$\displaystyle \cases{x &amp; if \quad $x \ge 0$ \cr 0 &amp; if \quad $x &lt; 0$ \cr}
$">
</DIV><P></P>

<P>
Thus, the percentage of uncovered risk for all clients is the quotient
of the sum of all uncovered risks by the sum of all
risks, as given by the following formula:
<!-- MATH
 \begin{displaymath}
\frac{\sum _{c}\: \int ^{t_{1}}_{t_{0}}\: p(D_{c}(t)-L_{c})}{\sum _{c}\:
\int ^{t_{1}}_{t_{0}}\: D_{c}(t)}
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<IMG
 WIDTH="171" HEIGHT="67" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p832.png" 
 ALT="$\displaystyle {\frac{\sum _{c}\: \int ^{t_{1}}_{t_{0}}\: p(D_{c}(t)-L_{c})}{\sum _{c}\:
\int ^{t_{1}}_{t_{0}}\: D_{c}(t)}}$">
</DIV><P></P>

<P>
Your task is to write a program to compute the percentage of uncovered
risk in the last fiscal year, using the formula
above and the data provided by a listing of the ACME's ERP.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The listing you will use as input starts with the number of clients with
sales in the last fiscal year. For each client the
first line has the debt limit and the number of sales. In the following
lines, one for each sale, there is the sale's value,
the day of the year of the invoice and the day of the year of the receipt.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
Your program must write the percentage of uncovered risk, truncated to 2
fractional digits. Note that the output must
include the percent sign (`<TT>%</TT>').

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

2
40000 3
35000 32 61
15000 45 72
40000 97 123
55000 4
12000 10 52
30000 32 64
33000 44 73
50000 62 94
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
11.85%
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Jose Paulo Leal, MIUP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
833||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Water Falls</TITLE>
<META NAME="description" CONTENT="Water Falls">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Water Falls</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Consider the set of line segments <SPAN CLASS="MATH"><I>P</I>1</SPAN>, <SPAN CLASS="MATH"><I>P</I>2</SPAN> and <SPAN CLASS="MATH"><I>P</I>3</SPAN> of figure 1,
representing the side view of a set of planes. What happens if
some water falls (in the vertical direction and ignoring
horizontal deviations created by kinetics) from source point <SPAN CLASS="MATH"><I>Sa</I></SPAN>?
It flows over the plane <SPAN CLASS="MATH"><I>P</I>3</SPAN>, to <SPAN CLASS="MATH"><I>P</I>1</SPAN>, finally falling on the ground
at the point <SPAN CLASS="MATH"><I>Ga</I></SPAN>. It is easy to see that, if the water is falling
from source point <SPAN CLASS="MATH"><I>Sb</I></SPAN>, then it hits the ground at the point <SPAN CLASS="MATH"><I>Gb</I></SPAN>.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p833a.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p833a.gif" 
 ALT="\epsfbox{p833a.eps}">
</DIV>

<P>
Given a list of lines segments and a list of source points, the
proposed problem is to determine the corresponding falling points
on the ground. To simplify the problem, it is assumed that neither
horizontal lines nor crossing lines are given. Also no
coincidences exist in the vertical projection of all points (the x
coordinates of the end points and of the source points are all
different).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input is a text file, containing several lines as follows.

<P>
The
first line of the input contains the number <SPAN CLASS="MATH"><I>NP</I></SPAN> (integer format) of
line segments. It is followed by <SPAN CLASS="MATH"><I>NP</I></SPAN> lines containing, each one,
the coordinates of the two end points of a segment, in the
sequence <!-- MATH
 $x_1 \ y_1 \ x_2 \ y_2$
 -->
<SPAN CLASS="MATH"><I>x</I><SUB>1</SUB>&nbsp;<I>y</I><SUB>1</SUB>&nbsp;<I>x</I><SUB>2</SUB>&nbsp;<I>y</I><SUB>2</SUB></SPAN>, separated by single spaces. No order is
supposed, for this case, between point 1 and point 2 and numbers
are written in the integer format.

<P>
The next line is the number <SPAN CLASS="MATH"><I>NS</I></SPAN>
(integer format) of source points. It is followed by <SPAN CLASS="MATH"><I>NS</I></SPAN> lines
containing, each one, a pair of integer values <SPAN CLASS="MATH"><I>x</I>&nbsp;<I>y</I></SPAN>, separated by a
single space, which are the coordinates of the corresponding
source point.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
<SPAN CLASS="MATH"><I>NS</I></SPAN> lines of text containing, each one, the coordinate <SPAN CLASS="MATH"><I>x</I></SPAN> (integer
format) of the corresponding falling point <SPAN CLASS="MATH"><I>G</I></SPAN>. The output values
must keep the input order.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

4
14 7 3 4
11 13 16 11
1 10 6 7
2 1 4 3
3
10 4
14 14
2 13
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
10
16
2
</PRE>

<P>

<P><P>
<BR>

<B>Note:</B> The picture below corresponds to the sample input.
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p833b.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p833a.gif" 
 ALT="\epsfbox{p833b.eps}">
</DIV>

<P>


<P>
<BR><HR>
<ADDRESS>
A. Augusto Sousa, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
834||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Continued Fractions</TITLE>
<META NAME="description" CONTENT="Continued Fractions">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Continued Fractions</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Let <!-- MATH
 $b_0, b_1, b_2 , \dots, b_n$
 -->
<SPAN CLASS="MATH"><I>b</I><SUB>0</SUB>, <I>b</I><SUB>1</SUB>, <I>b</I><SUB>2</SUB>,..., <I>b</I><SUB>n</SUB></SPAN> be integers with <SPAN CLASS="MATH"><I>b</I><SUB>k</SUB> &gt; 0</SPAN> for <SPAN CLASS="MATH"><I>k</I> &gt; 0</SPAN>. The <EM>continued fraction</EM> of order <SPAN CLASS="MATH"><I>n</I></SPAN> with coeficients
<!-- MATH
 $b_1, b_2, \dots, b_n$
 -->
<SPAN CLASS="MATH"><I>b</I><SUB>1</SUB>, <I>b</I><SUB>2</SUB>,..., <I>b</I><SUB>n</SUB></SPAN> and the initial term <SPAN CLASS="MATH"><I>b</I><SUB>0</SUB></SPAN> is defined by
the following expression
<!-- MATH
 \begin{displaymath}
b_0 + \frac{1}{b_1 + \frac{1}{b_{2 + \ldots + \frac{1}{b_n}}}}
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p834a.gif" 
 ALT="$\displaystyle {\frac{1}{b_1 + \frac{1}{b_{2 + \ldots + \frac{1}{b_n}}}}}$">
</DIV><P></P>
which can be abbreviated as <!-- MATH
 $[b_0; b_1, \dots, b_n]$
 -->
<SPAN CLASS="MATH">[<I>b</I><SUB>0</SUB>;<I>b</I><SUB>1</SUB>,..., <I>b</I><SUB>n</SUB>]</SPAN>.

<P>
An example of a continued fraction of order <SPAN CLASS="MATH"><I>n</I> = 3</SPAN> is <SPAN CLASS="MATH">[2;3, 1, 4]</SPAN>.
This is equivalent to
<!-- MATH
 \begin{displaymath}
1 + \frac{1}{3 + \frac{1}{1 + \frac{1}{4}}}= \frac{43}{19}
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p834a.gif" 
 ALT="$\displaystyle {\frac{1}{3 + \frac{1}{1 + \frac{1}{4}}}}$">
</DIV><P></P>

<P>
Write a program that determines the expansion of a given rational
number as a continued fraction. To ensure uniqueness, make
<SPAN CLASS="MATH"><I>b</I><SUB>n</SUB> &gt; 1</SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input consists of an undetermined number of rational numbers.
Each rational number is defined by two integers, numerator and
denominator.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each rational number given in the input, you should output the
corresponding continued fraction.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
43 19
1 2
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
[2;3,1,4]
[0;2]
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Fernando Silva, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
835||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Square of Primes</TITLE>
<META NAME="description" CONTENT="Square of Primes">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Square of Primes</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Figure 1 shows a square. Each row, each column and the two
diagonals can be read as a five digit prime number. Both diagonals
are read from left to right.

<P>
<DIV ALIGN="CENTER">
<TABLE COLS=5>
<COL ALIGN=CENTER><COL ALIGN=CENTER><COL ALIGN=CENTER><COL ALIGN=CENTER><COL ALIGN=CENTER>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>
1 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 1 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 5 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 1 </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 
3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 2 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 0 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 
3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 0 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 2 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 
1 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 4 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 0 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 
3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 3 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 1 </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> 1
</TD></TR>
</TABLE>

</DIV>
<P>
<DIV ALIGN="CENTER"></DIV>
<P>
<BR>
<DIV ALIGN="CENTER">Figure 1 - Example square of primes.

</DIV>

<P>
Using the data in the input file, write a program that constructs
such squares.

<P>

<UL>
<LI>The prime numbers must have the same digit sum (11
in the example).
</LI>
<LI>The digit in the top left-hand corner of the squares
is pre-determined (1 in the example).
</LI>
<LI>A prime number may be used more than once in the same
square.
</LI>
<LI>If there are several solutions, all must be present.
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input file contains two lines. The first line contains a
single integer which is the digit sum of the prime numbers. The
second contains the digit in the top left corner of the square.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
In the output, write five lines for each solution found, where
each line in turn consists of a five digit prime number. The
solutions must be in ascending order, separated by an empty line.
(the above example has three solutions)

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

11
1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
11351
14033
30323
53201
13313

11351
33203
30323
14033
33311

13313
13043
32303
50231
13331
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Gabriel David, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
836||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Largest Submatrix</TITLE>
<META NAME="description" CONTENT="Largest Submatrix">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Largest Submatrix</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Let <SPAN CLASS="MATH"><I>A</I></SPAN> be an <!-- MATH
 $N \times N$
 -->
<SPAN CLASS="MATH"><I>N</I>&#215;<I>N</I></SPAN> matrix of zeros and ones. A submatrix
<SPAN CLASS="MATH"><I>S</I></SPAN> of <SPAN CLASS="MATH"><I>A</I></SPAN> is any group of <EM>contiguous</EM> entries that forms a
square or a rectangle.

<P>
Write a program that determines the number of elements of the
largest submatrix of ones in <SPAN CLASS="MATH"><I>A</I></SPAN>. <EM>Largest</EM> here is measured
by area.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The matrix is given line by line. Each line consists of <TT>0</TT>'s
and <TT>1</TT>'s. The order of the matrix is also the number of lines
input and <!-- MATH
 $1 < N \le 25$
 -->
<SPAN CLASS="MATH">1 
<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/836img1.png" 
 ALT="$ \le$">
 <I>N</I>
<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/836img1.png" 
 ALT="$ \le$">
 25</SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The output is the number of elements of the largest submatrix
found.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

10111000
00010100
00111000
00111010
00111111
01011110
01011110
00011110
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
16
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Fernando Silva, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
837||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Light and Transparencies</TITLE>
<META NAME="description" CONTENT="Light and Transparencies">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Light and Transparencies</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
When light traverses a transparent film, some energy is absorbed
and the rest is transmitted to other side of the film. The
percentage of light that is transmitted may be defined as
Transparency Coefficient.

<P>
When several films are in the same direction of light, the
correspondent transparency coefficients are multiplied. The goal
of this problem is to determine the percentage of light that is
projected on the ground, after traversing a given set of films.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p837.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p837.gif" 
 ALT="\epsfbox{p837.eps}">
</DIV>
<P>
<DIV ALIGN="CENTER">Figure 1 Three films and correspondent Transparent Coeficients.

</DIV>

<P>

<P>
<BR>
Consider the set of lines segments in fig. 1. They represent
transparent films in the above conditions (transparency
coefficients are written in brackets). Also consider that light is
propagating in the vertical direction, from top to bottom.

<P>
Accordingly to the figure, the end points of the lines define a
set of projected segments onto the ground (ground is represented
by the <SPAN CLASS="MATH"><I>X</I></SPAN> axe). For each projected segment, it is possible
to evaluate the percentage of light that reaches the ground and,
for the entire set of segments, a list can be obtained:

<P>
<PRE>
-inf, 2.0 -&gt; 1.000
2.0, 4.0 -&gt; 0.900
4.0, 7.0 -&gt; 0.630
7.0, 9.0 -&gt; 0.504
9.0, 13.5 -&gt; 0.560
13.0, 17.0 -&gt; 0.800
17.0, +inf -&gt; 1.000
</PRE>

<P>
To simplify the problem, it is assumed that neither vertical lines
nor crossing lines are given. Also no coincidences exist in the
vertical projection of all given points (in other words, the
<SPAN CLASS="MATH"><I>X</I></SPAN> coordinates of the end points are all different
from each other). On the other hand, a coordinate may be any real
value from <SPAN CLASS="MATH">- <IMG
 WIDTH="22" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p837.gif" 
 ALT="$ \infty$"></SPAN> to <SPAN CLASS="MATH">+ <IMG
 WIDTH="22" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p837.gif" 
 ALT="$ \infty$"></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input is a text file containing several lines, as follows.

<P>
The first line of the input contains the number <SPAN CLASS="MATH"><I>NL</I></SPAN> (integer
format) of line segments. It is followed by <SPAN CLASS="MATH"><I>NL</I></SPAN> lines of
text defining, each one, a line segment.

<P>
Accordingly to the above
explanations, a line segment is defined by the coordinates of its
two end points <SPAN CLASS="MATH"><I>P</I>1</SPAN> and <SPAN CLASS="MATH"><I>P</I>2</SPAN> and the transparency
coefficient <SPAN CLASS="MATH"><I>r</I></SPAN>, in the sequence <!-- MATH
 $x1 \ y1 \ x2 \ y2 \ r$
 -->
<SPAN CLASS="MATH"><I>x</I>1&nbsp;<I>y</I>1&nbsp;<I>x</I>2&nbsp;<I>y</I>2&nbsp;<I>r</I></SPAN>,
separated by single spaces (all the five values are in the real
format). No order is considered for the two points
<SPAN CLASS="MATH"><I>P</I>1</SPAN> and <SPAN CLASS="MATH"><I>P</I>2</SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The first line of the output contains the number <SPAN CLASS="MATH"><I>NP</I></SPAN>
(integer format) of projected segments. It is followed by
<SPAN CLASS="MATH"><I>NP</I></SPAN> lines of text, defining, each one, a projected segment.
These lines must be sorted in ascending order of <SPAN CLASS="MATH"><I>X</I></SPAN> values.

<P>
A projected segment must be defined by its coordinates <SPAN CLASS="MATH"><I>X</I><SUB>1</SUB></SPAN> and
<SPAN CLASS="MATH"><I>X</I><SUB>2</SUB></SPAN>, followed by the evaluated percentage of light. All the
tree values must be in real format, rounded to 3 decimal digits
and separated by single spaces. Infinite values must be
represented by `<TT>-inf</TT>' or `<TT>+inf</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

3
2.0 2.0 9.0 2.0 0.9
13.5 2.0 4.0 8.5 0.7
17.0 10.0 7.0 8.5 0.8
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
7
-inf 2.000 1.000
2.000 4.000 0.900
4.000 7.000 0.630
7.000 9.000 0.504
9.000 13.500 0.560
13.500 17.000 0.800
17.000 +inf 1.000
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
A. Augusto Sousa, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
838||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Worm World</TITLE>
<META NAME="description" CONTENT="Worm World">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Worm World</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The WormWold puzzle was initially proposed by Cliff Pickover in
the Discover Magazine, issue of November 1994 (a visit to his home
page is highly recommended!). The WormWorld is a grid of numbers
and it is a tough place to live in. The worms that inhabit it are
all born with nasty allergies. The first time they come in contact
with a number, their immune systems are overstimulated; if they
are exposed to that number a second time, they die of anaphylactic
shock.

<P>
A worm can start crawling on any square in WormWorld, and it can
then move horizontally or vertically but not diagonally.  In this
scenario, what is the longest path a worm can take without dying?
An example is illustrated in the following figure.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p838.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p838.jpg" 
 ALT="\epsfbox{p838.eps}">
</DIV>

<P>
Write a program that determines the largest path a worm can take
for a given grid.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The first input line is the size <SPAN CLASS="MATH"><I>N</I></SPAN> of the grid (<!-- MATH
 $0
< N \le 12$
 -->
<SPAN CLASS="MATH">0 &lt; <I>N</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p838.jpg" 
 ALT="$ \le$">12</SPAN>). This is followed by <SPAN CLASS="MATH"><I>N</I></SPAN> input lines, each one with
<SPAN CLASS="MATH"><I>N</I></SPAN> positive integer values separated by blank spaces (as a
simplification, we will only use grid values less then 1000).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The output is the size (in terms of the number of squares) of the
largest path that a worm can take.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

3
1 2 1
2 3 4
3 2 1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
4
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Fernando Silva, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
839||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Not so Mobile</TITLE>
<META NAME="description" CONTENT="Not so Mobile">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Not so Mobile</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Before being an ubiquous communications gadget, a <EM>mobile</EM> was
just a structure made of strings and wires suspending colourfull
things. This kind of mobile is usually found hanging over cradles
of small babies.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p839a.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p839a.jpg" 
 ALT="\epsfbox{p839a.eps}">
</DIV>

<P>
The figure illustrates a simple mobile. It is just a wire,
suspended by a string, with an object on each side. It can also be
seen as a kind of lever with the fulcrum on the point where the
string ties the wire.  From the lever principle we know that to
balance a simple mobile the product of the weight of the objects
by their distance to the fulcrum must be equal. That is
<!-- MATH
 $W_l \times D_l = W_r \times D_r$
 -->
<SPAN CLASS="MATH"><I>W</I><SUB>l</SUB>&#215;<I>D</I><SUB>l</SUB> = <I>W</I><SUB>r</SUB>&#215;<I>D</I><SUB>r</SUB></SPAN>
where <SPAN CLASS="MATH"><I>D</I><SUB>l</SUB></SPAN> is the left distance, <SPAN CLASS="MATH"><I>D</I><SUB>r</SUB></SPAN> is the
right distance, <SPAN CLASS="MATH"><I>W</I><SUB>l</SUB></SPAN> is the left weight and <SPAN CLASS="MATH"><I>W</I><SUB>r</SUB></SPAN>
is the right weight.

<P>

<P>
<BR>
In a more complex mobile the object may be replaced by a
sub-mobile, as shown in the next figure. In this case it is not so
straightforward to check if the mobile is balanced so we need you
to write a program that, given a description of a mobile as input,
checks whether the mobile is in equilibrium or not.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p839b.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p839a.jpg" 
 ALT="\epsfbox{p839b.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input is composed of several lines, each containing 4 integers
separated by a single  space. The 4 integers represent the
distances of each object to the fulcrum and their  weights, in the
format: <!-- MATH
 $W_l \ D_l \ W_r \ D_r$
 -->
<SPAN CLASS="MATH"><I>W</I><SUB>l</SUB>&nbsp;<I>D</I><SUB>l</SUB>&nbsp;<I>W</I><SUB>r</SUB>&nbsp;<I>D</I><SUB>r</SUB></SPAN>

<P>
If <SPAN CLASS="MATH"><I>W</I><SUB>l</SUB></SPAN> or <SPAN CLASS="MATH"><I>W</I><SUB>r</SUB></SPAN> is zero then there is a sub-mobile hanging from
that end and the following lines define the the sub-mobile. In
this case we compute the weight of the sub-mobile as the sum of
weights of all its objects, disregarding the weight of the wires
and strings. If both <SPAN CLASS="MATH"><I>W</I><SUB>l</SUB></SPAN> and <SPAN CLASS="MATH"><I>W</I><SUB>r</SUB></SPAN> are zero then the following
lines define two sub-mobiles: first the left then the right one.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
Write `<TT>YES</TT>' if the mobile is in equilibrium, write `<TT>NO</TT>' otherwise.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

0 2 0 4
0 3 0 1
1 1 1 1
2 4 4 2
1 6 3 2
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
YES
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Jose Paulo Leal, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
840||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Deadlock Detection</TITLE>
<META NAME="description" CONTENT="Deadlock Detection">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Deadlock Detection</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
In Operating Systems a special resource-allocation graph algorithm
can be used to detect whether there is any deadlock in the system.
A resource-allocation graph is a directed graph consisting of two
different types of nodes <!-- MATH
 $P = P_1,P_2, \dots ,P_n$
 -->
<SPAN CLASS="MATH"><I>P</I> = <I>P</I><SUB>1</SUB>, <I>P</I><SUB>2</SUB>,..., <I>P</I><SUB>n</SUB></SPAN>, the set
consisting of all active processes in the system, and <!-- MATH
 $R =
R_1,R_2, \dots,R_m$
 -->
<SPAN CLASS="MATH"><I>R</I> = <I>R</I><SUB>1</SUB>, <I>R</I><SUB>2</SUB>,..., <I>R</I><SUB>m</SUB></SPAN>, the set consisting of all resource types in
the system.

<P>
A directed edge from process <SPAN CLASS="MATH"><I>P</I><SUB>i</SUB></SPAN> to resource
<SPAN CLASS="MATH"><I>R</I><SUB>j</SUB></SPAN> is denoted by
<!-- MATH
 $P_i \longrightarrow R_j$
 -->
<SPAN CLASS="MATH"><I>P</I><SUB>i</SUB> <IMG
 WIDTH="33" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/840img1.png" 
 ALT="$ \longrightarrow$"> <I>R</I><SUB>j</SUB></SPAN>
and means that process <SPAN CLASS="MATH"><I>P</I><SUB>i</SUB></SPAN> requested an
instance resource type <SPAN CLASS="MATH"><I>R</I><SUB>j</SUB></SPAN>, and is currently waiting for that
resource. A directed edge from resource type <SPAN CLASS="MATH"><I>R</I><SUB>j</SUB></SPAN>
to process <SPAN CLASS="MATH"><I>P</I><SUB>i</SUB></SPAN>, is
denoted by <!-- MATH
 $R_j \longrightarrow P_i$
 -->
<SPAN CLASS="MATH"><I>R</I><SUB>j</SUB> <IMG
 WIDTH="33" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/840img1.png" 
 ALT="$ \longrightarrow$"> <I>P</I><SUB>i</SUB></SPAN> and means that an instance of
resource type <SPAN CLASS="MATH"><I>R</I><SUB>j</SUB></SPAN> has been allocated to process <SPAN CLASS="MATH"><I>P</I><SUB>i</SUB></SPAN>.

<P>
The following figure illustrates a resource-allocation graph where
processes are denoted by circles and resources by squares. Notice
that if there is a circular wait among the processes, then it
implies that a deadlock has occurred.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p840.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/840img1.png" 
 ALT="\epsfbox{p840.eps}">
</DIV>

<P>
Given a resource allocation graph in which each resource type has
exactly one instance, your job is to determine whether there is a
deadlock in the system. In case a deadlock exists, you must also
show the sequence of processes and resources involved.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
We will assume that processes are named by capital letters and
resources by small letters, so we limit to 26 the number of
processes and/or resources. Therefore, the first line of input
consists of three numbers <SPAN CLASS="MATH"><I>N</I></SPAN>, <SPAN CLASS="MATH"><I>M</I></SPAN> and <SPAN CLASS="MATH"><I>E</I></SPAN>, respectively, the number of
processes, the number of resources and the number of edges. The
edges are given in the following lines as pairs of letters linked
by a `<TT>-</TT>' character. Edges are separated by spaces or newlines.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The output must be `<TT>NO</TT>' if no deadlock is detected. In case a
deadlock is detected, the output must be `<TT>YES</TT>' followed by the
sequence or sequences of circular waits detected, one per line. If
more then one sequence is found, they should all be output in
increasing order of their length.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

2 2 4
A-b B-a
a-A b-B
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
YES
A-b-B-a-A
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Fernando Silva, ACM-UP'2001
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
841||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Snake</TITLE>
<META NAME="description" CONTENT="Snake">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Snake</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Consider a snake moving around a labyrinth in which there are
obstacules and eggs. Starting from a given initial position, the goal
of the snake is to eat all existing eggs without going into the
obstacules or touching itself. Initially, the snake is small but its size
increases by one unit each time it eats an egg (obviously, it never
goes out of the labyrinth).

<P>
The snake can move in any direction (up, down, left and right), one
unit per move. A tentative move that takes the head of the snake into
one obstacule is not valid, hence it is not accomplished.

<P>

<P>
<BR>
Write a program that given a labyrinth, a set of obstacules and a set
of eggs, determines the smallest number of movements necessary for the
snake to eat all eggs, if such a solution exists. If there is no
solution then it outputs a no solution message.

<P>
Initially, the snake has size one (therefore occupies just one
labyrinth cell) and is positioned in cell <SPAN CLASS="MATH">(0, 0)</SPAN> (left upper corner of
the labyrinth) where it is guaranteed that there is no egg or
obstacule. Each time the snake eats an egg (i.e. moves for the first
time to a position with an egg in it) its size increases by one unit
and, as a result of the movement, its head occupies the cell where the
egg was located. The following figure illustrates such movement (a)
and the case in which the move is to an empty cell (b).

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p841.eps}$
 -->
<IMG
 SRC="http://uva.onlinejudge.org/external/8/p841.gif" 
 ALT="\epsfbox{p841.eps}">
</DIV>
<P>
<DIV ALIGN="CENTER">Figure 1: Snake movements

</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input includes the size of the labyrinth (max. 20), followed by a
description of the labyrinth itself. The labyrinth is given as a set
of strings, each representing a line of the labyrinth and composed by
a sequence of the following characters: `<TT>-</TT>', `<TT>x</TT>' and `<TT>o</TT>'. The `<TT>-</TT>' indicates an empty cell, `<TT>x</TT>' indicates an
obstacule and `<TT>o</TT>' indicates an egg.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The output should be the smallest number of movements made by the
snake to eat all eggs. If there is no solution, then the output should be
`<TT>NO</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1

4
---o
-x--
-x--
ox--
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
11
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Fernando Silva, ACM-UP'2000
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
842||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Crossword Puzzles</TITLE>
<META NAME="description" CONTENT="Crossword Puzzles">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Crossword Puzzles</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Almost everyone is familiar with crossword puzzles.  Here you have to
deal with a special kind of crossword puzzle that is adequate for an
automated solver. A description of the puzzle and a list of admissible
words (the dictionary) is given, and the goal is to find the number of
possible solutions, if any exists, for the puzzle using the given
dictionary.

<P>
The puzzle is represented as a grid of white and black squares. A
solution is a subset of dictionary words that fill all the sequences
of horizontal or vertical white squares in such a way that all the
horizontal and vertical crossings formed are still valid dictionary
words. One-letter sequences do not need to be in the dictionary.

<P>
An example of a crossword puzzle in which white and black squares are
respectively represented by the `<TT>.</TT>' and `<TT>#</TT>'
characters, a word dictionary and a solution for the puzzle is as
follows:
<PRE>
. . . . . . . . . .     aa ac al alao ali ap        v a r i e d a d e s
. . . . . # . . . .     atencao atlanta camilo      e p o c a # t u l e
. # . . . . . . # .     doar dr duo eam eis el      r # c a m i l o # n
. . . . # . . # . .     epoca et icar ileso is      d o a r # l a # s i
. . # # . . . # . .     la loto mal men             a a # # m e n # a l
. . # . . . . . # #     merito mi no                d r # r e s t o # #
. . . # . . . # . .     oaristo oo os pios          e i s # r o a # a p
. . # . . # # . . .     resto roa roca rt           i s # m i # # a l i
. . # . . . . . . .     sa senil si tule            r t # a t e n c a o
. . # . . . . # . .     variedades verdadeiro       o o # l o t o # o s
</PRE>

<P>

<P>
<BR>
Your task is to develop a program to solve the described crossword puzzles.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>
The input consists of a <!-- MATH
 $10\times10$
 -->
<SPAN CLASS="MATH">10&#215;10</SPAN> puzzle configuration and a word
dictionary. For the puzzle each input line is a sequence of
`<TT>.</TT>' and `<TT>#</TT>' characters. You may assume that the
given configuration is always correct.

<P>
The dictionary words start immediately after the last line of the
puzzle. Each word is a sequence of lower case letters, without accents
and separated by spaces. The dictionary terminates when the
end-of-file is reached from the standard input.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The program should output the number of solutions that the given crossword
puzzle accepts.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1

..........
.....#....
.#......#.
....#..#..
..##...#..
..#.....##
...#...#..
..#..##...
..#.......
..#....#..
aa ac al alao
ali ap atencao
atlanta camilo
doar dr duo eam
eis el epoca et
icar ileso is
la loto mal men
merito mi no
oaristo oo os pios
resto roa roca rt
sa senil si tule
variedades verdadeiro
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
Pedro Vasconcelos, ACM-UP'2000
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
843||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Crypt Kicker</TITLE>
<META NAME="description" CONTENT="Crypt Kicker">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Crypt Kicker</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A common but insecure method of encrypting text is to permute the letters
of the alphabet.  That is, in the text, each letter of the alphabet
is consistently replaced by some other letter.  So as to ensure that
the encryption is reversible, no two letters are replaced by the same letter.

<P>
Your task is to decrypt several encoded lines of text, assuming that each
line uses a different set of replacements, and that all words in the
decrypted text are from a dictionary of known words.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of a line containing an integer <SPAN CLASS="MATH"><I>n</I></SPAN>, followed by
<SPAN CLASS="MATH"><I>n</I></SPAN> lower case words, one per line, in alphabetical order.  These <SPAN CLASS="MATH"><I>n</I></SPAN> words
comprise the dictionary of words which may appear in the decrypted text.
Following the dictionary are several lines of input.  Each line is
encrypted as described above.

<P>
There are no more than 1000 words in the dictionary.  No word exceeds 16
letters.  The encrypted lines contain only lower case letters and spaces
and do not exceed 80 characters in length.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Decrypt each line and print it to
standard output.  If there is more than one solution, any will do.
If there is no solution, replace every letter of the alphabet by an
asterisk.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
6
and
dick
jane
puff
spot
yertle
bjvg xsb hxsn xsb qymm xsb rqat xsb pnetfn
xxxx yyy zzzz www yyyy aaa bbbb ccc dddddd
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
dick and jane and puff and spot and yertle
**** *** **** *** **** *** **** *** ******
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
844||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Pousse</TITLE>
<META NAME="description" CONTENT="Pousse">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Pousse</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Recently, the organizers of the International Conference on Functional
Programming had a programming contest for people to show that their language
was best. The contest main web page is at
<code>http://www.ai.mit.edu/extra/icfp-contest/</code>.
Each entrant had to write an implementation of the game ``pouse'', for which
the description went as follows:

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Description of the game</A>&nbsp;</FONT>
</H2>
The name of the game is ``pousse" (which is French for ``push").  It is a 2
person game, played on an <SPAN CLASS="MATH"><I>N</I></SPAN> by <SPAN CLASS="MATH"><I>N</I></SPAN> board (the original game was <!-- MATH
 $4 \times 4$
 -->
<SPAN CLASS="MATH">4&#215;4</SPAN> but
<!-- MATH
 $N \times N$
 -->
<SPAN CLASS="MATH"><I>N</I>&#215;<I>N</I></SPAN> is a simple generalisation to adjust the difficulty of the game,
and its implementation).  Initially the board is empty, and the
players take turns inserting one marker of their color (`<TT>X</TT>' or `<TT>O</TT>') on the
board.  The color `<TT>X</TT>' always goes first.  The columns and rows are
numbered from 1 to <SPAN CLASS="MATH"><I>N</I></SPAN>, starting from the top left, as in:

<P>
<PRE>
     1 2 3 4
    +-+-+-+-+
  1 | | | | |
    +-+-+-+-+
  2 | | | | |
    +-+-+-+-+
  3 | | | | |
    +-+-+-+-+
  4 | | | | |
    +-+-+-+-+
</PRE>

<P>
A marker can only be inserted on the board by sliding it onto a
particular row from the left or from the right, or onto a particular
column from the top or from the bottom.  So there are <SPAN CLASS="MATH">4*<I>N</I></SPAN> possible
``moves" (ways to insert a marker).  They will be named `<TT>L</TT><SPAN CLASS="MATH"><I>i</I></SPAN>', `<TT>R</TT><SPAN CLASS="MATH"><I>i</I></SPAN>',
`<TT>T</TT><SPAN CLASS="MATH"><I>i</I></SPAN>', `<TT>B</TT><SPAN CLASS="MATH"><I>i</I></SPAN>' respectively, where <SPAN CLASS="MATH"><I>i</I></SPAN> is the number of the row or column
where the insertion takes place.

<P>
When a marker is inserted, there may be a marker on the square where
the insertion takes place.  In this case, all markers on the insertion
row or column from the insertion square upto the first empty square
are moved one square further to make room for the inserted marker.
Note that the last marker of the row or column will be pushed off the
board (and must be removed from play) if there are no empty squares on
the insertion row or column.

<P>
A row or a column is a ``straight" of a given color, if it contains
<SPAN CLASS="MATH"><I>N</I></SPAN> markers of the given color.

<P>
The game ends when an insertion
creates a configuration with more straights of one color than
   straights of the other color; the player whose color is dominant
   (in number of straights) WINS.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P><P>
<BR>

<P>
The standard input of the program will contain a number <SPAN CLASS="MATH"><I>N</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/844img1.png" 
 ALT="$ \le$">100</SPAN> on the first line and
this will be followed by a sequence of moves (in the notation
previously described) with one move per line.  There are no
intervening spaces or empty lines.

<P>
The program can assume that all moves in the sequence are valid.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P><P>
<BR>

<P>
The organizers then want to play one submitted program against the
others to see which is best.  So they need to know when one program wins.

<P>
Your job is to write a program to determine when a game has been won.
The input to your program is the same as described above: an initial
number followed by a sequence of moves.  As soon as a move produces a
winning board position, your program should print
out whether `<TT>X WINS</TT>' or `<TT>O WINS</TT>', and exit.  If a line containing
`<TT>QUIT</TT>' is read before a winner is declared, your program should print
out `<TT>TIE GAME</TT>' and exit.  As a failsafe, the last line of every
input will be a `<TT>QUIT</TT>' line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2

4
L2
T2
L2
B2
R2
QUIT

4
L2
T2
L2
B2
R2
T1
L2
QUIT
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
TIE GAME

X WINS
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
845||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Gas Station Numbers</TITLE>
<META NAME="description" CONTENT="Gas Station Numbers">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Gas Station Numbers</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Many gas stations use plastic digits on an illuminated sign to indicate
prices.  When there is an insufficient quantity of a particular digit,
the attendant may substitute another one upside down.

<P>
The digit ``6" looks much like ``9" upside down.  The digits ``0", ``1"
and ``8" look
like themselves.  The digit ``2" looks a bit like a ``5" upside down (well, at
least enough so that gas stations use it).

<P>
Due to rapidly increasing prices, a certain gas station has used all
of its available digits to display the current price.  Fortunately,
this shortage of digits need not prevent the attendant from raising
prices.  She can simply rearrange the digits, possibly reversing
some of them as described above.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
Your job is to compute, given the current price of gas, the next highest
price that can be displayed using exactly the same digits.
The input consists of several lines, each containing between 2 and 30
digits (to account for future prices) and a decimal point immediately
before the last digit. There are no useless leading zeroes; that is,
there is a leading zero only if the price is less than 1.
You are to compute the next highest price that can be displayed using the same
digits and the same format rules.  An input line containing a decimal
point alone terminates the input.  If the price  cannot be raised,
print `<TT>The price cannot be raised.</TT>'

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
65.2
76.7
77.7
.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
65.5
77.6
The price cannot be raised.
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
846||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Steps</TITLE>
<META NAME="description" CONTENT="Steps">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Steps</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
One steps through integer points of the straight line.  The length of
        a step must be nonnegative and can be by one bigger than, equal to, or
        by one smaller than the length of the previous step.

<P>
What is the minimum number of steps in order to get from <SPAN CLASS="MATH"><I>x</I></SPAN> to <SPAN CLASS="MATH"><I>y</I></SPAN>?
        The length of the first and the last step must be 1.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
Input consists of a line containing n, the number of test cases.  For
each test case, a line follows with two integers:  <!-- MATH
 $0 \le x \le y < 2^{31}$
 -->
<SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/846img1.png" 
 ALT="$ \le$"><I>x</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/846img1.png" 
 ALT="$ \le$"><I>y</I> &lt; 2<SUP>31</SUP></SPAN>.
For each test case, print a line giving the minimum number of steps to
get from <SPAN CLASS="MATH"><I>x</I></SPAN> to <SPAN CLASS="MATH"><I>y</I></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3
45 48
45 49
45 50
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
3
3
4
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
847||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>A multiplication game</TITLE>
<META NAME="description" CONTENT="A multiplication game">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
A multiplication game</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Stan and Ollie play the game of multiplication by multiplying an
integer <SPAN CLASS="MATH"><I>p</I></SPAN> by one of the numbers 2 to 9.  Stan always starts
with <SPAN CLASS="MATH"><I>p</I> = 1</SPAN>, does his multiplication, then Ollie multiplies
the number, then Stan and so on.  Before a game starts, they draw an
integer <!-- MATH
 $1 < n < 4294967295$
 -->
<SPAN CLASS="MATH">1 &lt; <I>n</I> &lt; 4294967295</SPAN> and the winner is who first reaches
<SPAN CLASS="MATH"><I>p</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/847img1.png" 
 ALT="$ \ge$"><I>n</I></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input and Output</A>&nbsp;</FONT>
</H2>
Each line of input contains one integer number <SPAN CLASS="MATH"><I>n</I></SPAN>.  For each
line of input output one line either
<PRE>
Stan wins.
</PRE>
or
<PRE>
Ollie wins.
</PRE>
assuming that both of them play perfectly.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample input</A>&nbsp;</FONT>
</H2>
<PRE>
162
17
34012226
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Stan wins.
Ollie wins.
Stan wins.
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
848||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Fmt</TITLE>
<META NAME="description" CONTENT="Fmt">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Fmt</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The unix <EM>fmt</EM> program reads lines of text, combining and breaking lines
so as to create an output file with lines as close to without exceeding
72 characters long as possible.  The rules for combining and breaking
lines are as follows.

<P>

<UL>
<LI>A new line may be started anywhere there is a space in the input.
       If a new line is started, there will be no trailing blanks at the
       end of the previous line or at the beginning of the new line.

<P>
</LI>
<LI>A line break in the input may be eliminated in the output, provided
       it is not at the end of a blank or empty line and is not followed by a space or another line break.  If a line
       break is eliminated, it is replaced by a space.

<P>
</LI>
<LI>Spaces never appear at the end of a line.

<P>
</LI>
<LI>If a sequence of characters longer than 72 characters appears without
   a space or line break, it appears by itself on a line.
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
   Unix fmt

The unix fmt program reads lines of text, combining
and breaking lines so as to create an
output file with lines as close to without exceeding
72 characters long as possible.  The rules for combining and breaking
lines are as follows.

   1.  A new line may be started anywhere there is a space in the input.
If a new line is started, there will be no trailing blanks at the
end of the previous line or at the beginning of the new line.

   2.  A line break in the input may be eliminated in the output, provided
it is not followed by a space or another line break.  If a line
break is eliminated, it is replaced by a space.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
   Unix fmt

The unix fmt program reads lines of text, combining and breaking lines
so as to create an output file with lines as close to without exceeding
72 characters long as possible.  The rules for combining and breaking
lines are as follows.

   1.  A new line may be started anywhere there is a space in the input.
If a new line is started, there will be no trailing blanks at the end of
the previous line or at the beginning of the new line.

   2.  A line break in the input may be eliminated in the output,
provided it is not followed by a space or another line break.  If a line
break is eliminated, it is replaced by a space.
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
849||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Radar Tracking</TITLE>
<META NAME="description" CONTENT="Radar Tracking">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Radar Tracking</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A ground-to-air radar system uses an antenna that rotates in a horizontal
plane with a period of 2 seconds.  Whenever the antenna faces an object,
its distance from that antenna is measured and displayed on a circular
screen as a white dot.  The distance from the dot to the centre of the
screen is proportional to the horizontal distance from the antenna to
the object, and the angle of the line passing through the centre and
the dot represents the direction of the object from the antenna.  A dot
directly above the centre represents an object that is north of the
antenna; an object to the right of the centre represents an object to
the east, and so on.  The antenna rotates clockwise; that is, if it
points north at time <SPAN CLASS="MATH"><I>t</I> = 0.0</SPAN>, it points east at <SPAN CLASS="MATH"><I>t</I> = 0.5</SPAN>, south at <SPAN CLASS="MATH"><I>t</I> = 1.0</SPAN>,
west at <SPAN CLASS="MATH"><I>t</I> = 1.5</SPAN>, north at <SPAN CLASS="MATH"><I>t</I> = 2</SPAN>, and so on.  If the object is directly on top
of the radar antenna, it cannot be observed.

<P>
There are a number of objects in the sky.  Each is moving at a constant
velocity, and appears as a dot on the screen that appears in a different
position every time the antenna observes it.  Your task is to determine
where the dot will appear on the screen the next time the antenna observes
it, given the previous two observations.  If there are several possibilities,
you are to find them all.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of a number of lines, each with four real numbers:
<!-- MATH
 $a_1, d_1, a_2, d_2$
 -->
<SPAN CLASS="MATH"><I>a</I><SUB>1</SUB>, <I>d</I><SUB>1</SUB>, <I>a</I><SUB>2</SUB>, <I>d</I><SUB>2</SUB></SPAN>.  <SPAN CLASS="MATH"><I>a</I><SUB>1</SUB>, <I>d</I><SUB>1</SUB></SPAN> are the angle (in degrees)
and distance (in arbitrary distance units) for the first observation while
<SPAN CLASS="MATH"><I>a</I><SUB>2</SUB>, <I>d</I><SUB>2</SUB></SPAN> are the angle and distance for the second observation.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
The output consists of one line per line of input, containing all
posible solutions sorted by ascending angle value and then by descending distance value; each solution consists of two real
numbers (with two digits after the decimal place) indicating
<SPAN CLASS="MATH"><I>a</I><SUB>3</SUB>, <I>d</I><SUB>3</SUB></SPAN>, the angle and distance for the next observation.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
90.0 100.0 90.0 110.0
90.0 100.0 270.0 10.0
90.0 100.0 180.0 50.0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
90.00 120.00
270.00 230.00
199.93 64.96 223.39 130.49
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
850||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Crypt Kicker II</TITLE>
<META NAME="description" CONTENT="Crypt Kicker II">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Crypt Kicker II</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A common but insecure method of encrypting text is to permute the letters
of the alphabet.  That is, in the text, each letter of the alphabet
is consistently replaced by some other letter.  So as to ensure that
the encryption is reversible, no two letters are replaced by the same letter.

<P>
A common method of cryptanalysis is the known plaintext attack.  In
a known plaintext attack, the cryptanalist manages to have a known phrase
or sentence encrypted by the enemy, and by observing the encrypted text
then deduces the method of encoding.

<P>
Your task is to decrypt several encrypted lines of text, assuming that each
line uses the same set of replacements, and that one of the lines of
input is the encrypted form of the plaintext

<P>
<PRE>
the quick brown fox jumps over the lazy dog
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P><P>
<BR>

<P>
The input consists of several lines of input.  Each line is
encrypted as described above.
The encrypted lines contain only lower case letters and spaces
and do not exceed 80 characters in length.  There are at most
100 input lines.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P><P>
<BR>

<P>
Decrypt each line and print it to
standard output.  If there is more than one possible decryption 
(several lines can be decoded to the key sentence), 
use the first line found for decoding.  
<br><br>
If decryption is impossible, output a single line:
<PRE>
No solution.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

vtz ud xnm xugm itr pyy jttk gmv xt otgm xt xnm puk ti xnm fprxq
xnm ceuob lrtzv ita hegfd tsmr xnm ypwq ktj
frtjrpgguvj otvxmdxd prm iev prmvx xnmq
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
now is the time for all good men to come to the aid of the party
the quick brown fox jumps over the lazy dog
programming contests are fun arent they
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
851||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Maze</TITLE>
<META NAME="description" CONTENT="Maze II">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Maze</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
You have been blindfolded and deposited someplace in a maze.  You have no
idea where you are.  You do know, however, that the maze is laid out on a
grid, and that each grid location is either blocked or free.  In fact, you
have memorized a map of the maze.  Also, your magnetic personality allows
you to always sense which direction is north.

<P>
In this maze, you have four possible moves: north, south, east, and west.
Your task is to find the shortest sequence of moves that will guarantee your
escape, regardless of your initial placement in the maze.  You have ``escaped"
whenever you reach a square on an outside edge of the grid (and if you start
there, then you've already escaped).  Further moves are irrelevant once you
have escaped.  If you try to walk into a wall, you will simply stay in the
same spot.

<P>
You may assume that it is possible to escape from every unblocked position
in the maze.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P><P>
<BR>

<P>
Input consists of a positive integer <SPAN CLASS="MATH"><I>n</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/851img1.png" 
 ALT="$ \le$">8</SPAN>, followed by <SPAN CLASS="MATH"><I>n</I></SPAN>
lines giving the rows of an <SPAN CLASS="MATH"><I>n</I></SPAN> by <SPAN CLASS="MATH"><I>n</I></SPAN> grid.  This grid describes
the maze you are trapped in.  Written on the screen, north is up.  Blocked
locations are denoted by the character `<TT>O</TT>' (that's an uppercase `<TT>o</TT>'), while
unblocked locations are indicated by the character `<TT>.</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P><P>
<BR>

<P>
Output consists of a number of lines, each consisting of one of `<TT>north</TT>',
`<TT>south</TT>', `<TT>east</TT>', or `<TT>west</TT>', indicating the shortest sequence of moves that
guarantees escape for any possible unblocked starting position.

<P>
If there are multiple possible shortest sequences, any of them will do.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

4
OO.O
...O
OO..
O..O
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
east
north
</PRE>

<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2002-06-15
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
852||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1 align="left"><font color="#0000FF">Problem A</font></h1>

<h1 align="center"><font color="#0000FF">Deciding victory in Go</font></h1>

<p align="left">&nbsp;</p>

<p align="left">The history of Go stretches back some 3000 years
and the rules have remained essentially unchanged throughout this
very long period. The game probably originated in China or the
Himalayas. In the Far East, where it originated, Go enjoys great
popularity today and interest in the game is growing steadily in
Europe and America.&nbsp;</p>

<p>A game of Go starts with an empty square board and each player
has an unlimited supply of stones, one taking the black stones,
the other taking white. The basic object of the game is to use
one&#146;s stones to form territories by surrounding vacant areas
of the board. It is also possible to capture the opponent&#146;s
stones by completely surrounding them. The players take turns,
placing one of their stones on a vacant point at each turn, Black
playing first. Note that the stones are placed on the
intersections of the lines rather than in the squares (there are
no diagonal connections). Once played, stones are not moved
although they may be captured, in which case they are removed
from the board. At the end of the game (when both players pass)
the players count one point for each vacant point inside their
own territory and one point for every stone they have on the
board. The player with the larger total of points wins.</p>

<h2><font color="#0000FF"><b>Problem</b></font></h2>

<p>Given a certain Go board position; decide the number of points
of each player.</p>

<p>&nbsp;</p>

<div align="center">
<center>
<table border="0" cellpadding="10" cellspacing="10">
    <tr>
        <td><img src="http://uva.onlinejudge.org/external/8/p852.gif"  width="200" height="200"></td>
        <td width="400"><p><font color="#0000FF"><b>Example</b></font></p>
        <p>Black has surrounded 15 points of territory: 3 at the
        top of the board, 2 points just below, 9 in the lower
        right corner plus one point for the territory at
        intersection a. Adding the actual stones on board (24
        stones), Black has a total of 39 points.White&#146;s
        territory is 17 points: 11 on the left sector plus 6 on
        the right sector. With 24 stones on board, he has a total
        of 41 points. So, White wins the game by two
        points.Notice that intersection b does not belong to
        either player.</p>
        </td>
    </tr>
</table>
</center></div>

<p align="center">&nbsp;</p>

<h2><font color="#0000FF"><b>Input</b></font></h2>

<p>The input file will contain one line with one integer defining
the number of board positions. On the following lines the
positions are presented. Each position consists of nine lines of
nine characters: X for black stones, O for white stones and a
&#145;.&#146; (a dot) for empty intersections. There is no empty
line separating each problem set.&nbsp;</p>

<h2><font color="#0000FF"><b>Output</b></font></h2>

<p>Correct output consists of a set of lines (one for each
problem solution) where each line consists of: Black &lt;Black
points&gt; White &lt;White points&gt; newline.</p>

<h2><font color="#0000FF"><b>Sample Input</b></font></h2>

<blockquote>
    <p><font face="Courier New"><b>1<br>
    OX..XXO..<br>
    OXX.XOO..<br>
    OOXX.XO.O<br>
    .OOX.XOO.<br>
    ..OOXXXOO<br>
    ..OO.X.XO<br>
    ..OOXX.XX<br>
    ..OX.X...<br>
    ..OXX....&nbsp;</b><br>
    </font></p>
</blockquote>

<h2><font color="#0000FF"><b>Sample Output</b></font></h2>

<blockquote>
    <p>Black 39 White 41</p>
</blockquote>


<p>
<br><hr>
<address>

JoÃ£o Neto, MIUP'2002
</address>

</body>
</html>


______________________________________________________
853||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1 align="left"><font color="#0000FF">Problem B</font></h1>

<h1 align="center"><font color="#0000FF">DVD Subtitles</font></h1>

<p align="left">&nbsp;</p>

<p>One of the great things about movies on DVD is that you can
choose the language for the subtitles, in case you need them.</p>

<p>Let us consider that in the DVD the subtitles for a given
language come in a text file, one subtitle in each line. By
&quot;one subtitle&quot; we mean the short phrase that we see on
the screen at any given time, even if that phrase uses more than
one line on the screen. The subtitle files for all the available
languages have the same number of lines, although some lines can
be empty, for lack of an appropriate translation. There will be
an extra file indicating the exact times in which each subtitle
should be displayed on the screen, but we shall ignore it in this
problem.</p>

<p>Today, we want to explore the subtitle files in order to
automatically construct simple bilingual dictionaries. The idea
is quite simple. Take, for example, Portuguese and English
subtitles. Suppose a given word <i>p</i> appears in the
Portuguese file in lines <i>x</i><sub>1</sub>, <i>x</i><sub>2</sub>,
&#133;, <i>x</i><sub><i>n</i></sub>, with <i>n</i> &gt;= 2. Now
suppose a word <i>e</i> appears in exactly the same lines in the
English file. Then we can safely assume <i>e</i> is a legitimate
translation of <i>p</i>, and vice-versa. Here is an example.
First, a text in Portuguese:</p>

<p><font size="3" face="Courier New">Por favor, mostre-me o seu
bilhete.</font></p>

<p><font size="3" face="Courier New">Lamento, mas esqueci-me
dele.</font></p>

<p><font size="3" face="Courier New">Esqueceu-se do bilhete? Voce
deve ser maluco.</font></p>

<p><font size="3" face="Courier New">Eu nao sou maluco. A sua mae
e que e.</font></p>

<p>Note that we are not using diacritical marks in the Portuguese
text. Now, the equivalent text in English:</p>

<p><font size="3" face="Courier New">May I see your ticket,
please?</font></p>

<p><font size="3" face="Courier New">I am sorry, but I forgot it.</font></p>

<p><font size="3" face="Courier New">So, you forgot the ticket?
You must be crazy.</font></p>

<p><font size="3" face="Courier New">I am not crazy. Crazy is
your mother.</font></p>

<p>The words <font size="3" face="Courier New">bilhete</font> and
<font size="3" face="Courier New">ticket</font> appear in lines 1
and 3, in the Portuguese and English texts, respectively. We,
therefore, conclude that <font size="3" face="Courier New">bilhete</font>
is the Portuguese translation of <font size="3"
face="Courier New">ticket</font>. Likewise for <font size="3"
face="Courier New">maluco</font> and <font size="3"
face="Courier New">crazy</font> in lines 3 and 4, even though <font
size="3" face="Courier New">crazy</font> appears twice in line 4
and <font size="3" face="Courier New">maluco</font> only appears
once. The word <font size="3" face="Courier New">forgot</font>
appears in lines 2 and 3, but cannot be translated using this
method, as in the Portuguese text the corresponding words in
these lines, <font size="3" face="Courier New">esqueci-me</font>
and <font size="3" face="Courier New">esqueceu-se</font>, are
different. </p>

<p>More generally, we can <font size="3" face="Courier New">say</font>
that a word <i>w</i><sub>1</sub> in language <i>L</i><sub>1</sub>
translates to word <i>w</i><sub>2</sub> in language <i>L</i><sub>2</sub>
if the set of line numbers in which <i>w</i><sub>1</sub> occurs
is equal to the set of line numbers in which <i>w</i><sub>2</sub>
appears in their respective subtitle files. We consider only
words that occur at least twice, and words with at least three
characters. Note that several occurrences of the same word on a
given line are equivalent to a single occurrence.</p>

<p>There&#146;s an ambiguous case, however: two (or more) words
in the same language appearing on exactly the same lines in the
subtitle file. To remove this ambiguity, those words are to be
appended, separated by one space, in alphabetical order. See the
example below, in the input and output samples.</p>

<p>The result of processing is a sorted list of pairs of words,
as in a dictionary. The list is be sorted by the first word of
each pair and all words are in lowercase only.</p>

<h2><font color="#0000FF"><b>Problem</b></font></h2>

<p>Your task is to write a program that given two subtitle files
constructs a bilingual dictionary as explained above. To avoid
difficult cases caused by small words, your program should ignore
all input words with less than three characters.</p>

<h2><font color="#0000FF"><b>Input</b></font></h2>

<p>The first line of the input contains the number <i>T</i> of test cases,
followed by <i>T</i> input blocks.

<p>The first line of each input block contains the number of lines in
each language, 0 &lt; <i>N</i> &lt;= 1000. The following <i>N</i>
lines contain the subtitles in the first language. After that,
 <i>N</i> more lines contain the subtitles of the second language.</p>

<p>Each subtitle consists of normal ASCII text, using both
lowercase and uppercase, and punctuation, but no diacritical
marks (accents, cedillas or tildes). For the purposes of this
program, words contain letters and hyphens only, and processing
is case insensitive.</p>

<p>You can assume that the maximum number of words in each
subtitle line is 20; the maximum number of different words for
each language is 1000; and the maximum length of each word is 24.</p>

<h2><font color="#0000FF"><b>Output</b></font></h2>

<p>The output for each test case is a sorted list of lines,
each one containing two lowercase words separated by a slash.
The second word in each pair is the translation of the first one,
as discovered by the program. In some cases, there might be pairs
or triples, etc., of words, as a result of the ambiguity referred
above.</p>

<p>Separate the output of each test case with a single blank line.</p>

<h2><font color="#0000FF"><b>Sample Input</b></font></h2>

<p><pre>1
10
Quero um copo de cerveja, bem fresca.
Nao temos cerveja, mas temos vinho.
Nao obrigado, vinho nao quero.
Tambem temos sumo de laranja natural.
Esta bem, entao quero um sumo de laranja.
Mais alguma coisa?
Sim, um pastel de nata.
Com certeza. Um sumo e um pastel. Sao quatro euros.
Quatro euros!!! Mas isso e um roubo.
Se acha que e um roubo, chame a policia.
I want a glass of beer, very cool.
We dont have beer, but we have wine.
No thanks, I dont want wine.
We also have natural orange juice.
OK, then I want one orange juice.
Anything else?
Yes, a cream cake.
Of course. One juice and one cake. Thats four euros.
Four euros!!! That is a theft.
If you think it is a theft, call the police.
</pre></p>



<h2><font color="#0000FF"><b>Sample Output</b></font></h2>

<p>
<pre>
cerveja/beer
euros quatro/euros four
laranja/orange
nao vinho/dont wine
pastel/cake
quero/want
roubo/theft
sumo/juice
temos/have
</pre>
</p>
<br><hr>
<address>

Pedro Guerreiro, MIUP'2002
</address>

</body>
</html>


______________________________________________________
854||||||false||||||
<!-- saved from url=(0022)http://internet.e-mail -->
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
<title></title>
</head>

<body bgcolor="#FFFFFF">

<h1 align="left"><font color="#0000FF">Problem C</font></h1>

<h1 align="center"><font color="#0000FF" size="6"><b>Worse Code</b></font></h1>

<p align="center"><font size="5"><b></b></font>&nbsp;</p>

<p align="left">Morse code has been used for a long time in
telecommunications. Its external representation consists of
sequences of two distinct <em>atomic symbols</em>: the ``dot'' (a
short tone) and the ``dash'' (a slightly longer tone). A sequence
of dots and dashes forms a <em>symbol</em>.</p>

<p align="left">The exact representation associated with each
symbol was constructed after a statistical analysis of the
occurrence of the various letters in English text, so as to give
to the most frequent letters the shortest representation. For
instance, the letter <tt>E</tt> is represented as a single <em>dot</em>
while the letter <tt>T</tt> is a single <em>dash</em>. In regular
morse code, symbols are separated by a small pause (the <em>space</em>
atomic symbol).</p>

<p align="left">&nbsp;</p>

<h2><font color="#0000FF">Problem</font></h2>

<p>The technology you are employing does not allow for spaces to
separate symbols, so different arrangements have to be made:
you'll have to make do with a <em>Worse Code</em>, in which there
may be only two distinct symbols (the <em>dot</em> and the <em>dash</em>).</p>

<p>You are asked to write a program that evaluates the resourses
necessary to transmit a particular sentence in Worse Code. In
order to do that, your program has to be able to produce the
optimal Worse code, tailored for the input sentence.</p>

<p>The problem can be formulated as follows: </p>

<ul>
    <li>With just an input sentence, to (internally) determine an
        optimal Worse Code for that sentence and display the
        length (in number of ``dash-dot'' atomic symbols) of the
        resulting coded message. </li>
</ul>

<p><font color="#0000FF"></font>&nbsp;</p>

<h2><font color="#0000FF">Input</font></h2>

<p>Several input sentences, each sentence in one or more lines and terminated with a
blank line or the end-of-file character.</p>

<p>Notes: </p>

<ul>
    <li>Sequences of whitespace and newlines within a sentence are to be converted
        into a single space character, except if they are at the
        end of the sentence, in which case they are ignored.</li>
    <li>Lower case letters are mapped to the corresponding upper
        case equivalents. Any other characters, including
        accented letters, are simply ignored.</li>
</ul>

<h2><font color="#0000FF">Output</font></h2>

<p>The number of atomic symbols (dot or dash) in the optimal
Worse Code representation for each input sentence on a line by itself.</p>

<p> </p>

<p>&nbsp;</p>

<h2><font color="#0000FF">Sample Input</font></h2>

<pre>THE QUICK BROWN FOX JUMPS
OVER THE LAZY DOG.

Don't make codes for letters not appearing
in the text!</pre>

<h2><font color="#0000FF">Sample Output</font></h2>

<pre>192
204</pre>

<hr>

<blockquote>
    <p align="center"><font size="4">MIUP'2002: 2nd. Portuguese
    National ACM Programming Contest</font></p>
</blockquote>

<hr>
</body>
</html>

______________________________________________________
855||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1 align="left"><font color="#0000FF">Problem D</font></h1>

<h1 align="center"><font color="#0000FF">Lunch in Grid City</font></h1>

<p align="left">&nbsp;</p>

<P align="justify">
Grid city is a city carefully planned. Its street-map very much
resembles that of downtown Manhattan in New York. Streets and avenues
are orderly setup like a grid.

<P align="justify">
A group of friends living in Grid city decide to meet for lunch. Given
that the group is dynamic, that is, its size may grow or shrink from time to
time, they follow a written rule to determine the meeting point. It
states that the meeting point is the one that minimizes the total
distance the all group has to walk from their homes upto that point.
If there is more than one candidate point, the rule imposes that the
meeting point is the one corresponding to the smaller number for
street and avenue. For large groups, this rule naturally avoids the
usual long discussions that take place before aggreeing on a possible
meeting point. For simplicity, consider that each person lives at a
corner formed by a street and an avenue. You can also assume that the
distance between two corners along one street or avenue is always one
unit.

<P align="justify">
Your task is to suggest to the group their best meeting point (corner
between a street and an avenue). 

<P align="justify">
As an example, the following figure illustrates one such Crid city and
the location of 11 friends. For this scenario, the best meeting point
is street 3 and avenue 4. You can assume that streets and avenues are
set and ordered as illustrated in this figure.

<P align="center"><img SRC="http://uva.onlinejudge.org/external/8/p855.jpg" ></P>

<P align="justify">
Please note that if we add another friend located at, say street 3 and
avenue 5, making a total of 12 friends, then we would have two
candidate meeting points, pairs (3,4) and (3,5). The rule clearly
defines that street 3 and avenue 4 is the meeting point.


<h2><font color="#0000FF"><b>Problem</b></font></h2>

<P align="justify">
Given the size of a grid representing the Grid city and the locations
of each person of the group of friends, your task is to determine the
best meeting point following the rule of the group, as stated above.

<h2><font color="#0000FF"><b>Input</b></font></h2>

<P align="justify">The first line of the input contains the number
<i>T</i> of test cases, followed by <i>T</i> input blocks.

<P align="justify">
The first line of each test case consists of three positive numbers, the number
of streets <i>S</i>, the number of avenues <i>A</i> (where <i>S <=
1000</i> and <i>A <= 1000</i>), and the number of friends <i>F</i> (where
<i>0 < F <= 50000</i>). The following <i>F</i> input lines indicate the
locations of the friends. A location is defined by two numbers, a
street and an avenue, in this order.

<h2><font color="#0000FF"><b>Output</b></font></h2>

<P align="justify">
The output for each test case must list the best meeting point
formatted as follows:
<TT>(Street: 3, Avenue: 4)</TT>.

<P align="justify">
Each test case must be on a separate line.

<h2><font color="#0000FF"><b>Sample Input</b></font></h2>

<pre>
2
2 2 2
1 1
2 2
7 7 11
1 2
1 7
2 2
2 3
2 5
3 4
4 2
4 5
4 6
5 3
6 5
</pre>

<h2><font color="#0000FF"><b>Sample Output</b></font></h2>

<PRE>
(Street: 1, Avenue: 1)
(Street: 3, Avenue: 4)
</PRE>

<p>
<br><hr>
<address>

Fernando Silva, MIUP'2002
</address>

</body>
</html>


______________________________________________________
856||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title> </head>

<body bgcolor="#FFFFFF">

<h1 align="left"><font color="#0000FF">Problem E</font></h1>

<h1 align="center"><font color="#0000FF">The Vigen&egrave;re Cipher</font></h1>

<p>&nbsp;</p>

<p>For many centuries, most - if not all - known methods for
enciphering messages considered a single cipher alphabet. For
example, Julius Caesar used a substitution cipher that replaced
each letter in the plaintext message by a letter three places
further down in the alphabet ('A' would be 'D' and so on). </p>

<p>Sometime in the 16<sup>th</sup> century, a French diplomat
called Blaise de Vigen&egrave;re perfected a new cipher based on
previous work by Leon Alberti, Johannes Trithemius and Giovanni
Porta. The most significant breakthrough was the use of <i>multiple
cipher alphabets</i>, which turned the cipher impregnable to
frequency analysis (a technique for deducing the plaintext from a
ciphertext).</p>

<h3>How to encipher a plaintext message</h3>

<p>The first step in encipherment is to draw a <i>Vigen&egrave;re
square</i>:</p>

<pre>                   P L A I N T E X T  L E T T E R S

           | a b c d e f g h i j k l m n o p q r s t u v w x y z
 ----------+----------------------------------------------------
    1  (A) | B C D E F G H I J K L M N O P Q R S T U V W X Y Z A
    2  (B) | C D E F G H I J K L M N O P Q R S T U V W X Y Z A B
    3  (C) | D E F G H I J K L M N O P Q R S T U V W X Y Z A B C
    4  (D) | E F G H I J K L M N O P Q R S T U V W X Y Z A B C D
    5  (E) | F G H I J K L M N O P Q R S T U V W X Y Z A B C D E
 C  6  (F) | G H I J K L M N O P Q R S T U V W X Y Z A B C D E F
 I  7  (G) | H I J K L M N O P Q R S T U V W X Y Z A B C D E F G
 P  8  (H) | I J K L M N O P Q R S T U V W X Y Z A B C D E F G H
 H  <u>9  (I) | J K L M N O P Q R S T U V W X Y Z A B C D E F G H I</u>
 E  10 (J) | K L M N O P Q R S T U V W X Y Z A B C D E F G H I J
 R  11 (K) | L M N O P Q R S T U V W X Y Z A B C D E F G H I J K
    12 (L) | M N O P Q R S T U V W X Y Z A B C D E F G H I J K L
 A  <u>13 (M) | N O P Q R S T U V W X Y Z A B C D E F G H I J K L M</u>
 L  14 (N) | O P Q R S T U V W X Y Z A B C D E F G H I J K L M N
 P  15 (O) | P Q R S T U V W X Y Z A B C D E F G H I J K L M N O
 H  <u>16 (P) | Q R S T U V W X Y Z A B C D E F G H I J K L M N O P</u>
 A  17 (Q) | R S T U V W X Y Z A B C D E F G H I J K L M N O P Q
 B  18 (R) | S T U V W X Y Z A B C D E F G H I J K L M N O P Q R
 E  19 (S) | T U V W X Y Z A B C D E F G H I J K L M N O P Q R S
 T  20 (T) | U V W X Y Z A B C D E F G H I J K L M N O P Q R S T
 S  <u>21 (U) | V W X Y Z A B C D E F G H I J K L M N O P Q R S T U</u>
    22 (V) | W X Y Z A B C D E F G H I J K L M N O P Q R S T U V
    23 (W) | X Y Z A B C D E F G H I J K L M N O P Q R S T U V W
    24 (X) | Y Z A B C D E F G H I J K L M N O P Q R S T U V W X
    25 (Y) | Z A B C D E F G H I J K L M N O P Q R S T U V W X Y
    26 (Z) | A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</pre>

<p>&nbsp;</p>

<p>Then, the multiple cipher alphabets (rows in the Vigen&egrave;re
square) to be used in the encipherment must be chosen. A
practical way of doing this is via a <i>keyword</i>. For example,
the keyword 'MIUP' selects the cipher alphabets 13, 9, 21 and 16
(see underlined rows in the Vigen&egrave;re square).</p>

<p>In the final step, each letter in the plaintext message is
enciphered according to the corresponding cipher alphabet. For
example, suppose the plaintext message is 'programming' and the
keyword is 'MIUP.' The encoded message would be:</p>

<pre> plaintext message -  p  r  o  g   r  a  m  m   i  n  g
 keyword           -  M  I  U  P   M  I  U  P   M  I  U
 cipher alphabets  -  13 9  21 16  13 9  21 16  13 9  21
 ----------------- -  ----------------------------------
 encoded message   -  C  A  J  W   E  J  H  C   V  W  B</pre>

<p>The letter 'p' in the plaintext message is enciphered using
cipher alphabet 13 into the letter 'C'. The 'C' comes from the
intersection of column 'p' with row 13 in the Vigen&egrave;re square.
The second letter in the plaintext message, 'r', is enciphered
into the letter 'A' using cipher alphabet 9 (check the
intersection of column 'r' with row 9), and so on. If necessary,
as in this case, the keyword can be repeated multiple times to
match the length of the plaintext message.</p>

<h3>How to decipher an encoded message</h3>

<p>The decipherment of an encoded message requires the keyword
that was used to encipher the plaintext message. For example,
suppose the encoded message is 'CAJWEJHCVWB' and the keyword is
'MIUP'.</p>

<pre> encoded message   -  C  A  J  W   E  J  H  C   V  W  B
 keyword           -  M  I  U  P   M  I  U  P   M  I  U
 cipher alphabets  -  13 9  21 16  13 9  21 16  13 9  21
 ----------------- -  ----------------------------------
 plaintext message -  p  r  o  g   r  a  m  m   i  n  g</pre>

<p>The multiple cipher alphabets of 'MIUP' are, again, 13, 9, 21
and 16 (grey rows in the Vigen&egrave;re square above). Each plaintext
message letter is obtained by finding the corresponding encoded
letter in the row of the current cipher alphabet and then
checking the letter on top of the column. For example, the letter
'p' in the plaintext message is on top of the column where 'C'
(the encoded letter) appears in row (cipher alphabet) 13. The
decipherment ends when the last encoded letter is deciphered.</p>

<p>(This background was written based on Simon Singh's &quot;The
Code Book,&quot; p. 45-51.)</p>

<p>&nbsp;</p>

<h2><font color="#0000FF">Input</font></h2>

<p>The input will consist of multiple lines.</p>

<p>Each line contains a message enciphered
with the Vigen&egrave;re cipher (in uppercase). The only knowledge
about each message is that <i>after being deciphered</i> it
represents a 3 digit number written as text (for example:
'oneoneone' or 'zerozeroseven').</p>

<h2><font color="#0000FF">Output</font></h2>

<p>Separate the output of each input line with a single blank line.</p>

<p>For each line, the output is all possible decipherments of the encoded
message. For example, the encoded message 'PQRPQRPQR' means
'oneoneone' when the keyword is 'ACM', but also means 'oneonetwo'
or 'oneonesix' when the keywords are, respectively, 'ACMACMVTC'
and 'ACMACMWHT', and so on.</p>

<p>Each decipherment is written in a single line, as shown in the
sample output. The text to the left of the '-&gt;' symbol is the
keyword (in uppercase) and to the right is the corresponding
plaintext 3 digit number (in lowercase). There should be <i>no
empty line</i> between decipherments of the same input message.</p>

<p>Note: the output must be sorted in descending order by value
of the plaintext number ('nineninenine' &gt; 'ninenineeight' &gt;
... &gt; 'zerozeroone' &gt; 'zerozerozero').</p>

<p>&nbsp;</p>

<h2><font color="#0000FF">Sample Input</font></h2>

<pre>
PQRPQRPQR
PQRPQRPQR
</pre>

<h2><font color="#0000FF">Sample Output</font></h2>

<pre>
WHTWHTWHT -&gt; sixsixsix
WHTWHTVTC -&gt; sixsixtwo
WHTWHTACM -&gt; sixsixone
WHTVTCWHT -&gt; sixtwosix
WHTVTCVTC -&gt; sixtwotwo
WHTVTCACM -&gt; sixtwoone
WHTACMWHT -&gt; sixonesix
WHTACMVTC -&gt; sixonetwo
WHTACMACM -&gt; sixoneone
VTCWHTWHT -&gt; twosixsix
VTCWHTVTC -&gt; twosixtwo
VTCWHTACM -&gt; twosixone
VTCVTCWHT -&gt; twotwosix
VTCVTCVTC -&gt; twotwotwo
VTCVTCACM -&gt; twotwoone
VTCACMWHT -&gt; twoonesix
VTCACMVTC -&gt; twoonetwo
VTCACMACM -&gt; twooneone
ACMWHTWHT -&gt; onesixsix
ACMWHTVTC -&gt; onesixtwo
ACMWHTACM -&gt; onesixone
ACMVTCWHT -&gt; onetwosix
ACMVTCVTC -&gt; onetwotwo
ACMVTCACM -&gt; onetwoone
ACMACMWHT -&gt; oneonesix
ACMACMVTC -&gt; oneonetwo
ACMACMACM -&gt; oneoneone

WHTWHTWHT -&gt; sixsixsix
WHTWHTVTC -&gt; sixsixtwo
WHTWHTACM -&gt; sixsixone
WHTVTCWHT -&gt; sixtwosix
WHTVTCVTC -&gt; sixtwotwo
WHTVTCACM -&gt; sixtwoone
WHTACMWHT -&gt; sixonesix
WHTACMVTC -&gt; sixonetwo
WHTACMACM -&gt; sixoneone
VTCWHTWHT -&gt; twosixsix
VTCWHTVTC -&gt; twosixtwo
VTCWHTACM -&gt; twosixone
VTCVTCWHT -&gt; twotwosix
VTCVTCVTC -&gt; twotwotwo
VTCVTCACM -&gt; twotwoone
VTCACMWHT -&gt; twoonesix
VTCACMVTC -&gt; twoonetwo
VTCACMACM -&gt; twooneone
ACMWHTWHT -&gt; onesixsix
ACMWHTVTC -&gt; onesixtwo
ACMWHTACM -&gt; onesixone
ACMVTCWHT -&gt; onetwosix
ACMVTCVTC -&gt; onetwotwo
ACMVTCACM -&gt; onetwoone
ACMACMWHT -&gt; oneonesix
ACMACMVTC -&gt; oneonetwo
ACMACMACM -&gt; oneoneone
</pre>

<p>
<br><hr>
<address>

Ant&oacute;nio Ferreira, MIUP'2002
</address>

</body>
</html>

______________________________________________________
857||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1 align="left"><font color="#0000FF">Problem F</font></h1>

<p align="center">&nbsp;</p>

<h1 align="center"><font color="#0000FF" size="6"><b>Quantiser</b></font></h1>

<p><font size="3">MIDI (Musical Instrument Digital Interface) is
a standard for transmitting musical performance data between
devices. With MIDI, each event of a performance (e.g., pressing
or releasing a key of a piano) is encoded in a message. A typical
MIDI message essentially consists of a <i>code</i> and a <i>note</i>,
and says that a given key (corresponding to a given <i>note</i>)
was pressed (the <i>code</i> NoteOn) or released (NoteOff<i> code</i>).</font></p>

<p><font size="3">If we register all the events of a performance
and associate a convenient time stamp with them, we will be able
to reproduce the performance later with precision. We may also
make many other things, like editing the data or producing a
score in standard, human readable, music notation. This last
application will be our focus: we want to prepare performance
data stored in a file so that the production of a score becomes
easy.</font></p>

<p><font size="3">Figure 1 presents an example of a performance
(4 notes, 8 events) and the corresponding data, in the form
&lt;code, note, time-stamp&gt;. The time stamp is represented by
the triple &lt;measure:beat:tick&gt;. To make things simpler, we
will consider that a measure is a positive integer and has always
4 beats (numbered 1 to 4) and each beat has 480 ticks (numbered 0
to 479).</font></p>
<div align="center"><center>

<table border="0" cellpadding="5" cellspacing="0" width="426">
    <tr>
        <td valign="top" width="67%"><font size="3"><img
        src="http://uva.onlinejudge.org/external/8/p857a.gif" ></font></td>
        <td valign="top" width="33%"><p align="center"><font
        size="3">NoteOn, 35, 23:1:0</font></p>
        <p align="center"><font size="3">NoteOn, 52, 23:1:0</font></p>
        <p align="center"><font size="3">NoteOn, 43, 23:2:0</font></p>
        <p align="center"><font size="3">NoteOff, 52, 23:3:0</font></p>
        <p align="center"><font size="3">NoteOff, 35, 23:4:0</font></p>
        <p align="center"><font size="3">NoteOn, 35, 24:1:0</font></p>
        <p align="center"><font size="3">NoteOff, 43, 24:1:0</font></p>
        <p align="center"><font size="3">NoteOff, 35, 24:2:0</font></p>
        </td>
    </tr>
</table>
</center></div>

<p align="center"><font size="3">Figure 1</font></p>

<p><font size="3">This performance may be easily converted to
standard music notation, as all the events occur at the exact
beginning of a beat (tick 0). The same would happen if they
occurred in points corresponding to subdivisions of the beat that
match certain musical rhythm symbols. To simplify, we will
consider divisions of the beats in 2, 4 and 8 parts as
corresponding to legal musical notation; thus, if the events
occur in ticks like 60, 240 or 420, the production of the score
will be possible. </font></p>

<p><font size="3">The events in Figure 1, however, could hardly
be produced by an human. Humans can&#146;t be so precise: their
performances have subtle &quot;imprecisions&quot; in timing and
in other parameters. These imprecisions make a direct production
of a score virtually impossible. Figure 2 represents a possible
human performance.</font></p>
<div align="center"><center>

<table border="0" cellpadding="5" cellspacing="0" width="448">
    <tr>
        <td valign="top" width="63%"><p align="center"><font
        size="3"><img src="http://uva.onlinejudge.org/external/8/p857a.gif" ></font></p>
        </td>
        <td valign="top" width="37%"><p align="center"><font
        size="3">NoteOn, 35, 23:1:006</font></p>
        <p align="center"><font size="3">NoteOn, 52, 23:1:017</font></p>
        <p align="center"><font size="3">NoteOn, 43, 23:2:010</font></p>
        <p align="center"><font size="3">NoteOff, 52, 23:3:015</font></p>
        <p align="center"><font size="3">NoteOff, 35, 23:3:252</font></p>
        <p align="center"><font size="3">NoteOn, 35, 23:4:473</font></p>
        <p align="center"><font size="3"><i>NoteOn, 33, 23:4:478</i></font></p>
        <p align="center"><font size="3">NoteOff, 43, 24:1:011</font></p>
        <p align="center"><font size="3"><i>NoteOff, 33, 24:1:012</i></font></p>
        <p align="center"><font size="3">NoteOff, 35, 24:2:003</font></p>
        </td>
    </tr>
</table>
</center></div>

<p align="center"><font size="3">Figure 2</font></p>

<p><font size="3">We may see that the times where the events
occur are close to &quot;correct&quot; points. For instance, the
fourth event occurs close to 23:3:000, the fifth close to
23:3:240 and the sixth close to 24:1:000. To produce a readable
score from this data, we may change the time stamps to make them
fit the closest &quot;correct&quot; points: this process is
called <i>Quantisation</i>.</font></p>

<p><font size="3">The short note 33 near the beginning of measure
24 (in italic) represents a special case: after quantisation, its
duration becomes zero. We will <i>filter</i> notes in these
conditions.</font></p>

<h2><font color="#0000FF" size="5"><b>Problem</b></font></h2>

<p><font size="3">Make a program that, given a <i>performance</i>
consisting of a sequence of no more than 2.000 events, produces a
new sequence after <i>quantising</i> the data. Notes whose
duration becomes zero after quantisation must be filtered out.
If a time stamp is equally close to two different correct points,
quantise it to the upper point (for example, "<i>23 1 30</i>" becomes
"<i>23 1 60</i>").
The program should be able to process several performances each
time it runs.</font></p>

<p>&nbsp;</p>

<p><font color="#0000FF" size="5"><b>Input</b></font></p>

<p><font size="3">The input file represents several performances.
Input for each performance consists of a sequence of lines, as
follows: </font></p>

<p><font size="3">First line: <i>n</i></font></p>

<dir>
    <li><font size="3">where <i>n</i> is the number of messages
        of the performance</font></li>
</dir>

<p><font size="3">Next <i>n</i> lines (up to 2.000): <i>code note
m b t</i></font></p>

<dir>
    <li><font size="3">where <i>code</i> is the number <b>1</b>
        for a Note On event or the number <b>0</b> for a Note Off
        event; <i>note</i> is a positive number representing a
        piano key; <i>m</i> is a positive integer representing
        the measure; <i>b</i> is 1, 2, 3 or 4 and represents the
        beat; <i>t</i> is an integer between 0 and 479, and
        represents the tick.</font></li>
</dir>

<p><font size="3">The messages of a performance are ordered by
increasing times.</font></p>

<p><font size="3">Successive values on a line are separated by
one blank. The integer -1 follows the data of the last
performance. </font></p>

<p><font color="#0000FF" size="5"><b>Output</b></font></p>

<p><font size="3">Output should give, for each given performance,
the following output:</font></p>

<p><font size="3">First line: <i>n</i></font></p>

<dir>
    <li><font size="3">where <i>n</i> is the number of the
        messages of the quantised performance</font></li>
</dir>

<p><font size="3">Next <i>n</i> lines:<i> code note m b t</i></font></p>

<dir>
    <li><font size="3">where the meaning of the symbols is the
        same as for the input file</font></li>
</dir>

<p><font size="3">The messages of each performance must be
ordered by increasing times.</font></p>

<p><font size="3">The integer -1 must follow the data of the last
performance. </font></p>

<p>&nbsp;</p>

<h2><font color="#0000FF" size="5"><b>Sample Input</b></font></h2>

<p><font size="3">10</font></p>

<p><font size="3">1 35 23 1 6</font></p>

<p><font size="3">1 52 23 1 17</font></p>

<p><font size="3">1 43 23 2 10</font></p>

<p><font size="3">0 52 23 3 15</font></p>

<p><font size="3">0 35 23 3 252</font></p>

<p><font size="3">1 35 23 4 473</font></p>

<p><font size="3">1 33 23 4 478</font></p>

<p><font size="3">0 43 24 1 11</font></p>

<p><font size="3">0 33 24 1 12</font></p>

<p><font size="3">0 35 24 2 3</font></p>

<p><font size="3">10</font></p>

<p><font size="3">1 42 14 1 55</font></p>

<p><font size="3">1 38 14 1 126</font></p>

<p><font size="3">0 42 14 1 177</font></p>

<p><font size="3">1 42 14 1 230</font></p>

<p><font size="3">1 51 14 1 241</font></p>

<p><font size="3">0 42 14 1 248</font></p>

<p><font size="3">1 42 14 1 352</font></p>

<p><font size="3">0 38 14 1 356</font></p>

<p><font size="3">0 51 14 1 472</font></p>

<p><font size="3">0 42 14 2 244</font></p>

<p><font size="3">-1</font></p>

<p>&nbsp;</p>

<p><font color="#0000FF" size="5"><b>Sample Output</b></font></p>

<p><font size="3">8</font></p>

<p><font size="3">1 35 23 1 0</font></p>

<p><font size="3">1 52 23 1 0</font></p>

<p><font size="3">1 43 23 2 0</font></p>

<p><font size="3">0 52 23 3 0</font></p>

<p><font size="3">0 35 23 3 240</font></p>

<p><font size="3">1 35 24 1 0</font></p>

<p><font size="3">0 43 24 1 0</font></p>

<p><font size="3">0 35 24 2 0</font></p>

<p><font size="3">8</font></p>

<p><font size="3">1 42 14 1 60</font></p>

<p><font size="3">1 38 14 1 120</font></p>

<p><font size="3">0 42 14 1 180</font></p>

<p><font size="3">1 51 14 1 240</font></p>

<p><font size="3">1 42 14 1 360</font></p>

<p><font size="3">0 38 14 1 360</font></p>

<p><font size="3">0 51 14 2 0</font></p>

<p><font size="3">0 42 14 2 240</font></p>

<p><font size="3">-1</font></p>

<p>
<br><hr>
<address>

Am&iacute;lcar Cardoso, MIUP'2002
</address>

</body>
</html>

______________________________________________________
858||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1><font color="#0000FF">Problem G</font></h1>

<h1 align="center"><font color="#0000FF">Berry Picking</font></h1>

<p>It is not easy for a bird to find food when winter approaches.
The fields become empty and all the crops have been harvested.
There are only some wild berries that can be picked, but their
location is sometimes hidden. </p>

<p>We will help the birds find food. A bird looks for food by
flying over a field and scanning it for the edible berries.
Suppose that we are given the shape of a berry area in the field
and we want to decide whether it is useful for the bird to cross
the field along a chosen line. The flight is considered useful if
the bird flies over an extension of berries that exceeds some
threshold length. </p>

<p>We will view a berry area as a polygon where vertices are
approximated by integer values. Birds always follow vertical
lines in their flight, and never fly over the vertices of the
polygon: in those points there are usually scarecrows that
frighten them. </p>

<p>Your task is to decide if the flight along a given line is
useful. You will be given a sequence of coordinates defining the
berry area, a value for the threshold and the x-coordinate of the
line to be followed by the bird. </p>

<p>As an example, the following figure illustrates the location
of a berry area in a field, where &quot;line1&quot; and
&quot;line2&quot; are possible flight paths. If the threshold is
set to 2 length units, line 2 will be an interesting flight path
but line 1 will be not. </p>

<p align="center"><img src="http://uva.onlinejudge.org/external/8/p858.png"  alt="sample field"> </p>

<h2><font color="#0000FF">Problem</font></h2>

<p>Given the shape of the berry area, the threshold and the
x-coordinate of the line to be followed by the bird, decide
whether the line is useful. Assume that the given x-coordinate
does not intersect the polygon at any vertex. </p>

<h2><font color="#0000FF">Input</font></h2>

<p><p>The first line of the input contains the number <i>T</i> of test cases,
followed by <i>T</i> input blocks.

<p>The first line of each inpt block consists of one integer&nbsp;<i>N</i>,
the number of vertices of the polygon representing the berry
area. Each of the following <i>N</i> input lines contains the X-Y
integer coordinates of one vertex. The following line has an
integer indicating the threshold for the decision. The last line of
each input block has an integer for the x-coordinate to be evaluated.
The set of vertices starts at an arbitrary point in the polygon and there
are at most 10000 vertices in a polygon. </p>

<h2><font color="#0000FF">Output</font></h2>

<p>For each input block output a single line, containing "YES" if the
chosen line is useful and "NO" otherwise. </p>

<h2><font color="#0000FF">Sample Input</font></h2>

<pre>
2
7
4 1
2 2
5 3
2 5
2 3
0 1
2 0
2
3
7
4 1
2 2
5 3
2 5
2 3
0 1
2 0
2
3
</pre>

<h2><font color="#0000FF">Sample Output</font></h2>

<pre>
YES
YES
</pre>

<p>
<br><hr>
<address>

Cristina Ribeiro, MIUP'2002
</address>

</body>
</html>

______________________________________________________
859||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1><font color="#0000FF">Problem H</font></h1>

<h1 align="center"><font color="#0000FF">Chinese Checkers</font></h1>

<p><font size="3"><i></i></font>&nbsp;</p>

<p><font size="3"><i>Chinese Checkers</i> is a commercial variant
of the older Scandinavian game called <i>Halma</i>. In this
contest we propose a simplified version in a rectangular
chessboard for two players. </font></p>

<p><font size="3">Imagine a rectangular chessboard divided into L
lines and C columns (usually C smaller than L). In each square
(intersection of a line with a column) of that matrix there is a
hole to support a piece of the game. The base of the rectangle
(bottom) is line 1 and the top is line L; columns are numbered
from 1 to C from left to right. </font></p>

<p><font size="3">Each player has as starting field (its
&quot;home&quot;) at the bottom or at the top of the chess-board,
and he has P=2*C pieces (different colors for each players) that
inserts into the holes of the two first rows of his field (lines
1 and 2 for the first Player, and lines L-1 and L for the second
Player). The main goal of each player is to invade the other
player's field with his own P pieces, moving just one piece each
time. The winner is the player that first reaches the goal. </font></p>

<p><font size="3">One piece can be moved from its position to a
free hole on the left, on the right, or in front (moving only one
step). Or else, it can jump over one other piece (belonging to
any one of both players, colors doesn't matter) in a straight
line or along a diagonal to the next hole (right, left or in
front) if it is free; this jump can continue as many times as it
is possible in the same play (if in the new hole it is possible
to jump over a piece to another free hole in the neighborhood). </font></p>

<h2><font color="#0000FF">Problem</font></h2>

<p><font size="3">The aim is to plan just one round for a
selected piece of Player 1 (the one that starts at the base of
the chess-board), given the position (coordinates of the hole) of
the 2*P pieces, at that precise moment of the game. </font></p>

<p><font size="3">The question is to know all the movements that
the selected piece can do; we just want to know the number of
steps or jumps and the coordinates of the hole achieved. So your
task is to write a program to read from an input file the status
of the game and to produce the required plan. </font></p>

<p><font size="3"></font>&nbsp;</p>

<h2><font color="#0000FF">Input</font></h2>

<p><font size="3">The input is composed of several test cases.
Each one starts with a line containing
two numbers defining, respectively, the number L of
rows and the number C of columns in the chess-board. The
following 2*P lines, are the coordinates (line and column) of
each piece. The last line of each case contains the coordinates of the
selected piece, this is the piece of Player 1 for which we want
to plan the possible movements. </font></p>

<h2><font color="#0000FF">Output</font></h2>

<p><font size="3">The output for each test case must be separated
by a blank line.</font></p>

<p><font size="3">Each test case must have one line for each
possible movement, containing 3 numbers separated by one space.
These numbers are: the coordinates of the destination hole (line
and column) and the number of steps/jumps. The result must be
sorted in decreasing order of lines and increasing order of
columns. If there is more than one way for a single piece to reach a
destination, output the minimum amount of steps/jumps needed to reach
that destination.</font></p>

<p>&nbsp;</p>

<p><font size="3"><i>The following sample illustrates the status
of the chessboard at the starting of the game: all pieces are at
&quot;home&quot; (this is, in their initial holes in both
starting fields). In that configuration, Player 1 wants to plan
the movements for piece (1,4). </i></font></p>

<h2><font color="#0000FF" size="5"><b>Sample Input </b></font></h2>

<font size="3"><pre>
15 5
1 1
1 2
1 3
1 4
1 5
2 1
2 2
2 3
2 4
2 5
14 1
14 2
14 3
14 4
14 5
15 1
15 2
15 3
15 4
15 5
1 4
</pre></font>

<h2><font color="#0000FF" size="5"><b>Sample Output</b></font></h2>

<font size="3"><pre>
3 2 1
3 4 1
</pre></font>

<p align="center"><font size="3"><b></b></font>&nbsp;</p>

<p>
<br><hr>
<address>

Pedro Henriques, MIUP'2002
</address>

</body>
</html>

______________________________________________________
860||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="en-us">
<title>Problem</title>
</head>

<body bgcolor="#FFFFFF">

<h1><font color="#0000FF">Problem I</font></h1>

<h1 align="center"><font color="#0000FF">Entropy Text Analyzer </font></h1>

<p> </p>

<p>Claude Shannon, mathematician and computer scientist, born on
April 30 1916, and died on February 24 2001, was the one who
create the mathematical foundations which laid down the general
rules of modern information theory. In his fundamental paper of
1948, <em>A Mathematical Theory of Communication</em>, a measure
of the uncertainty associated with a random memoryless source,
called <em>entropy</em>, is proposed. Here we are interested in
the use of the entropy concept to analyze texts at the level of
its words variety. </p>

<p>We define the entropy of a text <i>T</i>, with
<img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" >
words and <i>n</i> different ones, by the formula <br clear="all" />
</p>

<p><img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" >
</p>

<p> 
</p>

<p>where <i>p<sub>i</sub></i>, <i>i</i> = 1,...,n, is
the frequency of each <i>i</i>-word in the text <i>T</i>, that is,
<i>p<sub>i</sub></i>
is the number of times that the <i>i</i>-word happens to occur in the
given text. If we consider that a text of length <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" > (a text with <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" >
words) is as much richer as much larger is the number <i>n</i> of
different words and, among the texts with the same number <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" > of words and the same number <i>n</i> of
different words, is richer the one where the words have less
variation in frequency, one can easily conclude that the entropy
is indeed a very useful measure to compare the richness of two or
more texts. To compare texts with different number of words <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" >, we introduce a kind of ``relative
entropy'' <i>E<sub>rel</sub></i>, defined as the quotient between the
entropy <i>E<sub>T</sub></i> of the text and the
maximum entropy <i>E<sub>max</sub></i>,
and multiplying by 100 if one wants a percentage: <br clear="all"
/>
</p>

<table border="0" width="100%">
    <tr>
        <th><table border="0">
            <tr>
                <th align="center" nowrap>E<sub>rel</sub> = </th>
                <th align="center" nowrap> E<sub>T</sub> <hr
                size="1" noshade />
                <p>E<sub>max</sub><br />
                </p>
                </th>
                <th align="center" nowrap>Ã—100  .</th>
            </tr>
        </table>
        </th>
    </tr>
</table>

<p>The maximum entropy <i>E<sub>max</sub></i> is just the entropy of a
text with the same number <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" > of words
and in which each word occurs exactly once (<span class="roman">i.e.</span>,
<i>n</i> : = <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" >,
<i>p<sub>i</sub></i> : = 1):
</p>

<p> <br clear="all" />
<img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" >
</p>

<p><font color="#0000FF"></font> </p>

<h2><font color="#0000FF">Problem</font></h2>

<p>Given a text T, write a program that computes the total number
 <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" > of words in <i>T</i>,
the entropy <i>E<sub>T</sub></i> of the text, and its relative entropy
<i>E<sub>rel</sub></i>. In order
to determine the required numbers, your program must be case
insensitive (for example, words like ``House'', ``house'' or
``HOUSE'' must be considered to be the same). Also, in the
context of this program, a word is a consecutive sequence of
characters different of the punctuation marks <tt>, . : ; ! ? &quot; ( ) </tt>as well as spaces, tabs and newlines (<tt>'\n'</tt>). Words with only one
letter are to be considered.</p>

<h2><font color="#0000FF">Input</font></h2>

<p>The input contains several texts <i>T</i>, each one
necessarily with more than one
word (<img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" > > 1). You can assume that
the maximum length of the words is 20 characters long and that a single
text does not have more than 100 000 words.</p>

<p>A line containing only <tt>****END_OF_TEXT***</tt> marks the end of
each text, and a line containing <tt>****END_OF_INPUT****</tt> marks the end of input. You can be certain that these reserved words wil not appear inside
a text. Besides thats, everything can appear on a text, including blank
lines.</p>



<h2><font color="#0000FF">Output</font></h2>

<p>In the output write one line for each test, each one containing
three numbers: the first with the total
number <img border="0" src="http://uva.onlinejudge.org/external/8/p860a.png" > of words in <i>T</i>; the second
with the text entropy <i>E<sub>T</sub></i> rounded to one decimal digit;
and the last one with the relative entropy <i>E<sub>rel</sub></i>, in
percentage, and rounded to be an integer. </p>

<p> </p>

<h2><font color="#0000FF">Sample Input</font><a
href="#tthFtNtAAB" name="tthFrefAAB"><font color="#0000FF"><sup>1</sup></font></a></h2>

<pre>Midnight, not a sound from the pavement
Has the moon lost her memory?
She is smiling alone
In the lamplight, the withered leaves collect at my feet
And the wind begins to moan
****END_OF_TEXT****
Memory, all alone in the moonlight
I can dream of the old days
Life was beautiful then
I remember the time I knew what happiness was
Let the memory live again
****END_OF_TEXT****
****END_OF_INPUT****
</pre>

<h2><font color="#0000FF">Sample Output</font></h2>

<pre>
33 1.4 93
31 1.3 89
</pre>

<p> </p>

<h3>Footnotes:</h3>

<p><a name="tthFtNtAAB"></a><a href="#tthFrefAAB"><sup>1</sup></a>Barbra
Streisand, <i>Memory</i> (first two verses). <br />
<br />
</p>

<p>
<br><hr>
<address>

Delfim Marado Torres, MIUP'2002
</address>

</body>
</html>

______________________________________________________
861||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p1_files/filelist.xml">
<link rel=Edit-Time-Data href="p1_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Little Bishops</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h3
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<b><font face="Times New Roman,Arial Helvetica" size=6>Little Bishops</font></b><br></b>
</center>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>A bishop is a piece used in the
game of chess which is played on a board of square grids. A bishop can only move
diagonally from its current position and two bishops attack each other if one
is on the path of the other. In the following figure, the dark squares
represent the reachable locations for bishop <b><i>B</i><sub>1</sub></b> form
its current position.&nbsp; The figure also shows that the bishops <b><i>B</i><sub>1</sub></b>
and <b><i>B</i><sub>2</sub></b> are in attacking positions whereas <b><i>B</i><sub>1</sub></b>
and <b><i>B</i><sub>3</sub></b> are not. <b><i>B</i><sub>2</sub></b> and <b><i>B</i><sub>3</sub></b>
are also in non-attacking positions. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=224
height=223  src="http://uva.onlinejudge.org/external/8/p861.jpg" ></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Now, given two numbers <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>n</span></b>
and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>k</span></b>, your job is to determine the number of ways one can put <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>k</span></b>
bishops on an <b style='mso-bidi-font-weight:normal'><i>n &times; n</i></b>
chessboard so that no two of them are in attacking positions. </p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>

<p class=MsoNormal><span style='color:black'>&nbsp;</span>The input file may
contain multiple test cases. Each test case occupies a single line in the input
file and contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>n</span></b> <b style='mso-bidi-font-weight:
normal'>(1 &le; n &le; 8)</b> and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>k</span> (0 &le; k &le; n<sup>2</sup>)</b>. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing two zeros
for <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>n</span></b> and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>k</span></b> terminates the input and you
wonÂ’t need to process this particular input.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing the total number of ways one can put the given number
of bishops on a chessboard of the given size so that no two of them are in
attacking positions. You may safely assume that this number will be less than <b
style='mso-bidi-font-weight:normal'>10<sup>15</sup></b>.</p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
8 6<br>
4 4<br>
0 0<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>

<font face="Courier,Times New Roman,Arial Helvetica" size=3>

5599888<br>
260<br>
</font>
<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='mso-outline-level:1'><b><span style='mso-bidi-font-size:
10.0pt;color:black'>Problem setter: Rezaul Alam
Chowdhury<o:p></o:p></span></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>


<p class=MsoNormal><span style='font-family:"Courier New"'>&nbsp;</span></p>

</div>
<center>
"I think Garry Kasparov will like this problem very much!!!"
</center>
</body>

</html>

______________________________________________________
862||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Origami</TITLE>
<META NAME="description" CONTENT="Origami">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Origami</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Origami is the old Japanese art of folding single sheets of paper into the forms of animals,
flowers and other figures. Recently a programmable machine was constructed to make some of
the simpler kinds of origami. This machine has a large board with coordinate system drawn on it.
First, a square sheet of paper is placed on the board so that the lower left
corner has coordinates (0; 0)
and the upper right corner has coordinates (100; 100). Then the machine follows the program.
The program consists of several steps. Each step is given as a line in the coordinate system
at which the origami is to be folded.  The line is represented by two points:  the
paper is folded from right to left when one is facing the second point from the first.
The paper on the left side of the line remains in place and the paper on the right side
is folded flat on top of it.

<P>
After the execution of the last step one gets a resulting origami. It is necessary to pierce the
origami in order make a hole for hanging. It is important to choose the place for making a hole
carefully, because if the origami is too thick in this place it is difficult to make a hole, and if it is
too thin it is not strong enough for hanging. Your task is to write a program that computes the
number of layers of a paper in the given point.

<P>

<IMG
 WIDTH="227" HEIGHT="254" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p862a.gif" 
 ALT="$\textstyle \parbox{.40\textwidth}{
\begin{center}
\mbox{}
\epsfbox{p862a.eps}
\end{center}}$"><IMG
 WIDTH="348" HEIGHT="421" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p862a.gif" 
 ALT="$\textstyle \parbox{.59\textwidth}{
\begin{center}
\mbox{}
\epsfxsize=3in \epsfbox{p862b.eps}
\end{center}}$">
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>
The first part of the input file contains a program for the origami machine. The first line
contains the number of steps of the program.  One line follows for each step of the
program.
Each line contains fold-line coordinates <SPAN CLASS="MATH"><I>x</I><SUB>1</SUB></SPAN>, <SPAN CLASS="MATH"><I>y</I><SUB>1</SUB></SPAN>, <SPAN CLASS="MATH"><I>x</I><SUB>2</SUB></SPAN>, <SPAN CLASS="MATH"><I>y</I><SUB>2</SUB></SPAN> (real numbers)
separated by spaces. The program consists of at most 8 steps.
The second part of the input file contains several potential points for making a hole. The first
line contains the number of such places and each of the next lines contains coordinates of the point.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>
For each of the potential points write a line containing the number of layers
pierced through in this point.

<P>

<P>
<BR>

<B>Note:</B> Assume that the paper has zero thickness and therefore folds ideally. The pierced hole is
a single point. The layers pierced exactly at the border of the paper or at the folded edge
(within 0.000001) do not count as pierced layers.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

2
-0.5 -0.5 1 1
1 75 0 75
6
10 60
80 60
30 40
10 10
50 50
20 50
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
4
2
2
0
0
2
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-08-31
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
863||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Process Scheduling</TITLE>
<META NAME="description" CONTENT="Process Scheduling">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Process Scheduling</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
In batch programming, there are many tasks that need to be
completed in minimal overall time.  Accurate information about
the total runtime and interdependencies of processes is often available
to the scheduler, allowing optimal schedulings to be found.  This problem considers processes
that can run on different CPUs at the same time, but which are
interdependent.  That is to say, some processes cannot start until
others have completed.  Scheduling processes optimally prevents CPUs
from being idle unnecessarily.

<P>
Your task is to find a way of using <SPAN CLASS="MATH"><I>n</I></SPAN> processors to run
<SPAN CLASS="MATH"><I>p</I></SPAN> processes, minimizing the number of time slices until they are all
finished.  Some processes may be dependent on processes that depend on
other processes, but there will be no dependency loops.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>
The first line of input will consist of two integers, the number of processors
(<SPAN CLASS="MATH"><I>n</I></SPAN>) and the number of processes (<SPAN CLASS="MATH"><I>p</I></SPAN>).  Both numbers will be
positive; <SPAN CLASS="MATH"><I>p</I> &lt; 100</SPAN> and <SPAN CLASS="MATH"><I>n</I> &lt; 21</SPAN>.

<P>
There will be <SPAN CLASS="MATH"><I>p</I></SPAN> additional lines representing the processes.
Each of these lines will contain an integer representing the number of
CPU time slices required for the process and zero or more integers
representing the processes that must finish before this process may
start.  Processes are numbered from 1 to <SPAN CLASS="MATH"><I>p</I></SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Output consists of <SPAN CLASS="MATH"><I>n</I></SPAN> columns of width two, with a single
space between columns.  The <SPAN CLASS="MATH"><I>i</I></SPAN>-th line corresponds
to the processes running during the <SPAN CLASS="MATH"><I>i</I></SPAN>-th time
slice.  The process numbers should be right-justified.  The scheduling
of processes should minimize the amount of time until all of the
processes have completed their tasks.
Trailing spaces are acceptable, provided that they do not extend beyond
the right of the last column.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

3 5
4
3
2 4 2
2 1
1 3
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
 1  1  2
 1  1  2
 4  4  2
 3  3
 5
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-08-31
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
864||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Scheme Pretty-Printing</TITLE>
<META NAME="description" CONTENT="Scheme Pretty-Printing">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Scheme Pretty-Printing</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Scheme is an expression language.  This means that everything that is
entered to the Scheme interpreter/compiler is an expression.
Expressions are separated by blank space (blank, tabs, new-lines).
Expressions can be in several forms:

<P>

<OL>
<LI>numbers - a sequence of digits, possibly preceded by a `<TT>+</TT>'
or `<TT>-</TT>', possibly including a single `<TT>.</TT>' following at least
one digit
</LI>
<LI>strings - a sequence of characters (not including newlines)
preceded and followed by `<TT>"</TT>', with any included double-quote
characters preceded by a `<code>\</code>', such as
<code>"This `\"' is a double-quote"</code>
</LI>
<LI>special constants - a `<code>#</code>' followed by any characters up to
blank space
</LI>
<LI>compound expressions - a (possibly empty) sequence of
expressions surrounded by parentheses
</LI>
<LI>identifiers - a sequence of non-blank characters not including
the characters: <code>#</code>, <code>"</code>, <code>\</code>, <code>(</code>, and <code>)</code>
</LI>
</OL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
A sequence of Scheme expressions.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
The same sequence of expressions, reformatted to make them more
readable.  The rules you must follow are:

<P>

<OL>
<LI>All top level expressions will start with no leading blanks on a line.
</LI>
<LI>A compound expression with the first sub-expression being the
identifier <code>`define</code>' is a define-form. The second sub-expression
will be an identifier and should go on the same line as the word
<code>`define</code>'. If the third (and last) expression is compound it
should start on the following line, indented 3 spaces.  Otherwise, the
whole define-form should be on a single line.
</LI>
<LI>A compound expressions with the first sub-expression being the
identifier <code>`lambda</code>' is a lambda-form. The second sub-expression
will be an identifier or compound expression and should go on the same line as the word
<code>`lambda</code>'. All subsequent expressions should start on a new line,
indented by an additional 3 spaces
</LI>
<LI>A compound expressions with the first sub-expression being the
identifier <code>`if</code>' is an if-form. The second sub-expression
will be an identifier or compound expression and should go on the same line as the word
<code>`if</code>'. All subsequent expressions should start on a new line,
indented by an additional 4 spaces
</LI>
<LI>All other compound expressions are function applications.  If
any of the sub-expressions are compound, the first two sub-expressions
will be on the same line and all subsequent sub-expressions will be on
new lines, indented to align with the second sub-expression.
</LI>
<LI>In all other cases, all blank space between elements of a
compound expression will be replaced by a single space.
</LI>
</OL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
(define abc+ (lambda (@1 $f) (if (if
$f a     b) (@1
 3 4) (bcdefg (d e) (f "g")))))
           (define
     a 42)
(+ a (- b c))
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
(define abc+
   (lambda (@1 $f)
      (if (if $f
              a
              b)
          (@1 3 4)
          (bcdefg (d e)
                  (f "g")))))
(define a 42)
(+ a
   (- b c))
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-08-31
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
865||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Substitution Cypher</TITLE>
<META NAME="description" CONTENT="Substitution Cypher">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Substitution Cypher</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Substitution cyphers are the simplest of cyphers where the letters of one
alphabet are substituted for the letters of another alphabet.
In one form or another, they've been in use for over 2000 years.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
<B>The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</B>

<P>

<P><P>
<BR>

<P>

<UL>
<LI>a line containing the plaintext alphabet
</LI>
<LI>a line containing the substitution alphabet
</LI>
<LI>several lines of text
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
<B>For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>

<UL>
<LI>a line containing the substitution alphabet
</LI>
<LI>a line containing the plaintext alphabet
</LI>
<LI>the converted lines of text
</LI>
</UL>

<P>
Please note: All lines will be at most 64 characters, plus a trailing
end-of-line character.  Pass through all characters not found in
the plaintext alphabet.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1

abcdefghijklmnopqrstuvwxyz
zyxwvutsrqponmlkjihgfedcba
Shar's Birthday:
The birthday is October 6th, but the party will be Saturday,
October 5.  It's my 24th birthday and the first one in some
years for which I've been employed.  Plus, I have new clothes.
So I have cause to celebrate.  More importantly, though,
we've cleaned the house!  The address is 506-D Albert Street.
Extra enticement for CS geeks:  there are several systems in
the house, and the party is conveniently scheduled for 3 hours
after the second CSC programming contest ends (not to mention,
within easy walking distance)!
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
zyxwvutsrqponmlkjihgfedcba
abcdefghijklmnopqrstuvwxyz
Sszi'h Brigswzb:
Tsv yrigswzb rh Oxglyvi 6gs, yfg gsv kzigb droo yv Szgfiwzb,
Oxglyvi 5.  Ig'h nb 24gs yrigswzb zmw gsv urihg lmv rm hlnv
bvzih uli dsrxs I'ev yvvm vnkolbvw.  Pofh, I szev mvd xolgsvh.
Sl I szev xzfhv gl xvovyizgv.  Mliv rnkligzmgob, gslfts,
dv'ev xovzmvw gsv slfhv!  Tsv zwwivhh rh 506-D Aoyvig Sgivvg.
Ecgiz vmgrxvnvmg uli CS tvvph:  gsviv ziv hvevizo hbhgvnh rm
gsv slfhv, zmw gsv kzigb rh xlmevmrvmgob hxsvwfovw uli 3 slfih
zugvi gsv hvxlmw CSC kiltiznnrmt xlmgvhg vmwh (mlg gl nvmgrlm,
drgsrm vzhb dzoprmt wrhgzmxv)!
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-08-31
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
866||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - Porto</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<!--BODY aLink=#00a8b8 background=Imagens/back_main.jpg link=#00a8b8
topMargin=5 vLink=#00a8b8>

<CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> |
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	1Âª SESSÃƒO - PROBLEMA 1</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER>

<FONT color=#000000 face=Arial size=2-->
<p align="center"><font size="5"><b>Intersecting line segments</font></b></p>

<b><font size="3"><a name="back">Background</a></font></b></p>

<p >&nbsp;&nbsp; In a 2-D Cartesian space, a straight line segment A is defined
by two points <b>A<sub>0</sub>=(x<sub>0</sub>,y<sub>0</sub>)</b>, <b>A<sub>1</sub>=(x<sub>1</sub>,y<sub>1</sub>)</b>.
The intersection of line segments <b>A</b> and <b>B</b> (if there is one),
together with the initial four points, defines four new line segments.<br>&nbsp;&nbsp;
In Figure 1.1, the intersection <b>P</b> between lines <b>B</b> and <b>C</b>
defines four new segments. As a result, the toal amount of line segments after
the evaluation of intersections is five.</p>

<p align="center" ><img border="0" src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="251" height="165"><br><b>Figure
1.1</b> - Intersections of line segments</p>

<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given an initial set of lines segments, determine the number of line segments resulting from the
evaluation of all the possible intersections.<br>&nbsp;&nbsp; It is assumed, as
a simplification, that no coincidences may occur between coordinates of singular
points (intersections or end points).</p>

<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>
<p >&nbsp;&nbsp; The first line of the input contains the integer number <b>N</b>
of line segments. Each of the following N lines contains four integer values <b>x<sub>0</sub>
y<sub>0</sub> x<sub>1</sub> y<sub>1</sub></b>,separated by a single space, that define a line segment.</p>

<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The integer number of lines segments after all the possible
intersections are evaluated.</p>

<p><b>Sample Input</b><br>1<br><br>5<br>3 1 3 8<br>4 1 4 8<br>2 4 9 4<br>8 7 5 7<br>5 6 10 1</p>

<p><b>Sample Output</b><br>11</p>

<p><b>Note:</b> Figure 1.2 corresponds to the sample above.</p>
<p align="center"><b><img border="0" src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="183" height="132"><br>Figure 1.2</b> - Example</p>

</font>
</body>

</html>


______________________________________________________
867||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - Porto</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<!--BODY aLink=#00a8b8 background=Imagens/back_main.jpg link=#00a8b8
topMargin=5 vLink=#00a8b8>

<CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	1Âª SESSÃƒO - PROBLEMA 2</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER>

<FONT color=#000000 face=Arial size=2-->

<p align="center"><b><font size="5" face="Arial" color="#000000">Storing images
in a sequence</font></b></p>

<b><font size="3"><a name="back">Background</a></font></b></p>



<p>&nbsp;&nbsp; A web server for a site must store a set of large images in
a sequential device, like a magnetic tape cassette. The images appear in the
pages of the site, one per page. There are links between the pages where the
images belong, so we know which image(s) might be required after some image is
serve<br>For each image, we consider as direct neighbours the
images which are <b>one</b> link away. If we have four images and image 1 is
linked to image 4, and image 2 is linked to images 3 and 4, we may represent
this graphically as follows:</p>

<p align="center" ><img border="0" src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="378" height="176"><br><b>Figure
2.1</b> - Links between images</p>

<p>&nbsp;&nbsp; If the images are stored in a sequential device,
they must be ordered, and the distance between those that are directly linked
depends on the ordering. Two possible orderings for the example above are:</p>

<p align="center"><img border="0" src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="268" height="114">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<img border="0" src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="268" height="114"></p>

<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given a set of (bi-directional) image dependencies, find an ordering that minimises the
maximum distance for two linked images. There are at most 25 images</p>

<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The first input line contains the number <b>N</b> of
images. Each of the subsequent N lines, one for each image, contains the number
of the image and the numbers of its neighbour images, separated by single
spaces.</p>

<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p >&nbsp;&nbsp; Two lines, the first with the maximum distance
between linked images and the second with an ordering of the images.</p>


<p><b>Sample Input</b><br>1<br><br>4<br>1 4<br>2 3 4<br>3 2<br>4 2 1</p>

<p><b>Sample Output</b><br>1<br>3 2 4 1</p>

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
868||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - Porto</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<!--BODY aLink=#00a8b8 background=Imagens/back_main.jpg link=#00a8b8
topMargin=5 vLink=#00a8b8>

<FONT color=#000000 face=Arial size=2-->

<p align="center"><font size="5"><b>Numerical maze</font></b></p>

<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; No one knows who is the creator of the first maze (or
labyrinth), but all sorts of mazes can be found almost everywhere and some of
them have been built long time ago. The most famous maze is maybe the one in
Crete, drawn and built by Daedalus for the king Minos, a place where it is
believed the Minotaur (a monster with the head of a bull and the body of a man)
was kept, feeding on human flesh, until destroyed by Theseus.<br>&nbsp;&nbsp; The following figure illustrates a kind of maze.</p>

<p align="center" ><img border="0" src="http://uva.onlinejudge.org/external/8/p868.gif"  width="335" height="198"><br><b>Figure
3.1</b> - The maze</p>

<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Are you able to find a path that takes you from the start to
exit of the maze? You are only allowed to move horizontally or vertically 
diagonal movements are not permitted. The path consists of subsequences obeying
to the following rule: <b>1; 1,2; 1,2,3; 1,2,3,4; </b>and so on. Subsequences may
include changes of direction.<br>&nbsp;&nbsp; The problem you have to solve is to determine an entry
point and a path that takes you to the exit point, for a given maze. The start
point is always a cell in the top row of the maze (with the value 1!) and the
exit point is always a cell in the last line of the maze.</p>

<b><font size="3"><a name="input">Input</a></font></b></p>
<p>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</p
<p>
<p>
<p >&nbsp;&nbsp; The first input line contains two positive
integers <b>N</b> and <b>M</b> for the number of rows and columns of the maze, respectively.
Each of the N subsequent lines contains the M cell values, separated by single
spaces. Cell values are greater or equal to 1.</p>

<b><font size="3"><a name="output">Output</a></font></b></p>
<p>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
<p >&nbsp;&nbsp; Two lines, the first with the coordinates, row and column, of the starting cell, and the 
second with the coordinates of the exit cell. If there are several solutions, print the one with lexicographically smallest starting point. If still a tie, print the one with lexicographically smallest ending point.</p>


<p><b>Sample Input</b><br>1<br><br>10 11<br>1 6 5 2 1 1 2 3 2 1 4<br>1 2 6 3 2 1 1 3 4 5 6<br>1 2 3 2 1 3 2 5 6 4 2<br>
2 3 1 2 2 3 3 4 5 2 1<br>3 4 2 3 4 5 3 2 1 4 2<br>4 3 4 4 5 6 4 3 2 5 3<br>5 4 2 1 2 3 4 4 3 6 4<br>
6 5 3 2 3 4 5 5 4 1 1<br>1 6 4 3 5 5 6 6 1 2 3<br>2 1 5 1 6 6 1 2 2 3 4</p>

<p><b>Sample Output</b><br>1 6<br>10 3</p>

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
869||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - Porto</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<!--BODY aLink=#00a8b8 background=Imagens/back_main.jpg link=#00a8b8
topMargin=5 vLink=#00a8b8>

<CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> |
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	1Âª SESSÃƒO - PROBLEMA 4</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER>

<FONT color=#000000 face=Arial size=2-->

<p align="center"><b><font size="5" face="Arial" color="#000000">Airline
Comparison</font></b></p>

<b><font size="3"><a name="back">Background</a></font></b></p>



<p>&nbsp;&nbsp; An airline catalog
consists of a list of flights between pairs of cities. A trip may be built by
sequencing flights. Two airline companies are equivalent if they offer
connections between the same pairs of cities, irrespective of the number of
scales in between.</p>

<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given the catalogs of
two airline companies, determine if they are equivalent or not.</p>

<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>
<p >&nbsp;&nbsp; The input contains:
<ul>
	<li> First line: the number <b>N</b> of flights in the catalog of the first company;
	<li> N subsequent lines: two characters separated by one space, for the names of the
	     origin and destination cities of a flight;
	<li> Line N+2: the number <b>M</b> of flights in the catalog of the second company;
	<li> M subsequent lines: two characters separated by
         one space, for the names of the origin and destination cities of a flight.
</ul>

<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p >&nbsp;&nbsp; One line containing <b>YES</b> or <b>NO</b></p>


<p><b>Sample Input</b><br>1<br><br>6<br>A B<br>B E<br>A E<br>C F<br>E C<br>D A<br>7<br>A B<br>D A<br>E C<br>C F<br>D B<br>B E<br>D F</p>

<p><b>Sample Output</b><br>YES</p>

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
870||||||false||||||
<HTML>
<HEAD>
<TITLE>Intersecting Rectangles</font></b></p></TITLE>
</HEAD>
<BODY bgcolor="white">
<!--FONT color="#0000FF"><h1>Problem A</h1-->
<h1 align="center">Intersecting Rectangles</font></b></p></h1>

<font color="#0000FF"><h2>Background</h2></font>

<p align=justify> Consider, in a 2D space, a set of rectangles with edges that are parallel to the axis X and Y. One is the main rectangle and there are intersections between several rectangles. According to these intersections, one or more closed polygons called "islands" can be defined. The main island is the one that contains the main rectangle.<br>
<p><center>
<img src="http://uva.onlinejudge.org/external/8/p870a.gif"  width="327" height="241" border="0"><br>
<b>Figure 1</b> - The ten rectangles are defining 3 islands
</center>
<p align=justify> The proposed problem is to evaluate the area of the main island. For example, in Figure 1, considering that polygon 1 is the main polygon, the main island is composed by polygons 1,2,3,5 and 10, so the problem here is to evaluate the area of the polygon presented in Figure 2.
<p><center>
<img src="http://uva.onlinejudge.org/external/8/p870a.gif"  width="147" height="111" border="0"><br>
<b>Figure 2</b> - The polygon defined by the main island
</center>

<font color="#0000FF"><h2>Problem</h2></font>

<p align=justify> Given a list of rectangles, starting with the main rectangle, the problem is to identify the main island and evaluate the correspondent area. Each rectangle is geometrically characterized by the coordinates of its bottom-left and upper-right corners; the maximum number of rectangles is 100; as a simplification, it can be considered that no coincidences between edges and vertices exist.

<font color="#0000FF"><h2>Input</h2></font>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p align=justify> The first line of the input contains the number of rectangles <b>N</b> (integer format) to be considered. Each one of the following <b>N</b> lines contains the coordinates of bottom-left and upper-right vertices of a rectangle, in the sequence <b>x<sub>min</sub> y<sub>min</sub> x<sub>max</sub> y<sub>max</sub></b>, separated by a single space. The first rectangle given is the main one.

<font color="#0000FF"><h2>Output</h2></font>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
<p align=justify> One integer number that represents the main island area as defined above.


<p><center>
<img src="http://uva.onlinejudge.org/external/8/p870a.gif"  width="363" height="350" border="0"><br>
<b>Figure 3</b> - Sample input
</center>

<font color="#0000FF"><h2>Sample Input</h2></font>
<pre>1<br><br>9<br>2 5 8 8<br>4 6 10 10<br>5 7 6 12<br>9 9 11 11
12 7 15 8<br>1 3 3 6<br>4 2 8 3<br>13 6 14 9<br>2 1 11 4

</pre><font color="#0000FF"><h2>Sample Output</h2></font>
<pre>70

</pre>
<p>
<br><hr>
<address>
University of Porto ACM Programming Contest / Round 12/ 2000
</address>
</body>
</html>

______________________________________________________
871||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 2Âª SessÃ£o - 2Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY aLink=#00a8b8 background=Imagens/back_main.jpg link=#00a8b8 
topMargin=5 vLink=#00a8b8>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	2Âª SESSÃƒO - PROBLEMA 2</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER>

<FONT color=#000000 face=Arial size=2-->

<p align="center"><b><font size="3" face="Arial" color="#000000">Counting Cells in a Blob</font></b></p>

<p><b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; Consider a two-dimensional grid of cells, each of which may be empty or filled. Filled cells form blobs. The filled cells that are connected form the same bigger blob. Two cells are said to be connected if they are adjacent to each other horizontally, vertically or diagonally. There may be several blobs on the grid. Your job is to find the largest blob (in terms of number of cells) on the grid.
<p align=center>The following figure illustrates a grid with 3 blobs (the largest contains 5 cells).<br>
<img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="160" height="161" border="0">

<p><b><font size="3"><a name="problem">Problem</a></font></b></p>

<p>&nbsp;&nbsp; Write a program that determines the size of the largest blob for a given set of blobs.

<p><b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The grid is given as a set of string, each composed of 0s and 1s. The 1 indicates that the cell is filled and 0 indicates an empty cell. The strings should be converted into the grid format.<br>&nbsp;&nbsp;The largest grid that should be considered is a 25x25 grid.

<p><b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; The output is the size of the largest blob found on the grid.


<p><b>Sample Input</b><br>1<br><br>11000<br>01100<br>00101<br>10001<br>01011

<p><b>Sample Output</b><br>5 

<p>&nbsp;</p>

</font>
<HR>
<i>
Fernando Silva, CPUP'2000 Round 2<br>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto
</i>


</body>

</html>

______________________________________________________
872||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 2Âª SessÃ£o - 4Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY aLink=#00a8b8 background=Imagens/back_main.jpg link=#00a8b8 
topMargin=5 vLink=#00a8b8>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	2Âª SESSÃƒO - PROBLEMA 4</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER>

<FONT color=#000000 face=Arial size=2-->

<p align="center"><b><font size="3" face="Arial" color="#000000">Ordering
</font></b></p>

<p>
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; Order is an important concept in mathematics and in computer
science. For example, Zorns Lemma states: <i>a partially ordered set in which
every chain has an upper bound contains a maximal element</i>. Order is also
important in reasoning about the fix-point semantics of programs.<br>&nbsp;
&nbsp; This problem involves neither Zorns Lemma nor fix-point semantics, but
does involve order.</p>

<p>
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given a list of variable constraints of the form <i>A < B</i>,
you are to write a program that prints all orderings of the variables that are
consistent with the constraints. For example, given the contraints <i>A < B</i>
and <i>A < C</i> there are two orderings of the variables <i>A</i>, <i>B</i>
and <i>C</i> that are consistent with these constraints: <i>ABC</i> and
<i>ACB</i>.</p>

<p> 
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The input consists of two lines: a list of variables on one
line, followed by a list of constraints of the form <i>A < B</i> on the
next line. Variables and contraints are separated by single spaces.<br>
&nbsp;&nbsp; All variables are single character, upper-case letters. There
will be at least two variables, and no more than 20 variables. There will be
at least one constraint, and no more than 50 constraints. There will be no
more than 300 orderings consistent with the contraints in a specification.

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; All orderings consistent with the constraints should be
printed. Orderings are printed in alphabetical order, one per line. Characters
on a line are separated by a space. If no ordering is possible, the output is
a single line with the word NO.


<p><b>Sample Input</b><br><br>1<br><br>A B F G<br>A&lt;B B&lt;F

<p><b>Sample Output</b><br><br>A B F G<br>A B G F<br>A G B F<br>G A B F 

<p>&nbsp;</p>

</font>
<HR>
<i>
Gabriel David, CPUP'2000 Round 2<br>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto
</i>

</body>

</html>

______________________________________________________
873||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 3Âª SessÃ£o - 2Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	3Âª SESSÃƒO - PROBLEMA 2</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Loan (II)
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; One of the services of banks is to lend money to their customers. The loan
is characterized by an initial capital and by a number of periods (for instance, months) of
duration. At the end of the loan all the money must have been paid back to the bank, plus an
interest that represents the money the bank earns. The interest rate is usually specified on
a yearly basis. For the sake of clarity lets use an example: you get a loan of 5000 Â€, for
three years, at an interest rate of 6%. One possibility is that you collect the money to pay
back at home and, after three years, you pay to the bank all the 5000 Â€ plus 3*0.06*5000=900Â€
of interest. Another possibility is that you periodically pay a certain amount that we will
assume is always the same, part of which is to pay the interest for the last period and the
rest is to subtract to the debt. This way the capital on loan will decrease since the first
period and the interest on the next period will be smaller. The total amount paid in this
modality is obviously less than in the case you keep all the money until the end of the loan. 
</p>

<p> 
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given an initial capital on loan, an yearly interest rate, a duration for
the loan, determine the value of a fixed monthly payment such that in the last payment the
capital on loan is reduced to zero and all the interest have been properly paid.</p>

<p> 
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; One line with three integers, separated by single spaces: the initial
capital in euros, the yearly interest rate in percentage, and the duration in months. 

<p> 
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; One line containing the value in euros of the monthly payment rounded to cents.


<p><b>Sample Input</b><br>1<br><br>5000 6 36

<p><b>Sample Output</b><br>152.11

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
874||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 3Âª SessÃ£o - 3Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	3Âª SESSÃƒO - PROBLEMA 3</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">2D Representations
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; A 2D raster image is defined by a matrix of points or pixels. In a
black and white raster image, each pixel (a matrix element) can be black (full) or white
(empty). There are several methods known to represent a raster image. Two of them, are the
"Quadtree" and the "Run Length code".<br>
&nbsp;&nbsp; In a Quadtree, the matrix is preferably square with a length that is a power of two. One
image is represented following a recursive visit: the image is divided in four image cells
(accordingly to the order shown in Figure 1) and each cell is evaluated to be Full, Empty,
or Partial. When a Partial cell is found, it is recursively subdivided in four cells and the
same principle is repeated again and again until the cell is completely Full or completely Empty.
The structure of a quadtree is a tree of nodes and each node can have from zero to four
descendents (see Figure 1).
<p align=center><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="498" height="159" alt="  border="0"><br>
<b>Figure 1</b> - One image, the order of visit and the quadtree
<p>&nbsp;&nbsp; In the Run Length code, pixels are grouped in series of empty pixels,
full pixels and empty pixels again, etc. In this way, the image can be represented as a
series of numbers, being each number of pixels in a group (we can assume that the first
group is composed of full pixels). Using the image of Figure 1 as an example, the run
length code is: 0, 20, 4, 4, 9, 1, 1, 1, 4, 1, 1, 2, 4, 4, 4, 4
(considering the lower left pixel as the first one).
 </p>

<p> 
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given an image in the form of a quadtree, the problem is to obtain the
correspondent run length code. The image maximum size is 256*256 and the origin of
coordinates is the lower left pixel.</p>

<p> 
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The first line of the input contains the length of the image and the second
line contains the number of nodes <b><i>N</b></i> to be considered (both in integer format).
Each one of the following <b><i>N</b></i> lines describes a different node (in sequence,
starting with node 1), with four fields separated by a space. Each field may be one character
F (full) or E (empty) or a number that is the index of a descendent node. 

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


<p>&nbsp;&nbsp; One line with the run length code of the given image (integers separated by a space).
Note that the first group is assumed to be Full.


<p><b>Sample Input</b><br>1<br><br>8<br>5<br>E 2 F 3<br>E E F F<br>4 5 E E<br>F E E F<br>F E E E

<p><b>Sample Output</b><br>0 20 4 4 9 1 1 1 4 1 1 2 4 4 4 4

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
875||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 3Âª SessÃ£o - 4Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	3Âª SESSÃƒO - PROBLEMA 4</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Monopoly
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; In the current business world there are many situations of participation
of a company in the capital of another, of cross-participations and of partnerships.
The amount of capital owned by each participant determines the number of votes. An entity
possessing 50%+1 votes controls the company. This entity may be a single company or a
partnership of several companies. To make the process more complex, a company may control
another indirectly, because if company A controls company B, and B controls C, then A
controls C. Thus it is not always clear who controls what.<br>
&nbsp;&nbsp; In order to understand the power relationships among companies, a knowledgeable stock
exchange broker writes down some facts of the form A > B, meaning company A controls company B.
He also writes more generic facts like A<sub>1</sub> 
 A<sub>n</sub> > B meaning that a
possible partnership ofcompanies A<sub>1</sub> 
 A<sub>n</sub> is able to control B. Due to
the empiric process used, the set of facts may include many redundancies, of two types:<br>
&nbsp;&nbsp; Type 1: if A B C > D is a fact but it can be concluded from the set of facts
that A and B together are enough to control D (directly or indirectly), then C can be
deleted from the former fact because it is irrelevant.<br>
&nbsp;&nbsp; Type 2: if there is a fact A > B but it can be concluded just from the other
facts that A controls B, then A > B may be deleted because it is redundant.<br>
&nbsp;&nbsp; To get a clearer picture of the essential relationships, an analyst would
like to have a minimal version of the set of facts without redundancies, but also without
loosing information. There may be several alternative minimal sets of facts.
 </p>

<p> 
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given an initial set of facts of the form A<sub>1</sub> 
 A<sub>n</sub> > B
a minimal set is an equivalent set that contains neither redundancies of type 1 nor of type 2.
Which is the number of facts of the smallest minimal set?</p>

<p>
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The first line of the input contains the integer number N of facts. Each of
the following N lines contains a string of k (1&lt;= k &lt;= 26) capital letters, the symbol >
and a single capital letter. Each capital letter represents a company.  

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; One line containing the number of facts of the smallest minimal set.


<p><b>Sample Input</b><br>1<br><br>11<br>AB>C<br>C>A<br>BC>D<br>ACD>B<br>D>E<br>D>G<br>BE>C<br>CG>B<br>
CG>D<br>CE>A<br>CE>G

<p><b>Sample Output</b><br>8

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
876||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 4Âª SessÃ£o - 1Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	4Âª SESSÃƒO - PROBLEMA 1</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Balanced Expressions
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; Let us consider expressions formed by nonnegative integers, the
unary operator "-", the binary operators "+", "-", "*" and "/" and the symbols
"( " and ")".<br>
&nbsp;&nbsp; Two expressions E and F are isomorphic if E can be obtained from F by replacing
some nonnegative integers by others. The expressions (2+3) * 6 - (-4) and (7+0) * 6 - (-8)
are isomorphic, but neither of them is isomorphic to (-2 +3) * 6 - (-4).<br>
&nbsp;&nbsp; An expression E is balanced if every binary operation in it is applied to two
isomorphic expressions. The expressions -5, (1+2) * (3+5) and ((-3)/( -4))/(( -1)/( -100))
are balanced, while 12 + (3-2) is not.


<p> 
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given an expression E, check whether it is balanced.</p>

<p> 
<b><font size="3"><a name="input">Input</a></font></b></p>

<p >&nbsp;&nbsp; The input consists of several lines with the expressions to be tested, one per line.  

<p> 
<b><font size="3"><a name="output">Output</a></font></b></p>

<p>&nbsp;&nbsp; The output consists of a separated line for each expression with a single word, either YES or NO.


<p><b>Sample Input</b><br>(1+2) * (3+5)

<p><b>Sample Output</b><br>YES

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
877||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 4Âª SessÃ£o - 2Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	4Âª SESSÃƒO - PROBLEMA 2</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Offset Polygons
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; One very common geometrical operation in polygon manipulation is
finding offset polygons. An offset polygon is obtained by tracing lines, parallel
to the original polygon edges, maintaining a given offset distance from them. Here,
we are only interested in exterior offset polygons like the one shown in Figure 1,
printed in dotted lines. In these circumstances, the offset polygon can be found
"to the left" of each original edge, when circulating in the clockwise direction.
<p align="center" ><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="300" height="311" alt="  border="0"><br><b>Figure
1</b> - An exterior offset polygon obtained with an offset value of 1.</p>

<p> 
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given an offset value and a sequence of vertices coordinates
defining a clockwise closed polygon, the problem is to obtain the correspondent
exterior offset polygon. The result must be given as a sequence of vertices
coordinates, also in the clockwise direction.<br>
&nbsp;&nbsp; To simplify the problem, the original polygon is guaranteed to be
closed, convex, and limited to 8 vertices. Two consecutive edges are never collinear.
</p>

<p> 
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p >&nbsp;&nbsp; The first line of the input contains the offset value (float format).
The second line contains the number of vertices of the original polygon N (integer format).
Each one of the following N lines contains two float values, separated by one or
more spaces, representing the X and Y coordinates of a vertex. The sequence of
vertices is guaranteed to be in the clockwise direction.  

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; The output must follow the input format (except for the offset value)
to represent the exterior offset polygon. The first vertex listed must correspond to
the first vertex given.


<p><b>Sample Input</b><br>1<br><br>1.0<br>5<br>10.0 &nbsp;5.0<br>10.0 &nbsp;3.0<br>3.0 &nbsp;3.0
<br>3.0 &nbsp;6.0<br>5.0 &nbsp;8.0


<p><b>Sample Output</b><br>5<br>11.000 &nbsp;5.566<br>11.000 &nbsp;2.000<br>2.000&nbsp; 2.000
<br>2.000 &nbsp;6.414<br>4.845 &nbsp;9.259


<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
878||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 4Âª SessÃ£o - 3Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	4Âª SESSÃƒO - PROBLEMA 3</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Rotating Tetris Pieces
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; A <i>tetris piece</i> is a two-dimensional figure made up from unit squares.
Valid tetris pieces are constructed by stacking squares together to the left, right, bottom or top of 
each other. Figure 1 shows three tetris pieces made up from 4 squares.

<p align="center" ><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="497" height="80" alt="  border="0"><br><b>Figure
1</b> - Different pieces made with 4 squares.</p>
<p>&nbsp;&nbsp; Given a tetris piece we consider the ones obtained by rotating it
on the plane by 0, 90, 180, 270 degrees.  Some pieces generate four different figures by
these rotations (cf. figure 1 right), whereas in others we get repeated figures
(cf. figure 1 left and center).

<p>
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Write a program that reads as input the coordinates of the squares
making up a piece and outputs the number of different pieces obtained
by rotations.
</p>

<p>
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<table>
<tr><td valign=top>
<FONT color=#000000 face=Arial size=2>
<p>&nbsp;&nbsp; The input is a sequence of <i>(x,y)</i> coordinate pairs;
the values for <i>x</i> and <i>y</i> are non-negative integers and separated
by a <i>','</i> (a comma); coordinate pairs are separated by white-spaces
and the order among pairs is non-relevant. The end of the list is marked by a
<i>'-1,-1'</i>.
<p>&nbsp;&nbsp; Example: for the piece on the right, the input data
could be: 0,1 &nbsp;0,2 &nbsp;1,1 &nbsp;2,1 &nbsp;2,0 &nbsp;-1,-1
<td valign=center><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="150" height="159" alt="  border="0">
</table>

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; The output should be the number of different 
pieces obtained by rotations (between 1 and 4). For the input above the output
should be 2.


<p><b>Sample Input</b><br>1<br><br>0,1 &nbsp;0,2 &nbsp;1,1 &nbsp;2,1 &nbsp;2,0 &nbsp;-1,-1


<p><b>Sample Output</b><br>2

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
879||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 4Âª SessÃ£o - 4Âº Problema</TITLE>
<style>a:hover {color:#FA1F00}</style>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	4Âª SESSÃƒO - PROBLEMA 4</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Circuit Nets
</font></b></p>

<p> 
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; An electronic circuit consists of components, pins, and wires. Figure
1 shows a circuit with the three components A, B, and C. Each wire
connects a pair of pins. Two pins a and b are <b>electrically
equivalent</b> if they are either connected by a wire or there is a
sequence <i>a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>k</sub></i> of pins such that <i>a,a<sub>1</sub>; 
a<sub>1</sub>,a<sub>2</sub>; ...; a<sub>k-1</sub>,a<sub>k</sub>;</i>  and <i>a_k, b</i>
are all connected by wires. A <b>net</b> is a maximal set of electrically equivalent
pins. <i>Maximal</i> means that no pin outside the net is electrically
equivalent to a pin in the net.

<p align="center" ><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="650" height="243" alt="  border="0">

<p>
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Given a set of pins and a set of wires your task is to determine the
number of nets defined within the circuit. Figure 2 illustrates a circuit
with 3 nets.
<p align="center" ><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width="405" height="197" alt="  border="0">

</p>

<p>
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p>&nbsp;&nbsp; The sequence of pins is always numbered from 1 to N. The first
input value is the value of N. The sequence of wires is described by
pairs of pin values. It is given at the input as sequence of numbers,
separated by a space. The first two numbers define the first pair, the
two numbers that follow define the second pair, and so on. The input
ends with the end_of_file mark. 

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; The output is just the number of nets found.


<p><b>Sample Input</b><br>1<br><br>14<br>
&nbsp;1 11 7 11 2 12 12 8 11 12 3 13 4 13 13 14<br> 
14 &nbsp;9 5 14 6 10

<p><b>Sample Output</b><br>3

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
880||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 2Âª SessÃ£o - 3Âº Problema</TITLE>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	2Âª SESSÃƒO - PROBLEMA 3</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Cantor Fractions
</font></b></p>

<p>
<b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; In the late XIXth century the German mathematician George Cantor
argued that the set of positive fractions <b>Q</b><sup>+</sup>
is equipotent to the set of
positive integers <b>N</b>, meaning that they are both infinite,
but of the same class.
To justify this, he exhibited a mapping from 
<b>N</b> to <b>Q</b><sup>+</sup> that is onto.
This mapping is just <i>traversal</i> of the 
<b>N</b> x <b>N</b> plane that covers all the pairs:


<p align=center><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  alt="  border="0"><br>

<p>&nbsp;&nbsp; The first fractions in the Cantor mapping are:
<p align=center><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  alt="  border="0"><br>


<p>
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p >&nbsp;&nbsp; Write a program that finds the <i>i</i>-th Cantor fraction 
following the mapping outlined above.


<p> 
<b><font size="3"><a name="input">Input</a></font></b></p>

<p>&nbsp;&nbsp; The inputs consists of several lines with a positive integer number <i>i</i> each one.

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>

<p>&nbsp;&nbsp; The output consists of a line per input case, that contains the <i>i</i>-th fraction,
with numerator and denominator separed by a slash (/).  
The fraction should <b>not</b> be in the most simple form.


<p><b>Sample Input</b><br>
6<br>

<p><b>Sample Output</b><br>
1/3<br>

<p>&nbsp;</p>

</font>
</body>

</html>

______________________________________________________
881||||||false||||||
<HTML>
<HEAD>
<TITLE>ACM - 3Âª SessÃ£o - 3Âº Problema</TITLE>
</HEAD>

<BODY>

<!--CENTER>
<a href="http://acm.baylor.edu/acmicpc" target=_blank><IMG border=0
height=58 src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  width=361></a></p>
<table border=0 width="100%" cellpadding=0 bgcolor=#000000>
  <tr>
    <td width="100%"><font color="#FFFFFF" face="Arial" size="2"><b>
      <p align="center">| <a href="#back">Background</a> |
	  <a href="#problem">Problem</a> | 
      <a href="#input">Input</a> |
	  <a href="#output">Output</a> |
	  <a href="#example">Example</a> |</font></b></td>
  </tr>
</table>
<BR><TABLE bgColor=#00a8b8 border=2 borderColor=#000000 cellspacing=0 width=300>
  <TR>
    <TD width="100%"><FONT color=#000000 face=Arial size=3><B><P align=center>
	3Âª SESSÃƒO - PROBLEMA 3</FONT></B></P>
    </TD>
  </TR>
</TABLE>
</CENTER-->

<FONT color=#000000 face=Arial size=2>

<p align="center"><b><font size="3" face="Arial" color="#000000">Points, Polygons and Containers
</font></b></p>

<p><b><font size="3"><a name="back">Background</a></font></b></p>

<p>&nbsp;&nbsp; Consider a set of closed polygons such that one polygon completely surrounds,
directly, 0, 1 or 2 polygons and each one of these may surround other 0, 1 or 2 polygons and
so on. In the example given in the figure 1, polygon C2 surrounds polygon C1; C1 surrounds C3
and C4.

<p>&nbsp;&nbsp; A container of a point (x,y) is the most interior polygon that still contains
the point. In the example, the container of point P1 is "null", the container of point P2 is
polygon C1 and the container of P3 is C3.

<p align=center><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  alt="  border="0"><br>
<b>Figure 1</b> - Points and Polygons</p>
</p>

<p> 
<b><font size="3"><a name="problem">Problem</a></font></b></p>

<p>&nbsp;&nbsp; Given a set of polygons in the form of a list of vertices (<i>Vx,Vy</i>), and
a set of points (<i>Px,Py</i>), the problem proposed is to determine the container of each point.

<p>&nbsp;&nbsp; It is assumed that no coincidences exist between points and lines
segments and no pair of polygons are touching each other. The coordinates of points
and vertices may be any real value, positive or negative.

<p>
<b><font size="3"><a name="input">Input</a></font></b></p>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

<p>&nbsp;&nbsp; <p>The input is a sequence of text lines, as
follows. </p>

<p>&nbsp;&nbsp; The first line contains the number <i>NC</i>
(integer format) of polygons.</p>

<p>It is followed by <i>NC</i> lines of text,
each line defining a polygon (no order of polygons is asumed). A polygon is
defined by its identifier (integer format) and a list of vertices. Each vertex
is defined by its coordinates (<i>Vx, Vy</i>), in decimal format. The vertices
are sorted accordingly to their sequence in the polygon.</p>

<p>The next line of text contains the number <i>NP</i>
of points to be processed.</p>

<p>It is followed by <i>NP</i> lines of text,
each line containing a point (no order of points is asumed). A point is
defined by its identifier (integer format) and coordinates (<i>Px, Py</i>).</p>

<p>All identifiers are bigger than zero and all
the values in a text line are separated by a space</p> 

<p>
<b><font size="3"><a name="output">Output</a></font></b></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>&nbsp;&nbsp; <i>NP </i>lines of
text, each one containing a point identifier and the container found, separated
by a space. A "null" container is identified with a zero.</p>

<p>&nbsp;&nbsp; The lines must be sorted by increasing order
of the points identifiers.</p>


<p><b>Sample Input</b><br>1<br><br>
4<br>
3 18 16 1 16 1 1 18 1<br>
1 2 15 2 2 14 2<br>
4 15 2 15 15 3 15<br>
2 10 4 4 10 4 4<br>
4<br>
2 20 4<br>
4 3 11<br>
3 5 6<br>
1 12 11<br>

<p><b>Sample Output</b><br>
1 4<br>
2 0<br>
3 2<br>
4 1<br>

<p align=center><img src="http://uva.onlinejudge.org/external/8/Imagens/acm_contest.jpg"  alt="  border="0"><br>
<b>Figure 2</b> - Example input</p>

<p>&nbsp;</p>

</font>
<HR>
<i>
A. Augusto Sousa, CPUP'2001 Round 3<br>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto
</i>

</body>

</html>

______________________________________________________
882||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="d_files/filelist.xml">
<title>The Mailbox Manufacturers</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>12</o:Revision>
  <o:TotalTime>69</o:TotalTime>
  <o:Created>2002-10-16T13:06:00Z</o:Created>
  <o:LastSaved>2002-10-16T14:08:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>371</o:Words>
  <o:Characters>2116</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2483</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>BestFit</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:
none;text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
style='font-size:24.0pt'>The Mailbox Manufacturers Problem<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:
none;text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>In the good old days when Swedish children were still
allowed to blow up their fingers with fire-crackers, gangs of excited kids
would plague certain smaller cities during Easter time, with only one thing in
mind: To blow things up. Small boxes were easy to blow up, and thus mailboxes became
a popular target. Now, a small mailbox manufacturer is interested in how many
fire-crackers his new mailbox prototype can withstand without exploding and has
hired you to help him. He will provide you with <i>k </i>(1&lt;<span
class=GramE>= <span style='font-size:1.0pt;font-family:Arial'><span
style='mso-spacerun:yes'>Â </span></span><i>k</i></span><i>&lt;=10)</i><span
style='font-family:Arial'> </span>identical mailbox prototypes each fitting up
to <i>m </i>(1&lt;=<i>m</i><span style='mso-bidi-font-style:italic'>&lt;=</span>100)
<span style='font-family:Arial'><span style='mso-spacerun:yes'>Â </span></span>crackers.
However, he is not sure of how many fire-crackers he needs to provide you with
in order for you to be able to solve his problem, so he asks you. You think for
a while and then say: Â”Well, if I blow up a mailbox I canÂ’t use it again, so if
you would provide me with only <i>k </i>= 1 mailboxes, I would have to start
testing with 1 cracker, then 2 crackers, and so on until it finally exploded.
In the worst case, that is if it does not blow up even when filled with <i>m </i>crackers,
I would need 1 + 2 + 3 + ... + <i>m </i>= <i>m </i>* <i>(m </i>+ 1)/2 crackers.
If <i>m </i>= 100 that would mean more than 5000 fire-crackers!Â”<span
class=GramE>. Â”</span>ThatÂ’s too manyÂ”, he replies. Â”What if I give you more
than <i>k </i>= 1 mailboxes? Can you find a strategy that requires <span
class=GramE>less</span> crackers?Â”</p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>Can you? And what is the minimum number of crackers that
you should ask him to provide you with? <o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>You may assume the following:</p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>1. If a mailbox can withstand <i>x </i>fire-crackers, it
can also withstand x-1 fire-crackers.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>2. Upon an explosion, a mailbox is either totally
destroyed (blown up) or unharmed, which means that it can be reused in another
test explosion.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>Note: If the mailbox can withstand a full load of <i>m </i>fire-crackers,
then the manufacturer will of course be satisfied with that answer. But
otherwise he is looking for the maximum number of crackers that his mailboxes
can withstand.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><b><span style='font-size:14.5pt'>Input specifications<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>The input starts with a single integer <span class=GramE><i>N(</i></span><i>1&lt;=N&lt;=10)
</i>indicating the number of test cases to follow. Each test case is described
by a line containing two integers: <i>k </i>and m, separated by a single space.</p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><b><span style='font-size:14.5pt'>Output specifications<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>For each test case print one line with a single integer
indicating the minimum number of fire-crackers that is needed, in the worst
case, in order to figure out how many crackers the mailbox prototype can withstand.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><b><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><b>Sample input<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>4<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>1 10<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>1 100<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>3 73<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>5 100<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><b><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'><b>Output for sample input<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>55<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>5050<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;mso-layout-grid-align:none;
text-autospace:none'>382<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>495<o:p></o:p></p>

</div>

</body>

</html>

______________________________________________________
883||||||false||||||
<HTML>
<HEAD>
<TITLE>UP ACM Programming Contest (2002) / Round 2: Problem A</TITLE>
</HEAD>

<BODY >

<P><P>
<BR>

<DIV ALIGN="CENTER">
<FONT SIZE="+2"><B>Overlapping Rectangles</B></FONT></DIV>

<P><P>
<BR>
Consider a set of rectangles in <i>2D</i> space as illustrated in the
given figure.  Overlapping or not, they define a set of regions with
different shapes. In the example of the figure, there are twelve regions,
identified from <i>A</i> to <i>L</i>).  Let <i>OD</i> (Overlapping
Depth) be the number of rectangles that overlap in each region (in the
figure, the number associated to each region corresponds to its
<B>OD</B>).

Consider now a horizontal line, <i>y=y<sub>L</sub></i>. This line traverses the above
structure and finds different values of <i>OD</i>. Note that there can
be repeated values of <i>OD</i>, hence, there can be more than one maximum
value of <i>OD</i>.

In the example of the figure, the maximum value of <i>OD</i> is 3 and
it appears wice (regions <i>E</i> and <i>G</i>).

<p>
<IMG SRC="http://uva.onlinejudge.org/external/8/p883.gif" >
<p>

<H2>Problem</H2>

Given a set of rectangles and a horizontal line, the problem consists
in the evaluation of the <i>OD<sub>FM</sub></i>, that is the <U>first</U>
maximum value of <i>OD</i>, found when the horizontal line is followed from
left to right (this corresponds to region <i>E</i>, in the example of the
figure). The result must also contain the correspondent limits,
<i>x<sub>Left</sub></i> and <i>x<sub>Right</sub></i>. In order to avoid
numerical problems, it is ensured that there are no coincidences
between edges of different rectangles or between edges and the horizontal line.

<H2>Input</H2>
<b>
The input begins with a single positive integer on a line by itself indicating
the number of the cases following, each of them as described below.
This line is followed by a blank line, and there is also a blank line between
two consecutive inputs.
</b>
<p>
<p>

The input is a text file, containing several lines as follows. The first
text line of the input contains the number <i>NR</i> (integer format) of
rectangles. It is followed by <i>NR</i> text lines containing, each
one, with the coordinates of two opposed vertices of a rectangle, in
the sequence <i>x<sub>1</sub></i>, <i>y<sub>1</sub></i>,
<i>x<sub>2</sub></i>, <i>y<sub>2</sub></i>, separated by single
spaces. No order is supposed, in this case, for point 1 and point 2
and numbers may be written in integer or decimal format.

The next text line is the number <i>NL</i> (integer format) of
horizontal lines to process. It is followed by <i>NL</i> text lines,
each one containing the value <i>y<sub>L</sub></i> defining the
horizontal line (integer or decimal format).

The separator between values in a text line is the space character.

<H2>Output</H2>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<i>NL</i> text lines, each one containing the three values that
characterise the problem solution for a horizontal line (in this
order): <i>OD<sub>FM</sub></i> (integer format), <i>x<sub>Left</sub></i> and 
<i>x<sub>Right</sub></i> (decimal format with two decimal digits). If
the horizontal line does not intersect any rectangle, the output text
line contains only the value 0 (integer format). 

The separator between values in a text line is the space
character. The output text lines must keep the order of the input text
lines related to horizontal lines.

<H2>Sample Input</H2>

<PRE>
1

3
-5.00 -2.00 -1.00 2.0
2.5 -1 -4.5 1.0
4 3 0 -4
4
-0.2
-4.50
-3.8
1.50
</PRE>

<H2>Sample Output</H2>

<PRE>
2 -4.50 -1.00
0
1 0.00 4.00
1 -5.00 -1.00
</PRE>

<p>
<BR><HR>
<i>
Augusto Sousa, CPUP'2002 Round 2<br>
University of Porto Local Contest
</i>

</BODY>
</HTML>

______________________________________________________
884||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Factorial Factors</TITLE>
<META NAME="description" CONTENT="Factorial Factors">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Factorial Factors</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The factorial function, <!-- MATH
 $n! = 1 \cdot 2 \cdot \dots \cdot n$
 -->
<SPAN CLASS="MATH"><I>n</I>! = 1<SUP> . </SUP>2<SUP> . </SUP>...<SUP> . </SUP><I>n</I></SPAN>,
has many interesting properties. In this problem, we want to
determine the maximum number of integer terms (excluding 1) that
can be used to express <SPAN CLASS="MATH"><I>n</I>!</SPAN>. For example:

<P>
<!-- MATH
 \begin{displaymath}
8! = 1 \cdot 2 \cdot 3 \cdot 4 \cdot 5 \cdot 6 \cdot 7 \cdot 8 = 2 \cdot 3 \cdot 2 \cdot 2 \cdot
 5 \cdot 3 \cdot 2 \cdot 7 \cdot 2 \cdot 2 \cdot 2 = 2^{7} \cdot 3^{2} \cdot 5 \cdot 7
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
8! = 1<SUP> . </SUP>2<SUP> . </SUP>3<SUP> . </SUP>4<SUP> . </SUP>5<SUP> . </SUP>6<SUP> . </SUP>7<SUP> . </SUP>8 = 2<SUP> . </SUP>3<SUP> . </SUP>2<SUP> . </SUP>2<SUP> . </SUP>5<SUP> . </SUP>3<SUP> . </SUP>2<SUP> . </SUP>7<SUP> . </SUP>2<SUP> . </SUP>2<SUP> . </SUP>2 = 2<SUP>7 . </SUP>3<SUP>2 . </SUP>5<SUP> . </SUP>7
</DIV><P></P>

<P>
By inspection, it is clear that the maximum number of terms
(excluding 1) that can be multiplied together to produce 8! is
11.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input for your program consists of a series of test cases
on separate lines, ended by end-of-file. Each line contains one
number, <SPAN CLASS="MATH"><I>n</I></SPAN>, <!-- MATH
 $2 \le n \le 1000000$
 -->
<SPAN CLASS="MATH">2<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/884img1.png" 
 ALT="$ \le$"><I>n</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/884img1.png" 
 ALT="$ \le$">1000000</SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, print the maximum number of factors
(excluding 1) that can be multiplied together to produce <SPAN CLASS="MATH"><I>n</I>!</SPAN>.
Put the output from each test case on a separate line, starting
in the first column.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
1000000
1996
5
8
123456
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1
3626619
5957
5
11
426566
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-16
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
885||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Telephone Directory Alphabetization</TITLE>
<META NAME="description" CONTENT="Telephone Directory Alphabetization">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Telephone Directory Alphabetization</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Based on its success in contracting previous software
development efforts to programming contest teams, the String
&amp; Tin Can (S&amp;TC) Telephone Company has now decided to
produce its telephone directories internally. Your team has been
hired to develop a program that will take subscriber names and
telephone numbers and alphabetize them into a list for printing.

<P>
Telephone directories have traditionally used special
conventions for alphabetization, and S&amp;TC wants your program
to use these conventions. Each subscriber listing consists of one
or more ``words,'' where each word is separated from the
others by spaces or non-alphanumeric characters. Directories only
use the letters A through Z for sorting, ignoring case.
Therefore, names that include words comprised of digits or
capital letters require special processing.

<P>

<P>
<BR>
A listing may contain a word that is a decimal number.
Listings with numbers in them appear in the alphabetized list in
the same location they would if the numbers were spelled out in
English. For example, ``50 Star Company'' might appear just
before ``Fifty Star Vending'' in the list. Numbers are
permitted to be in the range 0-999,999,999. Letters and digits
will not appear together in the same word.

<P>
All special (non-alphanumeric) characters are to be treated as
spaces. ``Penny-Wise Corporation'' would appear after
``Penny Saver,'' but before ``Pennypinching Company.''
Multiple spaces or non-alphanumeric characters are treated as a
single space when sorting. Special characters will not appear at
the beginning of a listing.

<P>
Words that are comprised of all capital letters are assumed to
be initials or acronyms, and are treated as if spaces appeared
between each letter. Hence, ``KAT Shop'' would appear at the
beginning of the K listings, before ``K-B Enterprises'' and
``K Warehouse''.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input to your program will be a list of subscribers, one per
line. The first seven digits will be the telephone number, and
the rest of the line will be the name of the subscriber as it is
to appear in the telephone directory.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Your program is to
alphabetically sort the subscriber names according to the rules
above and print the listing in order. Each line should contain
the subscriber name as it appeared in the input in the first 52
positions, left justified and space filled, followed by the seven
digit telephone number (including a space between the third and
fourth digits) in columns 56 through 63. The telephone number is
to be immediately followed by the end of line.

<P>
Your program need not handle more than 1,000 subscribers-none
of the towns S&amp;TC serves in Swamp County have populations
larger than that.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
8936251KAT Shop
7362812Penny Saver, Inc.
7251887Kate's Company
8372974Fine Foods
9273664Five Star Vending
3523984K-B Enterprises
723621899 Cents Only Store
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Fine Foods                                             837 2974
Five Star Vending                                      927 3664
KAT Shop                                               893 6251
K-B Enterprises                                        352 3984
Kate's Company                                         725 1887
99 Cents Only Store                                    723 6218
Penny Saver, Inc.                                      736 2812
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-16
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
886||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Named Extension Dialing</TITLE>
<META NAME="description" CONTENT="Named Extension Dialing">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Named Extension Dialing</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The marketing research group of the S&amp;TC (String &amp; Tin
Can) telephone company recently concluded its analysis of
leading-edge services that could be developed for its CENTREX
(business user) customers. The analysis showed that ``Named
Extension Dialing'' (NED) has the highest profit potential. To
maximize profit by minimizing non-recurring expenses, S&amp;TC
has contracted your team to develop a module for the automated
attendant system that implements NED.

<P>

<P>
<BR>
Currently when a call is placed to a business' primary number,
the caller is greeted with the pleasant, and almost human,
message ``You have reached XYZ Corporation. If you know your
party's extension, please dial it now, or stay on the line for an
operator.'' NED will allow the sentence, ``If you know your
party's name, dial the first letter of the first name followed by
the first letters of the last name of your party now,'' to be
added to the message.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input to your software module will be a directory of names and
extensions, one per line, followed by lines containing arbitrary
numeric strings dialed by people calling XYZ Corporation. These strings
will have more than 1 digit. Each
directory entry consists of a first name, one space, a last name,
one space, and a 4-digit phone extension. Names can contain any
combination of up to twenty lower and upper case letters. No
input line will exceed 80 characters.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each dialed number, the program is to output, on one line
starting in the first column, the list of extensions to which the
number could be referring. If the dialed number exactly matches
an extension, output the extension; otherwise, 
output the list of extensions that correspond with names that match the
dialed number, the numbers should be output in the same order as they
appeared in the input.
Multiple extensions that match a dialed number are to be
separated from each other by single spaces. The dialed number
must match the characters in the name exactly. (Homophonic
matching of names was already completed in an earlier contest.)
If the input fails to match any names or extensions, output `<TT>0</TT>'.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p886.eps}$
 -->
<IMG
 WIDTH="294" HEIGHT="255" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p886.jpg" 
 ALT="\epsfbox{p886.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
Barry Charles 4384
John Smith 2315
Susan Small 5764
Alexis Baxter 4652
Kim Rohde 6678
22
5764
2345
22298
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
4384 4652
5764
0
4652
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-16
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
887||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Revolutionary Calendar</TITLE>
<META NAME="description" CONTENT="Revolutionary Calendar">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Revolutionary Calendar</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The secret Swamp County Revolutionary Council
subcommittee on The Calendar has finally, after more than 20
years, agreed on the calendar system which will be used after the
revolution. Your team's job is to prepare the Council-blessed
subroutine to calculate the number of days between any two dates
in the new system. Rather than have negative or Before Revolution
dates, the old Gregorian calendar will remain in use for
pre-revolutionary dates. Since the Revolution has not yet
occurred, and the day it does will be the first day of the new
year, you will not have to deal with any old dates for now.

<P>

<P>
<BR>
The year has 13 months of 28 days, a 1 day month for the end
of year holiday, and an extra 1 day leap year month added between
the end of year month and the first day of the next year when
necessary.

<P>
The 28 day months, in order, are: Alligator, Bog, Crayfish,
Damp, Eel, Fen, Gumbo, Hurricane, Inundation, Jaguar, Kudzu,
Lake, and Marsh. The days of these months are numbered 0 through
27. The day and month are cycled <EM>simultaneously,</EM> similar
to the Mayan tzolkin calendar. The first day of the year is
0-Alligator, followed by 1-Bog, 2-Crayfish, ..., 12-Marsh,
13-Alligator, and so on. Since there are 13 of these months, and
13 is prime, all combinations of days and months are used in <!-- MATH
 $13 \cdot 28 = 364$
 -->
<SPAN CLASS="MATH">13<SUP> . </SUP>28 = 364</SPAN> days.

<P>
The end of year month, Newt, has only 1 day: 0.

<P>

<P>
<BR>
There are 683 leap years in a 2820 year cycle, somewhat like
the modern Persian calendar. Year <SPAN CLASS="MATH"><I>y</I></SPAN> will be a leap year
if <!-- MATH
 $((683 \cdot y) \bmod 2820) < 683$
 -->
<SPAN CLASS="MATH">((683<SUP> . </SUP><I>y</I>) mod 2820) &lt; 683</SPAN>. Year 0 will be a leap
year, as will years 5, 9, 13, 17, and so on. There are 3 or 4
standard years between each leap year. Using this method for leap
years will result in an error of 1 day in 2.39 million years.
While a Y2.39M committee is being formed to address this problem,
just ignore it for now.

<P>
The leap year month is Overflow, the day number is in the
range 0-682 with the first leap year in a 2820 year cycle being
0-Overflow and the last being 682-Overflow. For example,
0-Overflow-0, 1-Overflow-5, 2-Overflow-9, 0-Overflow-2820 are
valid dates, 3-Overflow-2829 is not.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of a series of lines ended by end-of-file.
Each line consists of a pair of dates in the form <!-- MATH
 $day-month-year$
 -->
<SPAN CLASS="MATH"><I>day</I> - <I>month</I> - <I>year</I></SPAN>,
with <SPAN CLASS="MATH"><I>day</I></SPAN> being at most 3 decimal digits, <SPAN CLASS="MATH"><I>month</I></SPAN>
being an alphabetic string of at most 10 characters, and <SPAN CLASS="MATH"><I>year</I></SPAN>
being in the range 0-1999999. The dates of a pair will be
separated by one or more spaces or tabs. Accept <SPAN CLASS="MATH"><I>month</I></SPAN> if
it is any unique initial substring of a valid month name ignoring
case.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case print the date difference between the dates
of the pair. The date difference is the number of days that need
to be added to the earlier date to reach the later date. The date
difference between <SPAN CLASS="MATH"><I>today</I></SPAN> and <SPAN CLASS="MATH"><I>today</I></SPAN> is 0,
between <SPAN CLASS="MATH"><I>today</I></SPAN> and <SPAN CLASS="MATH"><I>tomorrow</I></SPAN> is 1.

<P>
If either date of the pair is illegal print the official
Revolutionary Council Provisional Error Message: `<TT>eh?</TT>'.

<P>
Print the output for each test case on a separate line
starting in the first column.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
0-Alli-0 2-Overflow-2829
0-alli-0 3-Over-2829
0-a-0 0-newt-1999999
0-alligator-1997 28-bog-2000
16-jaguar-1054284 16-gum-19973
23-damp-394304 0-newt-590355
43-over-1948798 20-mar-1058036
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1033635
eh?
730484396
eh?
377773883
71606355
325343964
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-16
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
888||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Donkey</TITLE>
<META NAME="description" CONTENT="Donkey">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Donkey</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Long ago, a number of farmers wanted to sell their donkeys. These farmers lived in a small
village and the marketplace was in the capital. There was only one small road from the village
the farmers lived in to the capital, and one day the farmers left for the long journey towards the
capital. Every farmer wanted to travel as fast as possible to be the first to sell his donkey, but
there was one major problem: the donkeys were very stubborn; everytime a donkey reached a
river there was a chance that he would stay there for some time, not willing to cross the river.
However, two donkeys never rested at the same river.

<P>

<P>
<BR>
The game 'Donkey' is derived from this legend: <SPAN CLASS="MATH"><I>N</I></SPAN> players (numbered from <SPAN CLASS="MATH">1...<I>N</I></SPAN>) start with
their donkey in the village. Between the village and the capital are <SPAN CLASS="MATH"><I>M</I></SPAN> rivers. The players take
turns in throwing a fair, 6-sided die and move their donkey the thrown number of rivers towards
the capital. Since only one donkey can rest at a river, the donkey is placed at the next free river
if necessary. After player 1 has thrown the die, it is player 2's turn, etc. After <SPAN CLASS="MATH"><I>N</I></SPAN> comes 1. The
player that passes all rivers first wins the game.

<P>
This is an example of a 'Donkey' gameboard, where <SPAN CLASS="MATH"><I>N</I> = 2</SPAN> and <SPAN CLASS="MATH"><I>M</I> = 6</SPAN>. Player 1's donkey is
located at river 4 and player 2's donkey is located at river 1.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p888.eps}$
 -->
<IMG
 WIDTH="1166" HEIGHT="160" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="\epsfbox{p888.eps}">
</DIV>

<P>
Your task is to give the probability that player 1 wins the game, given a certain board position.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line contains a single integer which equals the number of test cases that follow. Each of
the following lines contains one test case. The first integer on a line gives the number of rivers
<SPAN CLASS="MATH"><I>M</I></SPAN>, the second integer gives the number of players <SPAN CLASS="MATH"><I>N</I></SPAN> (<!-- MATH
 $1 \le N \le 4$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$">4</SPAN> and <!-- MATH
 $N \times M \le 50$
 -->
<SPAN CLASS="MATH"><I>N</I>&#215;<I>M</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$">50</SPAN>). Then follow
<SPAN CLASS="MATH"><I>N</I></SPAN> integers <SPAN CLASS="MATH"><I>P</I><SUB>i</SUB></SPAN> (<!-- MATH
 $0 \le P_{i} \le M$
 -->
<SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$"><I>P</I><SUB>i</SUB><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$"><I>M</I></SPAN>, <!-- MATH
 $1 \le i \le N$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$"><I>i</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p888.gif" 
 ALT="$ \le$"><I>N</I></SPAN>), representing the position of the <SPAN CLASS="MATH"><I>i</I></SPAN>-th player. The river
closest to the village has number 1, the river closest to the capital has number <SPAN CLASS="MATH"><I>M</I></SPAN>. The village
has number 0. Two donkeys may not be positioned at the same river. However, more than one
donkey may be standing in the village. The last integer on the line gives the player, whose turn
it is.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For every situation you have to print the following line, giving the game number (1 for the first,
2 for the second, ...) and the probability player 1 wins with an accuracy of 3 decimals:

<P>

<P>
<BR>

<TT>Game <SPAN CLASS="MATH"><I>N</I></SPAN>:the probability that player 1 wins = <SPAN CLASS="MATH"><I>D</I>.<I>DDD</I></SPAN></TT>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
3
3 2 1 2 1
6 3 1 2 3 2
6 3 4 1 3 2
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
Game 1:the probability that player 1 wins = 0.667
Game 2:the probability that player 1 wins = 0.093
Game 3:the probability that player 1 wins = 0.366
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-16
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
889||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Islands</TITLE>
<META NAME="description" CONTENT="Islands">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Islands</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Now that the Eurotunnel between France and Great Britain is in operation, the French
government is thinking about a new project to expand the connections with their British neighbors.
Inspired by the movie ``Bridges of Madison County," their prime architect Clouseau has been
working on a plan to connect France to the Channel Islands by building a number of bridges.

<P>

<P>
<BR>
To minimize the costs of the bridges, a necessity to get the plan approved, Clouseau has been
working hard to find the best places to build the bridges that connect the islands to France. He
has figured out that connecting each island to France individually is not the cheapest solution; it
is cheaper to construct a bridge between one island and France, and build additional bridges to
connect the other islands indirectly. Clouseau, however, is unable to find the best places to build
the bridges because of the irregular shapes of the islands.

<P>

<P>
<BR>
By approximating the islands as circles, Clouseau was able to report his boss, Mr. Dreyfus, an
estimate of the length of the interconnecting bridges. Mr. Dreyfus, however, is not satisfied and
demands that Clouseau report by Monday the <EM>exact</EM> length of the bridges needed based on the
actual shapes of the Channel Islands. If Clouseau does not report on time he will be fired. Would
you be so kind to help out Clouseau and write a program that computes the minimum length of
the bridges needed to interconnect the Channel Islands?

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of input contains the number of test cases. A test case consists of one line holding
the number of islands (<!-- MATH
 $2 \le N \le 100$
 -->
<SPAN CLASS="MATH">2<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/889img1.png" 
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/889img1.png" 
 ALT="$ \le$">100</SPAN>), followed by <SPAN CLASS="MATH"><I>N</I></SPAN> lines that describe the islands. An island is
a polygon, which is described as a number (<!-- MATH
 $1 \le P \le 25$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/889img1.png" 
 ALT="$ \le$"><I>P</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/889img1.png" 
 ALT="$ \le$">25</SPAN>) that gives the number of points followed
by <SPAN CLASS="MATH"><I>P</I></SPAN> pairs of coordinates. Each coordinate is an integer in the range <!-- MATH
 $[-1000 .. 1000]$
 -->
<SPAN CLASS="MATH">[- 1000..1000]</SPAN>.
The points are listed in order such that by connecting consecutive points, and the last point
to the first, the perimeter of the island is given.  It is guaranteed that islands do not touch or intersect.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case output one line reporting the minimal interconnect as follows:

<P>

<P>
<BR>

<TT>The minimal interconnect consists of <SPAN CLASS="MATH"><I>N</I></SPAN> bridges with a total length of <SPAN CLASS="MATH"><I>L</I></SPAN></TT>

<P>
Where <SPAN CLASS="MATH"><I>N</I></SPAN> is the number of bridges, and <SPAN CLASS="MATH"><I>L</I></SPAN> is the total length, which should be printed as a floating
point number with an accuracy of three digits.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1
3
4 0 0 0 1 1 1 1 0
4 2 0 2 1 3 1 3 0
3 4 0 5 0 5 1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
The minimal interconnect consists of 2 bridges with a total length of 2.000
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
<b>Testsetter:</b> Joachim Wulff (Little Joey)
<br>
<b>Special thanks:</b> Ruben Spaans
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
890||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Maze (II)</TITLE>
<META NAME="description" CONTENT="Maze (II)">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Maze (II)</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Johnny likes solving puzzles. He especially likes drawing and solving mazes. However, solving
a maze he has drawn himself is too easy for him.

<P>
Since his computer is his best friend, he figures that he needs a program drawing the mazes
for him. So he starts thinking about an algorithm performing this difficult task for him and he
comes up with `Johnny's Simple Algorithm.'

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Johnny's Simple Algorithm</A>&nbsp;</FONT>
</H2>

<P>
You start with a <!-- MATH
 $M \times N$
 -->
<SPAN CLASS="MATH"><I>M</I>&#215;<I>N</I></SPAN> grid, where <SPAN CLASS="MATH"><I>M</I></SPAN> is the number of rows and <SPAN CLASS="MATH"><I>N</I></SPAN> is the number of columns of
the grid. Initially, no two cells of the grid are connected to each other, so every cell is surrounded
by walls on all four sides. The walls consist of an underscore (`<TT>_</TT>') for a horizontal wall, and a
vertical bar (`<TT>|</TT>') for a vertical one. For example, if <SPAN CLASS="MATH"><I>M</I> = 3</SPAN> and <SPAN CLASS="MATH"><I>N</I> = 4</SPAN>, the grid looks like this:

<P>
<PRE>
 _ _ _ _
|_|_|_|_|
|_|_|_|_|
|_|_|_|_|
</PRE>

<P>
Every cell of the grid has unique coordinates <SPAN CLASS="MATH">(<I>p</I>, <I>q</I>)</SPAN>. The lower left corner in the example is (1, 1),
the upper right corner is (3, 4).

<P>
After choosing the dimensions of the maze, you choose a starting cell. From now on you keep
track of a list of <EM>pending</EM> cells, which initially contains only one cell (the starting cell), and you
repeat the following steps:

<OL>
<LI>If the list is empty, you stop. The maze is ready.
</LI>
<LI>Else, you consider the most recently added cell in the list (call this cell <EM>AC</EM>). If this cell
(at the end of the list) has no <EM>unvisited</EM> neighbor cells then you remove this cell from the
list. Every cell has at most 4 neighbor cells: on the right, left, above and below. A cell is
unvisited if it has never been added to the list.
</LI>
<LI>If <EM>AC</EM> has at least one unvisited neighbor cell, you choose one of the unvisited neighbor cells
(call this cell <EM>NC</EM>), remove the wall between <EM>AC</EM> and <EM>NC</EM> and add <EM>NC</EM> to the end of the list.
</LI>
</OL>

<P>
Johnny makes a nice little program using this algorithm and it works fine, but Johnny is not
completely satisfied with the results. He is a demanding little boy and in his opinion the so-called
<EM>branching factor</EM> of the maze is too low, i.e. the generated mazes contain very long paths and too
few crossings. Therefore, the mazes are still too easy to solve for him.

<P>
A little trick can be applied to Johnny's Simple Algorithm, giving much better results. Johnny
does not know it, but you will, since it will be explained below!

<P>

<P>
<BR>
The idea behind the trick is to sometimes change the order of the cells in the list. This avoids
long paths and results in more branches. Changing the order of the cells in the list is done by
`flipping' part of the list. A <EM>flip</EM> can be specified by giving the position of a cell in the list (where
the first cell has position 1) and consists of reversing the sub-list starting at the specified cell and
ending with the last cell in the list.

<P>
For example, if the list consists of the following cells:
<!-- MATH
 \begin{displaymath}
(1,1) (1,2) (2,2) (3,2) (3,3)
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
(1, 1)(1, 2)(2, 2)(3, 2)(3, 3)
</DIV><P></P>
then a flip with starting cell number 2 results in:
<!-- MATH
 \begin{displaymath}
(1,1) (3,3) (3,2) (2,2) (1,2)
\end{displaymath}
 -->
<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
(1, 1)(3, 3)(3, 2)(2, 2)(1, 2)
</DIV><P></P>

<P>

<P>
<BR>
Now, we will reveal `Johnny's Advanced Algorithm.'

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Johnny's Advanced Algorithm</A>&nbsp;</FONT>
</H2>

<P>
The algorithm is pretty much the same as `Johnny's Simple Algorithm,' only sometimes part of
the list is flipped. The steps you repeat after choosing the dimensions of the maze, choosing the
starting cell and adding this cell to the list are:

<OL>
<LI>If the list of cells is empty, you stop. The maze is ready.
</LI>
<LI>Else you consider the last cell in the list. If this cell has no unvisited neighbor cells, then
you remove this cell from the list.
</LI>
<LI>Otherwise, you read a command. If this command is:
  <DL>
<DT><STRONG>`<TT>F</TT> <SPAN CLASS="MATH"><I>n</I></SPAN>'</STRONG></DT>
<DD>you flip the list, starting at position n.
  
</DD>
<DT><STRONG>`<TT>U</TT>' </STRONG></DT>
<DD>you go up: you remove the wall between the last cell in the list and the cell above it.
      The cell above the last cell in the list is added to the list.
  
</DD>
<DT><STRONG>`<TT>D</TT>' </STRONG></DT>
<DD>you go down.
  
</DD>
<DT><STRONG>`<TT>L</TT>' </STRONG></DT>
<DD>you go left.
  
</DD>
<DT><STRONG>`<TT>R</TT>' </STRONG></DT>
<DD>you go right.
  
</DD>
</DL>
</LI>
</OL>

<P>
Since you are taking part in a programming contest, we ask you to write a program generating
nice mazes for Johnny, using `Johnny's Advanced Algorithm,' to make him happy again. The
maximum size of a maze is 39<SPAN CLASS="MATH">&#215;</SPAN>39.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of the input contains the number of test cases. The input for every test case is
divided into three parts:

<UL>
<LI>The first line contains two integer values <SPAN CLASS="MATH"><I>M</I></SPAN> and <SPAN CLASS="MATH"><I>N</I></SPAN>, specifying the dimensions of the maze:
the number of rows <SPAN CLASS="MATH"><I>M</I></SPAN> followed by the number of columns <SPAN CLASS="MATH"><I>N</I></SPAN>.
</LI>
<LI>The second line contains the coordinates of the starting point (again, row followed by column).
</LI>
<LI>The next lines each contain a command. A command is one of the upper case characters
`<TT>F</TT>', `<TT>U</TT>', `<TT>D</TT>', `<TT>L</TT>' and `<TT>R</TT>', appearing at the start of a line. An `<TT>F</TT>'
character is followed by a space and an integer (the starting position of the flip.)
</LI>
</UL>

<P>
The input for each test case contains exactly the number of commands needed for that maze.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
The resulting mazes should be printed using spaces (`'), underscores (`<TT>_</TT>'), vertical bars (`<TT>|</TT>')
and end-of-line characters. No unnecessary whitespace should be printed. The mazes should be
followed by one blank line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
2
3 3
1 1
U
U
R
D
D
R
U
U
3 4
2 1
R
U
L
F 2
R
U
R
D
D
F 4
D
L
L
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
 _ _ _
|   | |
| | | |
|_|_ _|

 _ _ _ _
|_  |   |
|_ _  | |
|_ _ _|_|
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
<b>Testsetter:</b> Joachim Wulff (Little Joey)
<br>
<b>Special thanks:</b> Ruben Spaans
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
891||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Syntrax</TITLE>
<META NAME="description" CONTENT="Syntrax">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Syntrax</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Given a simple syntax for describing regular expressions, one can find a graphical representation
for a given regular expression using ASCII characters like `<TT>-</TT>', `', `<TT>+</TT>', and `<TT>/</TT>'.
The syntax we use can be drawn by using four different patterns:

<OL>
<LI><TT>"abc"</TT> is the terminal string `<TT>abc</TT>', represented as

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p891a.eps}$
 -->
<IMG
 WIDTH="243" HEIGHT="202" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p891a.gif" 
 ALT="\epsfbox{p891a.eps}">
</DIV>

<P>
Note that the graphical representation of every expression has a bounding box. This is the
smallest rectangle that surrounds the graphic.

<P>
</LI>
<LI>(<SPAN CLASS="MATH"><I>re</I>1&nbsp;<I>re</I>2</SPAN>) is a sequence of first expression <SPAN CLASS="MATH"><I>re</I>1</SPAN>, then expression <SPAN CLASS="MATH"><I>re</I>2</SPAN>, represented as

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p891b.eps}$
 -->
<IMG
 WIDTH="508" HEIGHT="281" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p891a.gif" 
 ALT="\epsfbox{p891b.eps}">
</DIV>

<P>
The two expressions <SPAN CLASS="MATH"><I>re</I>1</SPAN> and <SPAN CLASS="MATH"><I>re</I>2</SPAN> have to be concatenated such that the bounding boxes of
the two expressions touch and such that the `<TT>-</TT>' on the right of <SPAN CLASS="MATH"><I>re</I>1</SPAN> matches the `<TT>-</TT>' on the
left of <SPAN CLASS="MATH"><I>re</I>2</SPAN>.

<P>
</LI>
<LI>{<SPAN CLASS="MATH"><I>re</I>1&nbsp;<I>re</I>2</SPAN>} represents alternatives, either <SPAN CLASS="MATH"><I>re</I>1</SPAN> or <SPAN CLASS="MATH"><I>re</I>2</SPAN>, represented as

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p891c.eps}$
 -->
<IMG
 WIDTH="258" HEIGHT="323" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p891a.gif" 
 ALT="\epsfbox{p891c.eps}">
</DIV>
the number of `<TT>|</TT>' characters that has to be added depends on the shapes of <SPAN CLASS="MATH"><I>re</I>1</SPAN> and <SPAN CLASS="MATH"><I>re</I>2</SPAN>.
There has to be exactly one straight blank line between the bounding box of the graphical
representation of <SPAN CLASS="MATH"><I>re</I>1</SPAN> and the bounding box of <SPAN CLASS="MATH"><I>re</I>2</SPAN>. If necessary, also a number of `<TT>-</TT>'
characters has to be added on the right side of <SPAN CLASS="MATH"><I>re</I>1</SPAN> or <SPAN CLASS="MATH"><I>re</I>2</SPAN>, to make the drawing possible. Note
that the `<TT>-</TT>' on the left of <SPAN CLASS="MATH"><I>re</I>1</SPAN> and <SPAN CLASS="MATH"><I>re</I>2</SPAN> matches the `<!-- MATH
 $\backslash$
 -->
<SPAN CLASS="MATH">&#92;</SPAN>' character and that the `<TT>-</TT>'
on the right of <SPAN CLASS="MATH"><I>re</I>1</SPAN> and <SPAN CLASS="MATH"><I>re</I>2</SPAN> matches the `<!-- MATH
 $\backslash$
 -->
<SPAN CLASS="MATH">&#92;</SPAN>' character in the drawing.

<P>
</LI>
<LI>[<SPAN CLASS="MATH"><I>re</I>1</SPAN>] is a 1-or-more repetition of <SPAN CLASS="MATH"><I>re</I>1</SPAN>, represented as
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p891d.eps}$
 -->
<IMG
 WIDTH="266" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p891a.gif" 
 ALT="\epsfbox{p891d.eps}">
</DIV>

<P>
Note that the `<TT>-</TT>' on the left of <SPAN CLASS="MATH"><I>re</I>1</SPAN> matches the `<!-- MATH
 $\backslash$
 -->
<SPAN CLASS="MATH">&#92;</SPAN>' character and that the `<TT>-</TT>' on the right of
<SPAN CLASS="MATH"><I>re</I>1</SPAN> matches the `<TT>/</TT>' character in the drawing.
</LI>
</OL>

<P>

<P>
<BR>
For example the graphical representation for the regular expression
<TT>{("f" "bar") ["c"]}</TT> looks like:

<P>
<PRE>
      +===+    +=====+
---\-&gt;+ f +---&gt;+ bar +--/--&gt;
   |  +===+    +=====+  |
   |                    |
   | /---------\        |
   | |  +===+  |        |
   \-\-&gt;+ c +--/--------/
        +===+
</PRE>

<P>
Write a program that reads syntax rules and prints the size of the graphical representation.
For esthetic reasons, the entire graphic has a `<TT>-</TT>' on the left and a `<TT>-&gt;</TT>' on the right.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input consists of a line holding the number of test cases, followed by the input expressions
(one per line). The expressions are formatted according to the following grammar:

<P>
<BLOCKQUOTE>
expression :: sequence | alternatives | repetition | terminal
</BLOCKQUOTE>
<P>
<BLOCKQUOTE>sequence :: ( ws expression expression ) ws
</BLOCKQUOTE>
<P>
<BLOCKQUOTE>alternatives :: { ws expression expression } ws
</BLOCKQUOTE>
<P>
<BLOCKQUOTE>repetition :: [ ws expression ] ws
</BLOCKQUOTE>
<P>
<BLOCKQUOTE>terminal :: <TT>"</TT> character* <TT>"</TT> ws
</BLOCKQUOTE>
<P>
<BLOCKQUOTE>ws :: (&lt;<EM>space</EM>&gt; | &lt;<EM>tab</EM>&gt;)*
</BLOCKQUOTE>
<P>
<BLOCKQUOTE>character :: &lt;<EM>any character except <TT>"</TT> and control-characters (ASCII 0..31)&gt;</EM>

</BLOCKQUOTE>

<P>
Note that the grammar is specified according to the following notational conventions:

<P>
<BLOCKQUOTE>
<SPAN CLASS="MATH"><I>x</I>&nbsp;<I>y</I></SPAN> sequence: <SPAN CLASS="MATH"><I>x</I></SPAN> followed by <SPAN CLASS="MATH"><I>y</I></SPAN>
</BLOCKQUOTE>
<P>
<BLOCKQUOTE><SPAN CLASS="MATH"><I>x</I>| <I>y</I></SPAN> choice: <SPAN CLASS="MATH"><I>x</I></SPAN> or <SPAN CLASS="MATH"><I>y</I></SPAN>
</BLOCKQUOTE>
<P>
<BLOCKQUOTE><SPAN CLASS="MATH"><I>x</I></SPAN>*  repetition: zero or more occurrences of <SPAN CLASS="MATH"><I>x</I></SPAN>
</BLOCKQUOTE>
<P>
<BLOCKQUOTE><SPAN CLASS="MATH">&lt; &gt;</SPAN> used for describing a character

</BLOCKQUOTE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each expression, output a line of the form <SPAN CLASS="MATH"><I>X</I></SPAN><TT>x</TT><SPAN CLASS="MATH"><I>Y</I></SPAN> with <SPAN CLASS="MATH"><I>X</I></SPAN> and <SPAN CLASS="MATH"><I>Y</I></SPAN> the width and height of
the graphical representation of that expression.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1
{("f" "bar") ["c"]}
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
28x8
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-09-16
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
892||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Finding words</TITLE>
<META NAME="description" CONTENT="Finding words">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Finding words</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A common problem when processing incoming text is to isolate the words in the text.  This is made more
difficult by the punctuation; words have commas, ``quote marks", (even brackets) next to them, or hy-phens
in the middle of the word.  This punctuation doesn't count as letters when the words have to be looked up
in a dictionary by the program.

<P>

<P>
<BR>
For this problem, you must separate out ``clean" words from text, that is, words with no attached or embedded
non-letters.  A ``word" is any continuous string of non-whitespace characters, with whitespace characters on
each side of it.  For this problem, a ``whitespace" character is a space character or an end-of-line character,
or the start or end of the file (so that, for example, if the input file consists of `<TT>Anne Bob</TT>', where there is a
space character between the A and B but no other, then there are two words, `<TT>Anne</TT>' and `<TT>Bob</TT>').

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input will consist of lines with no more
than 60 characters in each line.  Every line will be terminated by a character which isn't whitespace (which
will be followed immediately by an end-of-line character).  The input will be terminated by a line consisting
of a single `<TT>#</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Output must be the lines of the incoming text, with
the non-letters stripped away from each word.  A non-letter is any character which is not a letter (a - z and A - Z)
and not a whitespace character.  Your program must not change the letters and space characters.  When a non-letter occurs in the middle of a
word (ie there is no whitespace character next to it), it must be simply removed (see what happens to the
word `<TT>doesn't</TT>' in the example).  A word which consists entirely of non-letters will therefore be removed entirely.

<P>

<P>
<BR>
There is a special rule for a hyphen (`<TT>-</TT>') when it is the very last character in a line:

<UL>
<LI>the word part before the hyphen and the first word part on the next line form a single word;
</LI>
<LI>this complete word must be written on a line by itself;
</LI>
<LI>you can assume that there will always be a space before the word part on the first line, and a space after
the word part on the second line. These 2 spaces must appear in the output.
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
A common problem when processing incoming text is to isolate
the words in the text.  This is made more difficult by the
punctuation; words have commas, "quote marks",
(even brackets)      next to them, or hy-
phens in the middle of the word.  This punctuation doesn't
count as letters when the words have to be looked up in a
# dictionary by the 12345 "**&amp;! program.
#
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
A common problem when processing incoming text is to isolate
the words in the text  This is made more difficult by the
punctuation words have commas quote marks
even brackets      next to them or 
hyphens
 in the middle of the word  This punctuation doesnt
count as letters when the words have to be looked up in a
 dictionary by the   program
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
893||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Y3K Problem</TITLE>
<META NAME="description" CONTENT="Y3K Problem">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Y3K Problem</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
We have heard a lot recently about the Y2K problem.  According to the doom sayers, planes will fall out of the
skies, businesses will crash and the world will enter a major depression as the bugs in software and hardware
bite hard.  While this panic is a very satisfactory state of affairs for the computing profession, since it is
leading to lots of lucrative jobs, it will have a tendency to bring the profession into disrepute when almost
no problems occur on 1/1/00.  To help avoid this unseemly behaviour on any future occasion, you must write a
program which will give the correct date for (almost) any number of future days - in particular, it must
correctly predict the date <SPAN CLASS="MATH"><I>N</I></SPAN> days ahead of any given date, where <SPAN CLASS="MATH"><I>N</I></SPAN> is a number less than 1,000,000,000 and
the given date is any date before the year 3000.

<P>

<P>
<BR>
Remember that in the standard Gregorian calendar we use there are 365 days in a year, except for leap years
in which there are 366.  Leap years are all years divisible by 4 and not divisible by 100, except for those
divisible by 400.  Thus 1900 was not a leap year, 1904, 1908 ... 1996 were leap years, 2000 will be a leap year,
2100 will not be a leap year, etc.  The number of days in each month in a normal year is
31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31; in a leap year, the second month has 29 days.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input will consist of lines
containing four numbers, separated by one or more spaces.  The first number on each line will be the number
of days you have to predict (between 0 and 999999999), followed by the date in the format <!-- MATH
 $DD\ MM\ YYYY$
 -->
<SPAN CLASS="MATH"><I>DD</I>&nbsp;<I>MM</I>&nbsp;<I>YYYY</I></SPAN>
where <SPAN CLASS="MATH"><I>DD</I></SPAN> is the day of the month (1 to 31), <SPAN CLASS="MATH"><I>MM</I></SPAN> is the month (1 to 12), and <SPAN CLASS="MATH"><I>YYYY</I></SPAN> is the year (1998 to 2999),
all inclusive.  The input will be terminated by a line containing four <TT>0</TT>'s.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each line of input, one output line should be produced.
This line should contain the date which is the required number of days ahead of the input date, written in the
same format as the input dates.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1 31 12 2999
40 1 2 2004
60 31 12 1999
60 31 12 2999
146097 31 12 1999
999999 1 1 2000
0 0 0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1 1 3000
12 3 2004
29 2 2000
1 3 3000
31 12 2399
27 11 4737
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
894||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Juggling Trams</TITLE>
<META NAME="description" CONTENT="Juggling Trams">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Juggling Trams</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
After many years of faithful service, the good city of Melbourne has decided to upgrade all of its aged green
and gold trams to newer, more fashionable models.  But alas, the pursuit of fashion has not been without its costs.
The newer trams, whilst looking stunning, can only travel in straight lines.

<P>

<P>
<BR>
But this has not deterred the Melbourne City Council.  In order to deal with this problem, they have laid more tracks
and built more trams, so that the city is now a vast grid of tram tracks criss-crossing throughout the city.

<P>

<P>
<BR>
For simplification, consider the city to be a large grid of roads running north-south and east-west.  Each road has a
tram line running along it.  You, the humble traveller, wish to travel south and west through this grid using the new
tram system.

<P>

<P>
<BR>
Trams run along each road at <SPAN CLASS="MATH"><I>t</I></SPAN>-minute intervals, where <SPAN CLASS="MATH"><I>t</I></SPAN> is a fixed time that has been determined by the Melbourne
City Council.  Thus, if you stand at any street intersection, you will see a tram travelling south every <SPAN CLASS="MATH"><I>t</I></SPAN> minutes,
and a tram travelling west every <SPAN CLASS="MATH"><I>t</I></SPAN> minutes (although the trams will not necessarily pass by at the same times).
We will assume that trams run at a constant speed, and take no time to pick up or drop off passengers.

<P>

<P>
<BR>
Based on your training in city traversal optimisation theory, you wish to write a computer program that will find
the fastest route from your starting point to your finishing point through the grid.  You can hop on or off a tram
at any intersection, and you may need to wait at some intersections for a tram to come along.  You may assume that
hopping on or off a tram takes no time at all.  So, for instance, if a southward tram passes through an intersection
at the same time as a westward tram, you may hop off the southward tram and immediately hop onto the westward tram.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input will consist of a number of data sets.  The first line of each data set will be of the form

<P>

<P>
<BR>

<SPAN CLASS="MATH"><I>t</I>&nbsp;<I>m</I></SPAN>

<P>

<P>
<BR>
where <SPAN CLASS="MATH"><I>t</I></SPAN> and <SPAN CLASS="MATH"><I>m</I></SPAN> are both integers.  <SPAN CLASS="MATH"><I>t</I></SPAN> represents the number of minutes between each tram travelling down a
street, as described earlier, with <!-- MATH
 $1 \le t \le 60$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/894img1.png" 
 ALT="$ \le$"><I>t</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/894img1.png" 
 ALT="$ \le$">60</SPAN> inclusive.  <SPAN CLASS="MATH"><I>m</I></SPAN> represents the number of minutes it takes a
tram to move from one intersection to the next, with <SPAN CLASS="MATH"><I>m</I> &gt; 0</SPAN>.  The second line of the data set will be of the form

<P>

<P>
<BR>

<SPAN CLASS="MATH"><I>n</I>&nbsp;<I>e</I></SPAN>

<P>

<P>
<BR>
where <SPAN CLASS="MATH"><I>n</I></SPAN> is the number of north-south streets and <SPAN CLASS="MATH"><I>e</I></SPAN> is the number of east-west streets.  Both <SPAN CLASS="MATH"><I>n</I></SPAN> and <SPAN CLASS="MATH"><I>e</I></SPAN> will be
between 1 and 200 inclusive.  North-south streets will be numbered from 1 to <SPAN CLASS="MATH"><I>n</I></SPAN>, where 1 is the eastmost street
and <SPAN CLASS="MATH"><I>n</I></SPAN> is the westmost street.  East-west streets will be numbered from 1 to <SPAN CLASS="MATH"><I>e</I></SPAN>, where 1 is the northmost street
and <SPAN CLASS="MATH"><I>e</I></SPAN> is the southmost street.  The third line will be of the form

<P>

<P>
<BR>

<!-- MATH
 $sx\ sy\ fx\ fy$
 -->
<SPAN CLASS="MATH"><I>sx</I>&nbsp;<I>sy</I>&nbsp;<I>fx</I>&nbsp;<I>fy</I></SPAN>

<P>

<P>
<BR>
and will describe the start and end points of your journey.  Your journey must begin at the intersection of
north-south street <SPAN CLASS="MATH"><I>sx</I></SPAN> and east-west street <SPAN CLASS="MATH"><I>sy</I></SPAN>, and must end at the intersection of north-south street <SPAN CLASS="MATH"><I>fx</I></SPAN> and
east-west street <SPAN CLASS="MATH"><I>fy</I></SPAN>.  The fourth line will contain a single integer representing the number of minutes after
midnight when your journey begins.

<P>

<P>
<BR>
Following this will be a line for each north-south street of the form

<P>

<P>
<BR>

<SPAN CLASS="MATH"><I>first</I>&nbsp;<I>k</I></SPAN>

<P>

<P>
<BR>
where <SPAN CLASS="MATH"><I>first</I></SPAN> is the number of minutes after midnight when the first tram leaves the eastmost intersection
along that street, and <SPAN CLASS="MATH"><I>k</I></SPAN> is the total number of southward trams that will travel down that street throughout
the day (<SPAN CLASS="MATH"><I>k</I> &gt; 0</SPAN>).  Note that these <SPAN CLASS="MATH"><I>k</I></SPAN> trams will be spaced by intervals of <SPAN CLASS="MATH"><I>t</I></SPAN> minutes.  A line

<P>

<P>
<BR>

<SPAN CLASS="MATH"><I>first</I>&nbsp;<I>k</I></SPAN>

<P>

<P>
<BR>
will then be given for each east-west street, where <SPAN CLASS="MATH"><I>first</I></SPAN> is the number of minutes after midnight when the
first tram leaves the northmost intersection along that street, and <SPAN CLASS="MATH"><I>k</I></SPAN> is the total number of westward trams
that will travel down that street throughout the day (<SPAN CLASS="MATH"><I>k</I> &gt; 0</SPAN>).

<P>

<P>
<BR>
Input will finish with <SPAN CLASS="MATH"><I>t</I> = 0</SPAN> and <SPAN CLASS="MATH"><I>m</I> = 0</SPAN>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
Output must be one line for each case of input.
If it is possible to travel from the start point to the finish point, you must output a line of the form:

<P>

<P>
<BR>

<TT>You arrive at <SPAN CLASS="MATH"><I>hh</I></SPAN>:<SPAN CLASS="MATH"><I>mm</I></SPAN>.</TT>

<P>

<P>
<BR>
where <SPAN CLASS="MATH"><I>hh</I> : <I>mm</I></SPAN> is the earliest time of day (using a 24-hour clock) at which you can arrive at your destination.
Both hours and minutes must be two digits; use a leading `<TT>0</TT>' if necessary.  You may assume that if a solution exists,
the time of arrival will be before the next midnight.

<P>

<P>
<BR>
If it is impossible to reach the destination, output the line: `<TT>Impossible.</TT>'

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
30 3
5 4
2 2 5 4 
93 
30 5 
100 6 
115 4 
100 7 
30 8 
10 10 
0 11 
20 9 
10 10 
30 3 
5 4 
2 2 5 4 
300 
30 5 
100 6 
115 4 
100 7 
30 8 
10 10 
0 11 
20 9 
10 10 
0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
You arrive at 01:52.
Impossible.
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
<b>Testsetter:</b> Joachim Wulff (Little Joey)
<br>
<b>Special thanks:</b> Ruben Spaans
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
895||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Word Problem</TITLE>
<META NAME="description" CONTENT="Word Problem">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Word Problem</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
In a popular puzzle often found in newspapers, a set of letters is provided, and the challenge is to
find how many different words can be made from these letters.  This problem is designed to take all
the fun out of it by automating the process.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input will be in two parts.
The first part will be a dictionary of less than 1000 lines, containing words to be searched for.
Each line will contain one word of up to 10 characters.  Each word will be in lower case.  The words
will be in alphabetical order.  The end of the dictionary will be indicated by a line consisting of a
single `<TT>#</TT>' character.

<P>

<P>
<BR>
After the dictionary there will be data for several word puzzles, each on a separate line.  Each puzzle
line will have from one to 7 lower case letters, separated by one or more spaces.  Your task is to arrange
some or all of these letters to form words in the dictionary.  The list of puzzles will be terminated by a
line consisting of a single `<TT>#</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each puzzle line in the input, a single line of output
should be produced, containing the number of different words in the dictionary that can be formed using the
letters in the puzzle line.

<P>

<P>
<BR>
Note that each letter may be used only as many times as it appears in the puzzle line.  For instance,
the puzzle line `<TT>u l l</TT>' may produce the word `<TT>lul</TT>' but not the word `<TT>lull</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
ant
bee
cat
dog
ewe
fly
gnu
#
b e w
b b e e w w
t a n c u g d
#
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
0
2
3
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
896||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Board Game</TITLE>
<META NAME="description" CONTENT="Board Game">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Board Game</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A surprisingly complex game can be played between two players on a simple one-dimensional board with up
to 60 holes; each player has counters of one colour (indicated here by letters like W or R) which go into
the holes.  A player may move a counter anywhere on the board, as long as it does not land on or jump over
any other counter.  The object of the game is to block the other player so he or she has no allowable moves.
In a game with one counter each, the first player can force a win on the first move by moving their counter
next to the other counter.  Whenever the second player tries to move away, the first player moves next to them.
Eventually the second player will have no moves left.  If the first player does not take this first move, then
the second player can force a win.  Convince yourself that these statements are true in this example:

<P>
<DIV ALIGN="CENTER">
<TABLE COLS=12 BORDER FRAME=BOX RULES=GROUPS>
<COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>
&nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> W </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> R </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; 
</TD></TR>
</TABLE>

</DIV>

<P>
With two counters each, the game is more complex.  For example, in the following situation, if W moves first
they can force a win by moving the leftmost counter one square to the right, or the rightmost counter one
square to the left.  Any other move (for example, moving one of the W counters next to an R counter) will mean
than R can force a win.  Try it and convince yourself this is true.

<P>
<DIV ALIGN="CENTER">
<TABLE COLS=12 BORDER FRAME=BOX RULES=GROUPS>
<COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>
&nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> W </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> R </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> W </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> R 
</TD></TR>
</TABLE>

</DIV>

<P>
Even more complex situations arise with more counters; for example, draws can occur (ie neither player can
force a win) as in the following case:

<P>
<DIV ALIGN="CENTER">
<TABLE COLS=12 BORDER FRAME=BOX RULES=GROUPS>
<COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER><COLGROUP><COL ALIGN=CENTER>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>
&nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> W </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> W </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> R </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> W </TD>
<TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> R </TD>
<TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> R 
</TD>
<TD VALIGN=BASELINE ALIGN=CENTER NOWRAP> &nbsp;&nbsp; </TD>
</TR>
</TABLE>

</DIV>

<P>
It is embarrassing that it is difficult to see how to win such a simple game.  Please write a program so
that I can play this safely by always knowing the winning first move, or, when there is no winning first
move, whether the game is lost or can be drawn.  Assume that a player will always win the game if it is in
their power, and will always try to avoid defeat.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Each line of input will be a game
description, which is a string of up to 60 digits.  Each digit represents a hole on the board: `<TT>0</TT>' for an empty
hole, `<TT>1</TT>' for a counter belonging to the first player, or `<TT>2</TT>' for a counter belonging to the second player.  Both
players will have the same number of counters, and there will be at least two empty holes on the board.
The input will be terminated by a line consisting of a single zero.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each input game description, one line of output
must be produced.  This line must be:

<UL>
<LI>`<TT>0</TT>' if the game cannot be won but can be drawn;
</LI>
<LI>`<TT>2</TT>' if the first player will lose whatever move is made;
</LI>
<LI>`<TT>1</TT>' if there is a winning first move.  In this case, the `<TT>1</TT>' must be followed by a description of the winning move.
The winning move must be given by two numbers, the first giving the hole in which the move begins, and the second
giving the hole to which the piece moves.  The holes are assumed to be numbered from left to right with the leftmost
being number 1.  If there is more than one winning move, choose the move starting from the smallest numbered hole.
If there is more than one of these, choose whichever moves to the smallest numbered hole.
</LI>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
000200100000
000100200102
000010201002
000010200102
001020020001100002000
010122010122
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1 7 5
1 4 5
1 5 4
2
1 13 15
1 2 1
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
897||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Anagrammatic Primes</TITLE>
<META NAME="description" CONTENT="Anagrammatic Primes">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Anagrammatic Primes</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A number greater than one is <EM>prime</EM> if it has no divisors other than itself and 1 (note that 1 is not prime).
For example, 23 is prime and 35 is not prime because 35 = 7 <SPAN CLASS="MATH">&#215;</SPAN> 5.  When the digits of a number are rearranged,
its primeness may change - for example, 35 is not prime but 53 is.  For this problem, you have to find numbers
which are prime no matter how you rearrange their digits.  For example, all of the numbers 113, 131 and 311 are
prime, so we say that 113 is an <EM>anagrammatic prime</EM> (also 131 and 311 are anagrammatic primes).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Each line of input will contain a
single positive number <SPAN CLASS="MATH"><I>n</I></SPAN>, less than 10,000,000.  You must find the first anagrammatic prime which is larger
than <SPAN CLASS="MATH"><I>n</I></SPAN> and less than the next power of 10 greater than <SPAN CLASS="MATH"><I>n</I></SPAN>.  The input will be terminated by a line consisting
of a single `<TT>0</TT>'.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each number in the input, one line of output must
be produced.  This output line should contain either the next anagrammatic prime, as described above, or `<TT>0</TT>' if
there is no anagrammatic prime in the range defined.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
10
16
900
113
8000000
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
11
17
919
131
0
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
898||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Hole Cutter</TITLE>
<META NAME="description" CONTENT="Hole Cutter">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Hole Cutter</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A factory which specialises in making cuts in the interior of flat sheets has just acquired a new cutter
which can make cuts much more freely than any of their previous machines, and they want you to write a program
to calculate exactly what has happened when a complex series of cuts are made.  In particular, they need to
know the number of holes which are formed in the sheet by the cuts.

<P>
A cut is a simple straight line, parallel to either the <SPAN CLASS="MATH"><I>x</I></SPAN> or <SPAN CLASS="MATH"><I>y</I></SPAN> axis.  A hole is an area completely surrounded
by cuts.  Note that a hole must have positive area (thus a single cut cannot form a hole on its own).

<P>
Here are some examples of situations that can arise after cutting:

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p898.eps}$
 -->
<IMG
 WIDTH="731" HEIGHT="206" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p898.gif" 
 ALT="\epsfbox{p898.eps}">
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input will consist of several cutting
operation descriptions.  Each description starts with a number, <SPAN CLASS="MATH"><I>N</I></SPAN>, giving the number of cuts in the operation,
followed by <SPAN CLASS="MATH"><I>N</I></SPAN> lines (<!-- MATH
 $1 < N < 100$
 -->
<SPAN CLASS="MATH">1 &lt; <I>N</I> &lt; 100</SPAN>) giving the actual cuts.  Each cut will be given by four whole numbers
separated by one or more spaces, the first two giving the <SPAN CLASS="MATH">(<I>x</I>, <I>y</I>)</SPAN> coordinates of the start of the cut line
and the second two defining the end of the cut line; the coordinate values will always be whole numbers
between 0 and 9999 inclusive.  You may assume that the metal sheet extends beyond this range, so that all
points are within the sheet's interior.  The input will be terminated by a line consisting of a single 0,
ie a cutting operation description with <SPAN CLASS="MATH"><I>N</I> = 0</SPAN>.  The first example given below describes the left hand picture above.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each cutting operation description in the input,
one line of output should be produced.  This line should contain the number of distinct holes in the sheet after
the cuts.  Note that the minimum area of any hole is 1 square unit.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
6
1 0 1 1
2 0 2 2
3 1 3 2
1 0 2 0
1 1 3 1
2 2 3 2
2
0 1 2 1
1 2 1 0
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
2
0
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
899||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.47)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Colour Circles</TITLE>
<META NAME="description" CONTENT="Colour Circles">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Colour Circles</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
A very colourful one-person game can be played as follows.  First you select a set of colours.  Then you draw
at least three circles using some or all of the colours.  You may use a colour more than once.  There will be
at least as many circles as there are colours.  You then draw coloured arrows to connect some of these circles.
Any number of arrows, with any colours, may be used to connect any pair of circles.  You may draw two arrows in
opposite directions if desired.

<P>

<P>
<BR>
For example, if we use the four colours R, G, B, and Z and four circles then we could have the following situation:

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p899.eps}$
 -->
<IMG
 WIDTH="257" HEIGHT="232" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p899.gif" 
 ALT="\epsfbox{p899.eps}">
</DIV>

<P>
Three different circles are then picked from the set; two of them have a counter placed inside, while the
third is the ``target" circle.  A counter may be moved from one circle to another along an arrow (in the direction
of the arrow), but only if (i) the other counter is not in the circle being moved to, and (ii) the colour of the
arrow is the same as the colour of the circle the other counter is in.  A single counter may be moved several
times in succession - they don't have to be moved alternately.  The aim is to get one of the counters into the
target circle using the smallest number of moves; if the target circle can't be reached, the game is  ``impossible".

<P>

<P>
<BR>
For example, in the picture above, if one counter is in the B circle, the other counter is in the Z circle and the
target is the G circle, then the game can only be won by moving the Z counter to the R circle (since a B arrow runs
in that direction), which makes it possible to move the B counter to the Z circle along the R arrow, and the R
counter can now be moved to the G circle along the Z arrow, for a total of three moves.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
Input will consist of descriptions of
several games, using numbers instead of colours.  The first line of each game description contains five
numbers, <SPAN CLASS="MATH"><I>N</I></SPAN>, <SPAN CLASS="MATH"><I>R</I></SPAN>, <SPAN CLASS="MATH"><I>S</I></SPAN>, <SPAN CLASS="MATH"><I>T</I></SPAN> and <SPAN CLASS="MATH"><I>M</I></SPAN>, where <SPAN CLASS="MATH"><I>N</I></SPAN> is the number of circles in the game (they will be numbered 1 to <SPAN CLASS="MATH"><I>N</I></SPAN>,
with <SPAN CLASS="MATH"><I>N</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p899.gif" 
 ALT="$ \le$">100</SPAN>), <SPAN CLASS="MATH"><I>R</I></SPAN> and <SPAN CLASS="MATH"><I>S</I></SPAN> are the numbers of the circles the two counters start in, <SPAN CLASS="MATH"><I>T</I></SPAN> is the number of the
target circle, and <SPAN CLASS="MATH"><I>M</I></SPAN> is the total number of arrows connecting the circles (<!-- MATH
 $M \le 5,000$
 -->
<SPAN CLASS="MATH"><I>M</I><IMG
 WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/8/p899.gif" 
 ALT="$ \le$">5, 000</SPAN>).  After this will
come several lines (maximum length 60 characters each) giving the colours of the circles in order from
circle 1 to circle <SPAN CLASS="MATH"><I>N</I></SPAN>, with up to 20 numbers per line, separated by one or more spaces.  The colours are
denoted by numbers from 1 to <SPAN CLASS="MATH"><I>N</I></SPAN> - some of these numbers may be unused. Then come <SPAN CLASS="MATH"><I>M</I></SPAN> lines which define the
arrows, in no particular order.  Each contains three numbers; the first is the number of the starting circle,
the second the number of the ending circle, and the third is the colour of the arrow.  The input will be
terminated by a line consisting of a five zeroes.  The first example below describes the picture above.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each game description in the input, one line
of output must be produced.  This line should contain the minimum number of moves to complete the game,
or `<TT>0</TT>' if the game is impossible.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
4 2 3 4 7
1 2 3 4
1 4 3
1 4 4
2 3 1
3 1 2
4 2 3
4 3 2
4 3 1
5 3 4 1 8
2 3 2 1 4
2 1 2
4 1 5
4 5 3
5 1 4
3 2 1
3 2 2
5 3 3
3 5 1
0 0 0 0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
3
4
</PRE>

<P>
<BR><HR>
<ADDRESS>
Miguel Revilla
2004-07-08
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
900||||||false||||||
<HTML>
<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 1: Problem A</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem A</H1>

<H1 align="center">Brick Wall Patterns</H1>
</font>

<P align="justify">
If we want to build a brick wall out of the usual size of brick which
has a length twice as long as its height, and if our wall is to be two
units tall, we can make our wall in a number of patterns, depending on
how long we want it. From the figure one observe that:

<p>
<center>
<IMG SRC="http://uva.onlinejudge.org/external/9/p900.gif" >
</center>
<ul>
<li> There is just one wall pattern which is 1 unit wide - made by
putting the brick on its end. 
<li> There are 2 patterns for a wall of length 2: two side-ways
bricks laid on top of each other and two bricks long-ways up put next
to each other. 
<li> There are three patterns for walls of length 3.
</ul>

How many patterns can you find for a wall of length 4? And, for a wall
of length 5?

<FONT color="#0000FF"><H2>Problem</H2></FONT>

Your task is to write a program that given the length of a wall,
determines how many patterns there may be for a wall of that length.


<FONT color="#0000FF"><H2>Intput</H2></FONT>

Your program receives a sequence of positive integers, one per line,
each representing the length of a wall. The maximum value for the wall
is length 50. The input terminates with a 0.

<FONT color="#0000FF"><H2>Output</H2></FONT>

For each wall length given in the input, your program must output the
corresponding number of different patterns for such a wall in a
separate line.

<FONT color="#0000FF"><H2>Sample Intput</H2></FONT>
<pre>
1
2
3
0
</pre>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>
<pre>
1
2
3
</pre>


<i>
Fernando Silva, CPUP'2003 Round 1<br>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto
</i>

</body>
</html>

______________________________________________________
901||||||false||||||
<HTML>
<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 1: Problem B</TITLE>
</HEAD>

<BODY >

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem B</H1>

<H1 align="center">From Databases to XML</H1>
</font>

<P align="justify">
XML is becoming more and more the designated format for information
exchange. As most of the currently stored information resides in
databases, a way to convert it from the relational data model to a XML
format is required.  

<P align="justify">
In this problem we present a transformation rule
suitable for a restricted subset of relational databases, namely 

<UL>
<LI><P align="justify">a database is defined by a set of table headers like
  <code>R(#A, B, C)</code> where <TT>R</TT> is the name of the table, and
  <code>#A</code>, <TT>B</TT> and <TT>C</TT> the names of the columns; 
</LI>
<LI><P align="justify">a column with a name starting by "<code>#</code>" is the key of the
  corresponding table, which is different in every table line and is
  thus used to identify the lines; 
</LI>
<LI><P align="justify"> a column <TT>B</TT> in a table <TT>R</TT>, other than the key, can
either be a simple attribute or a reference to a table <TT>S</TT> if the name
of the column <TT>B</TT> is mentioned in the key <code>#B</code> of table <TT>  S</TT>, meaning that the table <TT>R</TT> depends on table <TT>S0</TT>; 
</LI>
<LI><P align="justify"> there is exactly one table that does not depend on any other; 
</LI>
<LI><P align="justify"> each table contains at most one reference; 
</LI>
<LI><P align="justify"> a table may reference itself; 
</LI>
<LI><P align="justify"> the lines in each table are represented in the
  same form of the 
  table header, but with the specific values for the line instead of
  the names of the columns.  
</LI>
</UL>

<P align="justify">
An example is of a database with three tables, R, S and T, and the
corresponding XML translation is as follows:

<PRE>
-------------------     ------------------------------
|  S(#C,A,D)      |     |  &lt;DB&gt;                |
|  R(#A,B)        |     |  &lt;R #A="a1" B="b1"&gt;  |
|  T(E,A)         |     |  &lt;S #C="c2" D="d3"&gt;  |
|  data           |     |  &lt;/S&gt;                |
|  T(e1,a2)       |     |  &lt;S #C="c3" D="d1"&gt;  |
|  S(c3,a1,d1)    |     |  &lt;/S&gt;                |
|  S(c1,a2,d2)    |     |  &lt;/R&gt;                |
|  S(c2,a1,d3)    |     |  &lt;R #A="a2" B="b2"&gt;  |
|  R(a1,b1)       |     |  &lt;S #C="c1" D="d2"&gt;  |
|  R(a2,b2)       |     |  &lt;/S&gt;                |
-------------------     |  &lt;T E="e1"&gt;          |
                        |  &lt;/T&gt;                |
                        |  &lt;/R&gt;                |
                        |  &lt;/DB&gt;               |
                        ------------------------------
</PRE>

<P align="justify">
The translation to XML is done according to the following rules:

<UL>
<LI>there is a main element called <TT>DB</TT>; 
</LI>
<LI><P align="justify"> an element called <TT>X</TT> starts with a tag
called <code>&lt;X&gt;</code> 
  and ends with a  tag called <code>&lt;/X&gt;</code>;  
</LI>
<LI><P align="justify"> each line in a table <code>R(#A, B)</code> is represented by an
  element called R and the columns which are not references to tables
  are represented by a pair "<TT>column_name=value</TT>" inside the
  opening tag <code>&lt;R #A="a1" B= "b1"&gt; ... &lt;/R&gt;</code>; 
</LI>
<LI><P align="justify">
 columns that are references are not explicitly represented but
  only implicitly by including the element of the corresponding line
  inside the element of the referred line, that is, between the
  opening and closing tags of the element as shown in the example.
</LI>
</UL>

<FONT color="#0000FF"><H2>Problem</H2></FONT>
Given a database dump, produce a XML translation for it according to
the rules above. In case there are several direct sub-elements for the
same element, order them first by the element name itself then by the
first argument, second argument, etc. 

<P align="justify">
In the example above, both <TT>T</TT> and <TT>S</TT> include a reference to
  <TT>R</TT>, via the column <TT>A</TT>. The translations of the <TT>S</TT> and
  <TT>T</TT> data-lines are embedded in the translation for the
  corresponding <TT>R</TT> line, the <TT>S</TT> data-lines before the <TT>  T</TT> data-lines. 

<FONT color="#0000FF"><H2>Input</H2></FONT>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

The input is a sequence of text lines.  The first lines contain table
headers, in no particular order, followed by a line with the word
"<TT>data</TT>" and then the remainin lines, one for each table
data-line.  The input is guaranteed to obey the rules mentioned above,
namely, there is exactly one table header with no references to other
tables and the other tables have at most one reference.  

<FONT color="#0000FF"><H2>Output</H2></FONT>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

The output is the corresponding XML translation following the rules
defined above. It should have just one tag in each line, left
justified. Use single spaces to separate attributes inside tags and no
extra spaces, for instance around "=".  

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
S(#C,A,D)
R(#A,B)
T(E,A)
data
T(e1,a2)
S(c3,a1,d1)
S(c1,a2,d2)
S(c2,a1,d3)
R(a1,b1)
R(a2,b2)
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
&lt;DB&gt;
&lt;R #A="a1" B="b1"&gt;
&lt;S #C="c2" D="d3"&gt;
&lt;/S&gt;
&lt;S #C="c3" D="d1"&gt;
&lt;/S&gt;
&lt;/R&gt;
&lt;R #A="a2" B="b2"&gt;
&lt;S #C="c1" D="d2"&gt;
&lt;/S&gt;
&lt;T E="e1"&gt;
&lt;/T&gt;
&lt;/R&gt;
&lt;/DB&gt;
</PRE>
<BR><HR>
<ADDRESS>
Gabriel David, CPUP'2003 Round 1<br>
University of Porto Local Contest
</ADDRESS>
</BODY>
</HTML>

______________________________________________________
902||||||false||||||
<HTML>
<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 1: Problem C</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem C</H1>

<H1 align="center">Password Search</H1>
</font>

<P align="justify">
Being able to send encoded messages during World War II was very
important to the Allies. The messages were always 
sent after being encoded with a known password. Having a fixed
password was of course insecure, thus there was a need to change it
frequently. However, a mechanism was necessary to send the new
password. One of the mathematicians working in the cryptographic team
had a clever idea that was to send the password hidden within the
message itself. The interesting point was that the receiver of the
message only had to know the size of the password and then search for
the password within the received text. 

<P align="justify">
A password with size N can be
found by searching the text for the most frequent substring with N
characters. After finding the password, all the substrings that
coincide with the password are removed from the encoded text. Now, the
password can be used to decode the message. 

<FONT color="#0000FF"><H2>Problem</H2></FONT>
Your mission has been
simplified as you are only requested to write a program that, given
the size of the password and the encoded message, determines the
password following the strategy given above. 

<P align="justify">
To illustrate your task,
consider the following example in which the password size is three
(N=3) and the text message is just <tt>baababacb</tt>. The password would
then be <tt>aba</tt> because this is the substring with size 3 that appears
most often in the whole text (it appears twice) while the other six
different substrings appear only once (<tt>baa</tt> ; <tt>aab</tt> ;
<tt>bab</tt> ; <tt>bac</tt> ; <tt>acb</tt>). 

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify">
The input file contains several test cases, each of them consists of one line with the size of the
password, 0 < N &le; 10, followed by the text representing the
encoded message. To simplify things, you can assume that the text only
includes lower case letters. 

<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify">
For each test case, your program should print as output a line with the password string. 


<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
3 baababacb
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
aba  
</PRE>

<BR><HR>
<ADDRESS>
Ricardo Lopes, CPUP'2003 Round 1<br>
University of Porto local Contest
</ADDRESS>
</BODY>
</HTML>

______________________________________________________
903||||||false||||||
<HTML>
<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 1: Problem D</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem D</H1>

<H1 align="center">Spiral of Numbers</H1>
</font>

<P align="justify">
Consider an infinite square grid with a clockwise spiral of consecutive
positive integers. Number 1 is placed at the center, with 2 at its
right, 3 bellow 2, and so one, and so forth. Having placed all number
from 1 to <I><FONT COLOR="#000000">n-1</FONT></I>, <I><FONT COLOR="#000000">n</FONT></I>
is placed in the same line with <I><FONT COLOR="#000000">n-1</FONT></I> and
<I><FONT COLOR="#000000">n-2</FONT></I> unless the cell to the right of the
<I><FONT COLOR="#000000">n-1</FONT></I>, in the [<I><FONT COLOR="#000000">n-2</FONT></I>,
<I><FONT COLOR="#000000">n-1</FONT></I>] direction, is empty, in wich case
<I><FONT COLOR="#000000">n</FONT></I> is placed in this cell. The central
11x11 square of the spiral is shown in the figure bellow.


<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">111</TD>
<TD ALIGN="CENTER">112</TD>
<TD ALIGN="CENTER">113</TD>
<TD ALIGN="CENTER">114</TD>
<TD ALIGN="CENTER">115</TD>
<TD ALIGN="CENTER">116</TD>
<TD ALIGN="CENTER">117</TD>
<TD ALIGN="CENTER">118</TD>
<TD ALIGN="CENTER">119</TD>
<TD ALIGN="CENTER">120</TD>
<TD ALIGN="CENTER">121</TD>
</TR>
<TR><TD ALIGN="CENTER">110</TD>
<TD ALIGN="CENTER">73</TD>
<TD ALIGN="CENTER">74</TD>
<TD ALIGN="CENTER">75</TD>
<TD ALIGN="CENTER">76</TD>
<TD ALIGN="CENTER">77</TD>
<TD ALIGN="CENTER">78</TD>
<TD ALIGN="CENTER">79</TD>
<TD ALIGN="CENTER">80</TD>
<TD ALIGN="CENTER">81</TD>
<TD ALIGN="CENTER">82</TD>
</TR>
<TR><TD ALIGN="CENTER">109</TD>
<TD ALIGN="CENTER">72</TD>
<TD ALIGN="CENTER">43</TD>
<TD ALIGN="CENTER">44</TD>
<TD ALIGN="CENTER">45</TD>
<TD ALIGN="CENTER">46</TD>
<TD ALIGN="CENTER">47</TD>
<TD ALIGN="CENTER">48</TD>
<TD ALIGN="CENTER">49</TD>
<TD ALIGN="CENTER">50</TD>
<TD ALIGN="CENTER">83</TD>
</TR>
<TR><TD ALIGN="CENTER">108</TD>
<TD ALIGN="CENTER">71</TD>
<TD ALIGN="CENTER">42</TD>
<TD ALIGN="CENTER">21</TD>
<TD ALIGN="CENTER">22</TD>
<TD ALIGN="CENTER">23</TD>
<TD ALIGN="CENTER">24</TD>
<TD ALIGN="CENTER">25</TD>
<TD ALIGN="CENTER">26</TD>
<TD ALIGN="CENTER">51</TD>
<TD ALIGN="CENTER">84</TD>
</TR>
<TR><TD ALIGN="CENTER">107</TD>
<TD ALIGN="CENTER">70</TD>
<TD ALIGN="CENTER">41</TD>
<TD ALIGN="CENTER">20</TD>
<TD ALIGN="CENTER">7</TD>
<TD ALIGN="CENTER">8</TD>
<TD ALIGN="CENTER">9</TD>
<TD ALIGN="CENTER">10</TD>
<TD ALIGN="CENTER">27</TD>
<TD ALIGN="CENTER">52</TD>
<TD ALIGN="CENTER">85</TD>
</TR>
<TR><TD ALIGN="CENTER">106</TD>
<TD ALIGN="CENTER">69</TD>
<TD ALIGN="CENTER">40</TD>
<TD ALIGN="CENTER">19</TD>
<TD ALIGN="CENTER">6</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">2</TD>
<TD ALIGN="CENTER">11</TD>
<TD ALIGN="CENTER">28</TD>
<TD ALIGN="CENTER">53</TD>
<TD ALIGN="CENTER">86</TD>
</TR>
<TR><TD ALIGN="CENTER">105</TD>
<TD ALIGN="CENTER">68</TD>
<TD ALIGN="CENTER">39</TD>
<TD ALIGN="CENTER">18</TD>
<TD ALIGN="CENTER">5</TD>
<TD ALIGN="CENTER">4</TD>
<TD ALIGN="CENTER">3</TD>
<TD ALIGN="CENTER">12</TD>
<TD ALIGN="CENTER">29</TD>
<TD ALIGN="CENTER">54</TD>
<TD ALIGN="CENTER">87</TD>
</TR>
<TR><TD ALIGN="CENTER">104</TD>
<TD ALIGN="CENTER">67</TD>
<TD ALIGN="CENTER">38</TD>
<TD ALIGN="CENTER">17</TD>
<TD ALIGN="CENTER">16</TD>
<TD ALIGN="CENTER">15</TD>
<TD ALIGN="CENTER">14</TD>
<TD ALIGN="CENTER">13</TD>
<TD ALIGN="CENTER">30</TD>
<TD ALIGN="CENTER">55</TD>
<TD ALIGN="CENTER">88</TD>
</TR>
<TR><TD ALIGN="CENTER">103</TD>
<TD ALIGN="CENTER">66</TD>
<TD ALIGN="CENTER">37</TD>
<TD ALIGN="CENTER">36</TD>
<TD ALIGN="CENTER">35</TD>
<TD ALIGN="CENTER">34</TD>
<TD ALIGN="CENTER">33</TD>
<TD ALIGN="CENTER">32</TD>
<TD ALIGN="CENTER">31</TD>
<TD ALIGN="CENTER">56</TD>
<TD ALIGN="CENTER">89</TD>
</TR>
<TR><TD ALIGN="CENTER">102</TD>
<TD ALIGN="CENTER">65</TD>
<TD ALIGN="CENTER">64</TD>
<TD ALIGN="CENTER">63</TD>
<TD ALIGN="CENTER">62</TD>
<TD ALIGN="CENTER">61</TD>
<TD ALIGN="CENTER">60</TD>
<TD ALIGN="CENTER">59</TD>
<TD ALIGN="CENTER">58</TD>
<TD ALIGN="CENTER">57</TD>
<TD ALIGN="CENTER">90</TD>
</TR>
<TR><TD ALIGN="CENTER">101</TD>
<TD ALIGN="CENTER">100</TD>
<TD ALIGN="CENTER">99</TD>
<TD ALIGN="CENTER">98</TD>
<TD ALIGN="CENTER">97</TD>
<TD ALIGN="CENTER">96</TD>
<TD ALIGN="CENTER">95</TD>
<TD ALIGN="CENTER">94</TD>
<TD ALIGN="CENTER">93</TD>
<TD ALIGN="CENTER">92</TD>
<TD ALIGN="CENTER">91</TD>
</TR>
</TABLE>
</DIV>

<P align="justify">
The spiral of numbers has some intriguing features: a lot of prime
numbers form diagonal lines in the spiral. This is the case of 3,
13 31, 57 and 91 in the southeast diagonal and is also the case of
5, 17 and 37 in the southwest diagonal. As you would expect this is
not a general rule since 65, the next number of southwest diagonal
is not a prime number. 

<P align="justify">
Nevertheless the spiral is worth a little more investigation and we
would like you to write a program that given a positive integer <I><FONT COLOR="#000000">n</FONT></I>
returns its neighboring numbers in the spiral, i.e. a 3x3 square with
<I><FONT COLOR="#000000">n</FONT></I> in the center, surrounded by the numbers
that are placed in the same relative positions in the spiral. 

<FONT color="#0000FF"><H2>Input</H2></FONT>

The input file contains several test cases, each of them is a positive integer less than 2&#94;30 (a 4 byte integer) on a line by itself.

<FONT color="#0000FF"><H2>Output</H2></FONT>

For each test case, your program must write the neighboring numbers of the input number in 3 lines. Each line has 3 integers separated by semicolons. There must
also be a semicolon at the end of each line.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
11
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
9;10;27;
2;11;28;
3;12;29;
</PRE>

<BR><HR>
<i>
JosÃ© Paulo Leal, CPUP'2003 Round 1<br>
University of Porto Local Contest
</i>
</BODY>
</HTML>

______________________________________________________
904||||||false||||||
<HTML>
<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 1: Problem E</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem E</H1>

<H1 align="center">Overlapping Air Traffic Control Zones</H1>
</font>

<P align="justify">
Optimization of air traffic flow is one of the essential ways for
airlines to maintain economic viability. All too often, however,
weather and other anomalous conditions disrupt air traffic flow
resulting in significant costs. Automation systems for optimizing
flows are not currently able to quickly reconfigure when path planning
must account for dynamic conditions such as moving weather
systems. Human intervention is usually used to decide route
modifications. 

<P align="justify">
Decisions on route modification for one aircraft must take into
account neighboring aircraft safe zones in order to minimize possible
collision risks. We will consider a 3D model in which the safe zone for
one aircraft is represented as a parallelepiped.

<P align="justify">
Evaluation of aircraft collision risks, in this model, can be done by
calculating the volume of the intersecting safe zones of the aircrafts
in a given air traffic control zone. In other words, we need to be
able to determine the volume of intersecting parallelepipeds.

<FONT color="#0000FF"><H2>Problem</H2></FONT>
Consider a number of parallelepipeds in space, having all the edges
parallel to the axes. Your task is to write a program that outputs
the volume occupied simultaneously by two or more parallelepipeds.

Each parallelepiped is characterized by 6 integer values, the
coordinates of two of its vertices<p>

<it>(x<sub>1</sub>,y<sub>1</sub>,z<sub>1</sub>), (x<sub>2</sub>,
y<sub>2</sub>,z<sub>2</sub>)</it> with <it>x<sub>1</sub> &lt;
x<sub>2</sub></it>, <it>y<sub>1</sub> &lt; y<sub>2</sub></it> and
<it>z<sub>1</sub> &lt; z<sub>2</sub></it>

<FONT color="#0000FF"><H2>Input</H2></FONT>
The input file contains several test cases, each of them consists of an integer <it>0 &le; n &ge; 15</it> in the
first line followed by <it>n</it> lines of 6-tuples of integers
describing the parallelepipeds. 
The total area occupied does not exceed <it>5x10<sup>8</sup></it>.

<FONT color="#0000FF"><H2>Output</H2></FONT>
For each test case, output on a line by itself an integer corresponding to the total volume occupied simultaneously by two or more parallelepipeds.


<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
  5
  1 1 1 3 3 3
  1 1 1 3 3 3
  1 1 1 3 3 3
  400000000 400000000 400000000 400000001 400000001 400000002
  400000000 400000000 400000000 400000002 400000004 400000001
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
  9
</PRE>
<BR><HR>
<i>
Fernando Silva, CPUP'2003 Round 1<br>
University of Porto Local Contest
</i>
</BODY>
</HTML>


______________________________________________________
905||||||false||||||
<!--
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<HTML>
<HEAD>
<TITLE>Tacos Panchita</TITLE>
<META NAME="description" CONTENT="Tacos Panchita">
<META NAME="keywords" CONTENT="panch">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="jLaTeX2HTML v2002 JA patch-1.4">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="panch.css">

</HEAD>

<BODY >
<H1 ALIGN="CENTER">Tacos Panchita</H1>
-->

<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem A</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem A</H1>

<H1 align="center">Tacos Panchita</H1>
</font>

<P align="justify">
<P>

<!-- <H2><A NAME="SECTION00001000000000000000"> Background</A> </H2> -->
Panchita is established with a Tacos Shop in the desert of  North Mexico. To attract clients, she installed lots of signs like the one represented in Figure <A HREF="panch.html#sign">1</A> all over the desert. The signs are intended to point in the direction of the shop; however, Panchita's magnetic needle has a problem and only gives four directions: North, South, East and West. Thus, the signs only point to the shop with a certain approximation. In the desert, besides Panchita's shop and the signs, there is nothing more.

<P>

<DIV ALIGN="CENTER"><A NAME="sign"></A><A NAME="70"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figura 1:</STRONG>
Panchita's signs</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">    <IMG
 WIDTH="204" HEIGHT="181" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="\includegraphics[width=4.5cm, keepaspectratio]{sign.eps}">
    </DIV></TD></TR>
</TABLE>
</DIV>

<P>

<DIV ALIGN="CENTER"><A NAME="map"></A><A NAME="71"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figura 2:</STRONG>
Panchita's grid world</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">
    <IMG
 WIDTH="634" HEIGHT="409" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="\includegraphics[width=14cm, keepaspectratio]{map.eps}">
    </DIV></TD></TR>
</TABLE>
</DIV>

<P>
Panchita is happy with her signs: people transversing the desert usually make a deviation from their original route to follow the signs up to the shop, and she makes money. Her life would be perfect if there were no windstorms in the desert. The problem is that the wind makes the signs rotate, as if they were weathercocks. After each storm, Panchita has to visit all the signs to fix their direction.

<P>

<H2><A NAME="SECTION00002000000000000000">
Simulating Panchita's Set-Up</A>
</H2>

<P>
We may simulate a simplification of Panchita's environment using a grid-based representation as the one in Figure <A HREF="panch.html#map">2</A>.  In this simulation, Panchita's shop is represented by a single dark position and signs by two neighbour dark positions.

<P>
Directions are defined as angles, taking the <I>East</I> direction as the <IMG
 WIDTH="19" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$0^o$"> reference (e.g., <I>North</I> is <IMG
 WIDTH="27" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$90^o$">, <I>North-West</I> is <IMG
 WIDTH="35" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$135^o$">).

<P>
A sign rotates around one of its dark positions: we call it the sign's <I>pivot</I> position. This one corresponds to the side of the sign with an arrow shape (in Figure <A HREF="panch.html#sign">1</A>, the left side). That's why pivot positions are represented in Figure <A HREF="panch.html#map">2</A> with triangles.

<P>
Thus, a pivot position remains fixed in the map when a sign changes direction. The position that moves is called <I>movable</I> (see Figure <A HREF="panch.html#rot">3</A>).

<DIV ALIGN="CENTER"><A NAME="rot"></A><A NAME="72"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figura 3:</STRONG>
Signs rotate around pivot positions</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">
    <IMG
 WIDTH="362" HEIGHT="225" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="\includegraphics[width=8cm, keepaspectratio]{rotation.eps}">
    </DIV></TD></TR>
</TABLE>
</DIV>

<P>
This representation obviously lacks lot of detail. Sign direction, for instance, can only be represented in multiples of <IMG
 WIDTH="27" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$45^o$">. Therefore, we will assume that wind may  only leave signs pointing in directions which are multiples of <IMG
 WIDTH="27" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$45^o$">.

 <!-- <H2><A NAME="SECTION00003000000000000000"> Problem</A> </H2>-->

<FONT color="#0000FF"><H2>Problem</H2></FONT>
<P align="justify"> 
<P>
Given a partial map of the desert after a windstorm, simulate the result of changing the signs' directions to North, South, East or West, so that all them point approximately to Tacos Panchita. Figure <A HREF="panch.html#wind">4</A> illustrates a hypothetical scenario. 

<P>

<DIV ALIGN="CENTER"><A NAME="wind"></A><A NAME="73"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figura 4:</STRONG>
Signs after a windstorm</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">
    <IMG
 WIDTH="633" HEIGHT="410" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="\includegraphics[width=14cm, keepaspectratio]{windstorm.eps}">
    </DIV></TD></TR>
</TABLE>
</DIV>

<P>
The intended result is represented in Figure <A HREF="panch.html#map">2</A>:  a new map with the signs' directions changed by moving <I>movable</I> positions.

<P>
To determine a corrected sign direction, you must first compute the direction <IMG
 WIDTH="14" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$\alpha$"> from Tacos Panchita to the sign's pivot position.  <IMG
 WIDTH="14" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$\beta$">, the new direction from the pivot
to the respective movable position, will be the closest multiple of <IMG
 WIDTH="27" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$90^o$">, i.e., <IMG
 WIDTH="14" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$\beta$"> will be the multiple of <IMG
 WIDTH="27" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$90^o$"> such that <!-- MATH
 $\alpha \in [\beta - 45^o, \beta + 45^o[$
 -->
<IMG
 WIDTH="154" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$\alpha \in [\beta - 45^o, \beta + 45^o[$"> (note the closed left interval).

<P>
Figure <A HREF="panch.html#areas">5</A> illustrates this calculation: signs with pivots in area <IMG
 WIDTH="16" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$A$"> must point to West, those with pivots in area <IMG
 WIDTH="17" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$B$"> must point to South, and so on.

<DIV ALIGN="CENTER"><A NAME="areas"></A><A NAME="74"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figura 5:</STRONG>
New direction depends on the pivot position</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">
    <IMG
 WIDTH="250" HEIGHT="250" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="\includegraphics[width=5.5cm, keepaspectratio]{areas.eps}">
    </DIV></TD></TR>
</TABLE>
</DIV>

<P>
The following assumptions will be taken:


<UL>
<LI>when correcting a sign's direction, only the movable position may be changed
</LI>
<LI>after a windstorm, there are no two objects "touching" each other
</LI>
<LI>in the given partial map, every sign occupies exactly two positions; after correcting the signs' directions, this may not be true, as the movable part of the sign may be out of the map and will not be represented
</LI>
</UL>

<P>

<!-- <H2><A NAME="SECTION00004000000000000000"> Input</A> </H2> -->
<FONT color="#0000FF"><H2>Input</H2></FONT>
<P align="justify">
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
 
<P>
The input file consists of a variable number of lines as follows: 

First line: <!-- MATH
 $x  \hspace{5pt} y \hspace{5pt}  w \hspace{5pt} h$
 -->
<IMG
 WIDTH="67" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$x \hspace{5pt} y \hspace{5pt} w \hspace{5pt} h$">

<P>
Next <IMG
 WIDTH="13" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$h$"> lines: <!-- MATH
 $n \hspace{5pt} p_1 \hspace{5pt} p_2 \hspace{5pt} \ldots \hspace{5pt} p_n$
 -->
<IMG
 WIDTH="116" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$n \hspace{5pt} p_1 \hspace{5pt} p_2 \hspace{5pt} \ldots \hspace{5pt} p_n$">

<P>
where each <IMG
 WIDTH="17" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$p_i$"> is the <IMG
 WIDTH="13" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$x$"> coordinate of a pivot position in the current line. Lines are presented in descending order of their <IMG
 WIDTH="12" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$y$"> coordinates. In each line, pivot coordinates are presented in ascending order.

<P>
Movable positions are not included in the input as they are not needed to solve the problem.

<P>

<!-- <H2><A NAME="SECTION00005000000000000000"> Output</A> </H2> -->
<FONT color="#0000FF"><H2>Output</H2></FONT>
<P align="justify">
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<P>
Output should represent the map with the signs in the correct directions, and consist of a variable number of lines as follows: 

<P>
First line: <!-- MATH
 $x  \hspace{5pt} y \hspace{5pt}  w \hspace{5pt} h$
 -->
<IMG
 WIDTH="67" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$x \hspace{5pt} y \hspace{5pt} w \hspace{5pt} h$">

<P>
where <IMG
 WIDTH="13" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$x$"> and <IMG
 WIDTH="12" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$y$"> are the (always positive) coordinates of Tacos Panchita's position, and <IMG
 WIDTH="16" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$w$"> and <IMG
 WIDTH="13" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$h$"> are the width and the height of the given map

<P>
Next <IMG
 WIDTH="13" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$h$"> lines: <!-- MATH
 $m \hspace{5pt} x_1 \hspace{5pt} x_2 \hspace{5pt} \ldots \hspace{5pt} x_m$
 -->
<IMG
 WIDTH="127" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$m \hspace{5pt} x_1 \hspace{5pt} x_2 \hspace{5pt} \ldots \hspace{5pt} x_m$">

<P>
where each <IMG
 WIDTH="20" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$x_j$"> is the <IMG
 WIDTH="13" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$x$"> coordinate of a movable position in the current line. Lines are presented in descending order of their <IMG
 WIDTH="12" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p905img1.png" 
 ALT="$y$"> coordinates. In each line, movable coordinates are presented in ascending order.

<P>
Pivot positions are not included in the output as they are kept unchanged.

<P>

<!-- <H2><A NAME="SECTION00006000000000000000"> Sample Input</A> </H2>
 -->
<FONT color="#0000FF"><H2>Sample Input</H2></FONT>
<P>
<PRE>
3 3 7 6
1 6
1 2
0
1 6
1 2
1 5
</PRE>

<P>

<!-- <H2><A NAME="SECTION00007000000000000000"> Sample Output</A> </H2> -->
<FONT color="#0000FF"><H2>Sample Output</H2></FONT>
<P>
<PRE>
3 3 7 6
1 2
0
0
1 7
0
2 2 6
</PRE>

<hr> 
<i>
AmÃ­lcar Cardoso, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</BODY>
</HTML>

______________________________________________________
906||||||false||||||
<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem B</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem B</H1>

<H1 align="center">Rational Neighbor</H1>
</font>


<FONT color="#0000FF"><H2>Introduction</H2></FONT>

As we know, finding a rational close to a given
rational is straightforward. The minimal distance
between two distinct integers is 1.
By contrast, there is no minimal distance between
two distinct rationals.
A straightforward method for finding a rational close to
a given rational <I>a</I>/<I>b</I> is based on the following
construction. For every <I>m</I> &gt; 0 one has
<I>a</I>/<I>b</I> = (<I>a</I> <I>m</I>)/(<I>b</I> <I>m</I>), and the neighbors
(<I>a</I> <I>m</I> Â± 1)/(<I>b</I> <I>m</I>) lie at distance 1/(<I>b</I> <I>m</I>)
from the given rational. So, by choosing <I>m</I> to be sufficiently
large, one can make the distance to be as small as we please.<BR>
<BR>


<FONT color="#0000FF"><H2>Problem</H2></FONT>

Given a rational <I>a</I>/<I>b</I>
and an upper bound <I>n</I> for the distance,
the problem consists to find the
rational <I>c</I>/<I>d</I> such that:
<DL COMPACT=compact>
<DT><B>(i)</B><DD> <I>a</I>/<I>b</I> &lt; <I>c</I>/<I>d</I>;
<DT><B>(ii)</B><DD> the distance between the rationals
<I>a</I>/<I>b</I> and <I>c</I>/<I>d</I> is smaller
or equal than <I>n</I>;
<DT><B>(iii)</B><DD> the denominator <I>d</I> is as small as possible.
</DL>

<FONT color="#0000FF"><H2>Input</H2></FONT>
The input will contain several test cases, each of them consisting of two lines.<br>
The first line of the input contains
two positive integers <I>a</I> and <I>b</I> which
define the rational number <I>a</I>/<I>b</I>.
The integers <I>a</I> and <I>b</I> are assumed to
be in the interval [1,100000].
The second line contain a positive real number <I>n</I>,
0.00000001<FONT FACE=symbol>&le;</FONT> <I>n</I> <FONT FACE=symbol>&le;</FONT> 0.1, which gives
the maximum distance allowed.<BR>
<BR>

<FONT color="#0000FF"><H2>Output</H2></FONT>

For each test case, write to the output, on a line by itself, the two positive
integers <I>c</I> and <I>d</I> which solve the problem.<BR>
<BR>

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
96 145
0.0001
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
49 74
</PRE>



<hr>
<i>
Delfim Marado Torres, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</BODY>
</HTML>

______________________________________________________
907||||||false||||||
<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem C</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem C</H1>

<H1 align="center">Winterim Backpacking Trip</H1>
</font>

<P align="justify">
<p align="justify"><img src="http://uva.onlinejudge.org/external/9/p907.jpg"  align="right" width="500" height="270"><font
color="#000000">
This Winter we are going on a trip along the Appalachian Trail. The
trail is a continuous marked footpath that goes from Katahdin in Maine
to Springer Mountain in Georgia, a distance of about 2160 miles.  Even
though our trip will only consider some part of the trail, it will be our
first real backpacking experience and an excellent opportunity to
acquire winter camping skills.

<P align="justify"> Part of the experience is also the route planning
of the trip. We have a list of all possible campsites that we can use
along the way and we want to do this trip so that we only stop
<i>K</i> nights to camp. We also know in advance the distance between
consecutive campsites and we are only allowed to camp at a
campsite. Our goal is to plan the trip so that we minimise the maximum
amount of walking done in a single day. In other words, if our trip
involves 2 nights (3 days of walking), and we walk 9, 10, 5 miles on
each day respectively, the cost (maximum amount of walking done in one
day) is 10. Another schedule that involves walking 9, 6, 9 miles on
each day has cost 9.





<FONT color="#0000FF"><H2>Problem</H2></FONT>
<P align="justify"> 

Given the distances between <i>N</i> consecutive campsites of a trail
and given the number of nights for your trip, <i>K</i>, your task is
to devise a camping strategy for the specified trail such that it
minimises the maximum amount of walking done in a single day. Note
that the first distance value given is the distance from our
start-point of the trail to our 1st campsite, and the last distance
value given is the distance from our <i>N</i>th campsite to our
end-point of the trail.

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify">
The input file contains several test cases, each of them    as describes below.
<br>
The first line of input consists of two numbers, the number
of campsites (<i>0 < N <= 600</i>) and the number of nights of
the trip (<i>0 <= K <= 300</i>). The following <i>N+1</i>
input lines indicate the distance in miles between consecutive
campsite locations. 

<FONT color="#0000FF"><H2>Output</H2></FONT>
For each test case, on a line by itself,
your program must output the maximum amount of walking in a single day for the
route that minimises such value.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
4 3
7
2
6
4
5
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
8
</PRE>

<HR>
<i>
Fernando Silva, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</BODY>
</HTML>

______________________________________________________
908||||||false||||||
<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem D</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem D</H1>

<H1 align="center">Re-connecting Computer Sites</H1>
</font>

<P align="justify"> 

Consider the problem of selecting a set <i>T</i> of high-speed lines for 
connecting <i>N</i> computer sites, from a universe of <i>M</i>
high-speed lines each connecting a pair of computer sites. Each
high-speed line has a given monthly cost, and the objective is to
minimize the total cost of connecting the <i>N</i> computer sites,
where the total cost is the sum of the cost of each line included in
set <i>T</i>. Consider further that this problem has been solved
earlier for the set of <i>N</i> computer sites and <i>M</i> high-speed
lines, but that a few <i>K</i> new high-speed lines have recently
become available. <p>

<P align="justify"> 
Your objective is to compute the new set <i>T'</i> that may yield a
cost lower than the original set <i>T</i>, due to the additional
<i>K</i> new high-speed lines and when <i>M+K</i> high-speed lines are
available.


<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify">
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
 
The input is organized as  follows:
<ul>
  <li> A line containing the number <i>N</i> of computer sites, with
  <i>1 <= N <= 1000000</i>, and where each computer site is referred
  by a number <i>i</i>, <i>1 <= i <= N</i>.

  <li> The set <i>T</i> of previously chosen high-speed lines,
  consisting of <i>N-1</i> lines, each describing a high-speed line,
  and containing the numbers of the two computer sites the line
  connects and the monthly cost of using this line. All costs are
  integers.

  <li> A line containing the number <i>K</i> of new additional lines,
  <i>1 <= K <= 10</i>.

  <li> <i>K</i> lines, each describing a new high-speed line, and
  containing the numbers of the two computer sites the line connects
  and the monthly cost of using this line. All costs are integers.

  <li> A line containing the number <i>M</i> of originally available
  high-speed lines, with <i>N-1 <= M <= N (N-1) / 2</i>.

  <li> <i>M</i> lines, each describing one of the originally available
  high-speed lines, and containing the numbers of the two computer
  sites the line connects and the monthly cost of using this line. All
  costs are integers.
</ul>


<FONT color="#0000FF"><H2>Output</H2></FONT>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


<P align="justify">
The output file must have one line containing the original cost of
connecting the <i>N</i> computer sites with <i>M</i> high-speed lines
and another line containing the new cost of connecting the <i>N</i>
computer sites with <i>M+K</i> high-speed lines. If the new cost
equals the original cost, the same value is written twice. 

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
5
1 2 5
1 3 5
1 4 5
1 5 5
1
2 3 2
6
1 2 5
1 3 5
1 4 5
1 5 5
3 4 8
4 5 8
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
20
17
</PRE>

<hr>
<i>
JoÃ£o Marques, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</BODY>
</HTML>

______________________________________________________
909||||||false||||||
<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem E</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem E</H1>

<H1 align="center">The BitPack Data Compression Problem</H1>
</font>


<div class=Section1> 
  
  <p>Current applications must deal with every sort of data. Some data 
  sources are huge and some of these must be manipulated as a whole (an image 
  for example). This context gave birth to a new area of study called data 
  compression.</p>
  <p>A data 
  compression operation has two opposite faces: the compression and the 
  decompression. Normally, when a standard is published by ISO or CCITT it only 
  describes the simplest operation leaving the other to the application 
  programmers.</p>
  <p>The CCITT text for the BitPack algorithm describes the data decompression 
  as in the following:</p>
  <pre style="line-height:1">       While (there is input)</pre>
  <pre style="line-height: 1">           n &lt;-- read next byte</pre>
  <pre style="line-height: 1">           If (0&lt;= n &lt;= 127)</pre>
  <pre style="line-height: 1">               copy the next n+1 bytes to the output as they are</pre>
  <pre style="line-height: 1">           Else If (129&lt;= n &lt;=255)</pre>
  <pre style="line-height: 1">               copy the next byte n-128+1 times to the output</pre>
  <pre style="line-height: 1">           Else If n=128</pre>
  <pre style="line-height: 1">               do nothing       
  </pre>
<FONT color="#0000FF"><H2>Problem</H2></FONT>
<P align="justify"> 
  Your task consists of writing a program that performs the opposite 
  operation: the data compression, in such a way that a file of minimal size is 
  obtained.</p>

<FONT color="#0000FF"><H2>Input</H2></FONT>
<P align="justify"> 
  The input is a simple byte sequence. All files can be regarded as simple 
  byte sequences.</p>
</div>

<div class=Section1> 
<FONT color="#0000FF"><H2>Output</H2></FONT>
<P align="justify"> 
  The output file will consist of a file with compressed content. </p>
  <p> From this file and applying the algorithm described above it should be 
  possible to retrieve the original file.</p>
</div>

<div class=Section1>
<FONT color="#0000FF"><H2>Samples </H2></FONT>
  <p>Note: in the examples below [ddd] stands for a character with ASCII code 
  equal to ddd.</p>
<FONT color="#0000FF"><H2>Sample Input 1</H2></FONT>
  <p>aaaaaaaarstqahbbbbbbb</p>
<FONT color="#0000FF"><H2>Sample Output 1</H2></FONT>
  <p>[135]a[5]rstqah[134]b</p>
  <pre> </pre>
<FONT color="#0000FF"><H2>Sample Input 2</H2></FONT>
  <p>aaaaaaaaaa</p>
<FONT color="#0000FF"><H2>Sample Output 2</H2></FONT>
  <p>[137]a</p>
<FONT color="#0000FF"><H2>Sample Input 3</H2></FONT>
  <p>abcdefghij</p>
<FONT color="#0000FF"><H2>Sample Output 3</H2></FONT>
  <p>[9]abcdefghij</p>
</div>

<hr>
<i>
JosÃ© Carlos Ramalho, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</body>
</html>

______________________________________________________
910||||||false||||||
<!-- saved from url=(0022)http://internet.e-mail -->
<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem F</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem F</H1>

<H1 align="center">TV game</H1>
</font>

<center>
<p><img src="http://uva.onlinejudge.org/external/9/p910.png"  width="40%"><font color="#000000">
<p>
Figure 1.1 - The carpet for one game.
</center>
<P align="justify">
The next TV game will be played by single players on a special kind of labyrinth. The player will step 
on a carpet with a drawing 
like the one in fig. 1.1, and wait on position A. Each position has two ways out, labeled by 
<b>0</b> and <b>1</b>, which lead to the next position. To choose which way to take, the player must answer
a question. If the answer is correct he takes the <b>1</b> way, otherwise the <b>0</b> way is followed.
Of course, the answer may be deliberately wrong if the <b>0</b> way is sought for.
The next position may be different or remain the same as before.
</p>

<P align="justify">
Some of the positions, indicated by a double circle, are special. If, exactly after a predetermined 
number of moves, the player gets on one of those special positions he wins, otherwise he loses.
</p>

<P align="justify">
In the example, if the total number of moves is <b>m</b>=2, failing the first question and passing the second, i. e. the sequence <b>01</b>, directs the player to go from <b>A</b>, the start position,
to B and then to C. It solves the problem, as <b>C</b> is a special position, in the sole possible 
way. In fact, <b>00</b> would lead to <b>D</b> and <b>10</b> and <b>11</b> to <b>E</b>, which are 
not special. In the case <b>m</b>=3, there is no solution. But in the case <b>m</b>=5, several solutions
are available, for instance <b>01011</b>, <b>01101</b> or <b>00011</b>. Thus there are 3 out of 2^<b>m</b> =
32 ways to win, which gives an idea of the probability of winning just choosing the moves by tossing a coin.
</p>

<P align="justify">
Notice that should <b>A</b> also be a special position, there would be a way of scoring in zero moves.
</p>


<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P align="justify">
<p>
The problem to be solved is, given a carpet and a number of moves <b>m</b>, to determine the 
number of different
ways to score, i.e., to reach one of the special positions in exactly <b>m</b> moves, from
the start position. The start position is the first position, labeled <b>A</b>. From each position
there are exactly 2 ways out, labeled by the symbols <b>0</b> and <b>1</b>.
</p>

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify">
The input is a text file with one or more test cases, each of them containing several lines as follows.
</p>
<P align="justify">
The first line of the input contains the number <b>N</b> (integer format) of positions.
The positions are labeled in alphabetic sequence, starting from <b>A</b>, and there are at most 26.
The next <b>N</b> lines contain four characters each, separated by single spaces, where
the first is the name of a position, the second the position the player reaches if he chooses
the path labeled <b>0</b>, the third the position the player reaches if he chooses the path
labeled <b>1</b>, and the fourth a 'x' if the position is special or a '-' if not.

</p>
<P align="justify">
The last line specifies <b>m</b>, the number of moves to be considered, <b>0 &le; m &le; 30</b>.
</p>

<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify">
For each test case, the output consists of one line which contains one integer indicating the number of different ways to win. <b>0</b> means there are no solutions.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<pre>5
A B E -
B D C -
C D A x
D D B -
E E E -
5
</pre>
<FONT color="#0000FF"><H2>Sample Output</H2></FONT>
<pre>3
</pre>

<hr>
<i>
Gabriel David, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</body>
</html>

______________________________________________________
911||||||false||||||
<HTML>
<HEAD>
<TITLE>MIUP'2003: Problem G</title>
<style>
img { height: 1.3em; }
</style>
</head>

<BODY bgcolor="white">

<font color="#0000FF">
<H1>Problem G</h1>

<H1 align="center">Multinomial Coefficients</h1>
</font>

<P>
   One of the first formulas we were taught in high school mathematics is
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="MATH">.
   Later on, we learned that this is a special case of the expansion
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$(a+b)^{n}$">,
   in which the coefficient of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$a^{k}b^{n-k}$">
   is the number of combinations of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$n$">
   things taken
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$k$">
   at a time. We never learned (at least I never did...) what happens if instead
   of a binomial
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$a+b$">
   we have a multinomial
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$a+b+c+\ldots +x$">.
</p>

<FONT color="#0000FF"><H2>Problem</h2></font>
<P align="justify"> 

   Your task is to write a program that, given a multinomial
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="MATH">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$k\geqslant 1$">,
   computes the coefficient of a given term in the expansion of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$m^{n}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$n\geqslant 1$">.
   The given term is specified by a sequence of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$k$">
   integer numbers
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$z_{1}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$z_{2}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$\ldots $">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$z_{k}$">,
   representing the powers of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$a_{1}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$a_{2}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$\ldots $">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$a_{k}$">
   in the expansion. Note that
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="MATH">.
   For example, the coefficient of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$ab^{2}c$">
   in
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$(a+b+c)^{4}$">
   is
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$12$">.
</p>

<FONT color="#0000FF"><H2>Input</h2></font>
<P align="justify">
The input file contains several test cases, each of them with three lines. The first line
   contains a number representing the value of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$n$">.
   The second line contains a number representing the value of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$k$">.
   The third line contains
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$k$">
   numbers, representing the values of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$z_{1}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$z_{2}$">,
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$\ldots $">,<IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$z_{k}$">.
   All test cases are such that
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$k\leqslant 100$">
   and the computed coefficient is less than
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="$2^{31}$">.
</p>

<FONT color="#0000FF"><H2>Output</h2></font>
<P align="justify">

For each test case, write to the output one line. This line contains
   one integer number representing the value of the coefficient of the term
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="MATH">
   in the expansion of
   <IMG ALIGN="baseline" SRC="http://uva.onlinejudge.org/external/9/p911img1.png"  ALT="MATH">.
</p>

<FONT color="#0000FF"><H2>Sample Input 1</h2></font>
<PRE>
4</pre>
<PRE>
3</pre>
<PRE>
1 2 1</pre>
<FONT color="#0000FF"><H2>Sample Output 1</h2></font>
<PRE>
12</pre>
<FONT color="#0000FF"><H2>Sample Input 2</h2></font>
<PRE>
7</pre>
<PRE>
4</pre>
<PRE>
2 3 0 2</pre>
<FONT color="#0000FF"><H2>Sample Output 2</h2></font>
<PRE>
210</pre>

<HR>
<i>
Pedro Guerreiro, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</body>
</html>

______________________________________________________
912||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>

<head>
  <title>MIUP'2003: Problem I</title>
</head>

<body bgcolor="white">
<font color="#0000ff">
<h1>Problem I</h1>
<h1 align="center">Live From Mars</h1>
</font>
<p align="justify"> </p>
<p align="justify"><font color="#000000">At the 26th of august 2003,
Mars was never so close to the Earth since 60.000 years. Taking
advantage of this fact, the most powerful shortsighted telescope,
Hubble, made an incredible discovery: there is life in Mars, mutant
life indeed!<br>
<br>
Professor B. Harper, who leads the team that made this discovery, found
traces of a unicellular form of life. This kind of cell possess a new
kind of DNA: a mutant DNA that is able to specialize its inner
structure when exposed to radiations. Remarkably, B. Harper showed how
to produce any desired mutation by an appropriate radiation.<br>
<br>
L. Kravitz, B. Harper's student, focuses its research work on a
classification of these cells based on their capacity to mutate.<br>
<br>
Your work is to provide him a computer program that is able to find if
two mutant DNA sequences of the same length can mutate to a common DNA
sequence. <font color="#0000ff">
<h2>Problem</h2>
</font> </font></p>
<p align="justify"><font color="#000000"> </font>A mutant DNA sequence
is composed by the usual DNA elements, say, for the sake of simplicity, <tt>A</tt>,<tt>B</tt>,<tt>C</tt>,
and <tt>D</tt> and by mutant elements <tt>1</tt>, <tt>2</tt>, <tt>3</tt>,<tt>4</tt>,<tt>5</tt>,
and so on ...<br>
<br>
<em>Only</em> the mutant elements can mutate, and they mutate only <em>once</em>
to A, B, C or D. Then, a mutation is a process that takes a mutant DNA
sequence and transforms some (eventually all) mutant elements to normal
elements.<br>
<br>
For instance, let be <i>DNA</i><sub><font size="2">1</font></sub> the
following mutant DNA sequence <tt>A1CD1A2D3B2C5</tt> and <i>MUT</i> the
following mutation <tt>[(1,<i>A</i>),(2,<i>B</i>),(3,<i>C</i>),(4,<i>A</i>)]</tt>
(which means mutate all occurrences of <tt>1</tt> into <tt>A</tt>, <tt>2</tt>
into <tt>B</tt>, <tt>3</tt> into <tt>C</tt> and <tt>4</tt> into <tt>A</tt>).<i>MUT</i>
transforms <i>DNA</i><sub><font size="2">1</font></sub> into <i>DNA</i><sub><font
 size="2">2</font></sub>: <tt>AACDAABDCBBC5</tt>.  In this case, we
say that <i>DNA</i><sub><font size="2">2</font></sub> is a descendant
of <i>DNA</i><sub><font size="2">1</font></sub>.<br>
<br>
Two mutant DNA sequences of length <i>n</i>, <i>x</i><sub><font
 size="2">1</font></sub>,<i>x</i><sub><font size="2">2</font></sub>,...
,<i>x</i><sub><font size="2"><i>n</i></font></sub> and <i>y</i><sub><font
 size="2">1</font></sub>,<i>y</i><sub><font size="2">2</font></sub>,...
,<i>y</i><sub><font size="2"><i>n</i></font></sub> are equivalent under
mutation if, for  all <i>i</i> such that 1<font face="symbol">&pound;</font> <i>i</i> <font
 face="symbol">&pound;</font> <i>n</i>, <i>x</i><sub><font size="2"><i>i</i></font></sub>
and <i>y</i><sub><font size="2"><i>i</i></font></sub> are both normal 
DNA elements and are equal, or <i>x</i><sub><font size="2"><i>i</i></font></sub>
and <i>y</i><sub><font size="2"><i>i</i></font></sub> are both mutant
DNA  elements (and it is not required in this case that <i>x</i><sub><font
 size="2"><i>i</i></font></sub> and <i>y</i><sub><font size="2"><i>i</i></font></sub>
are equal) <br>
<br>
Let <i>DNA</i><sub><font size="2">1</font></sub> and <i>DNA</i><sub><font
 size="2">2</font></sub> be two mutant DNA sequences of the same length.
The shortest common mutation of <i>DNA</i><sub><font size="2">1</font></sub>
and <i>DNA</i><sub><font size="2">2</font></sub>, say <i>MUT</i>, is
the shortest mutation that transforms <i>DNA</i><sub><font size="2">1</font></sub>
and <i>DNA</i><sub><font size="2">2</font></sub> into descendants which
are equivalent under mutation. <i>MUT</i> is the shortest in the sense
that it implies the transformation of the smallest number of mutant
elements. Note that <i>MUT</i> may not exist.<br>
<br>
So, your work is to provide a program that reads two mutant DNA
sequences and replies </p>
<ul>
  <li> NO, if there is no descendents of these two sequences that  are
equivalent by mutation. In other words, if there is no <em>common</em>
mutations. Otherwise, </li>
  <li>YES and a print of the shortest common mutation, if there exists 
such a mutation. </li>
</ul>
<!--TOC subsection Input-->
<p align="justify"><font color="#000000"><font color="#0000ff">
<h2>Input</h2>
</font> </font></p>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
 <p align="justify"> The input for the program is structured as follow: </p>
<ul>
  <li> the first line of the input contains the length <i>m</i> (with <i>m</i><font
 face="symbol">&pound;</font> 200) of the considered DNA sequences </li>
  <li>the next <i>m</i> lines contain one mutant DNA element  (<tt>A</tt>,<tt>B</tt>,<tt>C</tt>,<tt>D</tt>
or a  natural number). They code the first mutant DNA sequence. </li>
  <li>the last <i>m</i> lines contain one mutant DNA element  (<tt>A</tt>,<tt>B</tt>,<tt>C</tt>,<tt>D</tt>
or a  natural number). They code the second mutant DNA sequence.</li>
</ul>
<p align="justify"><font color="#000000"><font color="#0000ff">
<h2>Output</h2>
</font> </font></p>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
<p align="justify"> The output for the program is structured as follow:
in case of failure (no mutations were found) the program simply display <tt>NO</tt>.
In the other case, a mutation involving <i>n</i> mutant elements was
found and so: </p>
<ul>
  <li> the first line is the string <tt>YES</tt>; </li>
  <li>the <i>n</i> following lines describe the shortest common
  mutation; each line has the form <i>m</i> <i>d</i><br>
	  where <i>m</i> is a mutant element (a natural number)
	  and <i>d</i> the name of  the associated normal <tt>DNA</tt> element 
(<tt>A</tt>,
<tt>B</tt>, <tt>C</tt> or <tt>D</tt>). Note that <i>m</i> and <i>d</i>  are
separated by a single space. The elements of the  mutation are sorted
by the first component (the mutant element).  Thus, the mutation
involving <tt>1</tt> will be displayed before <tt>2</tt>.</li>
</ul>
<p align="justify"><font color="#000000"><font color="#0000ff">
<h2>Sample Input</h2>
</font> </font></p>
<pre>7<br>A<br>1<br>2<br>B<br>1<br>D<br>4<br>1<br>3<br>B<br>2<br>3<br>D<br>4<br><!--TOC subsection Sample Output--><br></pre>
<font color="#000000"><font color="#0000ff">
<h2>Sample Output</h2>
</font> </font>
<pre>YES<br>1 A<br>2 B<br>3 A</pre>

<hr>
<i>
SimÃ£o Sousa, MIUP'2003<br>
(Portuguese National ACM Programming Contest)
</i>

</body>

</html>

______________________________________________________
913||||||false||||||
<HTML>

<head>
<title>Joana and the Odd Numbers</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem A</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Joana and the Odd Numbers</CENTER></H1></FONT>

<p><img align =right src="http://uva.onlinejudge.org/external/9/p913.gif"  border=1 width=153 height=287>
Joana loves playing with odd numbers. In the other day, she started
writing, in each line, an odd number of odd numbers. It looked as
follows:

<pre>
 1
 3  5  7
 9 11 13 15 17
19 21 23 25 27 29 31
...
</pre>

<p>On a certain line Joana wrote 55 odd numbers. Can you discover the
sum of the last three numbers written in that line? Can you do this
more generally for a given quantity of odd numbers?

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<p>Given the number <b>N</b> of odd numbers in
a certain line, your task is to determine the sum of the last
three numbers of that line.

<FONT color="#0000FF"><H2>Input</H2></FONT>

<p>The input is a sequence of lines, one odd number
<b>N</b> (<i>1&lt;N&lt;1000000000</i>) per line

<FONT color="#0000FF"><H2>Output</H2></FONT>

<p>For each input line write the sum of the last three odd numbers written by
Joana in that line with <b>N</b> numbers.
This sum is guaranteed to be less than 2<sup>63</sup>.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
3
5
7
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
15
45
87
</PRE>


<BR>
<HR>
<i>
Fernando Silva, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>

</BODY>
</HTML>


______________________________________________________
914||||||false||||||
<HTML>

<head>
<title>Jumping Champion</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem B</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Jumping Champion</CENTER></H1></FONT>


<p><img align=right src="http://uva.onlinejudge.org/external/9/p914.gif"  border=1 width=364 height=309>
Professor Ma.L. (Math Lover) loves everything related to prime numbers. Remember that <i>a prime is a positive number bigger than one and only divisible by 1 and itself</i>. He is now working on a property of a set of primes called the jumping champion. An integer <i>N</i> is called the <b>"jumping champion"</b> if it is the most frequently occurring difference between consecutive primes.

<p>For example, consider the consecutive primes <tt>2 3 5 7 11</tt>.
The differences between primes are <tt>1 2 2 4</tt>. Therefore, for this
set of primes, the jumping champion is exactly 2 (occurring two times).

<p>He would really like to know for any set of primes what is their
corresponding jumping champion. Could you help him?

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<p>Your task is to write a program that, given a lower and an upper bound,
calculates the jumping champion of all the primes numbers that are in the
defined limits (the upper and lower bound are considered themselves to
be inside the limit).


<FONT color="#0000FF"><H2>Input</H2></FONT>

<p>The first line of input contains an integer <b>T</b> which is the
number of test cases that follow.

<p>Each test case is given on a line with two integer numbers
<b>L</b> and <b>U</b> (<i>0 &le L &le U &le 1000000</i>), 
separated by a single space, which represent the lower and upper limits
(respectively) to consider.

<FONT color="#0000FF"><H2>Output</H2></FONT>

<p>The output consists of <b>T</b> lines, one for each case.

<p>The i<sup>th</sup> line contains:
<ul>
  <li><tt>"The jumping champion is NUM"</tt> - if the jumping champion
      for the i<sup>th</sup> case can be found and it is NUM ;
</ul>
<ul>
  <li><tt>"No jumping champion"</tt> - if no single jumping champion can be found
  (if there are less than two primes in the interval or if there
   is more than one difference occurring a maximum number of times)
</ul>

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
3
2 11
2 5
30 50
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
The jumping champion is 2
No jumping champion
The jumping champion is 4
</PRE>


<BR>
<HR>
<i>
Pedro Ribeiro, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>

</BODY>
</HTML>


______________________________________________________
915||||||false||||||
<HTML>

<head>
<title>Stack of Cylinders</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem C</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Stack of Cylinders</CENTER></H1></FONT>

<p>Suppose you launch a set of cylinders, with different radius, over a hill, in such a way they get stacked like in the figure.

<p>Accordingly to the radius of the cylinders, only a subset will be connected forming a
<u>continuous path</u>. In the example represented, this path is composed by cylinders 2, 3 and 6. Cylinder <b>2</b> is the <u>path head</u> and cylinder 6 is the <u>path tail</u>.

<p>The enclosing distance <b><i>d</i></b> is measured from the left support point of the path head until the right point of the path tail.

<p><img src="http://uva.onlinejudge.org/external/9/p915.gif"  width="379" height="148"><br>
Example of a stack of cylinders.

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<p>Given a sequence of cylinders, this problem consists in the evaluation of the enclosing distance and the sequence of cylinders that compose the continuous path. It is ensured that each cylinder can touch no more than one cylinder at its left and no more than one cylinder at its right.

<FONT color="#0000FF"><H2>Input</H2></FONT>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
 
<p>The input is a sequence of text lines, as follows.

<p>The first text line contains the number <b><i>NC</i></b> (integer format) of cylinders. It is followed by a sequence of <b><i>NC</i></b> text lines containing, each line, a cylinder radius (integer or decimal format). The cylinder identifier is obtained from its series number in the sequence (starting at 1).
<p>Note: the maximum number of cylinders is 100.

<FONT color="#0000FF"><H2>Output</H2></FONT>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


<p>The first text line contains one decimal number, rounded to one decimal digit, representing the enclosing distance.

<p>The second line contains the number <b><i>NP</i></b> of cylinders that compose the continuous path and it is followed by <b><i>NP</i></b> lines containing, in the proper sequence, the identifiers of the cylinders in the continuous path.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
7
3
25
35
5
4
32
4
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
183.1
3
2
3
6
</PRE>

<BR>
<HR>
<i>
Augusto Sousa, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>

</BODY>
</HTML>



______________________________________________________
916||||||false||||||
<HTML>

<head>
<title>Dividing Land</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem A</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Dividing Land</CENTER></H1></FONT>

<p><img align =right src="http://uva.onlinejudge.org/external/9/p916.gif"  border=1 width=364 height=180>
Once upon a time there existed a king that held the greatest fortune in the
entire world. He had 4 sons and he loved them equally.

<p>The years passed and one day the king was dying. He decided then to
give his kingdom equally to his four sons. Suppose that we represent
the kingdom by set of connected squares. Some locations on a kingdom had
special natural resources like gold, marked as 'G'. Other places whith
no natural resources are marked with X. Here is a map of the kingdom:

<pre>
XX
GG
GXXG
XXXX
</pre>

<p>The king wanted that each son had exactly the same number of squares,
that all squares of the same son would be connected (vertically or
horizontally) and that the shape of each son's terrain would be exactly
the same, except for rotations or reflections.

<p>He then asked all the wise men from the kingdom to find an answer for this
problem and after months thinking they found the following solution (each 
son's terrain is indicated by a different number):

<pre>
11
12
3224
3344
</pre>

But if the terrain was different, could you find a solution? And if the resources
were also different? And if he had a different number of children?

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<p>Your task it find if there exists a way to divide a determined terrain in
<b>N</b> different parcels of terrain, each one exactly with the same shape
(except for rotations and reflections) and the same set of natural resources.

<FONT color="#0000FF"><H2>Input</H2></FONT>

<p>The input starts with a single number <b>T</b> indicating
the number of test cases that follow.

<p>Each test case starts with a line with three integer numbers <b>L</b>, <b>C</b>
and <b>N</b>  (<i>1 &le; L,C &le; 10</i> and <i>1 &le; N &le; 5</i>),
indicating the number of lines and columns that the closest
rectangle that could enclose the terrain has, and also the number <i>N</i> of sons
that the king has.

<p>Then follows <i>L</i> lines giving the map of the terrain where

<li><b>"#"</b> indicates a square that does not belong to the kingdom
<li><b>"."</b> means a square that belongs to the kingdom but has no natural
               resources
<li><b>"A-Z"</b> (a single letter) represents a square that has a natural resource
    of type A-Z. (for example, G means tipe G).

<p>The first sample input corresponds to the original map described earlier.

<FONT color="#0000FF"><H2>Output</H2></FONT>

<p>For each test case output a single line saying only "Yes" if it is possible
to divide the terrain in the specified conditions and "No" otherwise.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
3
4 4 4
..##
GG##
G...
...G
4 4 4
..##
GG##
G...
...A
6 4 2
ABAB
CDCD
EFEF
ABAB
CDCD
EFEF
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
Yes
No
Yes
</PRE>


<BR>
<HR>
<i>
Pedro Ribeiro, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>


</BODY>
</HTML>


______________________________________________________
917||||||false||||||
<HTML>

<head>
<title>Euro 2004</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem E</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Euro 2004</CENTER></H1></FONT>


<p>The European Football Championship is coming! From the 12th of June to the
4th of July, Portugal will be the sports center of the world. Everyone will do their best to make this event a memorable one.

<p><img align=right src="http://uva.onlinejudge.org/external/9/p917.jpg"  border=1 width=249 height=310>
However, an important detail is missing. The rules for the classification
of the league stage have changed and everyone is a little bit confused.
What would be really, really nice would be a computer program to calculate
this classification, given the results of the game. Then it would also be
possible to watch in real time the changes in the ranking!

<p>Here is how the classification is made:

<ol>
<li>For a win 3 points will be awarded; for a tie, 1 point; for a defeat, 0 points
<li>For establishing the final places, the following criteria will be
    applied, in descending order of priority:
  <ul>
  <li> Number of points
  <li> Goal-Average (difference between goals scored and given)
  <li> Number of wins (victories)
  <li> Number of goals scored
  </ul>
</ol>

<p>So after the games are taken in account, this parameters are 
all calculated. Things get interesting when there is more
than one team with the same number of points. In that case,
a sub-league is considered. You must now imagine that only the games
between the tied teams count, and see the new sub-classification. If
that does not break the tie (in points) for all the teams, you must do a
sub-sub-league for all the teams that are still tied, and so on. There
is only one case when a sub-league should not be partitioned. That is when
all the teams in that sub-league have the same number of points and
obviously, the partition would give the exact same group of teams and
parameters. In that cases, teams should be ranked according to the
four parameters calculated for that sub-league. If the parameters are not
sufficient, then the teams should be considered to be in the same place,
and they should appear in alphabetical order.

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<p>Your task is to write a program that given the results of several games,
calculates the classification of the teams using the sorting algorithm
defined above.

<p>Of course that knowing how good programmer you are, the organization
has asked you to make a program that could calculate the classification
of thousands of teams more than the ones that will be present in Euro'2004,
in order to use the program in any situation they want.

<FONT color="#0000FF"><H2>Input</H2></FONT>

<p>The first line of input contains an integer <b>T</b> which is the
number of test cases that follow.

<p>Each test case starts with a number <b>G</b> (<i>1 &le; G &le; 10000</i>)
indicating the number of games to consider.

<p>Then <i>G</i> lines follow, each one with the format <tt>"TEAM1 TEAM2 GOALS1 GOALS2"</tt>, giving the result of a single game (<tt>TEAM1</tt> scored
<tt>GOALS1</tt> goals and <tt>TEAM2</tt> scored <tt>GOALS2</tt>). Team names
are made only by lower-case letters and have a maximum length of 20.

<p>It is not necessary that games between all the teams have been made. Of course that you should only calculate the classification based on the games that
you were given. Also, some teams may play against each other more than one
time.

<p>To make the classification you should consider all the teams that played
at least one game. You may assume that the number of teams is &le; 10000

<FONT color="#0000FF"><H2>Output</H2></FONT>

<p>The output for each test case consists of lines in the form
<tt>"PLACE TEAM"</tt>, in ascending order of place, where <t>PLACE</tt>
indicates the place the team got and <tt>TEAM</tt> is the name of the team.
Remember that all teams that played at least one game must appear.

<p>Output of different test cases should be separated by a single blank line.

<p>See the example output for a more detailed explanation of how the
classification was obtained on that particular cases.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
3
6
portugal grecia 4 1
espanha russia 3 1
portugal russia 3 0
espanha grecia 1 2
portugal espanha 1 3
grecia russia 7 0
6
portugal grecia 4 1
espanha russia 1 3
portugal russia 3 0
espanha grecia 1 2
portugal espanha 1 3
grecia russia 7 0
1
brasil franca 0 0
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
1 portugal
2 espanha
3 grecia
4 russia

1 portugal
2 grecia
3 russia
4 espanha

1 brasil
1 franca
</PRE>

<FONT color="#0000FF"><H2>Explanation of Sample I/O</H2></FONT>

<ul>

<li>First sample case:
<p>Looking at the games, we see that <tt>"portugal"</tt>,
<tt>"espanha"</tt> and <tt>"grecia"</tt> made 6 points, and
<tt>"russia"</tt> made 0 points (which automatically gives them
the 4th place). A tie between the first three teams is achieved. A sub-league
with only that three teams is then considered but in this sub-league
all the three teams have 3 points. This tied group cannot be partitioned
further and then the other parameters are considered. Since in that
sub-league, <tt>"portugal"</tt> has the best goal-average,
it achieves 1st place. Then comes <tt>"spain"</tt> (2nd goal-average) and
finally <tt>"grecia"</tt>. If necessary, the other parameters would have been taken in account.

<li>Second sample case:
<p>Now, <tt>"portugal"</tt> and <tt>"grecia"</tt> are tied with 6 points, and
<tt>"espanha" and "russia"</tt> have 3 points. The sub-league between
<tt>"portugal"</tt> and <tt>"grecia"</tt> unties the two teams
(<tt>"portugal"</tt> won against <tt>"grecia"</tt>), and in the same way
the sub-league between <tt>"espanha" and "russia"</tt> unties them.

<li>Third sample case:
<p>The only two teams tied the game, so they are equal in all parameters. They
are in the same place and they appear in alphabetical order.

</ul>



<BR>
<HR>
<i>
Pedro Ribeiro, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>

</BODY>
</HTML>


______________________________________________________
918||||||false||||||
<HTML>

<head>
<title>ASCII Mandelbrot</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem F</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>ASCII Mandelbrot</CENTER></H1></FONT>


<p>
The Mandelbrot set, named after Benoit Mandelbrot, is a <b>fractal</b>.
Fractals are beautiful objects that display self-similarity at various scales.
Magnifying a fractal reveals small-scale details similar to the
large-scale characteristics. Although the Mandelbrot set is self-similar at magnified scales, the small scale details are not identical to the whole. In fact, the Mandelbrot set is infinitely complex. Yet the process of generating it is based on an extremely simple equation involving complex numbers. 

<p><img align=right src="http://uva.onlinejudge.org/external/9/p918a.jpg"  border=1 width=395 height=344>
The Mandelbrot set is a mathematical set, a collection of
<b>complex numbers</b>. Remember that complex numbers have two parts:
a real one and an imaginary one. The imaginary part is equal to a real
number times a special number called <b><i>i</i></b>.
For example, a valid complex number is <tt>2.5+3i</tt>.

<p>The number <i>i</i> was invented because no real number can be squared (multiplied by itself) and result in a negative number. The number <i>i</i> is
defined to be the square root of <tt>-1</tt>. So when you square an imaginary number you can get a negative number. For example, <tt>3i</tt> squared is <tt>-9</tt>.

<p><img src="http://uva.onlinejudge.org/external/9/p918a.jpg"  align=left>
Real numbers can be represented on a one dimensional line called the real number line. Negative numbers like <tt>-2</tt> are plotted to the left of zero and positive numbers like <tt>2</tt> are plotted to the right of zero. Any real number can be graphed on the real number line.

<p><img src="http://uva.onlinejudge.org/external/9/p918a.jpg"  align=left>
Since complex numbers have two parts, a real one and an imaginary one, we need a second dimension to graph them. We simply add a vertical dimension to the real number line for the imaginary part. Since our graph is now two-dimensional, it is a plane, the complex number plane. We can graph any complex number on this plane. The dots on this graph represent the complex numbers:
[<font 
color=#ff0000>2&nbsp;+&nbsp;1<var>i</var></font>], [<font 
color=#0000ff>-1.5&nbsp;+&nbsp;0.5<var>i</var></font>], [<font 
color=#00ff00>2&nbsp;-&nbsp;2<var>i</var></font>], [<font 
color=#00aaaa>-0.5&nbsp;-&nbsp;0.5<var>i</var></font>], [<font 
color=#ff00ff>0&nbsp;+&nbsp;1<var>i</var></font>], and [<font 
color=#cccc00>2&nbsp;+&nbsp;0<var>i</var></font>].

<p>The Mandelbrot set is a set of complex numbers, so we graph it on the complex number plane. However, first we have to find many numbers that are part of the set. To do this we need a test that will determine if a given number is inside the set or outside the set. The test is based on the equation
<b>Z = Z<sup>2</sup> + C</b>.
<tt>C</tt> represents a constant number, meaning that it does not change during the testing process. <tt>C</tt> is the number we are testing, the point on the complex plane that will be plotted when testing is complete. <tt>Z</tt> starts out as zero, but it changes as we repeatedly iterate this equation. With each iteration we create a new <tt>Z</tt> that is equal to the old <tt>Z</tt> squared plus the constant <tt>C</tt>. So the number <tt>Z</tt> keeps changing throughout the test. 

<p><img src="http://uva.onlinejudge.org/external/9/p918a.jpg"  align=left>
We're not really interested in the actual value of <tt>Z</tt> as it changes, we just look at its magnitude. The magnitude of a number is its distance from zero.To calculate the magnitude of a complex number, we add the square of the number's distance from the x-axis (the horizontal real axis) to the square of the number's distance from the y-axis (the imaginary vertical axis) and take the square root of the result.

<p>As we iterate our equation, <tt>Z</tt> changes and so does its magnitude.
The magnitude of <tt>Z</tt> will do one of two things.
It will either stay equal to or below <tt>2</tt> forever, or it will
eventually surpass two (strictly bigger than 2).
Once the magnitude of <tt>Z</tt> surpasses <tt>2</tt>,
it will increase forever. In the first case, where the magnitude of <tt>Z</tt>
stays small, the number we are testing is part of the Mandelbrot set.
If the magnitude of <tt>Z</tt> eventually surpasses <tt>2</tt>,
the number is not part of the Mandelbrot set. 

<p>As we test many complex numbers we can graph the ones that are part of the Mandelbrot set on the complex number plane. If we plot thousands of points, an image of the set will appear, as illustrated in the figure in the upper right
corner. We can add color to the image if we add colors to the points that are not inside the set, according to how many iterations were required before the magnitude of <tt>Z</tt> surpassed two.

<p>To make exciting images of tiny parts of the Mandelbrot set, we just zoom in on it, trying to perceive its full infinite beauty.

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<p>Your task is to plot a region of the Mandelbrot set using only
simple text, this is, only with ASCII characters.

<FONT color="#0000FF"><H2>Input</H2></FONT>

<p>The first line of input contains an integer <b>T</b> which is the
number of test cases that follow.

<p>Each test case is given in a line with the following format:

<p><tt>"CHARS MINI MAXI PRECI MINR MAXR PRECR"</tt>, where

<ul>
<li><b>CHARS</b> represents the set of chars to use in the plotting,
    always enclosed in quotes, and always with size 12 (the set
    of chars never includes quotes and spaces);
<li><b>MINI</b> and <b>MAXI</b> are two real numbers representing
    the lower and upper bound of the imaginary part in the plot;
<li><b>MINR</b> and <b>MAXR</b> are two real numbers representing
    the lower and upper bound of the real part in the plot;
<li><b>PRECI</b> and <b>PRECR</b> are two real numbers representing the
    precision that the plot must have in what respects to imaginary
    and real part, respectively.
</ul>

<p>What you must do is to plot the following graph:

<pre>
[MINI        , MINR] [MINI        , MINR+PRECR] (...)
[MINI+PRECI  , MINR] [MINI+PRECI  , MINR+PRECR] (...)
[MINI+2*PRECI, MINR] [MINI+2*PRECI, MINR+PRECR] (...)
(...)                (...)                      (...)
(...)                (...)                      [A,B]                 
</pre>

<p>where <tt>[A,B]</tt> are the last coordinates that are smaller or
equal than [MAXI,MAXR].

<p>Each one of this coordinates must be plotted as a single char. If
one iteration was required before the magnitude of <tt>Z</tt> surpassed two,
then the first char of <tt>CHARS</tt> is plotted, if two iterations are needed,
then the second char is plotted and so on until 12 iterations. If after
twelve iterations the magnitude of <tt>Z</tt> has not surpassed Z, then the
char <tt>" "</tt> (space) is plotted.

<FONT color="#0000FF"><H2>Output</H2></FONT>

<p>The output consists of the required number of lines and columns to plot
the specified region of the Mandelbrot set. All lines in output should be
terminated with a newline.

<p>Different test cases should be separated by a single blank line.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
2
"#$&/|[]+;:-." -1.2 1.2 0.1 -2 1 0.05
"1234567890AB" -1.2 -0.8 0.02 -0.5 0.5 0.02
</PRE>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
########$$$$$$$$$$&&&&&&&&&&&&&&&&&&&&&&&&&$$$$$$$$$$$$$$$$$$
#######$$$$$$$&&&&&&&&&&&&&&&&/////| +||///&&&&$$$$$$$$$$$$$$
######$$$$$&&&&&&&&&&&&&&&&//////||[]-;- |////&&&&$$$$$$$$$$$
#####$$$&&&&&&&&&&&&&&&&///////|||[+;  -+[||////&&&&&$$$$$$$$
####$$&&&&&&&&&&&&&&&&///////||[[]+      +[||||//&&&&&&$$$$$$
###$$&&&&&&&&&&&&&&//////||[]++++;:      :;+[[[ |//&&&&&$$$$$
##$$&&&&&&&&&&&&&////||||[[].               .    |/&&&&&&$$$$
##$&&&&&&&&&&&//|||||||[[[+ .                   ][|/&&&&&&$$$
#$&&&&&&&///||].]]]]]]]]]+-                     ; |//&&&&&&$$
#&&&//////|||[]:  .   -;;-                       +[//&&&&&&&$
#&//////||||[]+-                                 ]|///&&&&&&$
#/////[[[[]+.                                   +[|///&&&&&&$
                                              .+][|///&&&&&&&
#/////[[[[]+.                                   +[|///&&&&&&$
#&//////||||[]+-                                 ]|///&&&&&&$
#&&&//////|||[]:  .   -;;-                       +[//&&&&&&&$
#$&&&&&&&///||].]]]]]]]]]+-                     ; |//&&&&&&$$
##$&&&&&&&&&&&//|||||||[[[+ .                   ][|/&&&&&&$$$
##$$&&&&&&&&&&&&&////||||[[].               .    |/&&&&&&$$$$
###$$&&&&&&&&&&&&&&//////||[]++++;:      :;+[[[ |//&&&&&$$$$$
####$$&&&&&&&&&&&&&&&&///////||[[]+      +[||||//&&&&&&$$$$$$
#####$$$&&&&&&&&&&&&&&&&///////|||[+;  -+[||////&&&&&$$$$$$$$
######$$$$$&&&&&&&&&&&&&&&&//////||[]-;- |////&&&&$$$$$$$$$$$
#######$$$$$$$&&&&&&&&&&&&&&&&/////| +||///&&&&$$$$$$$$$$$$$$
########$$$$$$$$$$&&&&&&&&&&&&&&&&&&&&&&&&&$$$$$$$$$$$$$$$$$$

333333333333333333333333333333333222222222222222222
333333333333334444433333333333333332222222222222222
333333334444444444444444433333333333322222222222222
333334444444445555555444444433333333333222222222222
334444444444558866555554444444433333333332222222222
444444444445567 9B755555444444444333333333322222222
4444444444555678B9766555544444444433333333332222222
4444444445555668A0866666554444444444333333333322222
44444444555556670 A87667765444444444433333333332222
4444444555556667   08778A75544444444443333333333322
444444555555666790  99AA  6554444444444333333333332
444444555555667889  B   A76654444444444433333333333
444445555555677889A   A9876655444444444443333333333
444455555556677880A  B09876655544444444444333333333
44455555556677889A    A9877655554444444444433333333
4455555556677899       9887665555544444444443333333
4555555566789 0AB      0988765555554444444444333333
555555566680B          AAB 866555555444444444433333
5555566667A               B876555555554444444433333
55566666789AB              A76655555555444444443333
566666677880B             B977665555555554444444333
</PRE>


<BR>
<HR>
<i>
Pedro Ribeiro, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>

</BODY>
</HTML>


______________________________________________________
919||||||false||||||
<HTML>

<head>
<title>Cutting Polyominoes</title>
</head>

<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem G</h1></font>

<FONT color="#0000FF"><H1><CENTER>Cutting Polyominoes</center></h1></font>

A polyomino may be viewed as a set of squares connected by their
sides. Its boundary is an orthogonal polygon.  They are often
classified by their number of squares, which is equal to their area if
each square has area 1.  We may represent a polymino in a grid as
shown below.  We are interested in polyominoes without holes and that
have exactly one edge in each grid line that intersects them.  Did you
know that each polyomino results from a square (of area 1) by applying
pairs of transformations <tt>INFLATE/CUT</tt>?  For
example, the polyomino shown on the right is obtained if one applies
<tt>INFLATE (0,0)</tt>, <tt>CUT (0,0)</tt>,
<tt>INFLATE (1,1)</tt>, <tt>Cut (3,0)</tt>,
<tt>INFLATE (0,1)</tt>, <tt>CUT (2,1)</tt>,
<tt>INFLATE (1,2)</tt>, <tt>CUT (0,5)</tt>. It easy to see that it
has area <tt>12</tt>.

<p><img src="http://uva.onlinejudge.org/external/9/p919.gif"  border=1>

<p>We are considering that the initial northwest corner is placed in
(0,0) and that <i>x</i> and <i>y</i> grow as in the figure.  <tt>INFLATE</tt>}
<i>(p<sub>i</sub>,q<sub>i</sub>)</i> means ``multiplying by 4 the area
of the cell'' (i.e. square) whose northwest corner is in
<i>(p_i,q_i)</i>.  For this, we must duplicate the grid line where
this cell is located and then duplicate the column where the cell was
located. Obviously, we can drag down cells and then drag other cells
to the right. The coordinates of the polyomino are also modified: <i>x
-> x+1</i> iff <i>x > p<sub>i</sub></i> and <i>y -> y+1</i> iff <i>y >
q<sub>i</sub></i>.  <b>One cell can only be inflated if it belongs to
the polyomino</b>.

<p>The sequence ``<tt>INFLATE (p<sub>i</sub>,q<sub>i</sub>)</tt>
<tt>CUT (x<sub>i</sub>,y<sub>i</sub>)</tt>'' means that one must cut
the rectangle defined by the points
<tt>(p<sub>i</sub>+1,q<sub>i</sub>+1)</tt>,
<tt>(p<sub>i</sub>+1,y<sub>i</sub>)</tt>,
<tt>(x<sub>i</sub>,  y<sub>i</sub>)</tt>,
<tt>(x<sub>i</sub>,  q<sub>i</sub>+1)</tt>.  <b>Such rectangle can only
be cut if it simultaneously satisfies the following conditions</b>:

<p><b>(A)</b> it is actually a rectangle and it is part of the polyomino;

<p><b>(B)</b> <tt>(x<sub>i</sub>,y<sub>i</sub>)</tt> is a vertex of
the inflated polyomino and none of the other vertices of the inflated
polyomino belongs to the rectangle (either to its interior or
boundary);

<p><b>(C)</b> at least one of the points
<tt>(x<sub>i</sub>,q<sub>i</sub>+1)</tt> and
<tt>(p<sub>i</sub>+1,y<sub>i</sub>)</tt> is in an edge that contains
<tt>(x<sub>i</sub><sub>i</sub>)</tt>.

<FONT color="#0000FF"><H2>Problem</h2></font>

Your task is to write a program that computes the area of polyominoes
that result from applying a sequence of transformations
<tt>INFLATE-CUT</tt> to squares of area 1.

<FONT color="#0000FF"><H2>Input</h2></font>

The input is a sequence of descriptions of polyominoes's
constructions, ended by 0. Each description starts with an integer
<i>r &#8804; 50</i>, which is the number of pairs <tt>INFLATE-CUT</tt>,
followed by <i>r</i> rows, each one with four integers
<i>p<sub>i</sub></i>, <i>q<sub>i</sub></i>, <i>x<sub>i</sub></i>,
<i>y<sub>i</sub></i>, that mean "<tt>INFLATE
(p<sub>i</sub>,q<sub>i</sub>)</tt> <tt>CUT
(x<sub>i</sub>,y<sub>i</sub>)</tt>".  Observe that the polyomino
resulting from <i>r</i> <tt>INFLATE-CUT</tt>'s has <i>2r+4</i> vertices.



<FONT color="#0000FF"><H2>Output</h2></font>

Each line of the output will have the area of the 
constructed polyomino or 0 if any step in the construction does not 
satisfy the rules just defined.

<FONT color="#0000FF"><H2>Sample Input</h2></font>

<PRE>
4
0 0 0 0
1 1 3 0 
0 1 2 1
1 2 0 5
6
0 0 0 0
1 1 3 0 
0 1 2 1
1 2 0 5
5 5 5 4
3 4 2 2
6
0 0 0 0
1 1 3 0 
0 1 2 1
1 2 0 5
4 4 2 3
5 5 5 5
5
0 0 2 2
1 0 1 2
2 1 4 0
0 3 0 0
1 2 3 1
2
0 0 0 1
0 0 2 2
0
</pre>

<FONT color="#0000FF"><H2>Sample Output</h2></font>

<PRE>
12
0
0
18
0
</pre>


<BR>
<HR>
<i>
Ana Paula TomÃ¡s, 2nd round of CPUP'04<br>
(Concurso de ProgramaÃ§Ã£o da Universidade do Porto 2004)<br>
(Torneio Inter-UniversitÃ¡rio de ProgramaÃ§Ã£o, 2004, Round 3)
</i>

</body>
</html>


______________________________________________________
920||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office"
	xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">
	<head>
		<title>MIUP'2004: Problem A</title>
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<meta name="ProgId" content="Word.Document">
		<meta name="Generator" content="Microsoft Word 9">
		<meta name="Originator" content="Microsoft Word 9">
		<link rel="File-List" href="./A_files/filelist.xml">
			<link rel="Edit-Time-Data" href="./A_files/editdata.mso">
				<link rel="OLE-Object-Data" href="./A_files/oledata.mso"> <!--[if !mso]>
<STYLE>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</STYLE>
<![endif]-->  <!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>SimÃ£o Melo de Sousa</o:Author>
  <o:LastAuthor>Pedro Guerreiro</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>45</o:TotalTime>
  <o:Created>2004-10-15T14:39:00Z</o:Created>
  <o:LastSaved>2004-10-15T14:39:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>322</o:Words>
  <o:Characters>1839</o:Characters>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2258</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
					<style> <!-- a:link {color:006000;}
	span.MSOHYPERLINK {color:006000;}
	/* Font Definitions */ @font-face {font-family:"Arial Unicode MS"; panose-1:2 11 6 4 2 2 2 2 2 4; mso-font-charset:128; mso-generic-font-family:swiss; mso-font-pitch:variable; mso-font-signature:-1 -369098753 63 0 4129023 0;}
	@font-face {font-family:"\@Arial Unicode MS"; panose-1:2 11 6 4 2 2 2 2 2 4; mso-font-charset:128; mso-generic-font-family:swiss; mso-font-pitch:variable; mso-font-signature:-1 -369098753 63 0 4129023 0;}
	/* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:" ; margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	p.MsoListBullet, li.MsoListBullet, div.MsoListBullet {mso-style-update:auto; margin-top:0mm; margin-right:0mm; margin-bottom:0mm; margin-left:18.0pt; margin-bottom:.0001pt; text-indent:-18.0pt; mso-pagination:widow-orphan; mso-list:l0 level1 lfo3; tab-stops:list 18.0pt; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	a:link, span.MsoHyperlink {color:#006000; text-decoration:underline; text-underline:single;}
	a:visited, span.MsoHyperlinkFollowed {color:purple; text-decoration:underline; text-underline:single;}
	p {margin-right:0mm; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	pre {margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt; font-size:10.0pt; font-family:"Courier New"; mso-fareast-font-family:"Courier New";}
	@page Section1 {size:612.0pt 792.0pt; margin:70.85pt 30.0mm 70.85pt 30.0mm; mso-header-margin:35.4pt; mso-footer-margin:35.4pt; mso-paper-source:0;}
	div.Section1 {page:Section1;}
	/* List Definitions */ @list l0 {mso-list-id:-119; mso-list-type:simple; mso-list-template-ids:-910681742;}
	@list l0:level1 {mso-level-number-format:bullet; mso-level-style-link:"List Bullet"; mso-level-text:\F0B7; mso-level-tab-stop:18.0pt; mso-level-number-position:left; margin-left:18.0pt; text-indent:-18.0pt; font-family:Symbol;}
	ol {margin-bottom:0mm;}
	ul {margin-bottom:0mm;}
	--></style>
		<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
	</head>
	<body bgcolor="white" lang="EN-GB" link="#006000" vlink="purple" style='tab-interval:
36.0pt'>
		<div class="Section1">
			<h1><span style='COLOR:#006000'>Problem A<o:p></o:p></h1>
			</SPAN>
			<h1 align="center" style='TEXT-ALIGN:center'><span style='COLOR:#006000'>Sunny
Mountains<o:p></o:p></h1>
			</SPAN>
			<p><span style='COLOR:black'>During their honeymoon, Mrs and Mr Smith went to
the Himalayas. How they were surprised when they observed that, during the
sunset, all the snow touched by the sunbeams turned red.<o:p></o:p></span></p>
			<p>Such a magnificent landscape leaves everyone plenty of emotion, but Mr Smith's 
				number obsession overcame all this. He rapidly began evaluating distances, 
				which made Mrs Smith quite upset.<o:p></o:p></p>
			<h2><span style='COLOR:#006000'>Problem<o:p></o:p></h2>
			</SPAN>
			<p>Your work is to help him calculate the size, in meters, of the mountainsides 
				that became red as the sun sets. Mr Smith's honeymoon depends on you! Please be 
				quick and efficient.</p>
			<p>For the sake of simplicity, consider that, during the sunset, the sunbeams are 
				horizontal and assume that the landscape is described by the set of coordinates 
				of the mountain peaks and cols. This can be depicted by the following figure. A 
				landscape, in this context, is then a sequence of peaks and cols (i.e., only a 
				col follows a peak and conversely).</p>
			<p><!--[if gte vml 1]><v:shapetype id=_x0000_t75 coordsize 
= "21600,21600" o:preferrelative = "t" o:spt = "75" filled = "f" stroked = "f" 
path = " m@4@5 l@4@11@9@11@9@5 xe"><v:stroke joinstyle = 
"miter"></v:stroke><v:formulas><v:f eqn = 
"if lineDrawn pixelLineWidth 0 "></v:f><v:f eqn = "sum @0 1 0 "></v:f><v:f eqn = 
"sum 0 0 @1 "></v:f><v:f eqn = "prod @2 1 2 "></v:f><v:f eqn = 
"prod @3 21600 pixelWidth "></v:f><v:f eqn = 
"prod @3 21600 pixelHeight "></v:f><v:f eqn = "sum @0 0 1 "></v:f><v:f eqn = 
"prod @6 1 2 "></v:f><v:f eqn = "prod @7 21600 pixelWidth "></v:f><v:f eqn = 
"sum @8 21600 0 "></v:f><v:f eqn = "prod @7 21600 pixelHeight "></v:f><v:f eqn = 
"sum @10 21600 0 "></v:f></v:formulas><v:path o:extrusionok = "f" 
gradientshapeok = "t" o:connecttype = "rect"></v:path><o:lock v:ext="edit" 
aspectratio="t"></o:lock></v:shapetype><v:shape id=_x0000_i1025 
style="WIDTH: 710.25pt; HEIGHT: 379.5pt" o:ole="  type = "#_x0000_t75" coordsize 
= "21600,21600"><v:imagedata o:title="  src = 
"./A_files/image001.png"></v:imagedata></v:shape><![endif]--> 
				<![if !vml]><img width="947" height="506" src="http://uva.onlinejudge.org/external/9/p920.png"  v:shapes="_x0000_i1025"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1159359921">
 </o:OLEObject>
</xml><![endif]--></p>
			<p>Note that, in this picture, the sunny mountainsides are emphasized by bold lines 
				and the coordinates of the landscape are emphasized by bold points.</p>
			<p>Thus, the goal of this problem is to calculate the total length in meters of the 
				bold lines.</p>
			<p>For this task consider that: (1) for all coordinates (<i>x</i>, <i>y</i>), 0<span style='FONT-FAMILY:Symbol'> &lt;=</span>
				<i>x</i><span style='FONT-FAMILY:Symbol'>
&lt;=</span>
				30000 and 0 &lt;= <i>y </i>&lt;= 8848; (2) the unit is the <em>meter</em>; (3) 
				all the X-coordinates are pair-wise distinct; (4) the leftmost point has 0 as 
				X-coordinate and the rightmost point has 0 as Y-coordinate; (5) The total 
				number of coordinates given is <i>n</i><span style='FONT-FAMILY:Symbol'> &lt;= </span>100.<span style='COLOR:#006000'><o:p></o:p></p>
			</SPAN>
			<h2><span style='COLOR:#006000'>Input<o:p></o:p></h2>
			</SPAN>
			<P align="left">The first line of input contains <I>C</I> (<I>0 &lt; C &lt; 100</I>
			), the number of test cases that follows.
			<P align="left">Each test case starts with a line containing the number <I>N</I><![if 
				!supportLists]><![endif]> of coordinate pairs<![if !supportLists]><![endif]>. 
				The remaining&nbsp; <i>N</i> lines for each test case contain the coordinates 
				defining the landscape. Each of these lines contains two integers, <i>x</i> and <i>y</i>, 
				separated by a single space. The first integer, <i>x</i>, is the X-coordinate, 
				and the second, <i>y</i>, is the Y-coordinate of the considered point.<o:p></o:p>
				<h2><span style='COLOR:#006000'>Output<o:p></o:p></h2>
			</SPAN>
			<p>The output is formed by a sequence of lines, one for each test case.&nbsp;Each 
				line contains a single real number with exactly two decimal digits. This number 
				represents the length in meters of the sunny mountainsides for the 
				corresponding test case.</p>
			<h2><span style='COLOR:#006000'>Sample Input<o:p></o:p></h2>
			</SPAN><pre>2</pre>
			<PRE>11</PRE>
			<pre>1100 1200</pre>
			<pre>0 500</pre>
			<pre>1400 100</pre>
			<pre>600 600</pre>
			<pre>2800 0</pre>
			<pre>400 1100</pre>
			<pre>1700 600</pre>
			<pre>1500 800</pre>
			<pre>2100 300</pre>
			<pre>1800 700</pre>
			<pre>2400 500</pre>
			<PRE>2</PRE>
			<PRE>0 1000</PRE>
			<PRE>1000 0</PRE>
			<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:#006000'><!--TOC subsection Sample Output-->Sample Output<o:p></o:p></h2>
			</SPAN><pre>1446.34</pre>
			<PRE><span style='COLOR:black'><o:p>1414.21</o:p></span></PRE>
			<PRE><SPAN style="COLOR: black"></SPAN>&nbsp;</PRE>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:black'>
					<hr size="2" width="100%" align="center">
				</span></div>
			<p class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='FONT-SIZE:13.5pt;COLOR:black'>MIUP'2004: Fourth Portuguese National
Programming Contest <o:p></o:p></span></p>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:black'>
					<hr size="2" width="100%" align="center">
				</span></div>
		</div>
		<P>Problem setter: SimÃ£o Melo de Sousa</P>
	</body>
</html>

______________________________________________________
921||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office"
	xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">
	<head>
		<title>MIUP'2004: Problem B</title>
		<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
		<meta name="ProgId" content="Word.Document">
		<meta name="Generator" content="Microsoft Word 9">
		<meta name="Originator" content="Microsoft Word 9">
		<link rel="File-List" href="./B-WordPuzzle_files/filelist.xml">
			<link rel="Edit-Time-Data" href="./B-WordPuzzle_files/editdata.mso"> <!--[if !mso]>
<STYLE>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</STYLE>
<![endif]-->  <!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Pedro Rangel Henriques</o:Author>
  <o:LastAuthor>Pedro Guerreiro</o:LastAuthor>
  <o:Revision>11</o:Revision>
  <o:TotalTime>166</o:TotalTime>
  <o:Created>2004-10-09T11:16:00Z</o:Created>
  <o:LastSaved>2004-10-09T14:28:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>459</o:Words>
  <o:Characters>2620</o:Characters>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3217</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
				<style> <!-- /* Font Definitions */ @font-face {font-family:cmtt10; panose-1:2 11 5 0 0 0 0 0 0 0; mso-font-charset:0; mso-generic-font-family:swiss; mso-font-pitch:variable; mso-font-signature:3 0 0 0 1 0;}
	/* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:" ; margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	h1 {margin-right:0mm; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; mso-outline-level:1; font-size:24.0pt; font-family:"Times New Roman"; mso-font-kerning:18.0pt; font-weight:bold;}
	h2 {margin-right:0mm; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; mso-outline-level:2; font-size:18.0pt; font-family:"Times New Roman"; font-weight:bold;}
	p.MsoListBullet, li.MsoListBullet, div.MsoListBullet {mso-style-update:auto; margin-top:0mm; margin-right:0mm; margin-bottom:0mm; margin-left:18.0pt; margin-bottom:.0001pt; text-indent:-18.0pt; mso-pagination:widow-orphan; mso-list:l0 level1 lfo3; tab-stops:list 18.0pt; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	p {margin-right:0mm; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	pre {margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt; font-size:10.0pt; font-family:"Courier New"; mso-fareast-font-family:"Courier New";}
	@page Section1 {size:612.0pt 792.0pt; margin:70.85pt 30.0mm 70.85pt 30.0mm; mso-header-margin:35.4pt; mso-footer-margin:35.4pt; mso-paper-source:0;}
	div.Section1 {page:Section1;}
	/* List Definitions */ @list l0 {mso-list-id:-119; mso-list-type:simple; mso-list-template-ids:-281402284;}
	@list l0:level1 {mso-level-number-format:bullet; mso-level-style-link:"List Bullet"; mso-level-text:\F0B7; mso-level-tab-stop:18.0pt; mso-level-number-position:left; margin-left:18.0pt; text-indent:-18.0pt; font-family:Symbol;}
	ol {margin-bottom:0mm;}
	ul {margin-bottom:0mm;}
	--></style>
		<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
	</head>
	<body bgcolor="white" lang="EN-GB" style='tab-interval:36.0pt'>
		<div class="Section1">
			<h1><span style='COLOR:#006000'>Problem B<o:p></o:p></span></h1>
			<h1 align="center" style='TEXT-ALIGN:center'><span style='COLOR:#006000'>A Word
Puzzle in the Sunny Mountains<o:p></o:p></span></h1>
			<p><span style='COLOR:black'>During 
their honeymoon in the Himalayas, Mr and Mrs Smith spent part of their time 
playing</span><span style='COLOR:black'>        games
(crosswords, cryptograms, etc.). One of the most exciting is a very simple
crypto-game: given a list of words encrypted with numbers (positive integers)
the objective is to find the correspondence table that associates a letter ('A'
to 'Z') with each number in such a way that all the words in the list, after
replacing numbers by the corresponding letters, become valid words according to
a given dictionary. To start the game, the first word, called <i>keyword</i> or
<i>seed</i>, is given, 
asserting the value (the corresponding letters) of the first numbers.</span></p>
			<P><SPAN style="COLOR: black"></SPAN><span style='COLOR:black'>To help them save precious time in their honeymoon, we are asking
your assistance.</span><span style='COLOR:#006000'><o:p></o:p>
				</span></P>
			<h2><span style='COLOR:#006000'>Problem<o:p></o:p></span></h2>
			<p><span style='COLOR:black'>      Your task is to
write a program that reads the input data (list of encrypted words, seed,
and dictionary) and plays the game, printing out the solution (the mapping that applies
numbers to letters and solves the problem). Notice that every puzzle proposed
has one, and just one, solution.<o:p></o:p></span></p>
			<h2><span style='COLOR:#006000'>Input<o:p></o:p></span></h2>
			<span style='COLOR:black'>
<P align="left">The first line of input contains <I>C</I> (<I>0 &lt; C &lt; 10</I>), the number of test cases that follows. 
<P align="left">Each test case is organized as follows:<o:p></o:p></span>
			<p class="MsoListBullet"><![if !supportLists]><span style='FONT-FAMILY:Symbol'>&middot;<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The first line contains the number 1 &lt;= <i>l</i> &lt;= 26 of 
				different letters to be decode;</p>
			<p class="MsoListBullet"><![if !supportLists]><span style='FONT-FAMILY:Symbol'>&middot;<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The second line contains the number 1 &lt;= <i>n</i> &lt;= 100 of 
				encrypted words;</p>
			<p class="MsoListBullet"><![if !supportLists]><span style='FONT-FAMILY:Symbol'>&middot;<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The next <i>n</i> lines contain the encrypted words to be decoded, one 
				word per line represented by numbers, used sequentially starting in 1 (one 
				number replacing the same letter, different numbers correspond to different 
				letters). Numbers are separated by single spaces and the sequence ends with a 
				0. The length of a word is never less than 2 or greater than 15;</p>
			<p class="MsoListBullet"><![if !supportLists]><span style='FONT-FAMILY:Symbol'>&middot;<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The next line is the <i>keyword</i> or <i>seed</i>, i.e., the first 
				word of the list to be decoded, formed by upper case letters;</p>
			<![if !supportLists]>
			<p class="MsoListBullet"><span style='FONT-FAMILY:Symbol'>&middot;<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The remaining lines contain the words (upper case letters) of the 
				dictionary (1 &lt;= <i>m</i> &lt;= 100 lines, <i>m</i> words of length not 
				greater than 15).</p>
			<P class="MsoListBullet"><SPAN style="FONT-FAMILY: Symbol">&middot;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN></SPAN>The end of the input for each case is marked by a line with an asterisk.</P>
			<h2><span style='COLOR:#006000'>Output<o:p></o:p></span></h2>
			<p><span style='COLOR:black'>The 
output is formed by a sequence of lines, one for each test case.&nbsp;Each line 
contains&nbsp;a string made up&nbsp;of <EM>l </EM>uppercase letters (<EM>l</EM> 
representing the number of letters to be decoded) describing the correspondence 
table that&nbsp;solves the problem for the respective test case.&nbsp;In each 
string, the first character is the letter associated with number 1, the second 
is the letter associated&nbsp;with number 2, and&nbsp;so on, and the last 
character is the letter associated&nbsp;with&nbsp;the last&nbsp;number to be 
decoded (the number <EM>l</EM>).&nbsp; </span></p>
			<h2><span style='COLOR:#006000'>Sample Game<o:p></o:p></span></h2>
			<p><span style='COLOR:black'>Below we show the input data and the output for a single
game with 7 encrypted words and 11 numbers encoding the 11 different letters to
be discovered. The solution is the map shown as Sample Output, and the list of
valid words (existing in the given dictionary) that can be written with the <i>correspondence table</i>, discovered by the player, is:<o:p></o:p></span></p>
			<pre><span lang=PT style='mso-ansi-language:PT'>ADORNO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ANA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>AMOR<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>HORTA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PORTA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PAPEL<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ELMO</span></pre>
			<PRE><SPAN lang=PT style="mso-ansi-language: PT"></SPAN>&nbsp;</PRE>
			<PRE><SPAN lang=PT style="mso-ansi-language: PT"><o:p><P><SPAN style="COLOR: black">Note that in general, each input file corresponds to a sequence of games, as explained, and not to a single game, as the</SPAN></P><P><SPAN style="COLOR: black">sample input illustrates. </SPAN></P></o:p></SPAN></PRE>
			<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span lang="PT" style='COLOR:#006000;mso-ansi-language:PT'>Sample Input<o:p></o:p></span></h2>
			<p class="MsoNormal" style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt; mso-layout-grid-align:none'><span lang="PT" style='FONT-SIZE:
10pt;FONT-FAMILY:
cmtt10;mso-ansi-language:
PT'><![if !supportEmptyParas]><![endif]>1&nbsp;<o:p></o:p></span></p>
			<pre><span lang=PT style='mso-ansi-language:PT'>11<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>7<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>1 2 3 4 5 3 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>1 5 1 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>1 6 3 4 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>7 3 4 8 1 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>9 3 4 8 1 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>9 1 9 10 11 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>10 11 6 3 0<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ADORNO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ADORNO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>AMOR<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ANA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ARLINDO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ANTUNES<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>HORTA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PORTA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PORTAO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PORTAL<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PAPEL<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>PARVO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ELMO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ESTE<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ESSE<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ARMADURA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>HELENA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ERGONOMICO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>EVA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>ERVA<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>CARMO<o:p></o:p></span></pre>
			<pre><span
lang=PT style='mso-ansi-language:PT'>COUVE</span></pre>
			<PRE><SPAN lang=PT style="mso-ansi-language: PT">*<o:p></o:p></SPAN></PRE>
			<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span lang="PT" style='COLOR:#006000;mso-ansi-language:PT'>Sample Output<o:p></o:p></span></h2>
			<pre><span lang=PT style='COLOR:black;mso-ansi-language:PT'>ADORNMHTPEL</span><span
style='COLOR:black'>

<hr size=2 width="100%" align=center>

</span></pre>
			<p class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='FONT-SIZE:13.5pt;COLOR:black'>MIUP'2004: Fourth Portuguese National
Programming Contest <o:p></o:p></span></p>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:black'>
					<hr size="2" width="100%" align="center">
				</span></div>
		</div>
		<P>Problem setter: Pedro Henriques</P>
	</body>
</html>

______________________________________________________
922||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office"
	xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">
	<head>
		<title>MIUP'2004: Problem C</title>
		<meta http-equiv="Content-Type" content="text/html; charset=us-ascii">
		<meta name="ProgId" content="Word.Document">
		<meta name="Generator" content="Microsoft Word 9">
		<meta name="Originator" content="Microsoft Word 9">
		<link rel="File-List" href="./C_files/filelist.xml">
			<link rel="Edit-Time-Data" href="./C_files/editdata.mso">
				<link rel="OLE-Object-Data" href="./C_files/oledata.mso"> <!--[if !mso]>
<STYLE>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</STYLE>
<![endif]-->  <!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Pedro Guerreiro</o:Author>
  <o:LastAuthor>Pedro Guerreiro</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>56</o:TotalTime>
  <o:Created>2004-10-15T14:31:00Z</o:Created>
  <o:LastSaved>2004-10-15T14:35:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>452</o:Words>
  <o:Characters>2581</o:Characters>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3169</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
					<style> <!-- /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:" ; margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	p {margin-right:0mm; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	pre {margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt; font-size:10.0pt; font-family:"Courier New"; mso-fareast-font-family:"Courier New";}
	@page Section1 {size:210.0mm 842.0pt; margin:70.9pt 30.0mm 70.9pt 30.0mm; mso-header-margin:35.45pt; mso-footer-margin:35.45pt; mso-paper-source:0;}
	div.Section1 {page:Section1;}
	--></style>
		<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1031"/>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
	</head>
	<body bgcolor="white" lang="EN-GB" style='tab-interval:36.0pt'>
		<div class="Section1">
			<h1><span style='COLOR:#006000'>Problem C<o:p></o:p></h1>
			</SPAN>
			<h1 align="center" style='TEXT-ALIGN:center'><span style='COLOR:#006000'>Rectangle
by the Ocean<o:p></o:p></h1>
			</SPAN>
			<p><span style='COLOR:black'>Some countries are literarily known by their
shapes. For example, France is sometimes referred to as &#8216;the hexagon&#8217;, Italy is
called &#8216;the boot&#8217; and Portugal is known as &#8216;the rectangle by the ocean&#8217; (the
Atlantic Ocean, of course).<o:p></o:p></span></p>
			<p><span style='COLOR:black'>Given our mathematical background, we are curious
to know exactly which rectangle we are talking about when we say that Portugal
is a rectangle. More precisely, we want to compute the rectangle that best fits
the contour of the Portuguese map (not counting the islands). By definition,
that would be a rectangle with horizontal basis for which at least three of the
four corners lie on the contour of the map and whose area is closest to the
area of the map (either from above or from below).<o:p></o:p></span></p>
			<h2><span style='COLOR:#006000'>Problem<o:p></o:p></h2>
			</SPAN>
			<p>In general, we are given a closed line on a plane, which we shall call here a 
				&#8216;contour&#8217; (see below for a better characterization of our 
				contours), and we want to discover a rectangle with horizontal and vertical 
				sides having at least three of the four corners on given points of the contour 
				and such that its area is closest to the area inside the contour.</p>
			<p>For this task, each contour is described by a sequence of contiguous segments, 
				each segment connecting a point with integer coordinates to one of the eight 
				points with integer coordinates nearby, horizontally, vertically, or 
				diagonally. The contour is closed and does not touch itself. Here is an 
				example, whose area is 12.5:</p>
			<p align="center" style='TEXT-ALIGN:center'><!--[if gte vml 1]><v:shapetype id=_x0000_t75 coordsize = 
"21600,21600" o:preferrelative = "t" o:spt = "75" filled = "f" stroked = "f" 
path = " m@4@5 l@4@11@9@11@9@5 xe"><v:stroke joinstyle = 
"miter"></v:stroke><v:formulas><v:f eqn = 
"if lineDrawn pixelLineWidth 0 "></v:f><v:f eqn = "sum @0 1 0 "></v:f><v:f eqn = 
"sum 0 0 @1 "></v:f><v:f eqn = "prod @2 1 2 "></v:f><v:f eqn = 
"prod @3 21600 pixelWidth "></v:f><v:f eqn = 
"prod @3 21600 pixelHeight "></v:f><v:f eqn = "sum @0 0 1 "></v:f><v:f eqn = 
"prod @6 1 2 "></v:f><v:f eqn = "prod @7 21600 pixelWidth "></v:f><v:f eqn = 
"sum @8 21600 0 "></v:f><v:f eqn = "prod @7 21600 pixelHeight "></v:f><v:f eqn = 
"sum @10 21600 0 "></v:f></v:formulas><v:path o:extrusionok = "f" 
gradientshapeok = "t" o:connecttype = "rect"></v:path><o:lock v:ext="edit" 
aspectratio="t"></o:lock></v:shapetype><v:shape id=_x0000_i1025 
style="WIDTH: 165pt; HEIGHT: 162.75pt" o:ole="  type = "#_x0000_t75" coordsize = 
"21600,21600"><v:imagedata o:title="  src = 
"./C_files/image001.png"></v:imagedata></v:shape><![endif]--> 
				<![if !vml]><img width="220" height="217" src="http://uva.onlinejudge.org/external/9/p922.png"  v:shapes="_x0000_i1025"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="MSPhotoEd.3" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1159359689">
 </o:OLEObject>
</xml><![endif]--></p>
			<p>This figure corresponds to the data presented in the Sample Input and Sample 
				Output sections below (assuming the lower left corner of the grid has 
				coordinates (0, 0)). The shaded area represents the solution.<o:p></o:p></p>
			<h2><span style='COLOR:#006000'>Input<o:p></o:p></h2>
			</SPAN>
			<P align="left">The first line of input contains <I>C</I> (<I>0 &lt; C &lt; 100</I>), 
				the number of test cases that follows.
			</P>
			<FONT color="#006000">
				<P>
			</FONT>The first line of each test case contains one integer, <i>N</i>, 
			representing the number of points that define the contour for that test case, 4 
			&lt;= <i>N</i> &lt;= 256.</P>
			<p>Each of the <i>N</i> following lines contains two integers, <i>X</i> and <i>Y</i>, 
				separated by a space, defining the x and y coordinates of a point along the 
				contour. Note that <i>X</i> and <i>Y</i> can be positive, negative or zero.</p>
			<p>Successive points <i>P</i><sub>i</sub> and <i>P</i><sub>i+1</sub> (with 1 &lt;= 
				<i>i</i> &lt; <i>N</i>) define a segment that belongs to the contour. The last segment is 
				defined by <i>P</i><sub>N</sub> and <i>P</i><sub>1</sub>, thus closing the 
				contour. The x coordinates of <i>P</i><sub>i</sub> and <i>P</i><sub>i+1</sub> and 
				also of <i>P</i><sub>N</sub> and <i>P</i><sub>1</sub> differ by at most 1 (in 
				absolute value) and so do the y coordinates. All points are distinct.<o:p></o:p></p>
			<h2><span style='COLOR:#006000'>Output<o:p></o:p></h2>
			</SPAN>
			<p>The output file has <EM>C</EM> lines, one for each test case.&nbsp;Each line has 
				five numbers, separated by a space. The first&nbsp;of these five 
				numbers&nbsp;represents the area of the contour and&nbsp;should be written with 
				exactly one decimal place; the remaining four numbers are integers representing 
				the coordinates of the lower left corner and of the upper right corner of the 
				computed rectangle.</p>
			<p>The computed rectangle has at least three of its four corners on the points 
				given to define the contour and its area is as close as possible to the area 
				within the contour.</p>
			<p>If more than one rectangle meets these requirements, your program should provide 
				the one whose sequence of coordinates is lexicographically the least.<o:p></o:p></p>
			<h2><span style='COLOR:#006000'>Sample Input<o:p></o:p></h2>
			</SPAN><pre>2</pre>
			<PRE>17</PRE>
			<pre>1 2</pre>
			<pre>2 3</pre>
			<pre>1 4</pre>
			<pre>1 5</pre>
			<pre>2 5</pre>
			<pre>3 5</pre>
			<pre>4 5</pre>
			<pre>5 5</pre>
			<pre>5 4</pre>
			<pre>4 4</pre>
			<pre>4 3</pre>
			<pre>5 2</pre>
			<pre>5 1</pre>
			<pre>4 2</pre>
			<pre>4 1</pre>
			<pre>3 1</pre>
			<pre>2 1</pre>
			<PRE><o:p>8</o:p></PRE>
			<PRE>
<o:p>0 0</o:p></PRE>
			<PRE>
<o:p>1 0</o:p></PRE>
			<PRE>
<o:p>2 0</o:p></PRE>
			<PRE>
<o:p>3 0</o:p></PRE>
			<PRE>
<o:p>4 0</o:p></PRE>
			<PRE>
<o:p>3 1</o:p></PRE>
			<PRE>
<o:p>2 2</o:p></PRE>
			<PRE>
<o:p>1 1 </o:p></PRE>
			<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:#006000'>Sample Output<o:p></o:p></h2>
			</SPAN><pre>12.5 1 1 4 5</pre>
			<PRE>4.0 0 0 2 2</PRE>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:black'>
					<hr size="2" width="100%" align="center">
				</span></div>
			<p class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='FONT-SIZE:13.5pt;COLOR:black'>MIUP'2004: Fourth Portuguese National
Programming Contest <o:p></o:p></span></p>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:black'>
					<hr size="2" width="100%" align="center">
				</span></div>
		</div>
		Problem setter: Pedro Guerreiro
	</body>
</html>

______________________________________________________
923||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="D_files/filelist.xml">
<link rel=Edit-Time-Data href="D_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>MIUP'2004: Problem D</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Nuno Pregui&#231;a</o:Author>
  <o:LastAuthor>Pedro Guerreiro</o:LastAuthor>
  <o:Revision>77</o:Revision>
  <o:TotalTime>331</o:TotalTime>
  <o:Created>2004-06-02T23:29:00Z</o:Created>
  <o:LastSaved>2004-12-09T17:03:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>505</o:Words>
  <o:Characters>2881</o:Characters>
  <o:Lines>24</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3380</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>125</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:HyphenationZone>21</w:HyphenationZone>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0mm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-margin-top-alt:auto;
	margin-right:0mm;
	mso-margin-bottom-alt:auto;
	margin-left:0mm;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:"Times New Roman";
	color:#006000;
	font-weight:bold;}
h2
	{mso-margin-top-alt:auto;
	margin-right:0mm;
	mso-margin-bottom-alt:auto;
	margin-left:0mm;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:#006000;
	font-weight:bold;}
p
	{mso-margin-top-alt:auto;
	margin-right:0mm;
	mso-margin-bottom-alt:auto;
	margin-left:0mm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0mm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
span.SpellE
	{mso-style-name:" ;
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:70.85pt 30.0mm 70.85pt 30.0mm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0mm 5.4pt 0mm 5.4pt;
	mso-para-margin:0mm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="6146"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<h1><span style='color:#339966'><font color="#006000">Problem D</font></span></h1>

<h1 align=center style='text-align:center'><span style='color:#339966'><font color="#006000">One
against Many</font></span></h1>

<p>The creative department at the <span class=SpellE>PuimTV</span> has just
created a new television game: "One Against Many". In this game,
one player plays against a set of opponents. The player and the opponents are collectively
called participants. The game proceeds in a sequence of rounds until the player
or all his opponents lose.</p>

<p>In each round, the participants should answer a question about some subject.
The player or an opponent loses when he answers wrongly. If no participant
loses, a new question of the same subject is posed until some participant
loses. If the player loses, the game ends and he wins no money. If an opponent
loses, he is excluded from the game (i.e., he will not participate in any of
the following rounds). In each round, the player can win, at most, a constant
amount of money, R. The actual amount of money won by the player is an integer
that depends on the number of opponents at the beginning of the round, O, and
the number of opponents that lose in the round, L, using the formula: floor(R *
L / O) (with floor(x) the largest integer not greater than x).</p>

<p>In the game, there is a fixed set of subjects, {<i>s</i><sub>1</sub>, <i>s</i><sub>2</sub><span
class=GramE>, ...,</span> <span class=SpellE><i>s</i><sub>n</sub></span>}. The
subject for each round is given by the following cyclic sequence: <i>s</i><sub>1</sub>,
<i>s</i><sub>2</sub><span class=GramE>, ...,</span> <span class=SpellE><i>s</i><sub>n</sub></span>,
<i>s</i><sub>1</sub>, <i>s</i><sub>2</sub>, ..., <span class=SpellE><i>s</i><sub>n</sub></span>,
<i>s</i><sub>1</sub>, ... The subject of the first round is subject <i>s</i><sub>1</sub>.
</p>

<p>For each subject, <span class=SpellE><i>s</i><sub>i</sub></span>, there is
an associated price, <i>p</i><sub>i</sub>, with <i>p</i><sub>i</sub> a
percentage value (0 &lt;= <i>p</i><sub>i </sub>&lt; 100). For playing a round
with subject <span class=SpellE><i>s</i><sub>i</sub></span>, the player must
pay <span class=GramE><i>floor</i>(</span><i>T</i> * <i>p</i><sub>i</sub> / 100),
with <i>T</i> the total amount of money won by the player since the beginning
of the game. In the beginning of the game, <i>T</i>=0. </p>

<p>The financial department of <span class=SpellE>PuimTV</span> is now trying
to evaluate the financial impact of the game to decide the number of opponents,
the number of subjects and the price of each subject that <span class=SpellE>PuimTV</span>
will use. To this end, you have been asked to create a program that computes
the maximum amount of money a player can win. </p>

<h2><span style='color:#339966'><font color="#006000">Problem</font></span></h2>

<p>Given the initial number of opponents, <span class=SpellE><i>Oinit</i></span>,
in the game, the maximum amount of money a player can win in each round, <i>R</i>,
the number of subjects, <i>N</i>, and their prices, <i>p</i><sub>i</sub>, your
task is to create a program that computes the maximum amount of money a player
can win in the "One <span class=GramE>Against</span> Many" game. </p>

<h2><span style='color:#339966'><font color="#006000">Input</font></span></h2>

<p>The first line of input contains an integer, <i style='mso-bidi-font-style:
normal'>G</i> (0 &lt; <i style='mso-bidi-font-style:normal'>G</i> &lt; 50),
that specifies the number of game configurations to analyze. The rest of the
input contains a sequence of G game configurations. Each game configuration is
specified as follows:</p>

<p>The first line of input contains an integer, <span class=SpellE><i>Oinit</i></span>
(0 &lt; <span class=SpellE><i>Oinit</i></span><i> </i>&lt;= 2500), that
specifies the number of initial opponents.</p>

<p>The second line of input contains an integer, <i>R</i> (<span class=SpellE><i>Oinit</i></span><i>
</i>&lt;= <i>R </i>&lt;= 5000), that specifies the amount of money the player
can win in each round.</p>

<p>The third line of input contains an integer, <i>N</i> (0 &lt; <i>N </i>&lt;=
50), that specifies the number of different subjects.</p>

<p>Each of the following <i>N</i> input lines contains an integer, <i>p</i><sub>i</sub>
for line <span class=SpellE><i>i</i></span> (0 &lt;= <i>p </i><span
class=SpellE><sub>i</sub></span>&lt; 100, <span class=SpellE><i>i</i></span><i>
</i>= 1<span class=GramE>..<i>N</i></span>), that specifies the price of each
of the <i>N</i> subjects (as defined earlier).</p>

<h2><span style='color:006000'><span style='color:#339966'><font color="#006000">Output</span></font></span></h2>

<p>Your program must output a sequence of lines, each one containing an integer,
with the <span class=GramE>maximum</span> amount of money the player can win in
each configuration (using the same order as the input file). </p>

<h2><span style='color:#339966'><font color="#006000">Sample Input</font></span></h2>

<pre>2</pre><pre>3</pre><pre>100</pre><pre>2</pre><pre>80</pre><pre>20</pre><pre>3</pre><pre>100</pre><pre>2</pre><pre>20</pre><pre>80</pre>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='color:006000'><span style='color:#339966'><font color="#006000">Sample Output</span></font></span></h2>

<pre>153</pre><pre>146</pre>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:13.5pt'>MIUP'2004: Fourth Portuguese National
Programming Contest</span></p>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>Problem
setter: <span class=SpellE>Nuno</span> <span class=SpellE>Pregui&ccedil;a</span></p>

</div>

</span></span></span>
</body>

</html>

______________________________________________________
924||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office"
	xmlns:w="urn:schemas-microsoft-com:office:word" xmlns="http://www.w3.org/TR/REC-html40">
	<head>
		<title>MIUP'2004: Problem E</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<meta name="ProgId" content="Word.Document">
		<meta name="Generator" content="Microsoft Word 11">
		<meta name="Originator" content="Microsoft Word 11">
		<link rel="File-List" href="E_files/filelist.xml">
			<link rel="Edit-Time-Data" href="E_files/editdata.mso"> <!--[if !mso]>
<STYLE>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</STYLE>
<![endif]-->  <!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Margarida Mamede</o:Author>
  <o:LastAuthor>Pedro Guerreiro</o:LastAuthor>
  <o:Revision>7</o:Revision>
  <o:TotalTime>13</o:TotalTime>
  <o:Created>2004-10-09T13:46:00Z</o:Created>
  <o:LastSaved>2004-12-09T17:57:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>317</o:Words>
  <o:Characters>1810</o:Characters>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2123</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>125</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
				<style> <!-- /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:" ; margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman"; color:black;}
	h1 {mso-margin-top-alt:auto; margin-right:0mm; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; mso-outline-level:1; font-size:24.0pt; font-family:"Times New Roman"; color:black; font-weight:bold;}
	h2 {mso-margin-top-alt:auto; margin-right:0mm; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; mso-outline-level:2; font-size:18.0pt; font-family:"Times New Roman"; color:black; font-weight:bold;}
	p.MsoListBullet, li.MsoListBullet, div.MsoListBullet {mso-style-update:auto; margin-top:0mm; margin-right:0mm; margin-bottom:0mm; margin-left:18.0pt; margin-bottom:.0001pt; text-indent:-18.0pt; mso-pagination:widow-orphan; mso-list:l0 level1 lfo3; tab-stops:list 18.0pt; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman"; color:black;}
	p {mso-margin-top-alt:auto; margin-right:0mm; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman"; color:black;}
	pre {margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt; font-size:10.0pt; font-family:"Courier New"; mso-fareast-font-family:"Courier New"; color:black;}
	tt {font-family:"Courier New"; mso-ascii-font-family:"Courier New"; mso-fareast-font-family:"Courier New"; mso-hansi-font-family:"Courier New"; mso-bidi-font-family:"Courier New";}
	span.GramE {mso-style-name:" ; mso-gram-e:yes;}
	@page Section1 {size:210.0mm 842.0pt; margin:70.9pt 30.0mm 70.9pt 30.0mm; mso-header-margin:35.45pt; mso-footer-margin:35.45pt; mso-paper-source:0;}
	div.Section1 {page:Section1;}
	/* List Definitions */ @list l0 {mso-list-id:-119; mso-list-type:simple; mso-list-template-ids:382916174;}
	@list l0:level1 {mso-level-number-format:bullet; mso-level-style-link:"List Bullet"; mso-level-text:\F0B7; mso-level-tab-stop:18.0pt; mso-level-number-position:left; margin-left:18.0pt; text-indent:-18.0pt; font-family:Symbol;}
	ol {margin-bottom:0mm;}
	ul {margin-bottom:0mm;}
	--></style>
				<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0mm 5.4pt 0mm 5.4pt;
	mso-para-margin:0mm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]-->
				<meta name="CREATED" content="20040629;17150900">
				<meta name="CHANGED" content="20040629;17203000"><!--[if gte mso 9]><xml>
 <u1:DocumentProperties>
  <u1:Author>Pedro Guerreiro</u1:Author>
  <u1:LastAuthor>Pedro Guerreiro</u1:LastAuthor>
  <u1:Revision>4</u1:Revision>
  <u1:TotalTime>4</u1:TotalTime>
  <u1:Created>2004-06-02T23:29:00Z</u1:Created>
  <u1:LastSaved>2004-06-03T00:00:00Z</u1:LastSaved>
  <u1:Pages>1</u1:Pages>
  <u1:Words>296</u1:Words>
  <u1:Characters>1690</u1:Characters>
  <u1:Lines>14</u1:Lines>
  <u1:Paragraphs>3</u1:Paragraphs>
  <u1:CharactersWithSpaces>2075</u1:CharactersWithSpaces>
  <u1:Version>9.2720</u1:Version>
 </u1:DocumentProperties>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <u2:shapedefaults u3:ext="edit" spidmax="1030"/>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <u4:shapelayout u5:ext="edit">
  <u4:idmap u5:ext="edit" data="1"/>
 </u4:shapelayout>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
	</head>
	<body bgcolor="white" lang="EN-US" style='tab-interval:36.0pt'>
		<div class="Section1">
			<h1><FONT color="#006000"><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Problem E</span><o:p></o:p></SPAN></FONT></h1>
			<h1 align="center" style='TEXT-ALIGN:center'><span style='COLOR:#006000'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Spreading the News</span>
					<o:p></o:p>
				</span></h1>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>In a large organization,
everyone knows a lot of colleagues. However, friendship relations are kept with
only a few of them, to whom news are told.<o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Suppose that whenever an
employee knows of a piece of news, he tells it to all his friends on the
following day. So, on the first day, the source of the information tells it to
his friends; on the second day, the source's friends tell it to their friends;
on the third day, the friends of the source's friends' tell it to their friends;
and so on.<o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>The goal is to determine: <o:p></o:p></span></p>
			<p class="MsoListBullet"><![if !supportLists]><span lang="EN-GB" style='FONT-FAMILY:
Symbol;mso-ansi-language:
EN-GB;mso-fareast-font-family:
Symbol;mso-bidi-font-family:
Symbol'><span style='mso-list:Ignore'>Â·<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>
				</span><![endif]><i><span lang="EN-GB" style='mso-ansi-language:
EN-GB'>the maximum daily boom size</span></i><span lang="EN-GB" style='mso-ansi-language:
EN-GB'>, which is the largest number of employees that, on a single day, hear
the piece of news for the first time; and <o:p></o:p></span></p>
			<p class="MsoListBullet"><![if !supportLists]><span lang="EN-GB" style='FONT-FAMILY:
Symbol;mso-ansi-language:
EN-GB;mso-fareast-font-family:
Symbol;mso-bidi-font-family:
Symbol'><span style='mso-list:Ignore'>Â·<span style="FONT:7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>
				</span><![endif]><span class="GramE"><i><span lang="EN-GB" style='mso-ansi-language:EN-GB'>the</span></i></span><i><span lang="EN-GB" style='mso-ansi-language:EN-GB'> first boom day</span></i><span lang="EN-GB" style='mso-ansi-language:EN-GB'>, which is the first day on which the maximum
daily boom size occurs. <o:p></o:p></span></p>
			<h2><span style='COLOR:#006000'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Problem</span>
					<o:p></o:p>
				</span></h2>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Write a program that, given
the friendship relations between the employees and the source of a piece of
news, computes the maximum daily boom size and the first boom day of that
information spreading process. <o:p></o:p></span></p>
			<h2><span style='COLOR:#006000'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Input</span>
					<o:p></o:p>
				</span></h2>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>The first line of the input
contains the number <i>E</i> of employees (1<i> </i>&lt;=<i>E </i>&lt;=<i></i>2500).
Employees are numbered from 0 to <i>E</i>-1. <o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Each of the following <i>E</i>
lines specifies the set of friends of an employee's (from employee 0 to
employee <i>E</i>-1). A set of friends contains the number of friends <i>N</i>
(0<i> </i>&lt;=<i>N </i>&lt;<i></i>15), followed by <i>N</i> distinct
integers representing the employee's friends. All integers are separated by a
single space. <o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>The next line contains an
integer <i>T</i> (1<i> </i>&lt;=<i>T </i>&lt;<i></i>60), which is the number
of test cases. <o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Each of the following <i>T</i>
lines contains an employee, which represents the (unique) source of the piece
of news in the test case. <o:p></o:p></span></p>
			<h2><span style='COLOR:#006000'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Output</span>
					<o:p></o:p>
				</span></h2>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>The output consists of <i>T</i>
lines, one for each test case. <o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>If no employee (but the
source) hears the piece of news, the output line contains the integer </span><tt><span lang="EN-GB" style='FONT-SIZE:10pt;mso-ansi-language:EN-GB'>0</span></tt><span lang="EN-GB" style='mso-ansi-language:EN-GB'>. <o:p></o:p></span></p>
			<p><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Otherwise, the output line
contains two integers, <i>M</i> and <i>D</i>, separated by a single space,
where <i>M</i> is the maximum daily boom size and <i>D</i> is the first boom
day. <o:p></o:p></span></p>
			<h2><span style='COLOR:#006000'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Sample
Input</span>
					<o:p></o:p>
				</span></h2>
			<pre><span lang=EN-GB style='mso-ansi-language:EN-GB'>6<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>2 1 2<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>2 3 4<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>3 0 4 5<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>1 4<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>0<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>2 0 2<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>3<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>0<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>4<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>5<o:p></o:p></span></pre>
			<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span style='COLOR:#006000'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Sample
Output</span>
					<o:p></o:p>
				</span></h2>
			<pre><span lang=EN-GB style='mso-ansi-language:EN-GB'>3 2<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>0<o:p></o:p></span></pre>
			<pre><span
lang=EN-GB style='mso-ansi-language:EN-GB'>2 1<o:p></o:p></span></pre>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>
					<hr size="2" width="100%" align="center">
				</span></div>
			<p class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span lang="EN-GB" style='FONT-SIZE:13.5pt;mso-ansi-language:EN-GB'>MIUP'2004: Fourth
Portuguese National Programming Contest<o:p></o:p></span></p>
			<div class="MsoNormal" align="center" style='TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>
					<hr size="2" width="100%" align="center">
				</span></div>
			<p class="MsoNormal" style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span lang="EN-GB" style='mso-ansi-language:EN-GB'>Program setter: Margarida Mamede<o:p></o:p></span></p>
		</div>
	</body>
</html>

______________________________________________________
925||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
	<head>
		<title>MIUP'2004-Problem F</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<meta name="ProgId" content="Word.Document">
		<meta name="Originator" content="Microsoft Word 9">
		<meta name="GENERATOR" content="Microsoft FrontPage 2.0">
		<link rel="File-List" href="./F-Prerequisites_files/filelist.xml">
			<link rel="Edit-Time-Data" href="./F-Prerequisites_files/editdata.mso"> <!--[if !mso]>
<STYLE>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</STYLE>
<![endif]-->  <!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Isabel Nunes</o:Author>
  <o:LastAuthor>Pedro Guerreiro</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>7</o:TotalTime>
  <o:Created>2004-10-09T14:36:00Z</o:Created>
  <o:LastSaved>2004-10-09T14:38:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>463</o:Words>
  <o:Characters>2643</o:Characters>
  <o:Lines>22</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3245</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
				<style> <!-- /* Style Definitions */ p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:" ; margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	p {margin-right:0mm; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0mm; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	pre {margin:0mm; margin-bottom:.0001pt; mso-pagination:widow-orphan; tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt; font-size:10.0pt; font-family:"Courier New"; mso-fareast-font-family:"Courier New";}
	@page Section1 {size:612.0pt 792.0pt; margin:70.85pt 30.0mm 70.85pt 30.0mm; mso-header-margin:35.4pt; mso-footer-margin:35.4pt; mso-paper-source:0;}
	div.Section1 {page:Section1;}
	--></style>
		<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]-->  <!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
	</head>
	<body bgcolor="#ffffff" lang="EN-GB" style="tab-interval:36.0pt">
		<h1><span style="COLOR:#006000">Problem F</span></h1>
		<h1 align="center" style="TEXT-ALIGN:center"><span style="COLOR:#006000">No more
prerequisites, please!</span></h1>
		<p>Recently, I had to prepare a small students guide concerning our Computer 
			Science graduation. I asked all my colleagues to send me some specific pieces 
			of information about the courses they were responsible for. One of these pieces 
			of information was the set of prerequisites that is defined for each course <em>c</em>, 
			that is, the set of courses that the student is supposed to have completed 
			before he can attend course <em>c</em>.</p>
		<p>Some of my colleagues were so zealous of their task that they sent me more 
			information than I needed... I'll explain:</p>
		<p style="MARGIN-LEFT:36pt;MARGIN-RIGHT:36pt">Let <em>ca</em>, <em>cb</em>, <em>cc</em>,
			<em>cd</em> and <em>ce</em> be courses of our Computer Science graduation.<br>
			Suppose <em>ca</em> is a prerequisite for <em>cb</em>; <em>cb</em> and <em>cc</em>
			are prerequisites for <em>cd</em>; <em>cd</em> is a prerequisite for <em>ce</em>.<br>
			John, who is responsible for course <em>cd</em>, told me that the prerequisites 
			for <em>cd</em> were <em>cc</em>, <em>cb</em> and <em>ca</em>;<br>
			Elizabeth, who is responsible for course <em>ce</em>, told me that the 
			prerequisites for <em>ce</em> were <em>cd</em>, <em>cc</em>, <em>cb</em> and <em>ca</em>.</p>
		<p>But I only needed prerequisites <em>cc</em> and <em>cb</em> for course <em>cd</em>
			because <em>cb</em> already has <em>ca</em> as its prerequisite! Likewise, I 
			only needed prerequisite <em>cd</em> for course <em>ce</em> because <em>cd</em> 
			already has <em>cc</em>, <em>cb</em>, and <em>ca</em> as its prerequisites!
		</p>
		<p>Unfortunately, not all my colleagues asked me whether I wanted the whole set of 
			prerequisites or the minimum one; they asked John instead!! He told them that 
			"the most information, the better"!
		</p>
		<p>I had no courage to tell them that, by sending me more information than the one 
			I needed, they were turning my task of gathering all their info more difficult. 
			How I wished for some robot that I could feed with the information I had, and 
			that gave me, for each course, the minimum set of prerequisites!
		</p>
		<p>Never too late...</p>
		<h2><span style="COLOR:#006000">Problem</span></h2>
		<p>Your task consists of writing a program that, given the name and prerequisites 
			of a set of courses, computes the minimum set of prerequisites for all courses.</p>
		<h2><span style="COLOR:#006000">Input</span></h2>
		<p>The first line contains the number <em>C</em> of test cases that follow ( 0 &lt; <em>
				C &lt; 1000 ). </em>
		</p>
		<p>Each test case starts with a line containing the number <i>k</i> (0 &lt; <em>k </em>
			&lt;= 120) of courses that are to be processed. The next <em>k</em> lines 
			contain the names of the <em>k</em> courses, one per line. The next line 
			contains the number <em>j</em> of courses that have prerequisites (0 &lt;= <em>j</em>
			&lt;= 120). The next <i>j</i> lines contain, for each course that has some 
			prerequisite, the course name, the number of prerequisites it has, and the 
			names of the courses that are its prerequisites, separated by a single space.</p>
		<p>Course names have maximum length 20, do not contain any spaces, and are composed 
			of characters in the set {'a'..'z'}.</p>
		<p>There are no cycles on prerequisites, that is, it is never the case that some 
			course <em>c</em> has a prerequisite course <em>cp</em> that has <em>c</em> as 
			a prerequisite (directly or indirectly).</p>
		<h2><span style="COLOR:#006000">Output</span></h2>
		<p>For each input case your program must output the information about the courses 
			that have prerequisites. Each line must contain the name of the course, the 
			number of prerequisites it has, and the names of the courses that are its 
			prerequisites, separated by a single space.</p>
		<p style="MARGIN-BOTTOM:12pt">Within each test case, the courses must be listed 
			ordered by name, and the list of prerequisites for each course must also be 
			ordered by course name.
		</p>
		<h2><span style="COLOR:#006000">Sample Input </span></h2>
		<pre>2</pre>
		<pre>5</pre>
		<pre>cc</pre>
		<pre>ca</pre>
		<pre>ce</pre>
		<pre>cb</pre>
		<pre>cd</pre>
		<pre>3</pre>
		<pre>ce 4 cd cb cc ca</pre>
		<pre>cd 3 cb cc ca</pre>
		<pre>cb 1 ca</pre>
		<pre>9</pre>
		<pre>dg</pre>
		<pre>di</pre>
		<pre>dc</pre>
		<pre>df</pre>
		<pre>de</pre>
		<pre>dd</pre>
		<pre>da</pre>
		<pre>dh</pre>
		<pre>db</pre>
		<pre>7</pre>
		<pre>dg 3 da de df</pre>
		<pre>dd 2 da db</pre>
		<pre>df 1 de</pre>
		<pre>dc 1 db</pre>
		<pre>dh 5 da de dg df dc</pre>
		<pre>de 2 da dd</pre>
		<pre>di 2 df dd</pre>
		<h2><span style="COLOR:#006000">Sample Output </span></h2>
		<pre>cb 1 ca</pre>
		<pre>cd 2 cb cc</pre>
		<pre>ce 1 cd</pre>
		<pre>dc 1 db</pre>
		<pre>dd 2 da db</pre>
		<pre>de 1 dd</pre>
		<pre>df 1 de</pre>
		<pre>dg 1 df</pre>
		<pre>dh 2 dc dg</pre>
		<pre>di 1 df</pre>
		<span style="COLOR:black">
			<hr>
		</span>
		<p align="center" class="MsoNormal" style="TEXT-ALIGN:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt"><span style="FONT-SIZE:13.5pt;COLOR:black">MIUP'2004:
Fourth Portuguese National Programming Contest <o:p></o:p></span></p>
		<span style="COLOR:black">
			<hr>
			<P align="left">
		</span>Problem setter: Isabel Nunes<o:p></o:p></P>
	</body>
</html>

______________________________________________________
926||||||false||||||
<HTML>
<HEAD>
<TITLE>MIUP'2004: Problem G</TITLE>
</HEAD>

<BODY bgcolor="white">

<font color="#006000">
<H1>Problem G</H1>

<H1 align="center">Walking Around Wisely</H1>
</font>

<P align="left">
<p align="left"><img src="http://uva.onlinejudge.org/external/9/p926.jpg"  align="right" width="500" height="270"><fontcolor="#000000">
Imagine you are in a well planned city in which a very large area has
all streets or avenues set nicely in a perpendicular way resembling a
grid. For a real example consider Downtown Manhattan in New
York. Obviously, there may be cases in which a street or avenue is
suddenly discontinued. For you, streets or avenues are the same and to
simplify we call them roads. You can always walk in any direction
along a road (either North/South or East/West).

<P align="left"> We have a small challenge for you. As illustrated
in the figure, we want you to determine in how many ways can
you go from a start position <i>A</i> to an end position <i>B</i>. By
<i>position</i> we mean a crossing between two roads. There is a small
catch, you are not allowed to travel South or West.

<FONT color="#006000"><H2>Problem</H2></FONT>

<P align="left"> 

Given a grid of <i>NxN</i> roads, a starting position
<i>A=(A<sub>x</sub>,A<sub>y</sub>)</i> and a ending position
<i>B=(B<sub>x</sub>,B<sub>y</sub>)</i>, your task is to count in how
many ways can you go from <i>A</i> to <i>B</i> without ever travelling
South or West. You can assume that there will always be at least one
valid path between the start and the end positions.


<FONT color="#006000"><H2>Input</H2></FONT>

<P align="left">

<P align="left"> The first line of input contains <i>C</i> (<i>0 &lt;
C &lt; 1000</i>), the number of test cases that follows.

<P align="left"> 
Each test case starts with a line containing the
number <i>N</i> (<i>1 &lt; N &lt;= 30</i>) of vertical and horizontal
roads, followed by two lines containing the start position and the end
position. Each position is defined by two integer coordinates
separated by a single space.

<P align="left"> The next line contains the number of places,
<i>W</i> (limited by the size of the grid), where the roads are
discontinued. The following <i>W</i> lines, describe such places. Each
place is defined by two integer coordinates 
<i>P<sub>x</sub></i> and <i>P<sub>y</sub></i> (road numbers between
<i>1</i> and <i>N</i>) followed by a symbol
<i>D</i> (<i>D in {N,E,S,W}</i>) indicating that there are men working
in the direction
<i>D</i> with respect to junction
<i>(P<sub>x</sub>,P<sub>y</sub>)</i>. The three values that
characterize a place are separated by a single space.

<FONT color="#006000"><H2>Output</H2></FONT>

<P align="left">
For each input case your program must output a line indicating the
number of ways you can go from the start to the end point, given that
you are not allowed to travel South or West.

<FONT color="#006000"><H2>Sample Input</H2></FONT>

The first test case illustrates the figure.

<PRE>
2
3
1 1
3 3
2
2 3 S
2 2 W
3
1 1
3 3
0
</PRE>
<FONT color="#006000"><H2>Sample Output</H2></FONT>
<PRE>
3
6
</PRE>
<HR>
<FONT SIZE=4>
<center>MIUPÂ’2004: Fourth Portuguese National Programming Contest
</center>
</FONT>
<HR></font>Problem setter: Fernando Silva



</BODY>
</HTML>

______________________________________________________
927||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"> <!--Converted with LaTeX2HTML 2002-2-1 (1.70) original version  by: Nikos Drakos, CBLU, University of Leeds * revised and  updated by: Marcus Hennecke, Ross Moore, Herb Swan * with  significant contributions from: Jens Lippmann, Marek Rouchal, Martin -->
<HTML>
	<HEAD>
		<TITLE>MIUP'2004: Problem I</TITLE>
		<META NAME="description" CONTENT="Integer Sequences from Addition of Terms (ISAT)">
		<META NAME="keywords" CONTENT="isat">
		<META NAME="resource-type" CONTENT="document">
		<META NAME="distribution" CONTENT="global">
		<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
		<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
		<LINK REL="STYLESHEET" HREF="isat.css">
			<LINK REL="next" HREF="node1.html">
	</HEAD>
	<BODY>
		<H1><font color="#006000">Problem H</font></H1>
		<H1 ALIGN="center"><font color="#006000">Integer Sequences from Addition of Terms</font></H1>
		<P ALIGN="left"></P>
		<font color="#006000"><font color="#000000">We consider sequences formed from the 
				addition of terms of a given sequence. Let <IMG WIDTH="43" HEIGHT="37" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ \{a_n\}$">,  <!-- MATH $n = 1,2,3,\ldots$ -->
				<IMG WIDTH="116" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ n = 1,2,3,\ldots$">, 
				be an arbitrary sequence of integer numbers; <IMG WIDTH="14" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ d$">
				a positive integer. We construct another sequence <IMG WIDTH="44" HEIGHT="37" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ \{b_m\}$">,  <!-- MATH $m = 1,2,3,\ldots$ -->
				<IMG WIDTH="121" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ m = 1,2,3,\ldots$">, 
				by defining <IMG WIDTH="25" HEIGHT="35" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ b_m$">
				as consisting of <!-- MATH $n \times d$ -->
				<IMG WIDTH="49" HEIGHT="35" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ n \times d$">
				occurrences of the term <IMG WIDTH="23" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n$">:
			</font></font>
		<P></P>
		<DIV ALIGN="center"><font color="#006000"><font color="#000000"><!-- MATH \begin{equation*} b_1 = \underbrace{a_1, \ldots, a_1}_{d \text{ occurrences of  } a_1} \, , \quad b_2 = \underbrace{a_2, \ldots, a_2}_{2d \text{ occurrences of } a_2} \, , \quad b_3 = \underbrace{a_3, \ldots, a_3}_{3d \text{ occurrences of } a_3} \, -->
				</font></font>
			<TABLE CELLPADDING="0" WIDTH="100%" ALIGN="center">
				<TR VALIGN="middle">
					<TD NOWRAP ALIGN="center"><IMG WIDTH="590" HEIGHT="71" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$\displaystyle b_1 = \underbrace{a_1, \ldots, a_1}_{d \text{ occurrences of } a_...&#10;...underbrace{a_3, \ldots, a_3}_{3d \text{ occurrences of } a_3} \, , \quad \cdots$"></TD>
					<TD NOWRAP WIDTH="10" ALIGN="right">
						&nbsp;&nbsp;&nbsp;</TD>
				</TR>
			</TABLE>
		</DIV>
		<font color="#006000"><font color="#000000">
				<BR CLEAR="all">
			</font></font>
		<P></P>
		<font color="#006000"><font color="#000000">For example, if <IMG WIDTH="60" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n = n$">, 
				and <IMG WIDTH="49" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ d = 1$">, 
				then the resulting sequence <IMG WIDTH="44" HEIGHT="37" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ \{b_m\}$">
				is: </font></font>
		<P></P>
		<DIV ALIGN="center"><font color="#006000"><font color="#000000"><!-- MATH \begin{equation*} -->
				</font></font>
			<TABLE CELLPADDING="0" WIDTH="100%" ALIGN="center">
				<TR VALIGN="middle">
					<TD NOWRAP ALIGN="center"><IMG WIDTH="240" HEIGHT="71" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$\displaystyle \underbrace{1}_{b_1},\underbrace{2,2}_{b_2},\underbrace{3,3,3}_{b_3},&#10; \underbrace{4,4,4,4}_{b_4},\cdots$"></TD>
					<TD NOWRAP WIDTH="10" ALIGN="right">
						&nbsp;&nbsp;&nbsp;</TD>
				</TR>
			</TABLE>
		</DIV>
		<font color="#006000"><font color="#000000">
				<BR CLEAR="all">
			</font></font>
		<P></P>
		<H2><font color="#006000"><font color="#000000"><FONT color="#006000">Problem</FONT></font></font></H2>
		<P align="left">
			<font color="#006000"><font color="#000000">Given <IMG WIDTH="23" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n$">
					and <IMG WIDTH="14" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ d$">
					we want to obtain the corresponding <IMG WIDTH="15" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k$">th 
					integer in the sequence <IMG WIDTH="44" HEIGHT="37" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ \{b_m\}$">. 
					For example, with <IMG WIDTH="60" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n = n$">
					and <IMG WIDTH="49" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ d = 1$">
					we have 3 for <IMG WIDTH="50" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k = 6$">; 
					we have 4 for <IMG WIDTH="50" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k=7$">. 
					With <IMG WIDTH="60" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n = n$">
					and <IMG WIDTH="49" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ d = 2$">, 
					we have 2 for <IMG WIDTH="50" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k = 6$">; 
					we have 3 for <IMG WIDTH="50" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k=7$">.
				</font></font>
			<H2><font color="#006000"><font color="#000000"><FONT color="#006000">Input</FONT></font></font></H2>
		<P align="left">
			The first line of input contains <i>C</i> (<i>0 &lt; C &lt; 100</i>
		), the number of test cases that follows.
		<p align="left"><font color="#006000"><font color="#000000">Each of the <font color="black"><i>C</i><font color="#006000"><font color="#000000">
								test cases consists of three lines: </font></font>
		</p>
		<OL>
			<LI>
				<font color="#006000"><font color="#000000">The first line represents <IMG WIDTH="23" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n$">
						- a polynomial in <IMG WIDTH="16" HEIGHT="16" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ n$">
						of degree <IMG WIDTH="11" HEIGHT="16" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ i$">
						with non-negative integer coefficients in increasing order of the power:<!-- MATH \begin{displaymath} a_n = c_0+c_1 n +c_2 n^2+c_3 n^3+\cdots + c_i n^i -->
					</font></font>
				<P></P>
				<DIV ALIGN="center">
					<font color="#006000"><font color="#000000"><IMG WIDTH="335" HEIGHT="41" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$\displaystyle a_n = c_0+c_1 n&#10;+c_2 n^2+c_3 n^3+\cdots + c_i n^i \, ,&#10;$">
						</font></font>
				</DIV>
				<P></P>
				<font color="#006000"><font color="#000000">where <!-- MATH $c_j \in \mathbb{N}_0$ -->
						<IMG WIDTH="64" HEIGHT="35" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ c_j \in \mathbb{N}_0$">,  <!-- MATH $j = 0,\ldots,i$ -->
						<IMG WIDTH="96" HEIGHT="34" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ j = 0,\ldots,i$">. 
						This polynomial <IMG WIDTH="23" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n$">
						is codified by its degree <IMG WIDTH="11" HEIGHT="16" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ i$">
						followed by the coefficients <IMG WIDTH="20" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ c_j$">,  <!-- MATH $j = 0,\ldots,i$ -->
						<IMG WIDTH="96" HEIGHT="34" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ j = 0,\ldots,i$">. 
						All the numbers are separated by a single space. </font></font>
			<LI>
				<font color="#006000"><font color="#000000">The second line is the positive integer <IMG WIDTH="14" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ d$">.
					</font></font>
			<LI>
				<font color="#006000"><font color="#000000">The third line is the positive integer <IMG WIDTH="15" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k$">.
					</font></font>
			</LI>
		</OL>
		<P>
			<font color="#006000"><font color="#000000">It is assumed that the polynomial <IMG WIDTH="23" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ a_n$">
					is a polynomial of degree less or equal than 20 (<!-- MATH $1 \le i \le 20$ -->
					<IMG WIDTH="90" HEIGHT="34" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ 1 \le i \le 20$">) 
					with non-negative integer coefficients less or equal than 10000 (<!-- MATH $0 \le c_j \le 10000$ -->
					<IMG WIDTH="127" HEIGHT="33" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ 0 \le c_j \le 10000$">,  <!-- MATH $j = 0,\ldots,i$ -->
					<IMG WIDTH="96" HEIGHT="34" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ j = 0,\ldots,i$">);<!-- MATH $1 \le d \le 100000$ -->
					<IMG WIDTH="131" HEIGHT="35" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ 1 \le d \le 100000$">;  <!-- MATH $1 \le k \le 1000000$ -->
					<IMG WIDTH="141" HEIGHT="35" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ 1 \le k \le 1000000$">.
				</font></font>
			<H2><font color="#006000"><font color="#000000"><FONT color="#006000">Output</FONT></font></font></H2>
		<P>
			<font color="#006000"><font color="#000000">The output is a sequence of lines, one for 
					each test case. Each of these lines contains </font></font><FONT color="#006000">
				<FONT color="#000000">the <IMG WIDTH="15" HEIGHT="17" ALIGN="bottom" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ k$">th 
					integer in the sequence <IMG WIDTH="44" HEIGHT="37" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ \{b_m\}$">&nbsp;for 
					the corresponding test case. This value is less or equal than <IMG WIDTH="61" HEIGHT="39" ALIGN="middle" BORDER="0" SRC="http://uva.onlinejudge.org/external/9/927img1.png"  ALT="$ 2^{63}-1$">.
				</FONT></FONT>
		</P>
		<H2><font color="#006000"><font color="#000000"><FONT color="#006000">Sample Input</FONT></font></font></H2>
		<PRE>
<font color="#006000"><font color="#000000">2
</font></font><FONT color=#006000><FONT color=#000000>4 3 0 0 0 23
25
100<BR>1 0 1<BR>1<BR>6
</FONT></FONT></PRE>
		<H2><font color="#006000"><font color="#000000"><FONT color="#006000">Sample Output</FONT></font></font></H2>
		<PRE>
<font color="#006000"><font color="#000000">1866<BR>3
</font></font></PRE>
		<HR>
		<center><font color="#006000"><font color="#000000"><FONT SIZE="4">MIUPÂ’2004: Fourth Portuguese 
						National Programming Contest </FONT></font></font>
		</center>
		<HR>
		<p><font color="#006000"><font color="#000000">Problem setter: Delfim Torres</font></font></p>
		</FONT></FONT></FONT>
	</BODY>
</HTML>

______________________________________________________
928||||||false||||||
<html>
	<head>
		<TITLE>MIUP'2004: Problem I</TITLE> 
		<!-- ZoneLabs Privacy Insertion -->
		<script language='javascript' src='http://127.0.0.1:1026/js.cgi?pcaw&amp;r=6334'></script>
	</head>
	<body>
		<FONT color="#006000">
			<H1>Problem I</H1>
		</FONT><FONT color="#006000">
			<H1 align="center">Eternal Truths</H1>
		</FONT>
		<p align="center"><img border="0" src="http://uva.onlinejudge.org/external/9/p928b.gif"  width="137" height="145">
		&nbsp;
		<p align="left">
		History is filled with legends and stories associated with mazes and labyrinths 
		that have been shrouded by mystery.&nbsp;
		<p>
		In some ancient religion a maze functioned as a cult center and symbolized 
		mankind's search for all eternal truths.<p>In their initiation cult young people 
			have to pass across a maze composed by squared chambers that can communicate 
			with the ones at the north, south, east or west. They have to go from a start 
			point to an end point passing by the shortest number of chambers and have to 
			follow some ritual. They have to respect a sequence of 3 moves that will be 
			repeated until the end point is reached. In the first move they pass through 
			one chamber, in the second through two chambers and in the third through three 
			chambers. In each of these moves they canÂ’t change their direction. <FONT color="#006000">
				<H2>Problem</H2>
			</FONT>
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<tr>
					<td>
						Given a map of the chambers disposed in a rectangular grid find the shortest 
						path, in number of moves, from a start point to an end point.<p>Notice that, in the 
							sequence of moves the ritual described above must be respected. In each move 
							you must pass through the corresponding number of chambers, without changing 
							your direction during a move. You must begin with 1 chamber and repeat the 
							sequence of 1, 2 and 3 chambers until the end is reached. The end can be 
							reached in any of the states.</p>
					</td>
					<td>
						<p><FONT color="#006000"><img border="0" src="http://uva.onlinejudge.org/external/9/p928b.gif"  width="140" height="140"> </FONT>
						</p>
					</td>
				</tr>
			</table>
			<FONT color="#006000">
				<H2>Input</H2>
			</FONT>
		<p>
		The first line contains the number of test cases.<p>The first line of each test 
			case contains two integers separated by a single space: <i>R</i> (2&lt;= <i>R</i>&lt;= 
			300) corresponding to the number of rows and <i>C</i> (2 &lt;= <i>C</i>
		&lt;= 300) corresponding to the number of columns.
		<P>
			Each of the following <i>R</i> lines contains <i>C</i> characters. For each 
			character, a dot&nbsp; "<b>.</b>"&nbsp; represents a chamber, a hash mark "<b>#</b>" 
			represents a wall and the capital letters "<b>S</b>" and "<b>E</b>"&nbsp; 
			represent the start and the end position respectively. <FONT color="#006000">
				<H2>Output</H2>
			</FONT>
		<p>
			The output consists of one line for each test case containing the number of 
			moves from "<b>S</b>" to "<b>E</b>" or the word "NO" if there is no solution. <FONT color="#006000">
				<H2>Sample Input</H2>
			</FONT>
			<PRE>2
5 4
S...
.#.#
.#..
.##.
...E
6 6 
.S...E
.#.##.
.#....
.#.##.
.####.
......</PRE>
			<FONT color="#006000">
				<H2>Sample Output</H2>
			</FONT>
			<PRE>NO
3
</PRE>
			<HR size="2">
			<center><font size="4">MIUPÂ’2004: Fourth Portuguese National Programming Contest</font></center>
		<P>
			<HR size="2">
			<!-- ZoneLabs Popup Blocking Insertion -->
			<script language='javascript'>postamble();</script>
			Problem setter: Ana Paula Maldonado</P>
	</body>
</html>

______________________________________________________
929||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 2: Problem A</TITLE>
</HEAD>

<BODY bgcolor="white">

<p>&nbsp;

<font color="#0000FF">
<H1>Problem A</H1>

<H1 align="center">Number Maze</H1>
</font>

<P align="justify">
Consider a number maze represented as a two dimensional array of
numbers comprehended between 0 and 9, as exemplified
below. The maze can be traversed following any orthogonal direction
(i.e., north, south, east and west). Considering that each cell
represents a cost, then finding the minimum cost to travel the maze
from one entry point to an exit point may pose you a reasonable
challenge.

<P ALIGN="CENTER">
<CENTER>
<TABLE BORDER=1 bordercolor=black CELLSPACING=0 CELLPADDING=5 WIDTH=166>
<TR><TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">0</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">3</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">1</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">2</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">9</TD>
</TR>
<TR><TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">7</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">3</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">4</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">9</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">9</TD>
</TR>
<TR><TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">1</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">7</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">5</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">5</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">3</TD>
</TR>
<TR><TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">2</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">3</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">4</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">2</TD>
<TD WIDTH="20%" VALIGN="TOP">
<P ALIGN="CENTER">5</TD>
</TR>
</TABLE>
</CENTER></P>

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P align="justify"> 

Your task is to find the minimum cost value to go from the top-left
corner to the bottom-right corner of a given number maze of size
<i>NxM</i> where <i>1 <= N, M <= 999</i>. Note that the
solution for the given example is 24.</P> 

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify"> 

The input file contains several mazes. The first input line contains a
positive integer defining the number of mazes that follow. Each maze
is defined by: one line with the number of rows, <i>N</i>; one line
with the number of columns, <i>M</i>; and
<i>N</i> lines, one per each row of the maze, containing the maze
numbers separated by spaces.</P>


<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify"> 
For each maze, output one line with the required minimum value.
</P>

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<pre>
2
4
5
0 3 1 2 9
7 3 4 9 9
1 7 5 5 3
2 3 4 2 5
1
6
0 1 2 3 4 5
</pre>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<pre>
24
15
</pre>

<BR><HR>
<ADDRESS>
University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</ADDRESS>

<p>&nbsp;

</BODY>
</html>

______________________________________________________
930||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 2: Problem B</TITLE>
</HEAD>

<BODY bgcolor="white">

<p>&nbsp;

<font color="#0000FF">
<H1>Problem B</H1>

<H1 align="center">Polynomial Roots</H1>
</font>

Let<p>

<img src="http://uva.onlinejudge.org/external/9/p930a.gif"  width="179" height="17">

<P align="justify">
be a <em>n</em>th degree polynomial with coefficients <img
src="http://uva.onlinejudge.org/external/9/p930a.gif"  width="40" height="15">. If <font
size="4"><em>z</em></font> is a root of <font
size="4"><em>P(x)</em></font>, that is, <font
size="4"><em>P(z)=0</em></font>, then the first degree polynomial
<font size="4"><em>(x-z)</em></font> divides <font
size="4"><em>P(x)</em></font>, that is, <font
size="4"><em>P(x)=(x-z)Q(x)</em></font>, where <font
size="4"><em>Q(x)</em></font> is a polynomial with a degree less than
<font size="4"><em>n</em></font>. In the same way, if <font
size="4"><em>w</em></font> is a root of <font
size="4"><em>Q(x)</em></font>, then <font
size="4"><em>Q(x)=(x-w)R(x)</em></font>, and, obviously, <font
size="4"><em>P(x)=(x-z)(x-w)R(x)</em></font>, which means that <font
size="4"><em>w</em></font> is a root of <font
size="4"><em>P(x)</em></font>, also. This means that the more roots of
<font size="4"><em>P(x)</em></font> we know, the easier it is to know
the ones we don't know, because we are obtaining polynomials of
decreasing degrees. When, finally, we obtain a 2nd degree polynomial,
<img src="http://uva.onlinejudge.org/external/9/p930a.gif"  width="60" height="14"> , as a result of the
division, we have a very simple way of finding its two roots: we use
the quadratic formula <img src="http://uva.onlinejudge.org/external/9/p930a.gif"  width="79"
height="33"> to compute them. </p>

<p align="justify">How can we find <font
size="4"><em>Q(x),</em></font> such that 
<font size="4"><em>P(x)=(x-z)Q(x)</em></font>, having <font
size="4"><em>P(x)</em></font> and one of its roots, <font
size="4"><em>z</em></font>? That is, how can we divide <font
size="4"><em>P(x)</em></font> by <font size="4"><em>(x-z)</em></font>?
We describe here the <font size="4"><strong>Ruffini</strong></font>
rule, a simple process for dividing polynomials by 1st degree
polynomials of the form <font size="4"><em>(x-z)</em></font>:</p>

<ul>
    <li>On a first line we write the coefficients of <font
        size="4"><em>P(x)</em></font> (see figure I). </li>
    <li>On a second line we write the root of the polynomial <font
        size="4"><em>(x-z)</em></font>, which is <font size="4"><em>z</em></font>
        (see figure II). </li>
    <li>On the third line we start by writing the first
        coefficient of <font size="4"><em>P(x)</em></font> which
        is 3 (see figure III). </li>
    <li>Then we write on the second line, right below the second
        coefficient of <font size="4"><em>P(x)</em></font>, the
        value -6 which is the product of <font size="4"><em>z</em></font>
        (which is -2) by the previous value on the third line
        (which is 3). Then we write on the third line, right
        below that -6 product value, the sum of that -6 value
        with the second coefficient of <font size="4"><em>P(x)</em></font>
        (which is 6), which gives the value zero (see figure IV).
    </li>
    <li>We repeat the previous step for the remaining
        coefficients of <font size="4"><em>P(x)</em></font> (see
        figure V).<br>
        </li>
</ul>

<p><img src="http://uva.onlinejudge.org/external/9/p930a.gif"  width="297" height="399"></p>


<P align="justify"> 
At the end, we obtain on the third line the coefficients of
the resulting polynomial - <font size="4"><em>Q(x)</em></font> -
and the remainder of the division (in this case is zero because
we are dividing <font size="4"><em>P(x)</em></font> by one of its
roots). In figure V we see the coefficients of <font size="4"><em>Q(x)</em></font>.
So, <img src="http://uva.onlinejudge.org/external/9/p930a.gif"  width="139" height="16"> . The
remainder of the division is zero, as expected.

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P align="justify"> 
Your task consists of writing a program that, given the
coefficients of a nth degree polynomial, and n-2 roots of that
polynomial, finds the other two roots. Assume that all roots are
real.

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify"> 

The input is one text file (standard input) that has, in the
first line, the number <i>k</i> of polynomials that are to be
processed. The next 3*<i>k</i> lines contain the information
about the <i>k</i> polynomials. The first of each set of three
lines contains the value <i>n</i> of the polynomial degree; the
second of each set of three lines contains n+1 values separated
by spaces (the coefficients of the polynomial), and the third of
each set of three lines contains n-2 values which represent n-2
roots of the polynomial. You know that there can be some repeated
roots; the third line of each set of three lines contains exactly
n-2 root values, even if some of them are repeated. 


<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify"> 

The output file must have <i>k</i>*2 lines, each pair
containing each of the two unknown roots of the polynomial. Each
pair of roots must be in decreasing order. These values must be
rounded to one decimal place. 

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<pre>
3
3
2 -15 36 -27
3
6
1 -3 -5 15 4 -12 0
1 -2 0 2
3
1 2.3 1 -0.3
-1.5
</pre>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<pre>
3.0
1.5
3.0
-1.0
0.2
-1.0
</pre>

<BR><HR>
<ADDRESS>
University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</ADDRESS>

<p>&nbsp;

</body>
</html>


______________________________________________________
931||||||false||||||
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">



<title>UP ACM Programming Contest (2003) / Round 2: Problem C</title>
</head><body bgcolor="white">

<p>&nbsp;

<!--font color="#0000ff">
<h1>Problem C</h1>

<h1 align="center">The Probable n-Ascendants</h1>
</font-->

</p><p align="justify">

In the biological autosomic inheritance, each characteristic of one
individual is determined by a pair of genes (a gene is a part of a
chromosome). When a pair of genes presents different information for
one characteristic, the dominance of one gene over the other naturally
influences the way an individual externally presents that
characteristic.

</p><p align="justify">

In the case of total dominance, a dominant gene imposes the external
appearance of its information over the other gene of the pair. The
information of a recessive gene (the dominated gene) is only
externally shown if there is no dominant gene in the
pair. The information of a dominant gene is represented by a capital
letter, while the information of a recessive gene is represented by a
small letter. One individual that possesses a pair of genes with equal
information for the same characteristic is called homozigotic,
otherwise it is called heterozigotic.

</p><p align="justify"></p><div align="center">
<img src="http://uva.onlinejudge.org/external/9/p931.gif"  align="right" width="583" height="400"><font color="#000000">
</font></div>

<font color="#000000">In the guinee-pigs, the gene for the black colour (<i>B</i>) is
dominant over the gene for the white colour (<i>w</i>). The
descendants' genetic types (composition of the pair of genes) of two
parents are obtained by generating the different possible combinations
of the 4 genes of the parents.  Each ascendant contributes with only
one gene to the pair of genes of the descendant. For instance, one
heterozigotic guinee-pig (<i>Bw</i>) presents the same colour of one
black homozigotic guinee-pig (<i>BB</i>). The descendants of two black
homozigotic guinee-pigs (<i>BB</i>) have 100% probability of also
being black homozigotic individuals. An analogous situation occurs
with the descendants of two white homozigotic guinee-pigs (<i>ww</i>),
i.e., they have 100% probability of also being white
homozigotic individuals.  The descendants of one black homozigotic
guinee-pig (<i>BB</i>) and one white homozigotic guinee-pig
(<i>ww</i>) have 100% probability of being black heterozigotic
individuals. The following figure illustrates this description.


<!--font color="#0000ff"><h2>Problem</h2></font-->

</font><p align="justify"><font color="#000000"> 

Imagine that you don't know, for a particular guinee-pig, who were its
parents (1-ascendants), or its grand-parents (2-ascendants), or its
great-grand-parents (3-ascendants). Your task is to write a program
that lists the genes of the possible <i>n</i>-ascendants (ascendants
of level <i>n</i>) of that individual and the associated probability
of each pair of possible <i>n</i>-ascendants. Assume the maximum
value of <i>n</i> is 35.


<font color="#0000ff"><h2>Input</h2></font>

</font></p>
<p></p>
<p></p>
<p></p>
<p><b>The input will contain several test cases, each of them as described 
below. Consecutive test cases are separated by a single blank line. </b></p>
<p align="justify"><font color="#000000"> 

The first line of the input contains the
genes of the guinee-pig for whom you want to know the probable
<i>n</i>-ascendants. The second line contains the value of <i>n</i>,
i.e., the level of ascendant generation that you want to study.<font color="#0000ff"><h2>Output</h2></font>

</font></p><p align="justify"><b>For each test case, the output must follow the 
description below. The outputs of two consecutive cases will be separated by a 
blank line. </b><p align="justify"><font color="#000000"> 

The output is a list of lines, each one containing the concatenated
genes of each member of the possible pair of <i>n</i>-ascendants,
followed by the corresponding probability, truncated to 2 fractional
digits.  The concatenation of the 2 pair of <i>n</i>-ascendant genes
must ensure that the resultant string is the biggest one, considering
<i>BBBB</i> &gt; <i>BBBw</i> &gt; <i>BBwB</i> &gt;... &gt; <i>wwwB</i>
&gt; <i>wwww</i>.  The output must be sorted in descending order by
value of the concatenation of the 2 pair of <i>n</i>-ascendant
genes. Before printing any floating point value add <b>10<sup>-11</sup></b>to 
avoid round off error.<font color="#0000ff"><h2>Sample Input</h2></font>

<font face = "courier new" color="#000000" size = "2">Bw<br>
1
<P>
ww<br>
8
</font>

<font color="#0000ff"><h2>Sample Output</h2></font>

<font face = "courier new" color="#000000" size = "2">BBBw 20.0%<br>
BBww 40.0%<br>
BwBw 20.0%<br>
Bwww 20.0%<br>
<br>
BBBB 15.58%<br>
BBBw 16.12%<br>
BBww 16.67%<br>
BwBw 16.67%<br>
Bwww 17.21%<br>
wwww 17.75%<br>
</font>

<font color="#000000"><br></font><hr>
<address>
<font color="#000000">University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</font></address>

<p><font color="#000000">&nbsp;

</font></p></body></html>

______________________________________________________
932||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 2: Problem D</title>
</head>

<BODY bgcolor="white">

<p>&nbsp;

<font color="#0000FF">
<H1>Problem D</h1>

<H1 align="center">Checking the N-Queens Problem</h1>
</font>

<P align="justify">

The <i>eight-queens</i> problem consists of finding (if it exists) a
configuration for a set of eight queens on a chessboard, in such a way
that no queen is under attack by any other. In other words, there must
be a single queen in each row and column of the board, and at most one
queen in each diagonal line.  The <i>N-queens</i> problem is the
obvious generalization of this problem to an <i>NxN</i>
board. Consider for instance the following two configurations; the
first is a solution to the <em>5-queens</em> problem and the second is
not:</p>

<p> </p>

<table width="59%" border="0" align="center">
    <tr> 
      <td><table width="110" height="85" border=1 bordercolor=black align="center" cellpadding=0 cellspacing=0>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;</td>
            <td width=20 valign=top class="Normal">&nbsp;</td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp; </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
          </tr>
        </table></td>
      <td><table width="110" height="85" border=1 bordercolor=black align="center" cellpadding=0 cellspacing=0>
          <tr> 
            <td width=20 valign=top class="Normal"> &nbsp; </td>
            <td width=20 valign=top class="Normal"><div align="center">Q </div></td>
            <td width=20 valign=top class="Normal"> &nbsp; </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
          </tr>
          <tr> 
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal">&nbsp;  </td>
            <td width=20 valign=top class="Normal"> <div align="center">Q </div></td>
          </tr>
        </table></td>
    </tr>
  </table>

<FONT color="#0000FF"><H2>Problem</h2></font>

<P align="justify"> 

Your task is to write a program that, for a given <em>N</em>,
determines whether a configuration is a solution to the
<em>N-queens</em> problem. If not, the program will then check if a
solution can be obtained by moving a single queen (in any of the eight
possible directions). To simplify, consider that queens can move over
each other, i.e, a queen can be moved to any <em>empty</em> position
in the same row, column, or diagonal line where it stands.


<FONT color="#0000FF"><H2>Input</h2></font>

<P align="justify"> 
The input consists of several test cases, each of which has:
</div>
<ul>
<li> a line containing the dimension <em>N</em> of the problem
   (a positive integer number not greater than 30), followed by  </li>
<li> <em>N</em> lines, each consisting of <em>N</em> characters followed by newline. Characters can only be <tt>0</tt> (zero,
      corresponding to an  empty position) or (capital) <tt>X</tt>,
      corresponding to a queen. Each line corresponds to a row in the
      board. </li>
</ul>

The input will contain exactly <em>N</em> occurrences of the character
<tt>X</tt>. 

<FONT color="#0000FF"><H2>Output</h2></font>

<P align="justify"> 

The output for each test case will consist of one of the following:

<ul>
<li> a single line containing the word <tt>YES</tt> (if the configuration 
      is a solution to the <em>N-queens</em> problem) </li>
<li> otherwise, a line containing the word <tt>NO</tt>, followed by 
      a line containing either:
  <ul>
  <li> the word <tt>NO</tt>, if no solution can be obtained by moving 
       one queen; or </li>
  <li> the word <tt>YES</tt> followed by <em>N</em> lines corresponding to
        the description of the solution discovered, in the same format
        as in the input. </li>
  </ul>
  </li>
</ul>
Print a blank line between test cases.

<FONT color="#0000FF"><H2>Sample Input</h2></font>

<pre>
5
00X00
X0000
000X0
0X000
0000X
5
0X000
X0000
000X0
0X000
0000X
</pre>

<FONT color="#0000FF"><H2>Sample Output</h2></font>

<pre>
YES

NO
YES
00X00
X0000
000X0
0X000
0000X
</pre>

<BR><HR>
<ADDRESS>
University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</address>

<p>&nbsp;

</body>
</html>

______________________________________________________
933||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 2: Problem E</TITLE>
</HEAD>

<BODY bgcolor="white">

<p>&nbsp;

<font color="#0000FF">
<H1>Problem E</H1>

<H1 align="center">Water Flow</H1>
</font>

<P align="justify">
The following figure represents a succession of water deposits installed 
downhill on a mountainside. Every deposit (except the last one) is connected 
with the next in line via a pipe. All deposits are equal but the pipes can have 
different specifications (such as diameter, material quality), and therefore, 
some may sustain greater flows of water than others.

<pre>                                    --------W-A-T-E-R---F-L-O-W---------&gt;
                     +-----------+ 
                     | Deposit A |  Pipe a      +-----------+
                     | 11 liters |o============o| Deposit B |  Pipe b      +-----------+
                     +-----------+  5 liters    | 0 liters  |o============o| Deposit C |
                                    per second  +-----------+  4 liters    | 0 liters  |
                                    (maximum)                  per second  +-----------+
                                                               (maximum)</pre>

<P align="justify">
Due to the influence of gravity, and assuming there are no water leaks and 
that the pipes are unobstructed, after some time all the water will flow to the 
deposit that stands lowest on the mountainside ('C' in the previous figure). For 
example, under the conditions depicted above, after 4 seconds all 11 liters that 
initially were in deposit 'A' will have gone through deposit 'B' and be resting 
inside deposit 'C' - just watch what happens:</p>

<pre>                     +-----------+
 t=0                 | Deposit A |  Pipe a      +-----------+
(initial instant)    | 11 liters |o============o| Deposit B |  Pipe b      +-----------+
                     +-----------+  5 liters    | 0 liters  |o============o| Deposit C |
                                    per second  +-----------+  0 liters    | 0 liters  |
                                                               per second  +-----------+
                     +-----------+
 t=1                 | Deposit A |  Pipe a      +-----------+
(after 1 second)     | 6 liters  |o============o| Deposit B |  Pipe b      +-----------+
                     +-----------+  5 liters    | 5 liters  |o============o| Deposit C |
                                    per second  +-----------+  4 liters    | 0 liters  |
                                                               per second  +-----------+
                     +-----------+
 t=2                 | Deposit A |  Pipe a      +-----------+
(after 2 seconds)    | 1 liter   |o============o| Deposit B |  Pipe b      +-----------+
                     +-----------+  1 liter     | 6 liters  |o============o| Deposit C |
                                    per second  +-----------+  4 liters    | 4 liters  |
                                                               per second  +-----------+
                     +-----------+
 t=3                 | Deposit A |  Pipe a      +-----------+
(after 3 seconds)    | 0 liters  |o============o| Deposit B |  Pipe b      +-----------+
                     +-----------+  0 liters    | 3 liters  |o============o| Deposit C |
                                    per second  +-----------+  3 liters    | 8 liters  |
                                                               per second  +-----------+
                     +-----------+
 t=4                 | Deposit A |  Pipe a      +-----------+
(after 4 seconds)    | 0 liters  |o============o| Deposit B |  Pipe b      +-----------+
                     +-----------+  0 liters    | 0 liters  |o============o| Deposit C |
                                    per second  +-----------+  0 liters    | 11 liters |
                                                               per second  +-----------+</pre>

<P align="justify">
You are now invited to build a simulator that determines not only how much 
time is needed for all water to end up in the last deposit, but also to explain 
how did that happen, much the same as shown immediately above.</p>

<FONT color="#0000FF"><H2>Input</H2></FONT>

The input has exactly three lines:

<P align="justify">
<ul>
  <li>Line 1 contains the number of water deposits on the mountainside. For example, <code>N=3</code> indicates the simulation will 
  have 3 water deposits (and therefore two water pipes).</li>
  <li>Line 2 describes the initial contents of each water deposit, from the 
  topmost to the lowest one. For example, <code>A=11;B=0;C=0</code> states that 
  deposit 'A' (topmost) initially has 11 liters of water and that both 
  remaining deposits ('B' and 'C') are empty at the beginning of the simulation.</li>
  <li>Line 3 indicates the maximum flow of water allowed inside the pipes that 
  connect each pair of deposits, 
  respecting the order imposed in the previous line. For example, <code>a=5;b=4</code> 
  means the maximum flow between deposits 'A' and 'B' (pipe 'a') is 5 
  liters/second, and that between 'B' and 'C' (pipe 'b') it is 4 liters/second. 
  Note, however, that the flow at an instant of time can be less than the 
  maximum if the deposit contains insufficient water - a particular case is the 
  empty deposit which disables the flow (see above examples).</li>
</ul>

<p>Notes:</p>
<ul>
  <li>All numbers (seconds, liters, and liters/second) are non-negative integers 
  with a maximum value of 999.</li>
  <li>There must be at least two water deposits.</li>
  <li>The maximum flow of water inside pipes is always greater than zero (all 
  pipes are unobstructed).</li>
  <li>Water deposits are represented by a single uppercase letter, starting with 
  'A' then 'B' and so on.</li>
  <li>Pipes are identified by a single lowercase letter, beginning with 'a' then 
  'b' and so on.</li>
</ul>

<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify">
The output is a table that displays the contents of all water deposits for 
each second that passes since the initial instant until all water is resting 
inside the last deposit (which is guaranteed to happen in no more than 999 
seconds). The table has a line for 
the header, a separator line, and multiple lines of data - one line for each 
second of the simulation, including the initial instant (at zero seconds). The 
columns of the table vary with the number of water deposits, but the first one 
is always reserved for the elapsed time. See the sample output (below) for an 
example of a table built according to the simulation specified in the previous 
section.</p>

Notes:

<P align="justify">
<ul>
  <li>All table columns have a width of three characters.</li>
  <li>Every pair of columns is separated by a single space character.</li>
  <li>All numbers are right justified (see sample output).</li>
  <li>Watch out for the lowercase 't' (elapsed time column).</li>
</ul>

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<P align="justify">

<pre>N=3
A=11;B=0;C=0
a=5;b=4</pre>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<pre>  t   A   B   C
---------------
  0  11   0   0
  1   6   5   0
  2   1   6   4
  3   0   3   8
  4   0   0  11</pre>

<BR><HR>
<ADDRESS>
University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</ADDRESS>

<p>&nbsp;

</body>
</html>

______________________________________________________
934||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 2: Problem F</TITLE>
</HEAD>

<BODY bgcolor="white">

<p>&nbsp;

<font color="#0000FF">
<H1>Problem F</H1>

<H1 align="center">Overlapping Areas</H1>
</font>

<P align="justify">

Consider a set of rectangles in <b>2D</b> space as illustrated in the
figure below. Overlapping or not, they define a set of regions with
different shapes (in the example given, there are twelve regions,
identified from <b>A</b> to <b>L</b>). Lets <b>OD</b> (Overlapping
Depth) be the number of rectangles that overlap in each region (in the
figure, <b>OD</b> is the number associated to each region). In this
example, the maximum value of <b>OD</b> is 3 and it appears twice, in
regions <b>E</b> and <b>G</b>.

<br>
<img src="http://uva.onlinejudge.org/external/9/p934a.gif" >
<br>

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P align="justify"> 
Write a program that given a set of rectangles, computes
the total area of the regions with the maximum value
<b>OD<sub>MX</sub></b> (this corresponds to the sum of the areas of
region <b>E</b> and region <b>G</b> shown in the figure). In order
to avoid numerical problems, it is ensured that there are no
coincidences between edges of different rectangles. 

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify"> 
The first input line contains the number <b>NR</b>  (integer format)
of rectangles (0 <= <b>NR</b> <= 100). Each of the following 
<b>NR</b> lines contain the coordinates of two opposed vertices of a
rectangle, in the sequence <b>x1 y1 x2 y2</b>, separated by single
spaces. In this case, no order is assumed for point 1 and point 2 and
numbers may be written in integer or in decimal format. The separator
between values is the space character. 

<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify"> 
One decimal number, rounded to two decimal digits, representing the
computed area.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<P align="justify"> 
The graphical representation of the sample input is as follows:

<br>
<img src="http://uva.onlinejudge.org/external/9/p934a.gif" >
<br>

<pre>
3
-5.00 -2.00 -1.0 2.0
2.5 -1 -4.5 1.0
4 3 0 -4
</pre>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<pre>
12.00
</pre>


<BR><HR>
<ADDRESS>
University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</ADDRESS>

<p>&nbsp;

</body>
</html>

______________________________________________________
935||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

<HEAD>
<TITLE>UP ACM Programming Contest (2003) / Round 2: Problem G</TITLE>
</HEAD>

<BODY bgcolor="white">

<p>&nbsp;

<font color="#0000FF">
<H1>Problem G</H1>

<H1 align="center">Smart Strategy</H1>
</font>

<P align="justify">
Steve and Digit bought a box containing a number of cookies. In order
to divide the cookies among themselves they decided to play a special
game they invented. The players alternately take a certain,
positive number of cookies from the box, but no more than a fixed
integer. Each player's cookies are gathered on the player's side. The
player that empties the box eats his cookies while the other one puts
his cookies back into the box and the game continues with the
``looser'' player starting first.  The game goes on until all the
cookies are eaten. The goal of the game is to eat the most cookies. How
many cookies can Steve, who starts the game, count on, assuming the
best strategy for both players?

<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P align="justify"> 
Your task consists of writing a program that:

<ul>
<li> reads the parameters of the game from the standard input,
<li> computes the number of cookies that Steve can count on,
<li> writes the result to the standard output.
</ul>

<FONT color="#0000FF"><H2>Input</H2></FONT>

<P align="justify"> 

The first and only line of input contains exactly two integers <i>n</i> and
<i>m</i> separated by a single space, <i>1 <= m <= n <= 100</i> --
parameters of the game, where <i>n</i> is the number of cookies in the box
at the beginning of the game and <i>m</i> is the upper limit on the number
of cookies to be taken by one player in one move.


<FONT color="#0000FF"><H2>Output</H2></FONT>

<P align="justify"> 

The output contains exactly one integer equal to the number of cookies that
Steve can count on.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<pre>5 2</pre>

<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<pre>3</pre>


<BR><HR>
<ADDRESS>
University of Porto / 2003 ACM Programming Contest / Round 2 / 2003/09/24
</ADDRESS>

<p>&nbsp;

</body>
</html>

______________________________________________________
936||||||false||||||
<HTML>
<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem A</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Mars for Sale</CENTER></H1></FONT>


<P>
For some time now,
there have been several businesses dedicated to 
the sale of extraterrestrial real estate on the planet Mars. 
The problem is that,
as there is no centralised database,
the same property may have been sold twice,
or several properties, owned by different people,
may intersect each other. 

<P>
Every property has a rectangular shape and
one of its sides runs alongside one of the major Martian roads.
Moreover, 
the length of the sides that are perpendicular to the road
are fixed for every road.
Mars roads are straight lines.
So, a property may be identified by 
the name and the side of the road, and
the coordinates of the two corners next to the road.

<P>
Two properties <I>intersect</I> 
if the corresponding rectangles intersect and
the intersection area is positive.


<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P>
Write a program that,
given a sequence of properties on the same side of a road,
determines whether at least two of them intersect.


<FONT color="#0000FF"><H2>Input</H2></FONT>

<P>
The first line contains an integer <B>T</B> (1 &lt;= <B>T</B> &lt;= 6), 
which is the number of test cases.
The following lines contain <B>T</B> test cases.

<P>
The first line of a test case
contains an integer <B>N</B> (1 &lt;= <B>N</B> &lt;= 50000), 
which is the length of the sequence of properties.

<P>
Each of the following <B>N</B> lines contains 
four non-negative integers,
<B>X<sub>1</sub></B>,    <B>Y<sub>1</sub></B>, 
<B>X<sub>2</sub></B> and <B>Y<sub>2</sub></B>,
separated by a space. 
These integers do not exceed 2<sup>31</sup> - 1.

<P>
The pairs 
(<B>X<sub>1</sub></B>,<B>Y<sub>1</sub></B>) and 
(<B>X<sub>2</sub></B>,<B>Y<sub>2</sub></B>)
specify the x-coordinate and the y-coordinate
of the two property corners next to the road.


<FONT color="#0000FF"><H2>Output</H2></FONT>

<P>
The output consists of <B>T</B> lines.
The i<sup>th</sup> line contains the message:
<UL>
<LI>&quot;<samp>No problem</samp>&quot;,
    if no two distinct elements 
    of the i<sup>th</sup> sequence of properties 
    intersect; or
    <P>
<LI>&quot;<samp>Difficult problem(s)</samp>&quot;,
    otherwise.
</UL>


<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
3
4
100 214 120 254
55 124 20 54
12045 24104 12046 24106
56 126 100 214
5
4141 4196 4123 4196
761 4196 759 4196
757 4196 760 4196
0 4196 2 4196
144 4196 145 4196
4
60 30 22 11
214 107 256 128
48 24 46 23
214 107 256 128
</PRE>


<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
No problem
Difficult problem(s)
Difficult problem(s)
</PRE>


<BR>
<HR>
<FONT SIZE=3D4>
<center>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto'2004<br>
CPN'2004:  Segundo Concurso de ProgramaÃ§Ã£o da Nova <BR>
MarÃ§o de 2004 <br>
Departamento de InformÃ¡tica <br> 
Faculdade de CiÃªncias e Tecnologia <br>
Universidade Nova de Lisboa
</center>
</font>
<HR>

</BODY>
</HTML>


______________________________________________________
937||||||false||||||
<HTML>
<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem B</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Kriss Kross Puzzle</CENTER></H1></FONT>


<p>
The Kriss Kross Puzzle is a game for a single player, 
where there is a puzzle grid, with black and white squares, 
and a set of words. 
Basically,
Kriss Kross Puzzles are solved by placing all words 
into the white squares of the puzzle grid,
from top to bottom or from left to right.

<P>
Consider a Kriss Kross Puzzle
defined by:
<UL>
<LI>a rectangular grid <b>G</b>,
    whose square cells are either black or white; and
<LI>a non-empty set of words <b>W</b>,
    where a word is a sequence of two or more capital letters.
</UL>
A <I>solution</I> to the Kriss Kross Puzzle
is a grid <b>S</b>,
with the same size as <b>G</b>,
that verifies all the following conditions.
<UL>
<LI>The square cells of <b>S</b> are either black or white.
    Black squares have no letters,
    whereas white squares have one capital letter.
    <P>
<LI>The black squares of <b>S</b> and
    the black squares of <b>G</b>
    occur exactly in the same places of the corresponding grids.
    <P>
<LI>Let a <I>vertical word</I> of <b>S</b> 
    be any contiguous sequence of two or more letters
    that occur in a column of <b>S</b>
    (from top to bottom), 
    that starts 
    on the first square of the column
    or immediately after a black square, and 
    that ends 
    on the last square of the column
    or immediately before a black square.
    <BR>
    Similarly, 
    let a <I>horizontal word</I> of <b>S</b> 
    be any contiguous sequence of two or more letters
    that occur in a line of <b>S</b>
    (from left to right), 
    that starts 
    on the first square of the line
    or immediately after a black square, and 
    that ends 
    on the last square of the line 
    or immediately before a black square.
    <BR>
    Then, 
    every (vertical or horizontal) word of <b>S</b>
    occurs only once, and
    the set of all (vertical or horizontal) words of <b>S</b>
    is equal to <b>W</b>.
</UL>



<FONT color="#0000FF">
<H2>Problem</H2>
</FONT>

<p>
Write a program that,
given a Kriss Kross Puzzle with a unique solution,
computes its solution. 



<FONT color="#0000FF">
<H2>Input</H2>
</FONT>

<p>
The first line contains an integer <B>L</B> (2 &lt; <B>L</B> &lt;= 20), 
which is the number of lines of the puzzle grid.

<P>
The second line contains an integer <B>C</B> (2 &lt; <B>C</B> &lt;= 20), 
which is the number of columns of the puzzle grid.

<P>
Each of the following <B>L</B> lines contains <B>C</B> characters.
A character is:
<UL>
<LI>either the symbol &quot;<samp>0</samp>&quot;, 
    which represents a white square;
<LI>or the symbol &quot;<samp>1</samp>&quot;, 
    which represents a black square.
</UL>

<P>
The next line contains an integer <B>N</B> (4 &lt; <B>N</B> &lt;= 100), 
which is the size of the set of words.

<P>
Each of the following <B>N</B> lines contains a word. 
A word is a sequence of at least two capital letters,
whose length does not exceed the maximum of <B>L</B> and <B>C</B>.

<P>
The list of words is known to be ordered by length
(smaller words appear first).


<FONT color="#0000FF">
<H2>Output</H2>
</FONT>

<p>
The output is the solution of the
Kriss Kross Puzzle.
It consists of <B>L</B> lines.

<P>
Each line contains <B>C</B> characters,
which are 
either a capital letter, 
or the symbol &quot;<samp>1</samp>&quot; 
(which represents a black square).


<FONT color="#0000FF">
<H2>Sample Input</H2>
</FONT>

<PRE>
4
6
010001
001000
000100
010000
12
LA
DO
NO
ON
AM
CAR
GAS
ROD
MUG
RULE
MORE
ONES
</PRE>


<FONT color="#0000FF">
<H2>Sample Output</H2>
</FONT>

<PRE>
M1CAR1
ON1MUG
ROD1LA
E1ONES
</PRE>


<BR>
<HR>
<FONT SIZE=3D4>
<center>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto'2004<br>
CPN'2004: 
Segundo Concurso de ProgramaÃ§Ã£o da Nova <BR>
MarÃ§o de 2004 <br>
Departamento de InformÃ¡tica <br> 
Faculdade de CiÃªncias e Tecnologia <br>
Universidade Nova de Lisboa
</center>
</font>
<HR>

</BODY>
</HTML>

______________________________________________________
938||||||false||||||
<HTML>
<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem C</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Gilix</CENTER></H1></FONT>


<p>
Gilix, a mythical character, was the official messenger of the Tagusland king
because he was known to transport a message between any two points in the
fastest possible way. Until recently, few knew that his speed was the
combination of his wisdom with a magical potion that he had created and 
personally prepared. After drinking his potion, he could travel twice as fast as
he would usually do until he reached his destination. 
Unfortunately, the ingredients for cooking the potion could only be found 
in places with rare weather conditions and 
they should be used immediately or they would loose their magical power.

<p>
Based on the given legend, 
a software house has decided to create a computer game where the hero, Gilix, 
transports a message between two points in a map. 

<P>
Every map is composed of a cylindrical grid of hexagons, 
with coordinates as represented in the following figure. 
In cylindrical grids, 
the leftmost hexagons are adjacent to the rightmost ones. 
For example, 
from the hexagon with coordinates <b>(0,0)</b>, 
Gilix can move to the hexagons 
<b>(0,1)</b>, 
<b>(1,0)</b>, 
<b>(1,7)</b>, and
<b>(0,7)</b>. 
From the hexagon with coordinates <b>(1,7)</b>,
Gilix can move to the hexagons 
<b>(0,7)</b>, 
<b>(0,0)</b>, 
<b>(1,0)</b>, 
<b>(2,0)</b>,
<b>(2,7)</b>, and
<b>(1,6)</b>. 

<p align="center">
<img border="0" src="http://uva.onlinejudge.org/external/9/p938.jpg"  width="548" height="332">
</p>

<P>
Each hexagon has its own type of terrain,
which is characterised by a positive even integer,
called the <I>standard cost</I> of the hexagon.
From a given hexagon, 
Gilix can move to any adjacent hexagon 
spending a number of time units
that depends on the standard cost of the destination hexagon.
The number of time units is:
<UL>
<LI>the standard cost (of the destination hexagon),
    if Gilix has not drunk the potion;
<LI>half of the standard cost (of the destination hexagon),
    if Gilix has already drunk the potion.
</UL>

<P>
As in the legend, 
Gilix can prepare and drink his magic potion only once
and in a unique hexagon of the map. 
Assume that, when Gilix reaches that hexagon,
he can prepare and drink the potion without spending any time unit.


<FONT color="#0000FF">
<H2>Problem</H2>
</FONT>

<p>
Given a map 
(composed of a cylindrical grid of hexagons, 
 with their standard costs),
the origin and the destination of the travel, and 
the place where Gilix can prepare and drink the potion,
compute the minimum number of time units 
Gilix needs to perform the mission.


<FONT color="#0000FF">
<H2>Input</H2>
</FONT>

<P>
The first line contains a pair of integers, 
<b>L</b> and <b>C</b>, separated by a space:
<UL>
<LI> <b>L</b> (1 &lt;= <b>L</b> &lt;= 300) is the number of lines in the map;
<LI> <b>C</b> (1 &lt;= <b>C</b> &lt;= 300) is the number of columns in the map. 
</UL>

<p>
The following <b>L</b> lines contain 
a representation of the map from top to bottom. 
Each line contains <b>C</b> positive even integers,
separated by a space,
which represent the standard costs of the hexagons on that line
(from left to right).
No standard cost exceeds 30.

<p>Each of the following three lines contains two integers, 
<b>X</b> and <b>Y</b>, separated by a space,
which identify the coordinates of a hexagon in the map:
<UL>
<LI> <b>X</b> is the line number   (0 &lt;= <b>X</b> &lt; <b>L</b>); and 
<LI> <b>Y</b> is the column number (0 &lt;= <b>Y</b> &lt; <b>C</b>). 
</UL>

<P>
The first line specifies the initial position of Gilix, 
the second line specifies his final destination, and
the third line indicates the place 
where the magic potion can be prepared and drunk.


<FONT color="#0000FF">
<H2>Output</H2>
</FONT>

<P>
The output consists of one single line 
that contains the minimum number of time units necessary 
to travel from the initial to the final position.


<FONT color="#0000FF">
<H2>Sample Input</H2>
</FONT>

<PRE>
4 8
4 2 2 2 4 4 6 10
2 6 8 4 4 4 4 2
8 2 6 8 4 4 4 6
6 4 4 6 8 4 4 4
0 0 
3 4
1 1
</PRE>


<FONT color="#0000FF">
<H2>Sample Output</H2>
</FONT>

<PRE>
18
</PRE>


<BR>
<HR>
<FONT SIZE=3D4>
<center>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto'2004<br>
CPN'2004: 
Segundo Concurso de ProgramaÃ§Ã£o da Nova <BR>
MarÃ§o de 2004 <br>
Departamento de InformÃ¡tica <br> 
Faculdade de CiÃªncias e Tecnologia <br>
Universidade Nova de Lisboa
</center>
</font>
<HR>

</BODY>
</HTML>


______________________________________________________
939||||||false||||||
<HTML>
<BODY bgcolor="white">

<!--FONT color="#0000FF"><H1>Problem D</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Genes</CENTER></H1></FONT-->


<p>
For many years, 
the Genetic Evolution Laboratory (GEL) has been studying 
the evolution of various genetic diseases, 
by collecting, for each disease, 
data from a large population, over several generations. 
For each person, 
it is known whether the gene is dominant, recessive, or non-existent. 
Based on this data, 
scientists formulate an hypothesis on
how the disease is transmitted from parents to children. 
However, it is tedious to check by hand 
if the data matches the hypothesis, 
so GEL asked you to automate this task for them.

<p>
The idea is simple: 
the program will, 
given the parent-child relationships and a fixed hypothesis,
calculate for all people 
whether they have the gene or not, 
and in the former case whether it is dominant or not. 
This result is written to a text file, 
which will later be compared (using a standard file differencing tool) 
with the data that GEL collected. 
If there are no differences, 
the hypothesis is valid. 
Any mismatch will give clues to GEL's scientists 
on how they should improve the hypothesis.


<!--FONT color="#0000FF">
<H2>Problem</H2>
</FONT-->

<p>
Given a set of parent-child relationships, 
and the status of the gene for all those people 
whose parents are not in the data set, 
compute the status of the gene for all people in the data set, 
according to the following hypothesis: 
<UL>
<LI>the child has the gene <b>if, and only if,</b>
    both parents have it or it is dominant in one of the parents; and
<LI>the child's gene is dominant <b>if, and only if,</b> 
    the gene is dominant in both parents or 
    dominant in one and recessive in the other parent.
</UL>

<FONT color="#0000FF">
<H2>Input</H2>
</FONT>

<p>
The first line contains an integer <b>N</b> (1 &lt;= <b>N</b> &lt;= 3100),
which is the number of lines of the data set. 

<P>
Each of the following <b>N</b> lines contains 
a pair of non-empty strings, 
separated by a space. 
All strings are at most 20 characters long, 
and no string contains a blank (tab or space). 

<P>
The first string is the name of a person. 
The second string is either</p>
<ol>
  <li>&quot;<samp>non-existent</samp>&quot;, 
      &quot;<samp>recessive</samp>&quot;, or 
      &quot;<samp>dominant</samp>&quot;; or
  </li>
  <li>the name of another person (the child).
  </li>
</ol>

<p>
The first case is to indicate the status of the gene 
for a person whose parents are not part of the data set. 
The second case is to indicate that the 
first person is a parent of the second one.</p>

<p>
All people have distinct names and none is 
&quot;non-existent&quot;, &quot;recessive&quot;, or 
&quot;dominant&quot;. 

<P>
For each person, 
either both or none of the parents are part of the data set.</p>


<FONT color="#0000FF">
<H2>Output</H2>
</FONT>

<p>
The output consists of one line per person occurring in the data set. 

<P>
Each line has two strings, separated by a space. 
The first string is the name of the person, and
the second string indicates the status of the gene, 
in the same way as in the input. 

<P>
The output must be ordered alphabetically by name.</p>


<FONT color="#0000FF">
<H2>Sample Input</H2>
</FONT>

<PRE>
7
John dominant
Mary recessive
John Susan
Mary Susan
Peter non-existent
Susan Marta
Peter Marta
</PRE>


<FONT color="#0000FF">
<H2>Sample Output</H2>
</FONT>

<PRE>
John dominant
Marta recessive
Mary recessive
Peter non-existent
Susan dominant
</PRE>


<BR>
<HR>
<FONT SIZE=3D4>
<center>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto'2004<br>
CPN'2004: 
Segundo Concurso de ProgramaÃ§Ã£o da Nova <BR>
MarÃ§o de 2004 <br>
Departamento de InformÃ¡tica <br> 
Faculdade de CiÃªncias e Tecnologia <br>
Universidade Nova de Lisboa
</center>
</font>
<HR>

</BODY>
</HTML>



______________________________________________________
940||||||false||||||
<HTML>
<BODY bgcolor="white">

<FONT color="#0000FF"><H1>Problem E</H1></FONT>

<FONT color="#0000FF"><H1><CENTER>Autobiographical Numbers</CENTER></H1></FONT>

<P>
In the decimal system an <I>autobiographical number</I> 
is a natural number with no more than 10 digits, 

<CENTER>
<B>N</B> = <tt>d<sub>0</sub>d<sub>1</sub>...d<sub>r-1</sub></tt>
&nbsp;&nbsp;&nbsp;(1 &lt;= <tt>r</tt> &lt;= 10)
</CENTER> 

<P>
such that
<tt>d<sub>0</sub></tt> is the number of <tt>0</tt>'s in <B>N</B>, 
<tt>d<sub>1</sub></tt> is the number of <tt>1</tt>'s in <B>N</B>, 
<tt>d<sub>2</sub></tt> is the number of <tt>2</tt>'s in <B>N</B>, and so on.

<P>
The notion of autobiographical number can be generalized
to any base <B>b</B> >= 2.
<BR>
Let <b>A</b> = [<tt>s<sub>0</sub></tt>,
                <tt>s<sub>1</sub></tt>,
                 ...,
                <tt>s<sub><b>b</b>-1</sub></tt>]
be an <i>alphabet</i>, 
whose symbols 
                <tt>s<sub>0</sub></tt>,
                <tt>s<sub>1</sub></tt>,
                ...,
                <tt>s<sub><b>b</b>-1</sub></tt>
correspond to the values 0, 1, ..., <b>b</b>-1, respectively: 
that is, value(<tt>s<sub>i</sub></tt>)=i.
Then, an <i>autobiographical number in base <b>b</b> 
      (under the alphabet <b>A</b>)</i> 
is a natural number with no more than <b>b</b> symbols, 

<CENTER>
<B>N</B> = <tt>d<sub>0</sub>d<sub>1</sub>...d<sub>r-1</sub></tt>
&nbsp;&nbsp;&nbsp;(1 &lt;= <tt>r</tt> &lt;= <b>b</b>)
</CENTER> 

<P>
such that 
value(<tt>d<sub>0</sub></tt>) 
is the number of <tt>s<sub>0</sub></tt>'s in <B>N</B>, 
value(<tt>d<sub>1</sub></tt>) 
is the number of <tt>s<sub>1</sub></tt>'s in <B>N</B>, ..., and
value(<tt>d<sub>r-1</sub></tt>) 
is the number of <tt>s<sub>r-1</sub></tt>'s in <B>N</B>.

<P>
For example:
<UL>
  <LI> <tt>42101000</tt> is an autobiographical number in base 10, 
       under the alphabet [<tt>0</tt>, <tt>1</tt>, <tt>2</tt>,
                           <tt>3</tt>, <tt>4</tt>, <tt>5</tt>,
                           <tt>6</tt>, <tt>7</tt>, <tt>8</tt>,
                           <tt>9</tt>],
       because it has 
       four <tt>0</tt>'s, two <tt>1</tt>'s, one  <tt>2</tt>, 
       zero <tt>3</tt>'s, one <tt>4</tt>,   zero <tt>5</tt>'s,
       zero <tt>6</tt>'s, and               zero <tt>7</tt>'s;
       <P>

  <LI> <tt>A2100000001000</tt> is an autobiographical number in base 16, 
       under the alphabet [<tt>0</tt>, <tt>1</tt>, <tt>2</tt>,
                           <tt>3</tt>, <tt>4</tt>, <tt>5</tt>,
                           <tt>6</tt>, <tt>7</tt>, <tt>8</tt>,
                           <tt>9</tt>, <tt>A</tt>, <tt>B</tt>,
                           <tt>C</tt>, <tt>D</tt>, <tt>E</tt>,
                           <tt>F</tt>].
       There are value(<tt>A</tt>)=10 <tt>0</tt>'s,
       two <tt>1</tt>'s, etc.
</UL>


<FONT color="#0000FF"><H2>Problem</H2></FONT>

<P>
Given an alphabet <b>A</b>, with <b>b</b> symbols, 
determine all autobiographical numbers in base <b>b</b> under <b>A</b>. 


<FONT color="#0000FF"><H2>Input</H2></FONT>

<P>
The first line contains a positive integer <B>L</B>
(1 &lt;= <b>L</b> &lt;= 50),
which is the number of subsequent lines.

<P>
Each of the following <B>L</B> lines contains an alphabet.

<P>
An alphabet is a contiguous sequence of <B>b</B> distinct symbols,
where 2 &lt;= <b>b</b> &lt;= 100.

<P>
A symbol is a printable character.


<FONT color="#0000FF"><H2>Output</H2></FONT>

<P>
For each input alphabet, 
the output is the sequence of all autobiographical numbers in increasing order.
Each number is written on a different line.

<P>
The outputs of two consecutive alphabets are separated by a blank line.

<FONT color="#0000FF"><H2>Sample Input</H2></FONT>

<PRE>
2
0123
abcdefg
</PRE>


<FONT color="#0000FF"><H2>Sample Output</H2></FONT>

<PRE>
1210
2020

bcba
caca
cbcaa
dcbbaaa
</PRE>


<BR>
<HR>
<FONT SIZE=3D4>
<center>
Concurso de ProgramaÃ§Ã£o da Universidade do Porto'2004<br>
CPN'2004: 
Segundo Concurso de ProgramaÃ§Ã£o da Nova <BR>
MarÃ§o de 2004 <br>
Departamento de InformÃ¡tica <br> 
Faculdade de CiÃªncias e Tecnologia <br>
Universidade Nova de Lisboa
</center>
</font>
<HR>

</BODY>
</HTML>


______________________________________________________
941||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="Microsoft Word 73.1">
<TITLE>Problem A</TITLE>
</HEAD>
<BODY>

<!--B><FONT SIZE=4><P>Problem A</P>
<P ALIGN="CENTER">Permutations</P>
</B></FONT><FONT FACE="Times">
<B><P>Background</P>
</B-->
</FONT><P ALIGN="JUSTIFY">A permutation of a string is the set of all possible ways to combine its characters. E.g., the permutation of "abc" is {"abc", "acb", "bac", "bca", "cab", "cba"}. The size of this set is the factorial of the initial string size.</P>
<P ALIGN="JUSTIFY"></P>
<!--B><FONT FACE="Times"><P>Problem</P>
</B-->
</FONT><P ALIGN="JUSTIFY">Given a string S (with up to 20 characters, all lowercase letters) and a integer N (0Â²N<20!) find the (N+1)<SUP>th</SUP> smallest element of the permutation of S (consider the lexicographic order; the permutation of 'abc' above, for example, is represented in lexicographic order form left to right).</P>
<P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">E.g., if S = "abc" and N=0, then the result would be "abc"</P>
<P ALIGN="JUSTIFY">E.g., if S = "abc" and N=5, then the result would be "cba"</P>
<P ALIGN="JUSTIFY">E.g., if S = "abc" and N=3, then the result would be "bca"</P>
<P ALIGN="JUSTIFY">E.g., if S = "cba" and N=3, then the result would be "bca"</P>
<I><P ALIGN="JUSTIFY">Notice that the string may not be initially sorted (check the last two examples).</P>
</I><P ALIGN="JUSTIFY"></P>
<B><P ALIGN="JUSTIFY">Input</P>
</B><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">The input file contains one line with the number of samples and then each sample consists of two lines: one with string S and the next with number N.</P>
<P ALIGN="JUSTIFY"></P>
<B><P ALIGN="JUSTIFY">Output</P>
</B><P ALIGN="JUSTIFY"></P>
<P ALIGN="JUSTIFY">For each sample, a line with the required value.</P>
<P ALIGN="JUSTIFY"></P>
<B><P ALIGN="JUSTIFY">Sample Input</P></B>
<pre>
2
abc
3
abcde
119
</pre>

<B><P ALIGN="JUSTIFY">Sample Output</P></B>
<pre>
bca
edcba
</pre>

</BODY>
</HTML>


______________________________________________________
942||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="Microsoft Word 73.1">
<TITLE>Problem B</TITLE>
</HEAD>
<BODY>

<B><FONT SIZE=4><P>Problem B</P>
</FONT><FONT FACE="Times" SIZE=4><P ALIGN="CENTER">Cyclic Numbers</P>
</B>
</FONT><B><FONT FACE="Times"><P>Problem</P>
</B><P ALIGN="JUSTIFY">Given two positive integers, that represent a rational number as a fraction, we want to produce the decimal periodic representation of the fractionÂ’s value. A decimal periodic representation has the following form:</P>
</FONT><FONT FACE="Times" SIZE=4><P>	d<SUB>1</SUB>
d<SUB>i </SUB></FONT><B><FONT FACE="Times" SIZE=5>.</FONT><FONT FACE="Times" SIZE=4> </B>d<SUB>j</SUB>
d<SUB>l</SUB>(d<SUB>m</SUB>
d<SUB>n</SUB>)</P>
</FONT><FONT FACE="Times"><P ALIGN="JUSTIFY">where each </FONT><FONT FACE="Times" SIZE=4>d</FONT><FONT FACE="Times"> is a decimal digit and the inclusion of </FONT><FONT FACE="Times" SIZE=4>d<SUB>m</SUB>
d<SUB>n</SUB></FONT><FONT FACE="Times"> between parenthesis means that this sequence of digits is repeated forever. We call </FONT><FONT FACE="Times" SIZE=4>(d<SUB>m</SUB>
d<SUB>n</SUB>) </FONT><FONT FACE="Times">the periodic part of the representation. </P>

<P>As examples of decimal periodic representations, consider for instance:</P><DIR>
<DIR>

<P> 1 / 3 = 0.(3)	13 / 66  =  0.1(96)	170 / 12 = 14.1(6)	24 / 6 =  4.0</P></DIR>
</DIR>

<P ALIGN="JUSTIFY">Notice that the periodic part is omitted if the decimal expansion of the fraction is finite, as illustrated by the last example.</P>

<P ALIGN="JUSTIFY">All fractions can be represented <U>precisely</U>, <U>in a finite way</U>, using this kind of representation. However we cannot give an explicit bound for the size of the periodic part (see for example the second fraction in the sample input below).</P>

<B><P>Input</P>
</B><P ALIGN="JUSTIFY">The first line contains a non-negative integer <I>n</I>, which is the number of fractions to convert to the decimal periodic representation. The following <I>n</I> lines contain two positive integers, respectively the numerator and the denominator of the fraction to be converted.</P>

<B><P>Output</P>
</B><P ALIGN="JUSTIFY">For each fraction in the input, there must be a line in the output containing its decimal periodic representation.</P>

<B><P>Sample Input</P></B>
<pre>
7
4 33
912 89
120 3
131 909
146 325
12345 88
18 12000
</pre>

<B><P>Sample Output</P></B>
<pre>
0.(12)
10.(24719101123595505617977528089887640449438202)
40.0
0.(1441)
0.44(923076)
140.284(09)
0.0015
</pre>

</BODY>
</HTML>

______________________________________________________
943||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="Microsoft Word 73.1">
<TITLE>Problem C</title>
</head>
<BODY>

<B><FONT FACE="Times" SIZE=4><P ALIGN="JUSTIFY">Problem C</p>
</b></font><FONT FACE="Times"><P ALIGN="JUSTIFY"></p>
</font><B><FONT FACE="Times" SIZE=4><P ALIGN="CENTER">Number Format Translator</p>
</b></font><FONT FACE="Times"><P ALIGN="JUSTIFY"></p>
<B><P>Background</p>
</b>
<P ALIGN="JUSTIFY">Numbers can be represented with arabic digits or with cardinal numerals. In payment checks, the user is supposed to write the same number twice, in both formats: In one place in the arabic digits format (e.g. 203) and in another place in the cardinal numerals format (e.g. duzentos e trÃªs).</p>
<P ALIGN="JUSTIFY">Assume that a new generation of Optical Character Recognition (OCR) devices functions with a negligible margin of error. Accordingly, your customer, a Portuguese Bank which handles hundreds of thousands of payment checks per day, wants to develop an application to verify for each check, whether the number written in the numeral cardinals format matches the number written in the arabic digits format, so that only unmatching cases have to be handled manually.</p>
<P ALIGN="JUSTIFY"></p>
<B><P ALIGN="JUSTIFY">Problem</p>
</b><P ALIGN="JUSTIFY"></p>
<P ALIGN="JUSTIFY">To translate a given number from its cardinal numerals representation into its arabic digits representation.</p>
<P ALIGN="JUSTIFY"></p>
<B><P ALIGN="JUSTIFY">Input</p>
</b><P ALIGN="JUSTIFY"></p>
<P ALIGN="JUSTIFY">The program input consists of a text file. The number (in arabic digits representation) in the first line indicates the number of remaining lines. Each of the remaining lines of text contains a number in cardinal numerals format, correctly represented according to the Portuguese orthography and grammar.</p>
<P ALIGN="JUSTIFY">For your convenience, here is a list of admissible punctuation marks and words integrating cardinal numerals (a set restricted for the sake of simplicity of the current programming problem):</p>

<UL>
</font><FONT FACE="Courier New" SIZE=3><P ALIGN="JUSTIFY"><LI>,</li></p>
<P ALIGN="JUSTIFY"><LI>e</li></p>
<LI>zero, um, dois, tres, quatro, cinco, seis, sete, oito, nove</li>
<LI>dez, onze, doze, treze, catorze, quatorze, quinze, dezasseis, dezesseis, dezassete, dezessete, dezoito, dezanove, dezenove</li>
<LI>vinte, trinta, quarenta, cinquenta, sessenta, setenta, oitenta, noventa</li>
<LI>cem, cento, duzentos, trezentos, quatrocentos, quinhentos, seiscentos, setecentos, oitocentos, novecentos</li>
<P ALIGN="JUSTIFY"><LI>mil, milhao, milhoes, biliao, bilioes, bilhao, bilhoes</li></p></ul>

</font><FONT FACE="Times"><P ALIGN="JUSTIFY"></p>
<B><P ALIGN="JUSTIFY">Output</p>
</b><P ALIGN="JUSTIFY"></p>
<P ALIGN="JUSTIFY">The program output is a text file with as many lines as the input file. Its first line is identical to the first line of the input file. Each subsequent <I>i</i>th line contains, in arabic digits format, the number represented in numeral cardinals in the <I>i</i>th line of the input file.</p>
<P ALIGN="JUSTIFY"></p>
<B><P ALIGN="JUSTIFY">Sample Input</p></b>
<pre>
12
quatro
vinte e tres
cento e vinte e sete
mil
doze mil duzentos e cinco
quatrocentos mil e cinco
quatrocentos e trinta e sete mil e cem
um milhao, cem mil quinhentos e seis
trezentos e trinta e dois bilioes, quinze mil cento e oito
mil milhoes
duzentos bilioes, setenta e oito milhoes, sete mil e cem
quinhentos bilioes e tres mil
</pre>

<B><P ALIGN="JUSTIFY">Sample Output</p></b>
<pre>
12
4
23
127
1000
12205
400005
437100
1100506
332000015108
1000000000
200078007100
500000003000
</pre>
</body>
</html>

______________________________________________________
944||||||false||||||
<html><head>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="Generator" content="Microsoft Word 73.1"><title>Happy Numbers</title></head><body>

</font><font size="4"></font></b><p align="center"><b><font size="4">Happy Numbers</font></b></p>
<font face="Times"><p> </p>
<b><p>Background</p>
</b><p> </p>
</font><p align="justify">Let the sum of the squares of the digits of a positive integer s<sub>0</sub> be represented by s<sub>1</sub>. In a similar way, let the sum of the squares of the digits of s<sub>1</sub> be represented by s<sub>2</sub>, and so on. If s<sub>i</sub>=1 for some i&gt;=1, then the original integer s<sub>0</sub> is said to be <b>happy</b>. For example, starting with 7 gives the sequence </p>
<p>	<b>7</b>, <b>49</b> (=7^2), <b>97</b> (=4^2+9^2), <b>130</b> (=9^2+7^2), <b>10</b> (=1^2+3^2), <b>1</b> (=1^2), </p>
<p>so 7 is a happy number. </p>
<p align="justify">The first few happy numbers are 1, 7, 10, 13, 19,
23, 28, 31, 32, 44, 49, 68, 70, 79, 82, 86, 91, 94, 97, 100, .... The
number of iterations i required for these to reach 1 are, respectively,
1, 6, 2, 3, 5, 4, 4, 3, 4, 5, 5, 3, .... </p>
<p align="justify">A number that is not happy is called <b>unhappy</b>. Once it is known whether a number is happy (unhappy), then any number in the sequence s<sub>1</sub>, s<sub>2</sub>, s<sub>3</sub>, ... will also be happy (unhappy). Unhappy numbers have eventually periodic sequences of s<sub>i</sub> which do not reach 1 (e.g., 4, 16, 37, 58, 89, 145, 42, 20, 4, ...). </p>
<p align="justify">Any permutation of the digits of a happy (unhappy)
number must also be happy (unhappy). This follows from the fact that
addition is commutative. Moreover, the product of a happy (unhappy)
number by any power of ten is a happy (unhappy) number. Example: 58 is
an unhappy number; then, so are 85, 580, 850, 508, 805, 5800, 5080,
5008, 8050, 8500, and so on.</p>
<b><font face="Times"></font></b><p><b><font face="Times"> </font></b></p>
<p><b><font face="Times">Problem</font></b></p>
<p>Decide which numbers, in a given closed interval, are happy numbers.</p>
<b><font face="Times"></font></b><p><b><font face="Times"> </font></b></p>
<p><b><font face="Times">Input</font></b></p>
<p align="justify">The input has <b>n</b> lines each of them corresponding to a test case. Every line contains two positive
integers between 1 and 99999 (inclusive) each; the first integer, L, is the low
limit of the closed interval; the second one, H, is the high limit (L &le; H).  </p>
<b><font face="Times"></font></b><p><b><font face="Times"> </font></b></p>
<p><b><font face="Times">Output</font></b></p>
<p align="justify">The output is composed of the happy numbers that lie
in the interval [L,H], together with the number of iterations required
for the corresponding sequences of squares to reach 1. </p>
<p align="justify">There must be a line for each happy number
containing the happy number followed by a space and the number of
iterations required for the sequence of squares to reach 1.</p>
<p align="justify">Print a blank line between two consecutive test cases.</p>
<b><font face="Times"></font></b><p><b><font face="Times"> </font></b></p>
<p><b><font face="Times">Sample Input</font></b></p>
<pre><font face="Times">5 28
233 250
</font></pre>

<font face="Times"><b><font face="Times"></font></b></font><p><font face="Times"><b><font face="Times">Sample Output</font></b></font></p>
<pre><font face="Times"><font face="Times">7 6
10 2
13 3
19 5
23 4
28 4

236 6
239 6
</font></font></pre>

<p></p>
<font face="Times"><font face="Times"><i><p>The definition of happy numbers is from MathWorld - http://mathworld.wolfram.com/</p></i></font>
</font></body></html>

______________________________________________________
945||||||false||||||
<html>

<!-- ====================================================================== -->

<head>
<meta http-equiv="content-language" content="en-us">
<title>Loading a Cargo Ship</title>
</head>

<!-- ====================================================================== -->

<!--body>

<h1 align="center">Loading a Cargo Ship</h1>

<hr/-->

<!-- ====================================================================== -->

<!--h1>Description</h1-->

<p>Ahoy there, software sailors! Your ship is in need of repairs! Last night a
big wave swallowed the cargo routing computer (CRC) which is essential for
logistic operations. Fortunately there is a replacement computer in the lower
deck; however, there is no backup of the cargo routing software! Your mission
is to reprogram the CRC assuming the following ship characteristics:</p>

<ul>
  <li>The ship has up to <code>9</code> cargo containers (of different sizes) 
  available for storing packages;</li>
  <li>The containers are numbered <code>1</code> to <code>9</code>;</li>
  <li>Each cargo container has a specific maximum weight capacity, up 
  to <code>999</code> tons;</li>
  <li>Each package weights at most <code>9</code> tons;</li>
  <li>The ship can only be loaded with no more than <code>999</code> packages 
  (for good luck, the crew says).</li>
</ul>

<p>The packages are loaded into the ship via a conveyor belt which is
connected to a cargo router (controlled by the CRC). The cargo router then
forwards each package to one of the available cargo containers, according to
the following algorithm:</p>

<ol>
  <li>First, select only the cargo containers that carry the lowest
  number of packages;</li>
  <li>Then, reduce the selection by choosing only the containers that have the
  greatest available weight capacity;</li>
  <li>Further reduce the selection by picking the container with the lowest
  number;</li>
  <li>If the selected cargo container cannot carry the package then the ship's
  loading ends.</li>
</ol>

<p>To illustrate the cargo routing algorithm, consider a ship with 3 cargo
containers (numbered 1, 2, and 3), respectively with 5, 10, and 5 tons of maximum weight
capacity. Assume now there are 8 packages to be loaded, in sequence, into the
ship, weighting 4, 3, 2, 1, 1, 2, 3, and 4
tons. In this scenario, the cargo routing algorithm should produce the
following activity:</p>

<pre>(first package) 4  3  2  1  1  2  3  4 (last package)
                |  |  |  |  |  |  |  x
                |  |  |  |  |  |  +------------------------+
                |  |  |  |  |  +-------------+             |
                |  |  |  |  +-----------+    |             |
  +-------------+  |  |  +---+          |    |             |
  |      +---------+  |      |          |    |             v
  |      |            |      v          v    v             
  v      v            v                                  : 3 :
                           : 1 :    : 1 1    2 1 1       2 1 1   (final contents
: 4 :    3 4 :    3 4 2    3 4 2    3 4 2    3 4 2       3 4 2    of the ship's
===== -> ===== -> ===== -> ===== -> ===== -> ===== ->    =====    cargo containers)
1 2 3    1 2 3    1 2 3    1 2 3    1 2 3    1 2 3       1 2 3</pre>

<p>(note: the colon symbol <code>:</code> is used to avoid presentation
errors; see also the sample output)</p>

<p>When the first package arrives (weighting 4 tons) all containers are empty, so rule 1 of the algorithm selects
containers 1, 2, and 3. In step 2, because container 2 has the greatest
available capacity (10 maximum tons - 0 used tons = 10 available tons), only
container 2 remains selected. Rule 3 again selects container 2. In rule 4 the package 
is loaded into container 2 because its available capacity (10 tons) is greater 
than the 4 tons of the package.</p>

<p>The second package ends up in container 1: in rule 1, containers 1 and 3
are selected because both have the lowest number of packages (zero, in this
case); rule 2 still selects the same containers since they have the same 5
tons of available weight capacity; rule 3 reduces the selection to just
container 1; finally, rule 4 loads the package, weighting 3 tons, into
container 1.</p>

<p>And so on, until all packages have been loaded into the ship, or, as in this 
scenario, until no cargo container can carry the current package, which 
prematurely ends the ship's loading (check the situation of the last package, 
weighting 4 tons).</p>

<p>Hurry! (and remember to backup the cargo routing software)</p>


<!-- ====================================================================== -->

<h1>Input</h1>

<p>Input contains several test cases, separated by a blank line. Each test case describes the cargo containers and the packages to be loaded into
the ship:</p>

<ul>
  <li>The first line indicates the number <code>c</code> of cargo containers
  in the ship (<code>1 <= c <= 9</code>);</li>
  <li>The following <code>c</code> lines describe the maximum weight
  <code>cw<sub>i</sub></code> each container can carry (<code>1 <=
  cw<sub>i</sub> <= 999</code>);</li>
  <li>Then comes an empty line;</li>
  <li>The next line indicates the number <code>p</code> of packages to be
  loaded into the ship (<code>1 <= p <= 999</code>);</li>
  <li>The following <code>p</code> lines describe the weight
  <code>pw<sub>i</sub></code> of each package (<code>1 <= pw<sub>i</sub>
  <= 9</code>).</li>
</ul>

<p>It is guaranteed that the weight of all packages is always lower or equal
to the ship's maximum weight capacity (<code>sum(pw<sub>i</sub>) <=
sum(cw<sub>i</sub>)</code>).</p>


<!-- ====================================================================== -->

<h1>Output</h1>

<p>The output for each test case displays the final contents of the ship's cargo containers and 
presents a summary of total weights:</p>

<ul>
  <li>The first lines represent the final contents of the cargo containers;</li>
  <li>Then comes an empty line;</li>
  <li>The next line displays the weight of all packages loaded into the
  ship;</li>
  <li>The following line shows the total unused weight the ship would still be
  able to carry;</li>
  <li>The last line indicates the total weight of the packages that could not
  be loaded into the ship.</li>
</ul>

<p>Examine carefully the sample output to prevent presentation errors. Print a blank line between datasets.</p>


<!-- ====================================================================== -->

<h1>Sample Input</h1>

<pre>3
5
10
5

8
4
3
2
1
1
2
3
4</pre>


<!-- ====================================================================== -->

<h1>Sample Output</h1>

<pre>: 3 :
2 1 1
3 4 2
=====
1 2 3

cargo weight: 16
unused weight: 4
unloaded weight: 4</pre>


<!-- ====================================================================== -->

</body>
</html>

______________________________________________________
946||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">
	<style>
	p {text-align: justify;}
	p.center {text-align: center;}
	h1, h2 {color: blue;}
	h1 {text-align: center}
	</style>
  <title>A Pile of Boxes</title>
</head>
<body>
<h1 align="center">Problem A - A Pile of Boxes</h1>

You are making a pile of boxes. The boxes have cubic dimensions (equal
edges) and their upper surfaces are open, so a smaller box will fall
into a larger one (container), but a larger box will stay on the
smallest top (Figure 1).<br>
<br>
<div style="text-align: center;">&nbsp;<img src="http://uva.onlinejudge.org/external/9/p946a.gif"  alt=" ></div>
<div style="text-align: center;">Figure 1 - Boxes falling over a pile<br>
</div>
<br>
Furthermore, these boxes have strange properties: they are permeable to
other smaller boxes, so one box may fall through the interior of larger
boxes until a smaller one or the floor is found (Figure 2).<br>
<br>
<div style="text-align: center;">&nbsp;<img src="http://uva.onlinejudge.org/external/9/p946a.gif"  alt=" ></div>
<div style="text-align: center;">Figure 2 - Boxes are permeable to
smaller ones<br>
</div>
<br>
There is one restriction: if one box does not fit entirely in the
height of a potential container, then it stays in the upper possible
level (Figure 3).<br>
<br>
<div style="text-align: center;">&nbsp;<img src="http://uva.onlinejudge.org/external/9/p946a.gif"  alt=" ></div>
<div style="text-align: center;">Figure 3 - One box must fit entirely
in its container<br>
<br>
</div>
<h2>The Problem</h2>
Given a sequence of boxes, it is necessary to evaluate the total pile
height. All the cubes have different dimensions.<br>
<h2>Input</h2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
 
The input is a sequence of text lines, as follows.<br>
The first text line contains the number NC (integer format) of boxes.
It is followed by a sequence of NC text lines containing, each one, the
length of a box (integer format). The maximum number of boxes is 100.<br>
<h2>Output</h2>
For each test case, output on a line by itself one integer number, representing the total pile height.<br>

<h2>Example Input</h2>
<pre>
8
10
4
6
3
11
7
8
5
</pre>

<h2>Example Output</h2>
<pre>
29
</pre>

<div style="text-align: center;">&nbsp;<img src="http://uva.onlinejudge.org/external/9/p946a.gif"  alt=" ><br>
Figure 4 - Pile generated in the example<br>
</div>
<br>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28 of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>Augusto Sousa</b> - FEUP)</i>
<hr>


<br>
</body>
</html>

______________________________________________________
947||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<html>
<head>
	<title>Master Mind Helper</title>
	<style>
	p {text-align: justify;}
	p.center {text-align: center;}
	</style>
</head>

<body bgcolor=white>

<h1 align=center><font color=blue>Problem B - Master Mind Helper</font></h1>

<p><img align=right src="http://uva.onlinejudge.org/external/9/p947a.jpg"  width="278" height="200" alt="  border="0">Master Mind was invented around
1970/71 by Mordecai Meirowitz, an Israeli Postmaster/Telecommunications expert.
His idea was at first turned down by many of the leading toy companies, but he persisted,
and took it to the International Toy Fair at Nuremberg in February 1971, where he showed it to a small English company,
Invicta Plastics Ltd. The small Leicester based company bought up the entire intellectual property rights to the game,
and under the guidance of its founder Mr. Edward Jones-Fenleigh, refined it, and released it in 1971/72.
It was an immediate hit, and went on to win the first ever Game of the Year Award in 1973.
It also received a Design Centre Award, and the Queen's Award for Export Achievement. So, for sure you have heard about this game,
right?

<p>Its idea is simple: you have to break the secret color code combination that is a sequence of a number of colored pegs.
You make guesses and receive feedback about your guesses, namely, the number of correct colors on correct places, and the number
of correct
colors on wrong places. For example, imagine a game with 9 colors and 4 positions. Let's say that the secret code is
<i>blue, blue, yellow, red</i>. At the start you don't know what the code is and you make a guess: <i>blue, green, green, yellow</i>.
The info you would receive would be that you have 1 correct color in the correct position (the first blue peg) and one correct
color on a wrong place (the yellow peg, which is not on the correct position). See figure 1 to better understand this idea. The objective of the game is to guess the secret code, using as few guesses as possible. 

<p class=center><img src="http://uva.onlinejudge.org/external/9/p947a.jpg"  width="593" height="300" alt="  border="0"><br>
<b>Figure 1 -</b> Explanation of a guess feedback 

<p>We are interested in a particular property of this game. Knowing a guess and its feedback, how many combinations of colors
are consistent with the answer? For example, imagine a game with 9 colors and 3 positions. We make the guess
<i>blue, red, green</i> and receive the info 1 correct color on correct place and 2 correct colors on wrong places. How many
combinations are consistent whit this? In other words, how many possible secret codes are there that would give this answer?
In this case, there are exactly 3 secret codes with this feedback for this particular guess:
code 1 - <i>blue, green, red</i>; code 2 - <i>green, red, blue</i> and code 3 - <i>red, blue, green</i>. Your task is precisely
to discover this kind of numbers.

<h2><font color=blue>The Problem</font></h2>
<p>Given a guess and its feedback, your task is to write how many secret codes are consistent with that info. In this particular
problem we will only be interested in 9 color mastermind games, with 2 to 5 positions. In order to simplify, we will represent
colors as numbers, starting with 1 and ending with 9. Blue will be number 1, red will be 2 and so on (note that it does not matter
which color is assigned to each number; the important thing is that a different number represents a different color).
  
<h2><font color=blue>Input</font></h2>

<p>The first line of input will contain a single integer <b>N</b>, indicating the number of test cases that follow
(1 &le; N &le; 30).

<p>Then follow exactly <b><i>N</i></b> lines, each containing one test case consisting of three parts separated
by single spaces. Each case starts with a valid guess, in a form
of a string of digits (remember that the colors are coded with digits 1 to 9). This string can
have from 2 to 5 digits. Then follows the feedback received in the form
of two integer numbers: the first one represents the number of correct colors on correct places, and the second one
represents the number of correct colors on wrong places.

<h2><font color=blue>Output</font></h2>

<p>For each test case you must output a line containing a single integer representing the number of possible secret codes
that would give that feedback for that particular guess. Remember that there are always 9 different colors and that the size of
the secret code must be equal to the size of the guess.

<h2><font color=blue>Example Input</font></h2>
<pre>
5
1234 2 2
111 1 0
567 0 1
91543 5 0
91543 0 5
</pre>

<h2><font color=blue>Example Output</font></h2>
<pre>
6
192
234
1
44
</pre>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28 of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
948||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<head>
<title>Fibonaccimal Base</title>
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
</style>
</head>

<body bgcolor=white>

<h1 align="center"><font color=blue>Problem C - Fibonaccimal Base</font></h1>

<p>
The well known Fibonacci sequence is obtained by starting with 0 and 1
and then adding the two last numbers to get the next one. For example
the third number in the sequence is 1 (1=1+0), the forth is 2 (2=1+1),
the fifth is 3 (3=2+1) and so on.<br>&nbsp;

<div align=center>
<table border=1 cellpadding=2>
<tr>
       <th>i</th>
       <td align=center>0</td>
       <td align=center>1</td>
       <td align=center>2</td>
       <td align=center>3</td>

       <td align=center>4</td>
       <td align=center>5</td>
       <td align=center>6</td>
       <td align=center>7</td>
       <td align=center>8</td>
       <td align=center>9</td>

</tr>
<tr>
       <th>Fib(i)</th>
       <td>0</td>
       <td>1</td>
       <td>1</td>
       <td>2</td>

       <td>3</td>
       <td>5</td>
       <td>8</td>
       <td>13</td>
       <td>21</td>
       <td>34</td>

</tr>
</table>
<b>Figure 1 - </b>The first numbers in the Fibonacci sequence
</div>

<p>
The sequence appears on many things in our life, in nature, and has a
great significance. Among other things, do you know that all positive
integer numbers can be represented as a sum of numbers in the
Fibonacci sequence? More than that, all positive integers can be
represented as a sum of a set of Fibonacci numbers, that is, numbers
from the sequence, without repetition. For example:
<i>13</i> can be the sum of the sets <i>{13}</i>, <i>{5,8}</i> or
<i>{2,3,8}</i> and <i>17</i> is represented by <i>{1,3,13}</i> or

<i>{1,3,5,8}</i>. Since all numbers have this property (do you want to
try to prove this for yourself?) this set could be a nice way to use
as a "base" to represent the number. But, as we have seen, some
numbers have more than one set whose sum is the number. How can we
solve that? Simple! If we add the constraint that the sets cannot have
two consecutive Fibonacci numbers, than we have a unique representation
for each number! This restriction is because the sum of any two
consecutive Fibonacci numbers is just the following Fibonacci number.

<p>Now that we know all this we can prepare a nice way to represent any positive integer. We will use a binary sequence
(just zeros and ones) to do that. For example, <i>17 = 1 + 3 + 13</i> (remember that no two consecutive Fibonacci numbers can be used).
Let's write a zero for each Fibonacci number that is not used and one for each one that is used, starting at the right. Then,
<i>17 = 100101</i>. See figure 2 for a detailed explanation. In this representation we should not have zeros at the left, this is,
we should only write starting with the first one. In order for you to understand better, note that in this scheme, not
using two consecutive Fibonacci numbers means that the binary sequence will not have two consecutive ones. When
we use this representation for a number we say that we are using the Fibonaccimal base, and we write it like 
<i>17 = 100101 (fib)</i>.

<br>&nbsp;

<div align=center>
<table border=1 cellpadding=2>
<tr>
       <th>17 = </th>

       <td align=center>1</td>
       <td>0</td>
       <td>0</td>
       <td>1</td>
	   <td>0</td>
	   <td>1</td>

</tr>
<tr>
       <th>13+3+1 = </th>
       <td><b>13</b></td>
       <td>8</td>
       <td>5</td>
       <td><b>3</b></td>

	   <td>2</td>
	   <td><b>1</b></td>
</tr>
</table>
<b>Figure 2 - </b>Explaining the representation of 17 in Fibonaccimal base
</div>
 
<h2><font color=blue>The Problem</font></h2>

<p>
Given a set of numbers in decimal base, your task is to write them in
the Fibonaccimal base.


<h2><font color=blue>Input</font></h2>

<p>
The first line of input contains a single number
<b>N</b>, representing the quantity of numbers that follow (<i> 1 &le;
N &le; 500</i>).

<p>
Than follow exactly <b><i>N</i></b> lines, each one containing a single positive integer smaller than 100 000 000. These numbers
can come in any order.


<h2><font color=blue>Output</font></h2>

<p>
You should output a single line for each of the <b><i>N</i></b> integers in the input, with the format
<tt>"DEC_BASE = FIB_BASE (fib)"</tt>. <tt>DEC_BASE</tt> is the original number in decimal base and <tt>FIB_BASE</tt>
is its representation in Fibonaccimal base. See the sample output for an example. 

<h2><font color=blue>Example Input</font></h2>

<pre>
10
1
2
3
4
5
6
7
8
9
10
</pre>

<h2><font color=blue>Example Output</font></h2>
<pre>
1 = 1 (fib)
2 = 10 (fib)
3 = 100 (fib)
4 = 101 (fib)
5 = 1000 (fib)
6 = 1001 (fib)
7 = 1010 (fib)
8 = 10000 (fib)
9 = 10001 (fib)
10 = 10010 (fib)
</pre>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28th of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>

<hr>

</body>

</html>

______________________________________________________
949||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<html>
<head>
	<title>Getaway</title>
	<style>
	p {text-align: justify;}
	p.center {text-align: center;}
	h1, h2 {color: blue;}
	h1 {text-align: center}
    </style>
</head>

<body bgcolor=white>

<h1>Problem D - Getaway</h1>

<h2>The Problem</h2>

<p>Selma and Louis are two of the most dangerous bank robbers in Man-hat'em City. The main reason they are so good, and never got caught, is their ability to create perfect escape plans. The problem is they are getting old and their mind isn't what it used to be, so they are looking for someone to create a program that automatically creates these escape routes for them.</p>

<p>A well known figure in the crime scene of Man-hat'em told them you were the best guy for the job.</p>

<p>Man-hat'em is a very well organized city. Its streets are layed out in a grid and the distance between each crossroad is always the same. However some streets are one way only and some don't even allow cars. </p>
<p style="text-align:center"><img src="http://uva.onlinejudge.org/external/9/p949.png"  width="160" height="179" alt="  border="0">

<p>Besides having to make a quick getaway Selma and Louis have one other problem. The city has recently installed a surveillance system. Cameras have been installed in some crossroads but only one camera is monitored at each given time. The success of their getaway is drastically reduced if they are spotted during their escape so their escape route must avoid any crossing that is being monitored. Luckily, their friend Tony managed to get the surveillance system scheduling plans. </p>

<p>Your job will be to create a program that, given a certain partial map of the city and the surveillance system scheduling, will compute the optimum escape route. The following can be assumed to be always true:</p>

<ul>
<li>The robbery will always take place at the northwest of the map;</li>

<li>The hideaway will always be at the southeast of the map;</li>

<li>There is always a possible escape route;</li>

<li>The time needed to get from one crossroad to the next is always the same, and, for simplicity sake, can be considered as being one time unit.</li>

<li>The escape route must never pass a crossing that is being monitorized at that time;</li>

<li>To avoid getting caught on camera Selma and Louis can wait any units of time at a given crossroad.</li>
</ul>

<h2>Input</h2>
The input file contains several test cases, each of them as describes below.
<ul>
<li>The input starts by stating the number of vertical roads (nv) and horizontal roads (nh) in a single line. With 1 <= nv,nh <= 100.</li>

<li>The following line will contain the number (r) of traffic restrictions in the city. With 0 <= r <= 500.</li>

<li>Each of the following r lines will contain a restriction of the form: x1 y1 x2 y2. Meaning that traffic isn't allowed from the crossroad with coordinates (x1, y1) to the crossroad with coordinates (x2, y2).</li>

<li>The next line will contain the number (m) of scheduled crossroad monitorizations. With 0 <= m <= 500.</li>

<li>Each of the following m lines will contain the monitorization information in the form: t x y. Where t is the time counting from the start of the getaway and (x, y) are the coordinates of the crossroad being monitored. All these m lines will have different values for t. With 0 <= t <= 500.</li>
</ul>

<h2>Output</h2>
For each test case, the output will contain a single line stating the minimum number of time units needed for a perfect getaway.

<h2>Example Input</h2>
<pre>
3 3
6
0 0 1 0
1 0 0 0
1 0 2 0
0 1 0 2
1 2 0 2
1 2 2 2
2
2 1 1
4 2 1
</pre>

<h2>Example Output</h2>
<pre>
6
</pre>

<hr />

<strong>Explanation of the example output</strong>

<p>The plan starts at (0,0) at time 0. They then proceed to (0,1) where they intended to turn left heading to (1,1). Thanks to Tony, they know someone will be monitoring them at (1,1) by the time they get there, so they wait for one time unit. They arrive at (1,1) at time 3, where they wait another time unit as they know they will be monitored at (2,1) at time 4. After this second wait, they proceed to (2,1) and then to (2,2) where they arrive at time 6.</p>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28 of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>AndrÃ© Restivo</b> - FEUP)</i>
<hr>



</body>

</html>

______________________________________________________
950||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<html>
<head>
	<title>Tweedle Numbers</title>
	<style>
	p {text-align: justify;}
	p.center {text-align: center;}
    </style>
</head>

<body bgcolor=white>

<h1 align=center><font color=blue>Problem E - Tweedle Numbers</font></h1>

<p><img align=right src="http://uva.onlinejudge.org/external/9/p950.jpg"  width="221" height="199" alt="  border="0">
<p>"I know what you're thinking about," said Tweedledum; "but it isn't so, nohow."<br> 
"Contrariwise," continued Tweedledee, "if it was so, it might be; and if it were so, it would be; but as it isn't, it ain't. That's logic."<br>
"I'm sorry, could you help me out of this wood: it's getting dark!" you said.<br>
"You've begun wrong!" cried Tweedledum. "The first thing in a visit is to say Â«How d'ye do?Â» and shake hands!"<br>
And here the two brothers gave each other a hug, and then they held out the two hands that were free, to shake hands with you.<br>
"We are now discussing the possibility of teaching Tweedle Numbers to everyone on the kingdom!" shouted Tweedledee. <br>
"No, no, could you please just tell me the way out?" you cried. But they were already explaining how Tweedle numbers worked...

<p>"It's easy, you see, since if it weren't so, it wouldn't be. That's
logic!" both of them said.<br>
"And we only have a few rules" they said, starting to write on a board:

<ul>
<li>All tweedle numbers are binary numbers (a sequence of zeros and ones), and always start with a 1 (one);
<li>They have exactly <b>N</b> digits;
<li>Each subsequence of consecutive and equal digits (let's call it a <i>run</i>) only has at maximum <b>M</b> digits
<li>There exist exactly <b>K</b> <i>runs</i>
</ul>

<p>"Nohow. And thank you very much for asking about our numbers!", said Tweedledum.<br>
"But I did not ask..." you said. Too late! "You like math? Funny! I'll give you examples" added Tweedledee.<br> 
"If N=6, K=3 and M=3" he said with a great smile "then we have this Tweedle numbers!".<br>&nbsp;<br>


<table border=1>
<tr>
<th>#</th>
<th>Tweedle Nr</th>
<th>&nbsp;</th>
<th>#</th>
<th>Tweedle Nr</th>
</td>
</tr>
<tr>
<td>1</td>
<td align=right>100011</td>
<td>&nbsp;</td>
<td>5</td>
<td align=right>110111</td>
</tr>
<tr>
<td>2</td>
<td align=right>100111</td>
<td>&nbsp;</td>
<td>6</td>
<td align=right>111001</td>
</tr>
<tr>
<td>3</td>
<td align=right>110001</td>
<td>&nbsp;</td>
<td>7</td>
<td align=right>111011</td>
</tr>
<tr>
<td>4</td>
<td align=right>110011</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>
</table>
<b>Figure 1 -</b> Tweedle numbers in ascending order for N=6, K=3, M=3

<p>"Ditto, we can assign a single number for each Tweedle number, its id, if we see them in ascending order!" said Tweedledum.<br>
"Ditto, ditto!" cried Tweedledee. "Why are you telling him that? He is not real!" shouted Tweedledee.<br>
"I am real!" you responded in tears...<br>
"I hope you don't suppose those are real tears?" Tweedledum interrupted in a tone of great contempt.<br>
"Well, well, I can discover the id of a Tweedle number faster than you" Tweedledee said.<br>
"Nohow! I'm very fast, generally," Tweedledum said on a low voice: "only today I happen to have a headache."<br> 
"And I've got a toothache!" said Tweedledee, who had overheard the remark. "Far worse than you, but I'm still faster."<br>  
"And you, how fast you are, you imaginary being?" they both said.

<p>And you had no solution but to make a program to discover that... So many strange things happen in Wonderland!

<h2><font color=blue>The Problem</font></h2>
<p>Given a specific N, K and M, and a list of valid Tweedle Numbers, your task is to discover the number id that represent
each number, this is, the position in which it appears if we take all the valid Tweedle Numbers for that parameters and
sort them in ascending order of their binary representation.
  
<h2><font color=blue>Input</font></h2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

<p>The first line will contain exactly three integers: the parameters <b>N</b>, <b>K</b> and <b>M</b>, given exactly in that order.
(<i>1 &le; N,M,K &le; 33</i>).

<p>Then comes a line with a single integer <b>T</b>, saying how many
Tweedle Numbers follow (<i>1 &le; T &le; 20</i>). Then there will be exactly
<b><i>T</i></b> lines, each one containing a single Tweedle Number, represented as a sequence of zero or one digits. The numbers
are valid in what respects to the parameters <b>N</b>,<b>M</b> and <b>K</b>.

<h2><font color=blue>Output</font></h2>

<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>You must output a single line for each Tweedle Number, giving it's number id. See the sample input and output, combined with
the figure 1, to better understand what you need to do.

<h2><font color=blue>Example Input</font></h2>
<pre>
6 3 3
4
111011
100011
110011
100111
</pre>

<h2><font color=blue>Example Output</font></h2>
<pre>
7
1
4
2
</pre>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28 of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
951||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<html>
<head>
	<title>The Pieces of the Puzzle</title>
	<style>
	p {text-align: justify;}
	p.center {text-align: center;}
    </style>
</head>

<body bgcolor=white>

<h1 align=center><font color=blue>Problem F - The Pieces of the Puzzle</font></h1>

<p>The children on the playground are now playing with funny
puzzles. They have a number of pieces and they have to make a
pre-determined image. Imagine for example that you have to form the
image depicted in figure 1, only with the available pieces.

<p class=center><img src="http://uva.onlinejudge.org/external/9/p951a.jpg"  width="401" height="183" alt="  border="0"><br>
<b>Figure 1 -</b> The image and the pieces of the puzzle

<p>The idea is to use all the pieces to form the image. The pieces can be rotated (by 0, 90, 180 or 260 degrees). Since the pieces
are equal from both sides, they can also be flipped, and also they can be at the same time flipped and rotated. With this rules, one
way to form the image with the pieces would be the one illustrated in figure 2.

<p class=center><img src="http://uva.onlinejudge.org/external/9/p951a.jpg"  width="190" height="136" alt="  border="0"><br> 
<b>Figure 2 -</b> Combining the pieces to form the puzzle 

<p>Can you help the children in how to solve every puzzle they have in hands?

<h2><font color=blue>The Problem</font></h2>
<p>Given a set of pieces and an image, you have to discover if it is
possible to combine the pieces in order to form the image. An image is
always a connected set of squares (meaning that there are no
disconnected parts of the image). At the end, there can be no pieces left.
  
<h2><font color=blue>Input</font></h2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

<p>The first line of the input will contain two integers <b>H</b> and <b>W</b>, which respectively indicate the height and the width
of the minimal square than can enclose the image to form (<i>1 &le; H,W &le;20</i>). Than come exactly <b><i>H</i></b> lines describing the image itself, each
of these lines exactly with <b><i>W</i></b> chars. A <tt>'#'</tt> means a square that belongs to the image and a <tt>'.'</tt> means
one that does not belong.

<p>After that comes a single line with an integer <b>P</b> indicating the number of pieces available (<i>1 &le; P &le;400</i>), 
followed by <b><i>P</i></b> sets of lines describing the pieces, in a similar way of how the image is described. Each piece starts
by having a single line indicating <b>PH<sub>i</sub></b> and <b>PW<sub>i</sub></b>, the height and width of the minimal square
enclosing the piece (<i>1 &le; <b>PH<sub>i</sub></b>,
<b>PW<sub>i</sub></b> &le; 20</i>), followed by  <i><b>PH<sub>i</sub></b></i> lines with <i><b>PW<sub>i</sub></b></i> chars with the piece, where
<tt>'#'</tt> means a square that belongs to the piece and a <tt>'.'</tt> means
one that does not belong. Note that the pieces can come in any order.

<h2><font color=blue>Output</font></h2>

<p>For each test case, you must output a single line with the word <tt>Yes</tt> if the image can be made with the pieces or <tt>No</tt> if that
is not possible. Remember that all the pieces must be used and that
the pieces can be rotated, flipped or suffer both of these transformations.

<h2><font color=blue>Sample Input</font></h2>
<pre>
5 7
X.X.XXX
X.X.X.X
X.X.XXX
X.X.X..
XXXXX..
7
3 1
X
X
X
3 1
X
X
X
2 1
X
X
1 1
X
3 2
XX
X.
XX
3 2
XX
X.
XX
2 2
X.
XX

3 3
.X.
XXX
.X.
2
2 2
.X
XX
2 1
X
X

3 2
.X
.X
XX
1
3 2
X.
X.
XX
</pre>

<h2><font color=blue>Sample Output</font></h2>
<pre>
Yes
No
Yes
</pre>

</body>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28 of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</html>

______________________________________________________
952||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>

<html>
<head>
	<title>Uno game</title>
	<style>
	p {text-align: justify;}
	p.center {text-align: center;}
    </style>
</head>

<body bgcolor=white>

<h1 align=center><font color=blue>Problem G - Uno game</font></h1>

<p><img align=right src="http://uva.onlinejudge.org/external/9/p952.gif"  width="260" height="260" alt="  border="0">
Uno is one of the world's most popular family card games, with rules easy enough for kids,
but challenges and excitement enough for all ages. Uno uses a special set of cards of 4 different colors (blue, red, yellow and green)
with values from 0 to 9. There are lots of special cards used but in this particular problem we will only use two of them: the
"change-direction" card and the pass card. We will explain their meaning later, but for now know that they exist and that they also
have colors. 

<p>At the beginning of the game, each player is dealt 7 cards with the remaining ones placed face down to form a "draw" pile.
The top card of the draw pile is turned over to begin a "discard" pile.
The first player has to match the card in the discard pile either by number or color.
For example, if the card is a blue 2, player must throw down a blue card or 2 card of any color. If the card
is a red change-direction, then it has to play a change-direction of any color or a red card.   
If the player doesn't have anything to match, he must pick a card from the top of the draw pile.
If he can play what is drawn, great, he can then play the card right away.
The card is played putting it with the face up on the top of the discard pile. Otherwise he must
keep the card he has drawn on his hand. After that the game continues to next player, who must do the same thing as the start player,
except that it must always "obey" to top card of the discard pile. The objective of the game is to be the first one so stay with zero cards.
That player will win.

<p>The two special cards, when played, have special meaning. When someone plays the change-direction card, the games changes its
"direction". Initially the games goes in clockwise direction. A change-direction card changes its direction to counter-clockwise.
A new change-direction card will again change the direction to clockwise and so on. So imagine that there are 4 players numbered from
1 to 4 playing. 1 plays a "normal" card, then two plays the change-direction card. In that case, player 1 would play again and after him
would play player 4, then 3, and so on. The other special card is the pass card. When someone plays this card, the next player
will not be able to play and the game continues with the player after
him. For example, in normal direction, if player 1 plays the pass card,
the game will continue to player 3, since player 2 will not be able to play. Player 3, of course, would be able to play another
pass card of any color, or a card of the same color of the pass card on the discard pile.

<p>There is also one last rule. If the draw pile is emptied, then you will pick all the cards in the discard pile (except the top one)
and put them on the discard pile, with face down, effectively reversing the order on which they were. This is, the bottom card of
the discard pile will now be the top card of the draw pile. Remember
that the top card of the discard pile remains there and does not go to
the draw pile. Also, if in any situation, someone has to draw a card but there
are no cards available (it may happen that only exists one card in the discard pile and none on the draw one), then the game will
continue to the next player. 

<pre>
# of colors   |  # of values
1: blue       |  1: pass
2: red        |  2: change-direction
3: yellow     |  3-13: all numbers, starting in 0 and ending in 9
4: green      | 
</pre> 
<b>Figure 1 -</b> Ranking of colors and values

<p>Now suppose everyone uses the same strategy to play. To do that, we
will first rank all the colors and the values as you see in figure
1. Then, each player will always choose the most ranked card he can
play. For example, we will prefer to play a blue 2 to a red 2, and we
will always favour the yellow pass card to the yellow change-direction
card, the 5 green card to the 7 green card. Other example: if the card
on the top discard pile is the red 3 and we have in our hand the red
pass card and the blue 3, we will play the blue 3, since the colors
have precedence over values.

<p>In this way, if we know the exact contents of all player hands and
of the draw and discard pile, then we will know the outcome of the
game!

 
<h2><font color=blue>The Problem</font></h2>
<p>Your task will be to predict the outcome of a partially begun game
of Uno when all the players use the strategy described above. You
will be given the cards each player has
and also the cards in the draw and discard piles. You must output who wins the game and how many cards the other players stay with.
  
<h2><font color=blue>Input</font></h2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

<p>The first line will contain the current direction of the game and the current player in the
form <tt>"DIRECTION PLAYER_NUMBER"</tt>. The direction will be <tt>'clockwise'</tt> if the game is running on the normal direction
(player 1, then 2, then 3, then 4, then 1, etc) or <tt>'counter-clockwise'</tt> if the game is on the opposite direction. The
<tt>PLAYER_NUMBER</tt> indicates who will be the first player to play in your simulation.

<p>Then come four lines describing the hands of each of the 4 players. Each line starts by having an
integer telling how many cards he has in its hand. Then come the cards themselves.
Each card is described by a string of length 2. The first char is the color of the card (<tt>B, R, Y or G</tt> meaning blue, red,
yellow or green) and the second one is its value (<tt>0...9, P or C</tt> meaning a number, pass card or change-direction card).
The first line of the players is always the player 1, the second one is player 2 and so no. No player will have more than 100 cards
in its hand on any time of the game. 

<p>After that come two more lines describing first the discard pile and then the draw pile. Each of these lines come in the same format
of the player hands. First an integer telling how many cards and then the cards themselves. Both these piles are described
from the top most card to the bottom one. Both this piles will not have more than 100 cards.

<p>The card of the players and of the piles can come in any order, this is, they are not sorted in any way. And a deck
of Uno can have repeated cards (for example, there can be more than one blue pass card).

<h2><font color=blue>Output</font></h2>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<p>You must always output 5 lines of output.
The first line should be <tt>PLAYER_NR is the winner</tt> indicating which player won the game.
You can assume that every game given will always have an end.
Then comes one line for each player in the form <tt>PLAYER_NR: NUM_CARDS</tt>, telling how many cards each player
had in the end of the game. These lines should always be in ascending order of the player number. Of course that the winning
player will always have zero cards, right?

<h2><font color=blue>Sample Input</font></h2>
<pre>
clockwise 1
3 RP GC Y2
2 Y4 YC
4 R3 R8 G9 R9
3 G8 YC B8
1 R2
20 R2 GP Y1 Y2 Y3 Y4 Y5 R5 Y0 R4 Y1 R3 Y2 R2 Y3 R1 Y4 R0 BC Y5

counter-clockwise 3
1 Y4
1 Y3
2 Y2 YP
3 G5 GC G4
5 R9 B3 G9 BP BP
3 Y8 Y6 R5
</pre>

<h2><font color=blue>Sample Output</font></h2>
<pre>
1 is the winner
1: 0
2: 1
3: 3
4: 3

4 is the winner
1: 2
2: 4
3: 5
4: 0
</pre>

<hr>
<p class=center><b>2005 Programming Contest of Porto University</b><br>
Round 2, 28 of September of 2005<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
953||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>The Incredible Pile Machine</TITLE>
<META NAME="description" CONTENT="The Incredible Pile Machine">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
The Incredible Pile Machine</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The ``WeePileIT Industries'' intends to conquer the market with an
automatic system that organizes piles of scrambled things
(bottles, cans, batteries, etc.) into individual piles. They are
developing a multi-purpose machine that detects the type of an
item placed anywhere in a scrambled pile and moves it to its
destination pile (let us call this an ``operation''). The problem
is that, with more than two types of items available, it becomes
difficult to determine which pile should be allocated to each type
in order to minimize the number of move operations. For example,
let us suppose we have three scrambled piles of three types of
items (named ``0'', ``1'' and ``2''), such as in figure 1

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p953a.eps}$
 -->
<IMG
 WIDTH="652" HEIGHT="96" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="\epsfbox{p953a.eps}">
</DIV>
<P>
<DIV ALIGN="CENTER">Figure 1: Three scrambled piles.

</DIV>

<P>
The numbers below each pile represent the distribution of types in
that pile (in pile 1, we have 2 items of type 0, 3 items of type 1
and 4 items of type 2, hence ``2 3 4''). Now, if we move the four
items of type 2 from pile 1 to pile 2 and the single item of type
2 from pile 3 to pile 2, we get one unscrambled pile (pile 2), as
we can see in figure 2

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p953b.eps}$
 -->
<IMG
 WIDTH="673" HEIGHT="69" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="\epsfbox{p953b.eps}">
</DIV>
<P>
<DIV ALIGN="CENTER">Figure 2: With 5 operations, pile 2 collects the elements of type 2.

</DIV>

<P>
The same reasoning could be followed to organize piles 1 and 3. In
figure 3, we show a possible final result.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p953c.eps}$
 -->
<IMG
 WIDTH="715" HEIGHT="73" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="\epsfbox{p953c.eps}">
</DIV>
<P>
<DIV ALIGN="CENTER">Figure 3: The final result, with 9 move operations.

</DIV>

<P>
As you can imagine, there is a large number of ways to organize
our piles. And some surely need more operations than others...

<P>
Your task is to write a program for the ``WeePileIT Industries''
that calculates the minimum number of operations necessary for
unscrambling a set of piles. The program must receive a
description of the piles and return an indication of which pile
will receive which type and the number of operations necessary. We
assume that, for organizing T types, we will always need exactly
<SPAN CLASS="MATH"><I>T</I></SPAN> piles.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input starts with an isolated integer <SPAN CLASS="MATH"><I>N</I> &lt; 100</SPAN>, indicating the
number of test cases that follows. Then, each line of the input
corresponds to an independent test case. Each test case starts
with the number <SPAN CLASS="MATH"><I>T</I></SPAN> (with <SPAN CLASS="MATH"><I>T</I> &lt; 10</SPAN>) of different types of items
(which also corresponds to the number of available piles). Then,
for each pile <SPAN CLASS="MATH"><I>P</I></SPAN>, there is a set of integers  <SPAN CLASS="MATH"><I>P</I><SUB>ij</SUB></SPAN> (<!-- MATH
 $1 \le
i \le T$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="$ \le$"><I>i</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="$ \le$"><I>T</I></SPAN>; <!-- MATH
 $1 \le j \le T$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="$ \le$"><I>j</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="$ \le$"><I>T</I></SPAN>; <!-- MATH
 $0 \le P_{ij} \le 1000$
 -->
<SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="$ \le$"><I>P</I><SUB>ij</SUB><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="$ \le$">1000</SPAN>) representing
all the types of items in that pile. Thus the input will be:

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p953d.eps}$
 -->
<IMG
 WIDTH="374" HEIGHT="67" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="\epsfbox{p953d.eps}">
</DIV>

<P>
The input stream will end with an EOF sign. In the example above,
the input would be:

<P>
<PRE>
3 2 3 4 0 0 2 1 3 1
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case, your program must print a set of <SPAN CLASS="MATH"><I>T</I></SPAN> integers,
indicating, for each pile, which type should be assigned. The
first integer will correspond to the type assigned to pile 1, the
second to pile 2, and so on. After these integers, your program
must print the minimum number, <SPAN CLASS="MATH"><I>Min</I></SPAN>, of operations determined.
Thus, the output will be:

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p953e.eps}$
 -->
<IMG
 WIDTH="111" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/953img1.png" 
 ALT="\epsfbox{p953e.eps}">
</DIV>

<P>
In case there are more than one possibility of pile assignment,
choose always the one with lower order (e.g. if 012 and 210 yield
9 operations, choose 012). In the example above, the output would
be:

<P>
<PRE>
021 9
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
4
3 2 3 4 0 0 2 1 3 1
3 66 66 0 66 66 0 66 66 66
6 476 357 874 50 594 394 320 803 817 348 252 940 453 500 647 299
94 143 800 947 561 885 389 172 301 276 612 130 540 731 774 306 96
239 227 907
2 99 1 1 99
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
021 9
012 264
251340 12741
01 2
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
954||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Tetravex Solver</TITLE>
<META NAME="description" CONTENT="Tetravex Solver">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Tetravex Solver</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
In the so-called tetravex puzzle, <SPAN CLASS="MATH"><I>MN</I></SPAN> square pieces are to be placed 
side-by-side inside an
<SPAN CLASS="MATH"><I>M</I> <TT>x</TT> <I>N</I></SPAN> rectangle so that touching sides have the same number.

<P>
Given <SPAN CLASS="MATH">16</SPAN> different square pieces, arrange them in a <SPAN CLASS="MATH">4 <TT>x</TT> 4</SPAN> 
square. Touching sides must have
the same number. The following figure illustrates what is desired.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p954a.eps}$
 -->
<IMG
 WIDTH="839" HEIGHT="404" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p954a.png" 
 ALT="\epsfbox{p954a.eps}">
</DIV>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
<B>The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</B>

<P>

<P><P>
<BR>

<P>
Each piece is encoded by four consecutive one digit numbers, each of 
which represented in the
ASCII character set; <SPAN CLASS="MATH">0</SPAN>&nbsp;will be represented by <code>ascii(48)</code>, i.e., 
by <code>'0'</code> in the
<code>C</code>&nbsp;language, <SPAN CLASS="MATH">1</SPAN>&nbsp;by <code>ascii(49)</code>, and so on, up to 
<SPAN CLASS="MATH">9</SPAN>&nbsp;(<code>ascii(57)</code>). The four
digits represent, from left to right, the one digit numbers associated 
with the right, up, left,
and down sides. For example, the string <code>"3195"</code> (the 
double-quotation marks will not be
present in the input) represents the square piece shown on the right.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p954b.eps}$
 -->
<IMG
 WIDTH="139" HEIGHT="126" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p954a.png" 
 ALT="\epsfbox{p954b.eps}">
</DIV>

<P>
This representation must also be used in the output. There must be at 
least one white space
character between the piece representations. A white space character is 
either a space, i.e.,
<code>ascii(32)</code>, <code>' '</code> in the <code>C</code>&nbsp;language, or a new line 
character (also known as the
line feed character), i.e., <code>ascii(10)</code>, <code>'\n'</code> in the 
<code>C</code>&nbsp;language. There may
exist white space characters both before the description of the first 
piece and after the
description of the last piece. If any other characters (i.e., not a 
digit nor a white space) are
present then the input is not valid. The input is also not valid when 
there are repeated pieces.
Two pieces are equal if and only if they have the same representation.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
<B>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The first line of the output must contain a single digit, represented 
in the ASCII character set,
immediately followed by the new line character. This digit must be

<P>

<UL>
<LI><SPAN CLASS="MATH">0</SPAN>, if the input is not valid, or
</LI>
<LI><SPAN CLASS="MATH">1</SPAN>, if the input is valid and there are no solutions, or
</LI>
<LI><SPAN CLASS="MATH">2</SPAN>, if the input is valid and there is only one solution, or
</LI>
<LI><SPAN CLASS="MATH">3</SPAN>, if the input is valid and there are two or more solutions.
</LI>
</UL>

<P>
If there is only one solution, the output must have <SPAN CLASS="MATH">4</SPAN>&nbsp;more lines, 
each of which containing the
pieces of one row of the solution, top row first. Each of these 
<SPAN CLASS="MATH">4</SPAN>&nbsp;lines must contain the
representation of the <SPAN CLASS="MATH">4</SPAN>&nbsp;pieces of the corresponding row, left piece 
first. There must exist a
single space character between piece representations of the same row. 
Each line must be terminated
by a new line character.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
13e2 6151 8161 1201 6152 8777
1651 1511 1394 7310 8726 1128
7151 5512 1512 7161

         9124
      8716  9683 
   1012  2913  1410
3097  7310  9295  1394
   6882  3309  1531
      8703  5236
         0663
 
8716 6882 0663 8703
9683 9295 1394 7310
3309 1531 1410 1012
2913 9124 3097 8716
 
0512 9811 3333 1726 1755 0052
7614 6152 1987 1234 7771 1390
2185 2468 1103 7188

3298 6428 6833 8484 8924
9886 8679 4687  8929 2642 8999
9399 9784 6986 7477 7406
</PRE> 

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
0

2
8716 6882 0663 8703
9683 9295 1394 7310
3309 1531 1410 1012
2913 9124 3097 5236

0

1

3
</PRE> 

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
955||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Interpreting Old Maps</TITLE>
<META NAME="description" CONTENT="Interpreting Old Maps">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Interpreting Old Maps</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
Before the invention of instruments for determining latitude and
longitude, maps could only be crude representations of the regions
of the earth surface. Ancient maps, in fact, only indicated
approximate locations for cities or natural spots. The relative
positions of the main spots would be approximately correct, but
the relative positions of neighboring cities were often completely
wrong. Despite the technological limitations, and the ``creativity''
that was used to decide about what could not be known, some
ancient maps already provided estimates for latitude and
longitude.

<P>
It has been observed that road information was a source of
information for determining the relative positions of cities and,
in particular, the geographical coordinates. In fact, it turns out
that the relative positions of some of the cities are completely
consistent with road information known through other historical
sources.

<P>
Since the old maps have a large number of cities and respective
coordinates, it is very hard to find out which cities were placed
in the map using road information known to us through other
sources. A computer program to automate that task is definitely
needed.

<P>

<P>
<BR>

<SPAN  CLASS="textbf">Example</SPAN>

<P>

<P>
<BR>
The figure provides an example. There is a road with cities
<SPAN CLASS="MATH"><I>A</I></SPAN>, <SPAN CLASS="MATH"><I>B</I></SPAN>, <SPAN CLASS="MATH"><I>C</I></SPAN> and <SPAN CLASS="MATH"><I>D</I></SPAN>. There are two variants
for the distance between <SPAN CLASS="MATH"><I>A</I></SPAN> and <SPAN CLASS="MATH"><I>B</I></SPAN>. On the map, cities
<SPAN CLASS="MATH"><I>B</I></SPAN> and <SPAN CLASS="MATH"><I>D</I></SPAN> were placed with reference to <SPAN CLASS="MATH"><I>A</I></SPAN> while
city <SPAN CLASS="MATH"><I>C</I></SPAN> was placed with reference to <SPAN CLASS="MATH"><I>B</I></SPAN>. From the two
possible distances between <SPAN CLASS="MATH"><I>A</I></SPAN> and <SPAN CLASS="MATH"><I>B</I></SPAN>, 11 and 40, the
second was used. Note that <!-- MATH
 $\sqrt{ (-19.3)^{2} + (-35.1)^{2} }
\approx 40$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="173" HEIGHT="39" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/955img1.png" 
 ALT="$ \sqrt{{ (-19.3)^{2} + (-35.1)^{2} }}$"> <IMG
 WIDTH="18" HEIGHT="17" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/955img1.png" 
 ALT="$ \approx$"> 40</SPAN>. City <SPAN CLASS="MATH"><I>D</I></SPAN> was placed at a distance of <!-- MATH
 $\sqrt{
67.9^{2} + 31.9^{2} } \approx 75$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="117" HEIGHT="41" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/955img1.png" 
 ALT="$ \sqrt{{
67.9^{2} + 31.9^{2} }}$"> <IMG
 WIDTH="18" HEIGHT="17" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/955img1.png" 
 ALT="$ \approx$"> 75</SPAN>. which can be explained as the
sum 11+30+34.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p955.eps}$
 -->
<IMG
 WIDTH="548" HEIGHT="396" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/955img1.png" 
 ALT="\epsfbox{p955.eps}">
</DIV>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</B>

<P>

<P><P>
<BR>

<P>
The idea is to focus on a single road. The main input for the
program consists of the list of cities, identified by their
coordinates in the map, and the road distances between them. There
is the problem that historical documents don't agree in all
distances, so all variants must be taken into account. The
following format is used:

<P>

<P>
<BR>

<SPAN CLASS="MATH"><I>N</I></SPAN> 
<BR><!-- MATH
 $X_{1} \ Y_{1}$
 -->
<SPAN CLASS="MATH"><I>X</I><SUB>1</SUB>&nbsp;<I>Y</I><SUB>1</SUB></SPAN> 
<BR><!-- MATH
 $M_{1} \ D_{1,a} \ D_{1,b} \dots$
 -->
<SPAN CLASS="MATH"><I>M</I><SUB>1</SUB>&nbsp;<I>D</I><SUB>1, a</SUB>&nbsp;<I>D</I><SUB>1, b</SUB>...</SPAN> 
<BR><!-- MATH
 $X_{2} \ Y_{2}$
 -->
<SPAN CLASS="MATH"><I>X</I><SUB>2</SUB>&nbsp;<I>Y</I><SUB>2</SUB></SPAN> 
<BR><SPAN CLASS="MATH">...</SPAN> 
<BR><!-- MATH
 $M_{N-1} \ D_{N-1,a} \ D_{N-1,b} \dots$
 -->
<SPAN CLASS="MATH"><I>M</I><SUB>N-1</SUB>&nbsp;<I>D</I><SUB>N-1, a</SUB>&nbsp;<I>D</I><SUB>N-1, b</SUB>...</SPAN> 
<BR><!-- MATH
 $X_{N} \ Y_{N}$
 -->
<SPAN CLASS="MATH"><I>X</I><SUB>N</SUB>&nbsp;<I>Y</I><SUB>N</SUB></SPAN>

<P>

<P>
<BR>
Where: <SPAN CLASS="MATH"><I>N</I></SPAN> is the number of cities in the road, <!-- MATH
 $(X_{1},Y_{1})$
 -->
<SPAN CLASS="MATH">(<I>X</I><SUB>1</SUB>, <I>Y</I><SUB>1</SUB>)</SPAN>,
<!-- MATH
 $(X_{2},Y_{2})$
 -->
<SPAN CLASS="MATH">(<I>X</I><SUB>2</SUB>, <I>Y</I><SUB>2</SUB>)</SPAN>, ..., <!-- MATH
 $(X_{N},Y_{N})$
 -->
<SPAN CLASS="MATH">(<I>X</I><SUB>N</SUB>, <I>Y</I><SUB>N</SUB>)</SPAN> are the coordinates of the
cities in the order in which they appear in the road, <SPAN CLASS="MATH"><I>M</I><SUB>i</SUB></SPAN> is
the number of alternative (variant) distances between cities <SPAN CLASS="MATH"><I>i</I></SPAN>
and <SPAN CLASS="MATH"><I>i</I> + 1</SPAN>, and <SPAN CLASS="MATH"><I>D</I><SUB>i,*</SUB></SPAN> are the variant distances themselves.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The result is a list of the pairs of cities, <SPAN CLASS="MATH"><I>i</I></SPAN> and <SPAN CLASS="MATH"><I>j</I></SPAN>, with
<SPAN CLASS="MATH"><I>i</I> &lt; <I>j</I></SPAN>, for which the relative positions in the map are consistent
with road distances (or one of them, when there are variants). For
each pair of cities in these conditions, a line with the following
format should be printed:

<P>

<P>
<BR>

<!-- MATH
 $i \ j \ D_{i,j,1} \ D_{i,j,2}$
 -->
<SPAN CLASS="MATH"><I>i</I>&nbsp;<I>j</I>&nbsp;<I>D</I><SUB>i, j, 1</SUB>&nbsp;<I>D</I><SUB>i, j, 2</SUB></SPAN>

<P>

<P>
<BR>
Where <SPAN CLASS="MATH"><I>D</I><SUB>i, j,*</SUB></SPAN> are the intervening road distances, which must
sum up to a value that is equal to the straight line distance
between those cities in the input map. The listing is sorted by
<SPAN CLASS="MATH"><I>i</I></SPAN> and then by <SPAN CLASS="MATH"><I>j</I></SPAN>. Between each value in the same
line, there is a blank space.

<P>
<BR>
<BR>
Note: None of the test cases contains a pair of
cities for which multiple solutions can be found. In other words,
there is a single list of distances <SPAN CLASS="MATH"><I>D</I><SUB>i, j,*</SUB></SPAN> suming up to a
value that is equal to the straight line distance between cities
<SPAN CLASS="MATH"><I>i</I></SPAN> and <SPAN CLASS="MATH"><I>j</I></SPAN>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
4
0 0
2 11 40
-19.3 -35.1
1 30
-8.2 -62.9
2 42 34
67.9 31.9
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1 2 40
1 4 11 30 34
2 3 30
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
956||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>The Minimum Slot Machine</TITLE>
<META NAME="description" CONTENT="The Minimum Slot Machine">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
The Minimum Slot Machine</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A slot machine accepts coins of two types, <SPAN CLASS="MATH">1</SPAN>
and <SPAN CLASS="MATH">2</SPAN> euros. The game begins by pressing a button that makes the 
machine arbitrarily jump to any one of <SPAN CLASS="MATH"><I>n</I></SPAN> states.
Each coin you insert makes the machine move to a new state which is 
determined by the type of coin
and the present state (it may move to just the same state where it is). 
If you wait more than
5 seconds without inserting a coin the game ends and either you loose 
the coins you inserted
or you win the double of what you spent, depending on whether the state 
the machine stays in at the end is a
loose or a win state. To make you suffer more, after you insert a new 
coin, the machine tells you what would have
happened if you had stopped instead of going on.

<P>
For the sake of minimality, a machine cannot have two equivalent 
states.
Two states are equivalent if no matter the sequence of coins you 
insert, the result is the same
starting from one state or from the other. Notice that a sequence of 
zero coins is valid, although the victory in
such a case is just moral.

<P>
Given a slot machine, determine the sets of states that are equivalent
and for each set delete all the states except the first in alphabetical 
order, which is taken as
the valid representative of that identical behaviour set. Show these 
remaining states.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input file contains several test cases, each of them containing several lines as follows.

<P>
The first line of the input contains the number <SPAN CLASS="MATH"><I>n</I></SPAN> (integer format) of 
states.
The states are labeled in alphabetic sequence, starting from <SPAN CLASS="MATH"><I>A</I></SPAN>, and 
there are at most 26.
So, if <SPAN CLASS="MATH"><I>n</I> = 6</SPAN>, the states are <SPAN CLASS="MATH"><I>A</I></SPAN>-<SPAN CLASS="MATH"><I>F</I></SPAN>.
The next <SPAN CLASS="MATH"><I>n</I></SPAN> lines contain four characters each, separated by single 
spaces, where
the first is the name of a state, the second the state the machine 
moves into if a <SPAN CLASS="MATH">1</SPAN> euro coin
is inserted, the third the state the machine moves into if a <SPAN CLASS="MATH">2</SPAN> euro 
coin
is inserted, and the fourth a <SPAN CLASS="MATH"><I>w</I></SPAN> if the state is a win state or a <SPAN CLASS="MATH">-</SPAN> 
if it is a loose state.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case, your program must output the states that remain, after deleting the 
equivalent states, in a single line, separated by single spaces.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
3
A C B w
B A B -
C C B w
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
A B
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
957||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Popes</TITLE>
<META NAME="description" CONTENT="Popes">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Popes</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
On the occasion of Pope John Paul II death, the American weekly 
magazine Time observed the largest number of Popes to be selected in a 100-year 
period was 28, from 867 (Adrian II) to 965 (John XIII). This is a very interesting 
piece of trivia, but it would be much better to have a program to compute that 
number for a period of any length, not necessarily 100 years. Furthermore, the 
Catholic Church being an eternal institution, as far as we can predict it, we 
want to make sure that our program will remain valid per omnia secula 
seculorum.

<P>
Write a program that given the list of years in which each Pope was elected and 
a positive number <SPAN CLASS="MATH"><I>Y</I></SPAN>, computes the largest number of Popes that were in 
office in a <SPAN CLASS="MATH"><I>Y</I></SPAN>-year period, and the year of election for the first and last Popes in 
that period. Note that, given a year <SPAN CLASS="MATH"><I>N</I></SPAN>, the <SPAN CLASS="MATH"><I>Y</I></SPAN>-year period that starts in 
year <SPAN CLASS="MATH"><I>N</I></SPAN> is the time interval from the first day of year <SPAN CLASS="MATH"><I>N</I></SPAN> to the last day of year <SPAN CLASS="MATH"><I>N</I> + <I>Y</I> - 1</SPAN>.
In case of a tie, i.e., if there is more that one <SPAN CLASS="MATH"><I>Y</I></SPAN>-year period with 
the same largest number of Popes, your program should report only the most ancient one.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
<B>The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</B>

<P>

<P><P>
<BR>

<P>
The first line of the input contains a positive integer <SPAN CLASS="MATH"><I>Y</I></SPAN>, the 
number of years of the period we are interested in. The second line contains 
another positive integer, the number of Popes, <SPAN CLASS="MATH"><I>P</I></SPAN>. Each of the remaining <SPAN CLASS="MATH"><I>P</I></SPAN> lines 
contains the year of election of a Pope, in chronological order. We know that <!-- MATH
 $P \le
100000$
 -->
<SPAN CLASS="MATH"><I>P</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/957img1.png" 
 ALT="$ \le$">100000</SPAN> and also that the last year <SPAN CLASS="MATH"><I>L</I></SPAN> in the file is such <!-- MATH
 $L \le 1000000$
 -->
<SPAN CLASS="MATH"><I>L</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/957img1.png" 
 ALT="$ \le$">1000000</SPAN>, and 
that <SPAN CLASS="MATH"><I>Y</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/957img1.png" 
 ALT="$ \le$"><I>L</I></SPAN>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case, write to the output contains a single line with three integers, separated by spaces: the largest number of Popes in a <SPAN CLASS="MATH"><I>Y</I></SPAN>-year period, the year of election of the first Pope in 
that period and the year of election of the last Pope in the period.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
5
20
1
2
3
6
8
12
13
13
15
16
17
18
19
20
20
21
25
26
30
31
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
6 16 20
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
958||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>A Homer's Holiday</TITLE>
<META NAME="description" CONTENT="A Homer's Holiday">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
A Homer's Holiday</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
You live on the planet <I>HomeSweetHome</I> - you are a Homer - and
you are planning a holiday trip with some Homer friends. Your
planet belongs to a very ``populated" solar system - there are
20000 planets easily reachable with your new MegaSpeed X3 Turbo
spaceship!

<P>
You have already sketched some possible paths and you are trying
to choose one of them. There are some points that you find
important that can make you choose one path over another. Surely
everyone prefers to visit planets where they can breathe (so not
to take air masks and oxygen bottles). However, this should be
balanced with other characteristics; for example, whether the
sights are beautiful, whether you can refuel your spaceship,
whether the temperature is Homer-bearable, etc.

<P>
You have already gathered the most relevant information about the
planets you are interested in visiting. You would like to have an
easy way to perceive some global characteristics of every possible
path, in order to make a more knowledgeable choice.

<P>

<P>
<BR>
You need a program that, given a path and the characteristics of every
planet along that path, tells you whether some given global properties
hold in that path.

<P>
The relevant characteristics of each planet are represented by
propositional symbols; for example <TT>canBreathe</TT>, <TT>canSee</TT>,
<TT>canWalk</TT>, <TT>canRefuel</TT>, <TT>hasFood</TT>, <TT>niceSights</TT>, <TT>  hasWater</TT>, <TT>muchCold</TT>, etc. The information about each planet is
given to you as a set of propositional symbols that are known to be 
true for that planet; for example, <TT>canSee, hasFood, canWalk</TT> 
characterizes a planet where you are able to see what is around you, that has
available food supplies, and where you can walk around freely.

<P>
A path is characterized by a number of planets and the properties of
each one of them; the order by which the planets are described is
important, insofar as it denotes the order by which they are going to
be visited.  The global characteristics of the path that you want to
be able to "ask" the computer are expressed in the following language
(given in BNF):

<P>
<PRE>
Expression ::= AllExpr | SomeExpr | NextExpr | proposition
AllExpr ::= `A' integer Expression
SomeExpr ::= `S' integer Expression
NextExpr ::= `N' Expression
</PRE>

<P>
A proposition cannot start by a digit.
Every expression is evaluated for a given planet - the <B>current</B>
planet - within a path. The initial current planet is always the first
planet in the path.  The expression <TT>Aiprop</TT> is true on the
current planet if <TT>prop</TT> is true in all planets that are <TT>i</TT>
or more positions ahead of the current one in the path.  The expression 
<TT>Siprop</TT> is true on the current planet if <TT>prop</TT> is true in some
of the planets that are <TT>i</TT> or more positions ahead of the current 
one in the path. The expression <TT>Nprop</TT> is true on the current planet 
if <TT>prop</TT> is true in the planet that follows the current one in the 
path.

<P>
Let us suppose a path <TT>p1 p2 p3 p4 p5</TT>. All expressions that we
want to evaluate for the path start being evaluated in the first planet 
- p1 - which is the initial current planet. Some examples follow:

<P>
<DL>
<DT><STRONG><TT>A0canBreathe</TT></STRONG></DT>
<DD>- all planets in the path are "breathable"
  (in the example, this expression is true for the path if it is the
  case that the proposition <TT>canBreathe</TT> is true in all <TT>p1,
    p2, p3, p4</TT> and <TT>p5</TT> planets)

<P>
</DD>
<DT><STRONG><TT>A3hasFood</TT></STRONG></DT>
<DD>- from the third planet onwards, not including
  that third one, all planets in the path have available food supplies
  (in the example, this expression is true for the path if it is the
  case that the proposition <TT>hasFood</TT> is true in <TT>p4</TT> and in
  <TT>p5</TT>)

<P>
</DD>
<DT><STRONG><TT>S0muchCold</TT></STRONG></DT>
<DD>- there is at least one planet in the path
  which is too much cold (in the example, this is true if at least one
  of the planets in the path has the characteristic <TT>muchCold</TT>)

<P>
</DD>
<DT><STRONG><TT>S2A1hasWater</TT></STRONG></DT>
<DD>- from the second planet onwards, not
  including that second one, there is some planet for which all the
  ones that follow it in the path have water (in the example, this
  expression is true if <TT>A1hasWater</TT> is true in at least one of
  the <TT>p3, p4</TT> and <TT>p5</TT> planets; the expression <TT>    A1hasWater</TT> is true in <TT>p3</TT>, for example, if <TT>hasWater</TT> is
  true in all planets from <TT>p4</TT> onwards, that is, in <TT>p4</TT> and
  in <TT>p5</TT>)

<P>
</DD>
<DT><STRONG><TT>A0S1hasWater</TT></STRONG></DT>
<DD>- in all planets we can expect that there is
  some planet in the rest of the path where there is water available
  (in the example, this expression is true for the path if <TT>S1hasWater</TT>
  is true in all planets of the path; the expression <TT>S1hasWater</TT> 
is
  true in <TT>p2</TT>, for example, if <TT>hasWater</TT> is true
  in some of the <TT>p3, p4</TT> and <TT>p5</TT> planets)

<P>
</DD>
<DT><STRONG><TT>A0NhasFood</TT></STRONG></DT>
<DD>- the successor planet of all planets in the
  path has food (in the example, this expression is true for the path
  if it is the case that the proposition <TT>NhasFood</TT> is true in all
  <TT>p1, p2, p3, p4</TT> and <TT>p5</TT> planets; the expression <TT>    NhasFood</TT> is true in <TT>p1</TT>, for example, it the proposition
  <TT>hasFood</TT> is true in <TT>p2</TT>)

<P>
Note that whenever it is not possible to evaluate an expression in a
  path, for example when the current planet does not exist, the
  expression evaluates to true. In the example, the expression <TT>    NhasFood</TT> is true in <TT>p5</TT> because there is no Next planet
  following <TT>p5</TT> in the path.
</DD>
</DL>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</B>

<P>

<P><P>
<BR>

<P>
The first line of input contains an integer <SPAN CLASS="MATH"><I>P</I></SPAN> (<!-- MATH
 $0 < P \le
150$
 -->
<SPAN CLASS="MATH">0 &lt; <I>P</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/958img1.png" 
 ALT="$ \le$">150</SPAN>) that denotes the number of planets in the path.

<P>
The following <SPAN CLASS="MATH"><I>P</I></SPAN> lines contain the propositions (separated by
spaces) corresponding to the properties that each of the planets in
the path has. Each proposition is a string of up to 10 characters
(spaces are not allowed). There is a maximum of 30 propositions per 
planet.

<P>
The following line contains an integer <SPAN CLASS="MATH"><I>Q</I></SPAN> (<!-- MATH
 $0 < Q < 50$
 -->
<SPAN CLASS="MATH">0 &lt; <I>Q</I> &lt; 50</SPAN>)
which denotes the number of expressions that follow.  The following
<SPAN CLASS="MATH"><I>Q</I></SPAN> lines contain an expression each. These expressions are
written in the above specified language. The integers that are part of
<TT>AllExpr</TT> and <TT>SomeExpr</TT> expressions may take values in the
interval <SPAN CLASS="MATH">[0, 150[</SPAN> (the upper limit is the maximum number of planets
given above).

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The output has <SPAN CLASS="MATH"><I>Q</I></SPAN> lines, each one containing the word `<TT>yes</TT>'
or `<TT>no</TT>' depending on the validity of each of the <SPAN CLASS="MATH"><I>Q</I></SPAN> 
expressions for the path given in the input.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
4
canBreathe hasFood hasWater
canBreathe hasWater
hasWater muchCold
hasFood muchCold hasWater
24
A0canBreathe
A3hasFood
S0muchCold
S2A1hasWater
A0S1hasWater
A0NhasFood
A0hasWater
A1canBreathe
A3canBreathe
A2muchCold
A0S0muchCold
A0S3muchCold
A0S2NmuchCold
S122muchCold
NNA1canBreathe
NNA1hasFood
S2A0hasWater
S1A0muchCold
A1S1muchCold
A1S1canBreathe
A2S3muchCold
A0NS2muchCold
A0NS2canBreathe
A1S0A0NhasWater
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
no
yes
yes
yes
yes
no
yes
no
no
yes
yes
yes
yes
yes
no
yes
yes
yes
yes
no
yes
yes
no
yes
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
959||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Car Rallying</TITLE>
<META NAME="description" CONTENT="Car Rallying">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Car Rallying</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
You are about to participate as a co-driver in the next edition of
the ``Rallye de Monte-Carlo'' (organized by ACM - Automobile Clube
de Monaco). Before the actual race all drivers are allowed to run
on the tracks of the course. In these reconnaissance drives, the
co-drivers, who sit next to the drivers, write down shorthand
notes on how to best drive the stage.

<P>
Based on your observations on these notes, you were able to create a
map with the advisable speed limits of track sections.  Passing by
these locations over the speed limit is not recommended, since it can
make your car crash. To assist your pilot, you need to devise a
winning strategy based on the speed limits. And a nice computer
program could be handy for this task...

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p959a.eps}$
 -->
<IMG
HEIGHT="234" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p959a.jpg" 
 ALT="\epsfbox{p959a.eps}">
</DIV>

<P>
Given a car rally track marked with speed limits at specific
locations, your goal is to devise a strategy to reduce and increase
the car speed such that you will run the track at the fastest possible
time without ever going over the speed limit.

<P>
For simplicity the track is divided into section units, each one of
them whith a specific speed limit. At start position your car marks
speed 0 Km/h.  You can increase your speed or decrease it by multiples
of 10. For each 10 Km/h your car advances 1 unit. For example, if you
have a current speed of 50 Km/h your car advances 5 units making what
we call a move. After each move, you can change again the car
speed. You can for instance accelerate to 70 Km/h making your car
advance 7 units more, or you can brake to 40 Km/h making your car
advance 4 units.

<P>
While you are running at a determined speed (in a single move), you
can only pass track units with speed limit equal or bigger than your
current speed. For calculations purposes, a move starts on the unit
immediately after the current position. Due to mechanical limitations,
rally cars have a maximum acceleration and braking speed. For
example a car with a maximum acceleration speed of 30 Km/h and maximum
break speed of 20 Km/h, can only make an increment to the current
speed of 30, 20, 10, 0, -10 or -20 Km/h.

<P>
Your car starts the race before the first unit of the track (a
``virtual'' zero unit) and to finish the race it must pass over the
last unit of the track, passing the finish line. You can cross the
finish line at any speed. Note that arriving at the last unit is not
considered terminating the race!

<P>
Your task is to give the optimal strategy for the car, that is, the
one that minimizes the number of total moves needed to finish the
track without ever exceeding the speed limit.

<P>
The following figure illustrates a track example and its corresponding
optimal strategy (5 moves). This track is also given in sample input.

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p959b.eps}$
 -->
<IMG
 WIDTH="777" HEIGHT="468" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/p959a.jpg" 
 ALT="\epsfbox{p959a.eps}">
</DIV>


<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of input contains an integer <SPAN CLASS="MATH"><I>C</I></SPAN>, giving the number 
of test cases that follow <!-- MATH
 $(1 \le C \le 10)$
 -->
<SPAN CLASS="MATH">(1<I>C</I>10)</SPAN>.

<P>
Each test case starts with a line containing two integers <SPAN CLASS="MATH"><I>A</I></SPAN> and
<SPAN CLASS="MATH"><I>B</I></SPAN> separated by a single space, indicating the maximum values of
acceleration and braking. <SPAN CLASS="MATH"><I>A</I></SPAN> and <SPAN CLASS="MATH"><I>B</I></SPAN> are always
multiple of 10 and <!-- MATH
 $10 \le A,B \le 240$
 -->
<SPAN CLASS="MATH">10<I>A</I>, <I>B</I>240</SPAN>.

<P>
The next line describes the track. It is given by pairs of integers
<SPAN CLASS="MATH"><I>NV</I></SPAN> indicating a section of <SPAN CLASS="MATH"><I>N</I></SPAN> units with speed limit <SPAN CLASS="MATH"><I>V</I></SPAN>. 
The end of the track is indicated by an <TT>0 0</TT> pair.
<SPAN CLASS="MATH"><I>V</I></SPAN> will always be a positive multiple of 10 smaller than 250. The
maximum number of units in one track is 10000.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
There is one line for each test case, containing the minimum number of
moves that a car needs to make to finish the corresponding track.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
3
30 10
10 100 5 70 3 40 6 100 0 0
40 50
15 100 0 0
40 20
1 50 1 40 1 30 1 20 1 10 1 20 1 30 1 40 1 50 0 0
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
5
3
5
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
960||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Gaussian Primes</TITLE>
<META NAME="description" CONTENT="Gaussian Primes">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Gaussian Primes</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The complex numbers <SPAN CLASS="MATH"><I>a</I> + <I>bi</I></SPAN>, where <!-- MATH
 $i=\sqrt{-1}$
 -->
<SPAN CLASS="MATH"><I>i</I> = <IMG
 WIDTH="41" HEIGHT="39" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/960img1.png" 
 ALT="$ \sqrt{{-1}}$"></SPAN> and <SPAN CLASS="MATH"><I>a</I></SPAN> and <SPAN CLASS="MATH"><I>b</I></SPAN> are
integers, are called the Gaussian
integers. The <SPAN CLASS="MATH"><I>norm</I></SPAN> of a complex number is given by <!-- MATH
 $\sqrt{a^2+
b^2}$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="72" HEIGHT="41" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/960img1.png" 
 ALT="$ \sqrt{{a^2+
b^2}}$"></SPAN>. Every Gaussian integer can be factorized as a
product of Gaussian primes.
You task is to determine if a given Gaussian integer is a prime, i.e.,
if it can not be written as the product of two other Gaussian
integers, <SPAN CLASS="MATH"><I>x</I></SPAN> and <SPAN CLASS="MATH"><I>y</I></SPAN>, where both <SPAN CLASS="MATH"><I>x</I></SPAN> and <SPAN CLASS="MATH"><I>y</I></SPAN> have norms larger than
<SPAN CLASS="MATH">1</SPAN> (This is the same as requiring both <SPAN CLASS="MATH"><I>x</I></SPAN> and <SPAN CLASS="MATH"><I>y</I></SPAN> to be different
from <SPAN CLASS="MATH">1</SPAN>, <SPAN CLASS="MATH">-1</SPAN>, <SPAN CLASS="MATH"><I>i</I></SPAN> and <SPAN CLASS="MATH">- <I>i</I></SPAN>).
For example, <!-- MATH
 $2 = (1+ i) ( 1-i)$
 -->
<SPAN CLASS="MATH">2 = (1 + <I>i</I>)(1 - <I>i</I>)</SPAN>, and, therefore,
<SPAN CLASS="MATH">2</SPAN> is not a prime. <SPAN CLASS="MATH">11</SPAN> is a Gaussian prime, but <!-- MATH
 $13 =
(3+2i)(3-2i)$
 -->
<SPAN CLASS="MATH">13 = (3 + 2<I>i</I>)(3 - 2<I>i</I>)</SPAN> is not a prime. In the same way, <!-- MATH
 $3+ i = (1+i)(2-i)$
 -->
<SPAN CLASS="MATH">3 + <I>i</I> = (1 + <I>i</I>)(2 - <I>i</I>)</SPAN>
is not a prime.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
You are given a list of <SPAN CLASS="MATH"><I>n</I></SPAN> Gaussian integers. The first
number, <SPAN CLASS="MATH"><I>n</I></SPAN>, in a row by itself,
 is the number of Gaussian integers that follow. This
number is followed by <SPAN CLASS="MATH"><I>n</I></SPAN> pairs of (possibly negative) integers, one 
per row,
representing, respectively, the real and imaginary part of each
Gaussian integer. The absolute value of the
real and imaginary parts of every input number
will be no larger than 10000, and the list will not have more than
100 numbers. Additionally, every pair (<SPAN CLASS="MATH"><I>a</I></SPAN>,<SPAN CLASS="MATH"><I>b</I></SPAN>) satisfies <!-- MATH
 $a^2 + b^2
\geq 2$
 -->
<SPAN CLASS="MATH"><I>a</I><SUP>2</SUP> + <I>b</I><SUP>2</SUP> <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/960img1.png" 
 ALT="$ \geq$"> 2</SPAN>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each Gaussian prime in the input, you should write the letter
<SPAN CLASS="MATH"><I>P</I></SPAN>, for <SPAN  CLASS="textit">Prime</SPAN>.
For each non-prime, you should write the letter <SPAN CLASS="MATH"><I>C</I></SPAN>, for 
<SPAN  CLASS="textit">Composite</SPAN>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
6
2 0
3 0
5 0
13 0
3 1
10 1
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
C
P
C
C
C
P
</PRE>

<P>


<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
961||||||false||||||

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Ambiguous or Incomplete Inductive Definitions</TITLE>
<META NAME="description" CONTENT="Ambiguous or Incomplete Inductive Definitions">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Ambiguous or Incomplete Inductive Definitions</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
An important notion in Computer Science is the syntactical concept
of terms. Examples of terms can be:

<P>

<UL>
<LI><TT>a</TT>
</LI>
<LI><TT>b</TT>
</LI>
<LI><TT>f(a,b)</TT>
</LI>
<LI><TT>s(a)</TT>
</LI>
<LI><TT>g(f(a,b),b,s(a))</TT>
</LI>
</UL>

<P>
Sets of terms are usually defined by <SPAN  CLASS="textit">induction</SPAN>. In such a 
schema, a
set of terms is seen in a constructive way: each element of an
inductively defined set is either <SPAN  CLASS="textit">constructed from</SPAN> simpler
elements of the set or a <SPAN  CLASS="textit">basic</SPAN> element. For instance,
<TT>a</TT> is a basic element, <TT>g(f(a,b),b,s(a))</TT> is
constructed from <TT>f(a,b)</TT>, <TT>b</TT> and from <TT>s(a)</TT>
using the constructor <TT>g</TT>. In the same vein, <TT>f(a,b)</TT>
is constructed from <TT>a</TT> and from <TT>b</TT> using the
constructor <TT>f</TT>.

<P>
More formally,  an inductive definition of a set <SPAN CLASS="MATH"><I>T</I></SPAN> of terms is
composed by a non-empty set <SPAN CLASS="MATH"><I>B</I></SPAN> of basic elements and a set <SPAN CLASS="MATH"><I>K</I></SPAN> of
constructors. Then, we say that <SPAN CLASS="MATH"><I>T</I></SPAN> is the smallest set <SPAN CLASS="MATH"><I>X</I></SPAN>
containing <SPAN CLASS="MATH"><I>B</I></SPAN> (i.e. <!-- MATH
 $B\subseteq X$
 -->
<SPAN CLASS="MATH"><I>B</I> <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \subseteq$"> <I>X</I></SPAN>) and the elements that respect
the following rule:

<P>
<DIV ALIGN="CENTER">
let be <SPAN CLASS="MATH"><I>f</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \in$"> <I>K</I></SPAN> with an arity of <SPAN CLASS="MATH"><I>n</I></SPAN>, and let be <SPAN CLASS="MATH"><I>n</I></SPAN> elements of <SPAN CLASS="MATH"><I>X</I></SPAN>
  (say, <!-- MATH
 $a_1\ldots a_n$
 -->
<SPAN CLASS="MATH"><I>a</I><SUB>1</SUB>...<I>a</I><SUB>n</SUB></SPAN>) then 
<BR><!-- MATH
 $f(a_1,\ldots, a_n)$
 -->
<SPAN CLASS="MATH"><I>f</I> (<I>a</I><SUB>1</SUB>,..., <I>a</I><SUB>n</SUB>)</SPAN> must be in <SPAN CLASS="MATH"><I>X</I></SPAN>
</DIV>

<P>
Let <!-- MATH
 $h_B : B \rightarrow N$
 -->
<SPAN CLASS="MATH"><I>h</I><SUB>B</SUB> : <I>B</I> <IMG
 WIDTH="22" HEIGHT="17" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \rightarrow$"> <I>N</I></SPAN> be a total function that maps every symbol of
<SPAN CLASS="MATH"><I>B</I></SPAN> to a positive integer, and <SPAN CLASS="MATH"><I>h</I><SUB>K</SUB></SPAN> be  a total function over <SPAN CLASS="MATH"><I>K</I></SPAN> that
maps every <SPAN CLASS="MATH"><I>n</I> -</SPAN>ary constructor to an <SPAN CLASS="MATH"><I>n</I></SPAN>-ary function over positive
integers.

<P>
In such a setting, we define the notion of <SPAN  CLASS="textit">natural
  interpretation</SPAN> <SPAN CLASS="MATH"><I>h</I></SPAN> as a function from <SPAN CLASS="MATH"><I>T</I></SPAN> to <SPAN CLASS="MATH"><I>N</I></SPAN> that maps
every term <SPAN CLASS="MATH"><I>t</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \in$"> <I>T</I></SPAN> to a positive integer in the following way:

<P>
<P><!-- MATH
 \begin{displaymath}
\left\{
\begin{array}{lcl}
h(a) &= &h_B(a) \quad \mbox{if} \quad a\in B\\
h(f(a_1\ldots a_n))&= &h_K(f)(h(a_1) \ldots h(a_n))
\end{array}\right .
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<IMG
 WIDTH="19" HEIGHT="65" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$\displaystyle \left\{\vphantom{
\begin{array}{lcl}
h(a) &amp;= &amp;h_B(a) \quad \mbox{...
...n B\\
h(f(a_1\ldots a_n))&amp;= &amp;h_K(f)(h(a_1) \ldots h(a_n))
\end{array}}\right.$"><IMG
 WIDTH="343" HEIGHT="61" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$\displaystyle \begin{array}{lcl}
h(a) &amp;= &amp;h_B(a) \quad \mbox{if} \quad a\in B\\
h(f(a_1\ldots a_n))&amp;= &amp;h_K(f)(h(a_1) \ldots h(a_n))
\end{array}$">
</DIV><P></P>

<P>

<P>
<BR>
We say that an inductive definition <SPAN CLASS="MATH"><I>T</I></SPAN> paired with a natural
interpretation <SPAN CLASS="MATH"><I>h</I></SPAN> is <SPAN  CLASS="textit">ambiguous</SPAN> when there exist two terms
<!-- MATH
 $t_1,t_2 \in T$
 -->
<SPAN CLASS="MATH"><I>t</I><SUB>1</SUB>, <I>t</I><SUB>2</SUB> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \in$"> <I>T</I></SPAN> such that <!-- MATH
 $h(t_1)=h(t_2)$
 -->
<SPAN CLASS="MATH"><I>h</I>(<I>t</I><SUB>1</SUB>) = <I>h</I>(<I>t</I><SUB>2</SUB>)</SPAN>.  We also say that <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN>
is <SPAN  CLASS="textit">incomplete</SPAN> when there exists a positive integer <SPAN CLASS="MATH"><I>n</I></SPAN> such
that there is no term <SPAN CLASS="MATH"><I>t</I></SPAN> that verifies <SPAN CLASS="MATH"><I>h</I>(<I>t</I>) = <I>n</I></SPAN>. Finally we say
that <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> is <SPAN  CLASS="textit">regular</SPAN> if it is neither incomplete nor
ambiguous.

<P>

<P>
<BR>
Given an inductive definition  of a set <SPAN CLASS="MATH"><I>T</I></SPAN> of term and a natural
interpretation <SPAN CLASS="MATH"><I>h</I></SPAN>, your task consists in qualifying if <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> is
ambiguous, incomplete, both or regular.

<P>
In the context of this problem, we will only consider simple
interpretations. As a consequence, elements in <SPAN CLASS="MATH"><I>h</I><SUB>K</SUB></SPAN> are simple
functions defined by the following grammar:

<P>
<P><!-- MATH
 \begin{displaymath}
f::= ( f + f )\ |\ ( f * f )\ |\ var_{id}\ |\ N
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>f</I> : : = (<I>f</I> + <I>f</I> )&nbsp;|&nbsp;(<I>f</I>*<I>f</I> )&nbsp;|&nbsp;<I>var</I><SUB>id</SUB>&nbsp;|&nbsp;<I>N</I>
</DIV><P></P>

<P>

<P>
<BR>
For a <SPAN CLASS="MATH"><I>p</I></SPAN>-ary function, the only valid <SPAN CLASS="MATH"><I>var</I><SUB>id</SUB></SPAN> are <TT>x1</TT>,
<TT>x2</TT> <SPAN CLASS="MATH">...</SPAN> <TT>xp</TT>, <TT>x1</TT> for the first argument,
<TT>x2</TT> for the second argument, and so on. Consider that every
component in the definition of a function is separated from the other
by a single space. For instance the <SPAN  CLASS="textit">successor</SPAN> function is
described by <TT>( x1 + 1 )</TT>.

<P>
In order to simplify the problem, you will not have to consider the
whole set of natural numbers. You only will have to consider the set
<SPAN CLASS="MATH">{<I>N</I>..<I>M</I>}</SPAN> with <!-- MATH
 $0\leq N < M \leq 30000$
 -->
<SPAN CLASS="MATH">0 <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \leq$"> <I>N</I> &lt; <I>M</I> <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \leq$"> 30000</SPAN>, both provided by the input
data. Consider also that each constructor have at least one parameter
and at most 5 parameters.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
<B>The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</B>

<P>

<P><P>
<BR>

<P>
The input consists in the following lines:

<P>

<UL>
<LI>the first line contains <SPAN CLASS="MATH"><I>N</I></SPAN> and <SPAN CLASS="MATH"><I>M</I></SPAN>, in this order and separated
  by a single space;
</LI>
<LI>the second line contains a single integer <!-- MATH
 $n\ (1\leq n)$
 -->
<SPAN CLASS="MATH"><I>n</I>&nbsp;(1 <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \leq$"> <I>n</I>)</SPAN> that
  represents the number of elements of <SPAN CLASS="MATH"><I>B</I></SPAN>;
</LI>
<LI>the next line contains a single integer <!-- MATH
 $m\ (0\leq m)$
 -->
<SPAN CLASS="MATH"><I>m</I>&nbsp;(0 <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \leq$"> <I>m</I>)</SPAN> that is the number of
  constructors;
</LI>
<LI>the following <SPAN CLASS="MATH"><I>m</I></SPAN> lines introduce the arity of the <SPAN CLASS="MATH"><I>m</I></SPAN>
  constructors. Thus, each line contains a single integer;
</LI>
<LI>the next <SPAN CLASS="MATH"><I>n</I></SPAN> lines define the function <SPAN CLASS="MATH"><I>h</I><SUB>B</SUB></SPAN>. The first of these
  lines contains an integer <!-- MATH
 $x\ (= h_B(a))$
 -->
<SPAN CLASS="MATH"><I>x</I>&nbsp;(= <I>h</I><SUB>B</SUB>(<I>a</I>))</SPAN> related to the first basic
  element <SPAN CLASS="MATH"><I>a</I></SPAN> (remember, <!-- MATH
 $N\leq x \leq M$
 -->
<SPAN CLASS="MATH"><I>N</I> <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \leq$"> <I>x</I> <IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/961img1.png" 
 ALT="$ \leq$"> <I>M</I></SPAN>). And so on;
</LI>
<LI>the last <SPAN CLASS="MATH"><I>m</I></SPAN> lines define <SPAN CLASS="MATH"><I>h</I><SUB>K</SUB></SPAN>. Each line is then the
  description of a function that respects the grammar exposed above.
  
</LI>
</UL>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
<B>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The output is organized following one of these four situations:

<P>
<DL>
<DT><STRONG>Case <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> is regular:</STRONG></DT>
<DD>a single line with the word
  <TT>REGULAR</TT>.
</DD>
<DT><STRONG>Case <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> is incomplete:</STRONG></DT>
<DD>a single line with the word
  <TT>INCOMPLETE</TT>, a single space followed by a integer that is
  the smallest value that cause the incompleteness of <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN>.
</DD>
<DT><STRONG>Case <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> is ambiguous:</STRONG></DT>
<DD>a single line with the word
  <TT>AMBIGUOUS</TT>, a single space followed by a integer that is the
  smallest value that turns <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> ambiguous.
</DD>
<DT><STRONG>Case <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> is both incomplete and ambiguous:</STRONG></DT>
<DD>the output is,
  in this case, two lines long. The first line reports the
  incompleteness along the lines of the second case. The second line
  reports the ambiguity of <SPAN CLASS="MATH">(<I>T</I>, <I>h</I>)</SPAN> in the same way as the third case.
</DD>
</DL>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
0 30000
1
1
1
0
( x1 + 1 )

0 30000
1
1
1
1
( x1 + 1 )

0 30000
1
2
1
2
1
( x1 + 1 )
( x1 + x2 )
</PRE>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
REGULAR

INCOMPLETE 0

INCOMPLETE 0
AMBIGUOUS 2
</PRE>

<P>
<BR><HR>
<ADDRESS>
MIUP'2006
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
962||||||false||||||
<html>
<head>
<title>TaxicabNumbers</title>
<meta NAME="description" CONTENT="TaxicabNumbers">
<meta NAME="keywords" CONTENT="TaxicabNumbers">

<meta NAME="resource-type" CONTENT="document">
<meta NAME="distribution" CONTENT="global">

<meta NAME="Generator" CONTENT="jLaTeX2HTML v2002-2-1 JA patch-2.0">
<meta HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<link REL="STYLESHEET" HREF="TaxicabNumbers.css">

</head>

<body >

<p>
<div ALIGN="CENTER">
<font SIZE="+2">T<small>AXICAB NUMBERS</small></font></div>

<p>

<p><p>
<br>

<p>

<h1><a NAME="SECTION00010000000000000000">
Problem</a>

</h1>

<p>
The famous mathematician Hardy relates the following episode with the
(now also famous) Indian mathematician Ramanujan:

<p>
<em> I remember once going to see him when he was ill at Putney. I had
 ridden in taxi cab number 1729 and remarked that the number seemed to
 me rather a dull one, and that I hoped it was not an unfavorable
 omen. "No," he replied, "it is a very interesting number; it is the
 smallest number expressible as the sum of two positive cubes in two different
 ways." </em>

<p>
Your objective is to print <em>cab numbers</em>
in a given range, [<img
 WIDTH="21" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$n1$">; <img
 WIDTH="21" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$n1$">+<img
 WIDTH="19" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$rg$">], 
specified by its lower limit, <img
 WIDTH="21" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$n1$">, and the size of
the interval, <img
 WIDTH="19" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$rg$">. A number is a <em>cab number</em> if it can be
expressed as the sum of two positive cubes, in at least two different
ways. 


<p>

<h1><a NAME="SECTION00020000000000000000">

Input</a>
</h1>
Input contains several test cases. For each test case, you are given two numbers in two rows, 
the lower limit <img
 WIDTH="21" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$n1$"> and the range we
are interested in, <img
 WIDTH="19" HEIGHT="29" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/962img1.png" 
 ALT="$rg$">. The lower limit is between 1 and 1000000000 (1E+9).
The range is between 1 and 100000. EOF indicates the end of the input.

<p>

<h1><a NAME="SECTION00030000000000000000">
Output</a>
</h1>

For each test case, you should output a list of <em>cab numbers</em>, 
in the specified range. The numbers
should be separated by newlines. If there is
no cab number in the range, 
you should output one single line with the word <em>None</em>.


<p>

<h1><a NAME="SECTION00040000000000000000">
Sample Input</a>
</h1>

<p>
<pre>
1000
20000
</pre>

<p>

<h1><a NAME="SECTION00050000000000000000">
Sample Output</a>

</h1>

<p>
<pre>
1729
4104
13832
20683
</pre>

<p>
</body>
</html>
</td>

</tr>
</table>
</center>
</body>
</html>

______________________________________________________
963||||||false||||||
<html>
<head>
<title>SpellingCorrector</title>
<meta NAME="description" CONTENT="SpellingCorrector">
<meta NAME="keywords" CONTENT="SpellingCorrector">

<meta NAME="resource-type" CONTENT="document">
<meta NAME="distribution" CONTENT="global">

<meta NAME="Generator" CONTENT="jLaTeX2HTML v2002-2-1 JA patch-2.0">
<meta HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<link REL="STYLESHEET" HREF="SpellingCorrector.css">

</head>

<body >

<p>
<div ALIGN="CENTER">
<font SIZE="+2">S<small>PELLING </small>C<small>ORRECTOR</small></font></div>

<p>

<p><p>
<br>

<p>

<h1><a NAME="SECTION00010000000000000000">
Problem</a>
</h1>
We want to develop an automatic spelling corrector.
The spelling corrector should detect words that are not present
in its dictionary, and replace them with the nearest one.

<p>
The distance between an input word and a dictionary word is computed taking
into account deletions, insertions and substitutions of characters: 
an inserted or deleted character is penalized with 3 points,
a character substitution is penalized with 5 points, while matches
are not penalized.

<p>
Each word can have from 1 to 9 characters. Only the lowercase characters 
from 'a' to 'z' are allowed. 


<p>
If multiple words in the dictionary have the same distance to the input
word, they should be ranked in lexicographic order and the first one
should be selected.

<p>

<h1><a NAME="SECTION00020000000000000000">
Input</a>
</h1>
The first line in the input contains an integer <img
 WIDTH="13" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/963img1.png" 
 ALT="$n$">
specifying the number of words in the dictionary.
The following <img
 WIDTH="13" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/963img1.png" 
 ALT="$n$"> lines contain the dictionary:
one word per line. The dictionary is sorted 
in lexicographic order.

<p>
The dictionary is followed by a line containing <img
 WIDTH="17" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/963img1.png" 
 ALT="$m$">, the number of words 
of text.
The text consists of lines of 10 words separated by white space, except the last
one that can have less words.

<p>

<h1><a NAME="SECTION00030000000000000000">
Output</a>
</h1>
The output consists of the corrected text:
<img
 WIDTH="17" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/963img1.png" 
 ALT="$m$"> words, presented in lines with 10 words, 
except the last one that can be shorter.

<p>

<h1><a NAME="SECTION00040000000000000000">
Sample Input 1</a>
</h1>

<p>
<pre>

5
ate
carrot
rabbit
the
white 
6
the white rabit ate ate carott
</pre>

<p>

<h1><a NAME="SECTION00050000000000000000">
Sample Output 1</a>
</h1>

<p>
<pre>
the white rabbit ate ate carrot
</pre>

<p>

<h1><a NAME="SECTION00060000000000000000">
Sample Input 2</a>
</h1>

<p>
<pre>
20
a
abbey
adapted
ago
almost
but
clumsy
had
he
joined
living
manuel
monk
not
of
that
the
to
way
year
22
the clumsy momk manuel had joined the abey almost a 
year ago but he had not adapted to that way 
of leaving
</pre>

<p>

<h1><a NAME="SECTION00070000000000000000">
Sample Output 2</a>
</h1>

<p>
<pre>
the clumsy monk manuel had joined the abbey almost a 
year ago but he had not adapted to that way 
of living
</pre>

<p>
</body>
</html>
</td>
</tr>
</table>
</center>
</body>
</html>

______________________________________________________
964||||||false||||||
<html>
<head>
<title>CustomLanguage</title>
<meta NAME="description" CONTENT="CustomLanguage">
<meta NAME="keywords" CONTENT="CustomLanguage">

<meta NAME="resource-type" CONTENT="document">
<meta NAME="distribution" CONTENT="global">

<meta NAME="Generator" CONTENT="jLaTeX2HTML v2002-2-1 JA patch-2.0">
<meta HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<link REL="STYLESHEET" HREF="CustomLanguage.css">

</head>

<body >

<p>
<div ALIGN="CENTER">
<font SIZE="+2">C<small>USTOM </small>L<small>ANGUAGE</small></font></div>

<p>

<p><p>
<br>

<p>

<h1><a NAME="SECTION00010000000000000000">
Problem</a>
</h1>
We would like to use a custom language in the TIUP contest for
writing our solutions, but we are not allowed to. However, as we like
it so much, we want you to develop an interpreter for it! Our language
is very simple, it works over a stack of integers and contains the
following set of instructions:
<dl>
<dt></dt>
<dd><code>PUSH v</code> : puts value <code>v</code> on the top of the stack;

</dd>
<dt></dt>
<dd><code>POP x</code> : removes the value at the top of the stack and
  puts it on variable <code>x</code>;
</dd>
<dt></dt>
<dd><code>DUP</code> : duplicates the top of the stack, i.e, repeats the value at the top by pushing it again;
</dd>
<dt></dt>
<dd><code>ADD</code> : adds the two values at the top of the stack;

</dd>
<dt></dt>
<dd><code>SUB</code> : subtracts the two values at the top of the stack;
</dd>
<dt></dt>
<dd><code>MUL</code> : multiplies the two values at the top of the stack;
</dd>
<dt></dt>
<dd><code>DIV</code> : divides the two values at the top of the stack;
</dd>
<dt></dt>

<dd><code>READ</code> : reads a value from input and puts it on the top of
  the stack;
</dd>
<dt></dt>
<dd><code>WRITE</code> : writes the value at the top of the stack on output followed by a <code>\n</code>;
</dd>
<dt></dt>
<dd><code>JUMP v</code> : jumps to instruction <code>v</code>;

</dd>
<dt></dt>
<dd><code>JUMPPOS v</code> : jumps to instruction <code>v</code>, if the top of the
  stack is greater than 0;
</dd>
<dt></dt>
<dd><code>JUMPZERO v</code> : jumps to instruction <code>v</code>, if the top of the
  stack is 0;
</dd>
</dl>
A program is a list of instructions, one per line. An instruction is identified by the line number

<code>i</code>, where <!-- MATH
 $1\leq\verb+i+\leq|L|$
 -->
<img
 WIDTH="81" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/964img1.png" 
 ALT="$1\leq\verb+i+\leq\vert L\vert$">.
Whenever we reach an instruction not defined, the program ends. For noncommutative
operations, the top of the stack is the first argument. A variable
<code>s</code> is a string in <!-- MATH
 $\{\verb+a+,...,\verb+z+\}.\{1,...,9,\verb+a+,...,\verb+z+\}^*$
 -->
<img
 WIDTH="185" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/964img1.png" 
 ALT="$\{\verb+a+,...,\verb+z+\}.\{1,...,9,\verb+a+,...,\verb+z+\}^*$"> such
that <!-- MATH
 $|\verb+s+|\leq100$
 -->
<img
 WIDTH="65" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/964img1.png" 
 ALT="$\vert\verb+s+\vert\leq100$">. In the above, <img
 WIDTH="11" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/964img1.png" 
 ALT="$v$"> can be a constant or a variable. All arithmetic operations remove their
arguments from the top of the stack and put their output
on the top of the stack. Finally, when any instruction reads the top
of the stack it removes it.

<p>

<h1><a NAME="SECTION00020000000000000000">

Input</a>
</h1>
Several programs, each consisting of a code section and a data section.<br>
A code section consists of a list of instructions, one per line, and is terminated by a line with the symbol
<code>#</code>. This is followed by the a data section consisting of a set of integers, one per line, which are the
inputs for the program. A data section is also terminated by a line with the symbol <code>#</code>.<br>
Each program has one code section and one data section; a data section can be empty.


<p>

<h1><a NAME="SECTION00030000000000000000">
Output</a>
</h1>
For each program the output obtained by the program for the given input (if any) or
<code>ABORTED</code> if something wrong happens. The output of each program should be terminiated by a line with the symbol
<code>#</code>.


<p>

<h1><a NAME="SECTION00040000000000000000">
Sample Input</a>
</h1>

<p>
<pre>
READ
POP num
PUSH 2
POP x
PUSH num
PUSH 2
SUB
JUMPPOS 31
PUSH num
PUSH x
SUB
DUP
JUMPZERO 28
JUMPPOS 28
PUSH x
PUSH num
DIV
PUSH x
MUL
PUSH num
SUB
JUMPZERO 31
PUSH x
PUSH 1
ADD
POP x
JUMP 9
PUSH 1
WRITE
JUMP 33
PUSH 0
WRITE
#
7 
#
READ
READ
DIV
WRITE
JUMP 1
#
5
25
25
5
0
1
7
8
#
PUSH 0
POP m
PUSH 10
DUP
PUSH m
ADD
DUP
POP m
WRITE
POP temp
PUSH 1
PUSH temp
SUB
DUP
JUMPPOS 4
#
#
PUSH undefined
WRITE
#
#
READ
POP defined
PUSH defined
WRITE
#
-14
#
</pre>

<p>

<h1><a NAME="SECTION00050000000000000000">
Sample Output</a>

</h1>

<p>
<pre>
1
#
ABORTED
#
10
19
27
34
40
45
49
52
54
55
#
ABORTED
#
-14
#
</pre>

<p>
</body>
</html>
</td>
</tr>
</table>
</center>
</body>
</html>

______________________________________________________
965||||||false||||||
<html>
<head>
<title>PoliceRoadBlocks</title>
<meta NAME="description" CONTENT="PoliceRoadBlocks">
<meta NAME="keywords" CONTENT="PoliceRoadBlocks">

<meta NAME="resource-type" CONTENT="document">
<meta NAME="distribution" CONTENT="global">

<meta NAME="Generator" CONTENT="jLaTeX2HTML v2002-2-1 JA patch-2.0">
<meta HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<link REL="STYLESHEET" HREF="PoliceRoadBlocks.css">

</head>

<body >

<p>
<div ALIGN="CENTER">
<font SIZE="+2">P<small>OLICE </small>R<small>OAD </small>B<small>LOCKS</small></font></div>

<p>

<p><p>
<br>

<p>

<h1><a NAME="SECTION00010000000000000000">
Problem</a>
</h1>

<p>
Consider that a group of criminals was able to rob a bank 
and got away with a considerable amount of money. However, 
they were reckless and the security cameras were able to 
film them. Hence, the police was able to identify everybody 
in the group.

<p>
Suppose that the police has a map defined by <img
 WIDTH="46" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$(L, E)$">, 
where <img
 WIDTH="14" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$L$"> denotes the set of locations (with <img
 WIDTH="67" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$\vert L\vert \leq 10^6$">) 
and <img
 WIDTH="16" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E$"> denotes the set of roads connecting those locations 
(with <!-- MATH
 $|L| - 1 \leq |E| \leq 10^6$
 -->

<img
 WIDTH="137" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$\vert L\vert - 1 \leq \vert E\vert \leq 10^6$">). The map is connected, i.e., 
for all pairs of locations <img
 WIDTH="40" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$(u,v)$"> there is always a connecting 
path in the map. 
Let <!-- MATH
 $f: L \times L \rightarrow \mathbb{N}$
 -->
<img
 WIDTH="103" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$f: L \times L \rightarrow \mathbb{N}$"> be a function that 
defines for every road <img
 WIDTH="72" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$(u,v) \in E$"> how many police officers 
are necessary to make a police road block at road <img
 WIDTH="40" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$(u,v)$">. 
Given a set of roads <img
 WIDTH="21" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E_c$">, such that <!-- MATH
 $E_c \subseteq E$
 -->
<img
 WIDTH="55" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E_c \subseteq E$">, the 
value of <img
 WIDTH="43" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$f(E_c)$"> denotes the total number of police officers 
necessary to make road blocks in every road <img
 WIDTH="78" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$(u,v) \in E_c$">.

<p>
Since the police know the criminals, they were able to identify
a set <img
 WIDTH="14" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$S$"> (with <img
 WIDTH="46" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$S \subset L$">) of highly suspicious places where 
the criminals are probably hiding.
The purpose of the criminals is to be able to get into a border
location in order to get out of the country. The set <img
 WIDTH="15" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$F$"> defines
the set of border locations such that <img
 WIDTH="48" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$F \subset L$"> and 

<!-- MATH
 $S \cap F = \emptyset$
 -->
<img
 WIDTH="73" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$S \cap F = \emptyset$">. 
Therefore, the police needs to make road blocks in a set of 
roads <img
 WIDTH="21" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E_c$"> with <!-- MATH
 $E_c \subseteq E$
 -->
<img
 WIDTH="55" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E_c \subseteq E$"> in order to ensure that 
the criminals will not be able to move from the suspected locations
to the border without using one of the roads with police 
road blocks.

<p>
Your program must determine which is the minimum
number of police officers necessary to control a set of roads
<img
 WIDTH="21" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E_c$"> such that the criminals will not be able to run from
the suspected locations to the border. 

<p>

<h1><a NAME="SECTION00020000000000000000">
Input</a>
</h1>

The input is as follows:

<ul>
<li>One line with the number of locations <img
 WIDTH="18" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$N$"> and the number of
  roads <img
 WIDTH="20" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$M$"> in the map.
</li>
<li>A list of <img
 WIDTH="20" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$M$"> lines where in each line there are three 
  integers. The first two are two locations <img
 WIDTH="12" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$u$"> and <img
 WIDTH="11" HEIGHT="13" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$v$"> connected
  in the map and the third is the number <img
 WIDTH="49" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$f(u,v)$"> of police
  officers necessary to establish the police road block in that
  road.

</li>
<li>One line with a number <img
 WIDTH="14" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$S$"> of suspected locations
</li>
<li>One line with <img
 WIDTH="14" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$S$"> integers representing the suspected locations
</li>
<li>One line with a number <img
 WIDTH="15" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$F$"> of border locations
</li>
<li>One line with <img
 WIDTH="15" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$F$"> integers representing the border locations
</li>

</ul>

<p>

<h1><a NAME="SECTION00030000000000000000">
Output</a>
</h1>
The output must be the minimum number of police officers necessary
to establish road blocks in a set of roads <img
 WIDTH="21" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/965img1.png" 
 ALT="$E_c$"> such that the
criminals can not move from the suspected locations to the border
without going through a road with a police road block.

<p>

<h1><a NAME="SECTION00040000000000000000">
Sample Input</a>
</h1>

<p>
<pre>
10 13 
1 2 2
1 3 2
2 4 4
2 5 3
3 5 5
3 6 4
4 5 3
4 7 4
5 7 6
6 8 6
7 8 2
7 9 10
8 10 10
2
2 3
2
9 10
</pre>

<p>

<h1><a NAME="SECTION00050000000000000000">
Sample Output</a>
</h1>

<p>
<pre>
14
</pre>

<p>
</body>
</html>
</td>
</tr>
</table>
</center>
</body>
</html>

______________________________________________________
966||||||false||||||
<html>
<head>
<title>LostInheritances</title>
<meta NAME="description" CONTENT="LostInheritances">
<meta NAME="keywords" CONTENT="LostInheritances">

<meta NAME="resource-type" CONTENT="document">
<meta NAME="distribution" CONTENT="global">

<meta NAME="Generator" CONTENT="jLaTeX2HTML v2002-2-1 JA patch-2.0">
<meta HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<link REL="STYLESHEET" HREF="LostInheritances.css">

</head>

<body >

<p>
<div ALIGN="CENTER">
<font SIZE="+2">L<small>OST INHERITANCES</small></font></div>

<p>

<p><p>
<br>

<p>

<h1><a NAME="SECTION00010000000000000000">
Problem</a>
</h1>

<p>
You were put in charge of the tax collection bureau of a small
country.
One of the major sources of income for your country's government is
the money received by the state when persons without heirs die.
However, you suspect some of the tax officers have been embezzling
part of this money.
Since embezzlement is a very serious offence, you do not wish to pursue 
the matter without further proof.

<p>
As such, you decide to write a computer program to calculate how much
should have been received during the recent past, in order to compare
it with what was actually collected.


<p>
The inheritance laws work as follows:

<p>

<ul>
<li>Should the deceased have a living spouse and descendants, half of
  his fortune goes to the spouse and the other half goes to their
  descendants.
</li>
<li>Should there be no living spouse, the money is shared among the
  descendants. Should there be no living descendants, all the money
  goes to the living spouse. Should there be no living spouse nor
  descendants (nor descendents' spouses), the money reverts to the
  state.
</li>
<li>The money is divided among living descendents by assigning each
  branch with living descendents (or descendents' spouses) an equal
  share. 
  Should the closest descendent still be alive the money goes to
  him/her, otherwise it is shared as if he/she had just died.
</li>
<li>The state only considers a marriage official when a children
  is born. Marriages are monogamous and there are no divorces.
</li>
<li>All divisions are made using integer arithmetic. Remainders are
  lost.
</li>
</ul>

<p>
Consider the following example (input 1):
1 and 2 had three children: 3, 4 and 5. 
4 had a child, 7, but the other parent is unknown.
5 married 6 and had a child: 8.

<p>
Later, 1 died and all his money was shared among 2 (1/2), 3, 4 and 5
(1/6 each).
Then 5 died leaving his money to be equally divided among 6 and 8.
Afterwards, 4 passed away, leaving 7 as the sole heir.
At the dead of 3, the state collects his fortune.
Later, 2 dies, leaving her money to 7 (1/2), 6 (1/4) and 8 (1/4).
When 6 dies, all the money goes to 8.
7 and 8 have no heirs, at their death, their fortunes will go to the
state.

<p>
Each person manages to save a certain amount of money each year. 
When they die, their fortune is comprised of this amount, multiplied by
their age, along with the money they have inherited.

<p>

<h1><a NAME="SECTION00020000000000000000">
Input</a>
</h1>
Your program will receive 2 + N lines.
The first line contains a single integer, with a date (a year).
The second contains the number of citizens (N) which will follow.
Each of the N following lines will contain 5 integers, separated by
spaces, describing a citizen, who will be identified by an
integer. 
The first citizen will be number 1, the last number N.

<p>
Each citizen line has his birth year, death year, father identifier,
mother identifier (1 to N) and annual savings, in this order.
Citizens whose parents are unknown will have a zero in the mother or
father fields.
To prevent ambiguity, there will only be one death per year.

<p>

<h1><a NAME="SECTION00030000000000000000">
Output</a>
</h1>

<p>
The output consists of 2 + M lines.
The first line contains an integer, representing the total amount of
money collected by the state from the beginning of time up to the
provided date (inclusive).
The second line will indicate the number of living citizens after that
date (M).
Each of the following M lines will show two integers separated by a
space: the citizen identifier, the amount of money he possesses (at
the date).
The M lines are sorted in ascending order by citizen identifier.

<p>

<h1><a NAME="SECTION00040000000000000000">
Sample Input 1</a>
</h1>

<p>
<pre>
2100
8
1900 1950 0 0 1
1910 2000 0 0 2
1940 1992 1 2 10
1940 1990 1 2 2
1944 1981 1 2 1
1946 2020 0 0 0
1962 2030 4 0 5
1980 2040 5 6 5

</pre>

<p>

<h1><a NAME="SECTION00050000000000000000">
Sample Output 1</a>
</h1>

<p>
<pre>
1524
0
</pre>

<p>

<h1><a NAME="SECTION00060000000000000000">

Sample Input 2</a>
</h1>

<p>
<pre>
2040
4
1950 2010 0 0 1000
1970 2040 1 0 500
1990 2030 2 0 1500
2020 2050 3 0 2000
</pre>

<p>

<h1><a NAME="SECTION00070000000000000000">
Sample Output 2</a>
</h1>

<p>

<pre>
0
1
4 195000
</pre>

<p>
</body>
</html>
</td>
</tr>
</table>
</center>
</body>
</html>

______________________________________________________
967||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="A_files/filelist.xml">
<title>A - CIRCULAR </title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>JosÃ© Daniel Dias Pacheco</o:Author>
  <o:LastAuthor>JosÃ© Daniel Dias Pacheco</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2006-10-03T13:14:00Z</o:Created>
  <o:LastSaved>2006-10-03T13:15:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>194</o:Words>
  <o:Characters>1112</o:Characters>
  <o:Company>DI-FCT/UNL</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1304</o:CharactersWithSpaces>
  <o:Version>10.3311</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:" ;
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:26.0pt;text-transform:uppercase'>A - Circular <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Problem<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>A circular prime is a prime
number that remains prime as each leftmost digit (most significant digit), in
turn, is moved to the right hand side. For instance, the number 19937 is a
circular prime, since all numbers in the sequence 19937, 99371, 93719, 37199
and 71993 are prime numbers. Your objective is to write a program that, given a
range, computes the number of circular primes in that range.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Input<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The input consists of a sequence
of pairs of integers <span class=SpellE>i</span> and j, with one pair of
integers per input line. All integers will be less than 1,000,000 and greater
or equal to 100. You can assume that in any pair <span class=SpellE>i</span> <span
class=GramE>is</span> lesser or equal than j. You should process all pairs of
integers, and for each such pair, count the number of circular primes between <span
class=SpellE>i</span> and j, including <span class=SpellE>i</span> and j. Input
is terminated by a line just with the number -1.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>For each pair of input integers,
defining a range, the output should be: Â“<i style='mso-bidi-font-style:normal'>No
Circular Primes.</i>Â” (<span class=GramE>if</span> there are no circular primes
in the range), Â“<i style='mso-bidi-font-style:normal'>1 Circular Prime.</i>Â” (<span
class=GramE>if</span> only one circular prime exists in the range), or Â“<i
style='mso-bidi-font-style:normal'>n Circular Primes.</i>Â” (<span class=GramE>if</span>
there are <i style='mso-bidi-font-style:normal'>n</i> circular primes in the
range, and <i style='mso-bidi-font-style:normal'>n</i> is greater than one).</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Sample Input<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>1000
1100<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>100
120<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>100
1000<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>-1<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Sample Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>No
Circular Primes.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>1 Circular Prime.</span></span><span
style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>12 Circular Primes.</span></span><span
style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
968||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="B_files/filelist.xml">
<title>B - CONSTELLATIONS</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>JosÃ© Daniel Dias Pacheco</o:Author>
  <o:LastAuthor>JosÃ© Daniel Dias Pacheco</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2006-10-03T13:15:00Z</o:Created>
  <o:LastSaved>2006-10-03T13:15:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>280</o:Words>
  <o:Characters>1600</o:Characters>
  <o:Company>DI-FCT/UNL</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1877</o:CharactersWithSpaces>
  <o:Version>10.3311</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:" ;
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:26.0pt;mso-bidi-font-size:12.0pt;text-transform:
uppercase'>B - Constellations<o:p></o:p></span></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Problem <o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The Astronomers of the <span
class=SpellE>ZiggyZig</span> Planet have an obsession: they constantly observe
the sky to find out new star constellations. Star constellations are based on
the <span class=SpellE>starlines</span> of the Force. For centuries, they have
engraved the drawings of the constellations in the dome of their most sacred
shrine and use them to predict the future. Astronomers register the <span
class=SpellE>starlines</span> of the Force between stars whenever they are
detected by an ancient device called the <span class=SpellE>Forssometer</span>.</p>

<p class=MsoNormal style='text-align:justify'>A hard problem that astronomers
have always faced is that <span class=SpellE>starlines</span> of the Force
sometimes change from time to time, and this makes it difficult to keep the
constellation map always up to date. Anyway, they always have <span
class=GramE>manage</span> to make the job perfectly, in particular, the <b
style='mso-bidi-font-weight:normal'>number of different constellations</b>
observed at each time must be known at all times.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>There is an ancient law that says
that whenever a <span class=SpellE>starline</span> of the Force exists between
two stars then these <span class=GramE>two<span style='mso-spacerun:yes'>Â 
</span>starts</span> belong to the same constellation. </p>

<p class=MsoNormal style='text-align:justify'>Your job is to write a program
that computes the number of different constellations for the Â”Daily
Constellation ReportÂ” which is issued every morning based on last nightÂ’s
readings. </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Input <o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input of your program is a
sequence of input text lines. The first input line contains a positive integer
N indicating the number of <span class=SpellE>starlines</span> to process.
After that the input contains N input line, each describing a <span
class=SpellE>starline</span>. Each <span class=SpellE>starline</span> is
specified by four integers x<sub>1</sub> y<sub>1</sub> x<sub>2</sub> y<sub>2</sub>
indicating the endpoints (x<sub>1</sub><span class=GramE>,y<sub>1</sub></span>)
and (x<sub>2</sub>,y<sub>2</sub>) of the <span class=SpellE>starline</span>.
The coordinate system ranges from 0 to 9999 (including the 0 and 9999). </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Output <o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The output of your program
consists of a single line containing the number of constellations detected in
the input.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Sample Input<o:p></o:p></b></p>

<p class=MsoNormal><span style='font-family:Courier'>10 <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>0 <span class=SpellE>0</span>
<span class=SpellE>0</span> 10 <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>0 10 <span class=SpellE>10</span>
<span class=SpellE>10</span> <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>10 <span class=SpellE>10</span>
<span class=SpellE>10</span> 0 <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>10 0 <span class=SpellE>0</span>
<span class=SpellE>0</span> <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>1 <span class=SpellE>1</span>
2 1 <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>2 1 2 <span class=SpellE>2</span>
<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>2 <span class=SpellE>2</span>
1 2 <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>1 2 1 <span class=SpellE>1</span>
<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>1 <span class=SpellE>1</span>
2 <span class=SpellE>2</span> <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>2 <span class=SpellE>2</span>
3 <span class=SpellE>3</span><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Sample Output<o:p></o:p></b></p>

<p class=MsoNormal><span style='font-family:Courier'>2<o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
969||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="C_files/filelist.xml">
<title>C - ALIENALGEGRA</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>JosÃ© Daniel Dias Pacheco</o:Author>
  <o:LastAuthor>JosÃ© Daniel Dias Pacheco</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2006-10-03T13:16:00Z</o:Created>
  <o:LastSaved>2006-10-03T13:16:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>393</o:Words>
  <o:Characters>2244</o:Characters>
  <o:Company>DI-FCT/UNL</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2632</o:CharactersWithSpaces>
  <o:Version>10.3311</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<!--p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:26.0pt;mso-bidi-font-size:12.0pt;text-transform:
uppercase'>C - AlienAlgegra<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Problem<o:p></o:p></b></p-->

<p class=MsoNormal style='text-align:justify'>In the planet SillyMath, the
algebraist Bongo invented the Bongo Algebra. The Bongo Algebra is a calculation
system for a language that only contains three operators (<b style='mso-bidi-font-weight:
normal'>k</b><span class=GramE>,<b style='mso-bidi-font-weight:normal'>i</b>,<b
style='mso-bidi-font-weight:normal'>t</b></span>) and a constant (<b
style='mso-bidi-font-weight:normal'>0</b>). The language of Bongo expressions
is defined as follows:<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>1. <b style='mso-bidi-font-weight:
normal'>0</b> is a Bongo Expression.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>2. If <i style='mso-bidi-font-style:
normal'>e1</i> and <i style='mso-bidi-font-style:normal'>e2</i> are Bongo
expressions, then <span class=GramE><b style='mso-bidi-font-weight:normal'>i(</b></span><i
style='mso-bidi-font-style:normal'>e1</i>), <b style='mso-bidi-font-weight:
normal'>k</b>(<i style='mso-bidi-font-style:normal'>e1</i>,<i style='mso-bidi-font-style:
normal'>e2</i>) and <b style='mso-bidi-font-weight:normal'>t</b>(<i
style='mso-bidi-font-style:normal'>e1</i>,<i style='mso-bidi-font-style:normal'>e2</i>)
are also Bongo expressions.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>3. There are no more Bongo
expressions, except those defined by 1. <span class=GramE>and</span> 2. <span
class=GramE>above</span>.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The motivation for Bongo Algebra
is connected to Bimbo Theory; unfortunately, we cannot explain the connections
in detail for lack of space. Anyway, the purpose of Bongo Algebra is to verify
if equations between Bongo expressions are valid. This has been an open problem
for quite a while, since Tango has raised it at the Interplanetary Algebra
Congress for the first time. What has bugged researchers for so long is that
nothing (really!) is known about the operators <b style='mso-bidi-font-weight:
normal'>k</b>, <b style='mso-bidi-font-weight:normal'>i</b><span class=GramE>,<span
style='mso-spacerun:yes'>Â  </span>and</span> <b style='mso-bidi-font-weight:
normal'>t</b>, except that they obey the two following fundamental laws:<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>(Law1) <span style='mso-tab-count:
3'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><b style='mso-bidi-font-weight:
normal'>i<span class=GramE>( <i style='mso-bidi-font-style:normal'><span
style='font-weight:normal'>x</span></i></span></b><i style='mso-bidi-font-style:
normal'> </i>) = <i style='mso-bidi-font-style:normal'>x</i> <span
style='mso-tab-count:2'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span
style='mso-spacerun:yes'>Â </span><span style='mso-tab-count:2'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>for
any <i style='mso-bidi-font-style:normal'>x</i>.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>(Law2)<span style='mso-tab-count:
4'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><b style='mso-bidi-font-weight:
normal'>t</b><span class=GramE>( <i style='mso-bidi-font-style:normal'>y</i></span>,<span
style='mso-spacerun:yes'>Â  </span><b style='mso-bidi-font-weight:normal'>t</b>(
<i style='mso-bidi-font-style:normal'>x</i>, 0 ) )<span
style='mso-spacerun:yes'>Â  </span>= <b style='mso-bidi-font-weight:normal'>k</b>(
<i style='mso-bidi-font-style:normal'>x</i>, <i style='mso-bidi-font-style:
normal'>y </i>)<span style='mso-spacerun:yes'>Â  </span><span style='mso-tab-count:
2'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>for any <i style='mso-bidi-font-style:normal'>x</i>,<i
style='mso-bidi-font-style:normal'>y</i>.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>These laws have been named the
Â“Bongo LawsÂ” even if other researchers have been claiming credit for similar
(unfortunately incorrect) solutions. The interest of these laws is clear: using
them, one can easily determine if two Bongo expressions are equal. For example,
we can check that the equation<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>i</b>( <b style='mso-bidi-font-weight:normal'>i</b>( <b
style='mso-bidi-font-weight:normal'>k</b>( <b style='mso-bidi-font-weight:normal'>t</b>(
0, 0 ), <b style='mso-bidi-font-weight:normal'>i</b>( 0 ) ) ) = <b
style='mso-bidi-font-weight:normal'>t</b>( 0, <b style='mso-bidi-font-weight:
normal'>t</b>( <b style='mso-bidi-font-weight:normal'>t</b>( 0, 0 ), 0 ) )<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE>is</span> valid
in the Bongo Algebra. Indeed, we have<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>i</b>( <b style='mso-bidi-font-weight:normal'>i</b>( <b
style='mso-bidi-font-weight:normal'>k</b>( <b style='mso-bidi-font-weight:normal'>t</b>(
0, 0 ), <b style='mso-bidi-font-weight:normal'>i</b>( 0 ) ) ) = <b
style='mso-bidi-font-weight:normal'>k</b>( <b style='mso-bidi-font-weight:normal'>t</b>(
0, 0 ), <b style='mso-bidi-font-weight:normal'>i</b>( 0 ) ) <span
style='mso-tab-count:3'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>applying Law1, twice<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>k</b>( <b style='mso-bidi-font-weight:normal'>t</b>( 0, 0 ), <b
style='mso-bidi-font-weight:normal'>i</b>( 0 ) ) = <b style='mso-bidi-font-weight:
normal'>k</b>( <b style='mso-bidi-font-weight:normal'>t</b>( 0, 0 ), 0 )<span
style='mso-tab-count:4'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>applying
Law1<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>k</b>( <b style='mso-bidi-font-weight:normal'>t</b>( 0, 0 ), 0 ) = <b
style='mso-bidi-font-weight:normal'>t</b>( 0, <b style='mso-bidi-font-weight:
normal'>t</b>( <b style='mso-bidi-font-weight:normal'>t</b>( 0, 0 ), 0 ) )<span
style='mso-tab-count:4'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>applying
Law2<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Write a program that reads a
sequence of pairs of Bongo expressions and determines whether each pair
consists of expressions that can be proved equal by means of the Bongo Laws.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Input<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The first line contains a
positive integer N, indicating the number of pairs of expressions to process.
The following lines include N*2 Bongo expressions, represented as strings built
using just the characters Â“<span style='font-family:Courier'>t</span>Â”, Â”<span
style='font-family:Courier'>k</span>Â”, Â”<span style='font-family:Courier'>i</span>Â”,
Â”<span style='font-family:Courier'>(</span>Â“, Â”<span style='font-family:Courier'>)</span>Â”,
Â”<span style='font-family:Courier'>,</span>Â”,and Â“<span style='font-family:
Courier'>0</span>Â”. Starting from the first string, each consecutive pair of
strings represents a pair of expressions to be compared.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Output<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>If the first line of the input
contained the number N, then the output must contain exactly N lines, each one
containing either Â“<span style='font-family:Courier'>true</span>Â” or Â“<span
style='font-family:Courier'>false</span>Â”, depending on whether the
corresponding equation in the input is valid or invalid.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Sample Input<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>2<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>t(</span></span><span style='font-family:Courier'>0,t(t(0,0),0))<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>i(</span></span><span style='font-family:Courier'>i(k(t(0,0),i(0))))<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>i(</span></span><span style='font-family:Courier'>t(0,t(0,0)))<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>k(</span></span><span style='font-family:Courier'>0,t(0,0))<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Sample Output<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>true</span></span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE><span
style='font-family:Courier'>false</span></span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Courier'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
970||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="D_files/filelist.xml">
<title>D - PARTICLES</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>JosÃ© Daniel Dias Pacheco</o:Author>
  <o:LastAuthor>JosÃ© Daniel Dias Pacheco</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2006-10-03T13:16:00Z</o:Created>
  <o:LastSaved>2006-10-03T13:16:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>334</o:Words>
  <o:Characters>1908</o:Characters>
  <o:Company>DI-FCT/UNL</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2238</o:CharactersWithSpaces>
  <o:Version>10.3311</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:26.0pt;mso-bidi-font-size:12.0pt;text-transform:
uppercase'>D - Particles<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Problem<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>Experiments conducted in a
particle accelerator study the effects of the collision of high energy
particles. When such particles collide they may disappear, give rise to new
particles and sometimes light. Here, we will be concerned with interactions of
the quarks X, Y and Z. The quarks have different weight, X is the lighter, Z
the heavier. The weight of Y is unknown, but lies between the weight of X and
of Z.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>For example, when a quark X
collides with another <span class=GramE>quark<span style='mso-spacerun:yes'>Â 
</span>X</span>, both get annihilated and a Y quark is produced. We may write
this event with the reaction<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span>X
+ X  ->
Y<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>All possible interactions between
quarks are described by the table:<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:54.9pt;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:191;mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0'>
  <td valign=top style='border:solid windowtext 1.0pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>+<o:p></o:p></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>X<o:p></o:p></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Y <o:p></o:p></p>
  </td>
  <td valign=top style='border:solid windowtext 1.0pt;border-left:none;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Z<o:p></o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>X<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Y<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>X<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Z<o:p></o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:2'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Y<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>X<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Y<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Y<o:p></o:p></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:3;mso-yfti-lastrow:yes'>
  <td valign=top style='border:solid windowtext 1.0pt;border-top:none;
  mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Z<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Z <o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>Y<o:p></o:p></p>
  </td>
  <td valign=top style='border-top:none;border-left:none;border-bottom:solid windowtext 1.0pt;
  border-right:solid windowtext 1.0pt;mso-border-top-alt:solid windowtext .5pt;
  mso-border-left-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal>X<o:p></o:p></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span class=GramE>For example,
X+Z -> Z and Z+Z ->
X.</span><span style='mso-spacerun:yes'>Â  </span>Given a sequence of quarks,
say XXY, we may compute the result of possible interactions, given that only
adjacent particles may interact, and that when that happens, those two
particles get replaced in the sequence by the resulting particle. <span
class=GramE>Notice also that, starting from a sequence of quarks, any
succession of interactions always lead to a single, isolated, final particle.</span>
However, the final particle obtained for a given sequence is not unique in
general, in the sense that a given initial sequence of particles may give rise
to different final particles, depending on the order by which the interactions
take place. For example, starting from the sequence ZYX, we may have ZYX 
-> YX
(by Z+Y 
-> Y) and then YX 
-> X. On the other hand, we also have the reaction ZYX 
-> ZX 
-> Z. <o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Write a program that, given a
sequence of particles, calculates the final particle of higher weight that may
result from the given sequence by possible interactions.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Input<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The first line contains a
positive integer N, indicating the number of sequences of quarks to process.
The subsequent lines include N strings built using just the characters Â“<span
style='font-family:Courier'>X</span>Â”<span class=GramE>, Â”</span><span
style='font-family:Courier'>Y</span>Â”, and Â”<span style='font-family:Courier'>Z</span>Â”.
Such strings do not exceed 100 characters in length.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Output<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>If the first line of the input
contained the number N, then the output must contain exactly N lines, the i<sup>th</sup>
line containing either Â“<span style='font-family:Courier'>X</span>Â” or Â“<span
style='font-family:Courier'>Y</span>Â” <span class=GramE>or<span
style='mso-spacerun:yes'>Â  </span>Â“</span><span style='font-family:Courier'>Z</span>Â”,
denoting to the quark of maximum weight that may be produced from the sequence
in the i<sup>th</sup> input line.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Sample Input<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>1<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>ZYX</span><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>Sample Output<o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'>Z<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
971||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="E_files/filelist.xml">
<title>E - TOWERS</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>JosÃ© Daniel Dias Pacheco</o:Author>
  <o:LastAuthor>JosÃ© Daniel Dias Pacheco</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2006-10-03T13:17:00Z</o:Created>
  <o:LastSaved>2006-10-03T13:17:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>395</o:Words>
  <o:Characters>2254</o:Characters>
  <o:Company>DI-FCT/UNL</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2644</o:CharactersWithSpaces>
  <o:Version>10.3311</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 5 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Times-Bold;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:Times;
	mso-font-charset:77;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:50331648 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:" ;
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:595.0pt 842.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span lang=EN-GB style='font-size:26.0pt;text-transform:uppercase;
mso-ansi-language:EN-GB'>E - Towers<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span lang=EN-GB style='font-size:16.0pt;mso-ansi-language:EN-GB'>Problem<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>The famous Babylonian King <span
class=SpellE>Samsu-Iluna</span> was fascinated by the stars that He could see
on the night sky. He believed that if He could build a tower tall enough He
could touch them and fulfill His destiny as divine ruler of the Babylonians. To
be able to build this tower He created large quarries where they dug and cut
the largest stone blocks they could find. Once the number of stone blocks seemed
large enough to build the tower, He ordered His best engineers to do so, but
they came to the terrible conclusion that not all blocks could stay on top
others.</p>

<p class=MsoNormal style='text-align:justify'>The problem was that, although
all blocks measured the same and all where roughly of cubic form, with six
faces, not all weighted the same, and heavier blocks could not be placed on top
of lighter ones. In addition to that, and due to technological problems, block
faces came in all <span class=GramE>sort</span> of shapes. This fact is
important, because to put one block on top of another, the two touching faces
must have the same shape. After a long study, the engineers were able to
categorize all the existing shapes, but due to the large number of different
shapes and blocks, they werenÂ’t sure how to arrange the blocks in order to
build the tallest tower possible.</p>

<p class=MsoNormal style='text-align:justify'>Aware of this problem the King
promised to give half of His fortune to anyone able to stack the given blocks
to build the tallest possible tower. Your objective is to write a program to
calculate the <b style='mso-bidi-font-weight:normal'>size</b> of such tallest
tower.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Input<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The input file may contain a
sequence of various test cases. The first line of each test case contains a
positive integer <i>N</i><span style='mso-bidi-font-style:italic'> (not larger
than 1000) indicating the number of blocks in the test case. Each of the
following <i>N</i> lines will contain the description of one block. Each block
i</span>s described by a sequence of seven integer numbers: the first gives the
weight of the block (a positive integer), and the following six numbers give
the shapes of each of the block sides, in the following order: front, back,
left, right, top and bottom. Shapes are classified by integers in the range 1
to 1000 (including 1 and 1000), and no two blocks have the same weight. The
input terminates by giving the value -1 for <i>N</i>.<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
file, the output file must contain a line with a single integer, indicating the
number of blocks in the tallest tower that may be built with the blocks in the
corresponding test case.</p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:Courier'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
style='font-size:16.0pt;mso-bidi-font-size:21.0pt;font-family:Times-Bold;
mso-ascii-font-family:Times-Bold;mso-hansi-font-family:Times-Bold;mso-bidi-font-family:
"Times New Roman"'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
style='font-size:16.0pt;mso-bidi-font-size:21.0pt;font-family:Times-Bold;
mso-ascii-font-family:Times-Bold;mso-hansi-font-family:Times-Bold;mso-bidi-font-family:
"Times New Roman"'>Sample Input</span></b><span style='font-size:16.0pt;
mso-bidi-font-size:12.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>3</span><span
style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>1
<span class=SpellE>1</span> 2 <span class=SpellE>2</span> <span class=SpellE>2</span>
1 2</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>2
3 <span class=SpellE>3</span> <span class=SpellE>3</span> <span class=SpellE>3</span>
<span class=SpellE>3</span> <span class=SpellE>3</span></span><span
style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>3
<span class=SpellE>3</span> 2 1 <span class=SpellE>1</span> <span class=SpellE>1</span>
<span class=SpellE>1</span></span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>10</span><span
style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>150
1 2 3 4 5 6</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>100
1 5 10 3 6 5</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>170
6 1 2 3 4 7</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>120
5 7 3 2 1 9</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>160
10 9 8 7 6 5</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>130
1 3 <span class=SpellE>3</span> 5 8 10</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>140
6 <span class=SpellE>6</span> 2 <span class=SpellE>2</span> 4 <span
class=SpellE>4</span></span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>180
1 2 3 <span class=SpellE>3</span> 2 1</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>110
2 6 7 3 6 9</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>190
3 2 1 <span class=SpellE>1</span> 2 3</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>-1<o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='font-family:Helvetica'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><b style='mso-bidi-font-weight:normal'><span
style='font-size:16.0pt;mso-bidi-font-size:21.0pt;font-family:Times-Bold;
mso-ascii-font-family:Times-Bold;mso-hansi-font-family:Times-Bold;mso-bidi-font-family:
"Times New Roman"'>Sample Output</span></b><span style='font-size:16.0pt;
mso-bidi-font-size:12.0pt;font-family:Helvetica'><o:p></o:p></span></p>

<p class=MsoNormal style='mso-pagination:none;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-bidi-font-size:16.0pt;font-family:Courier'>2</span><span
style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
16.0pt;font-family:Courier'>8</span><span style='font-family:Courier'><o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
972||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<head>
<title>Horizon Line</title>
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
</style>
</head>

<body bgcolor=white>

<h1 align="center"><font color=blue>Problem A - Horizon Line</font></h1>

<p>Let  <b><i>f(x)</i></b> and <b><i>g(x)</i></b> be two functions
defined in the same domain <b>[a,b]</b>. The horizon line corresponds
to the function that presents, in each point <b><i>x</i></b>,
the maximum value from both original functions: <b><i>h(x)=Max(f, g)</i></b>.


<p class=center><img src="http://uva.onlinejudge.org/external/9/p972.gif"  width="408" height="418" alt="  border="0"><br><b>Figure 1 - </b> Construction of a horizon function

<p>The maximum value of <b><i>h(x)</i></b> can be directly obtained
from the both functions maxima, so it wouldn't make it necessary to
determine the horizon line. Nevertheless, the same is not true for the
minimum value of
<b><i>h(x)</i></b> that has to be evaluated through a more complex method.
 
<h2><font color=blue>The Problem</font></h2>

<p>Your task for this problem is to evaluate the minimum value of a
horizon line <b><i>h(x)</i></b>, given two functions <b><i>f(x)</i></b>
and <b><i>g(x)</i></b>. To make it easier, both initial functions are
composed by different steps like the dotted lines represented in
figure 1, but <b><i>x</i></b> and <b><i>y</i></b> values are not
necessarily integer values. Each function is composed by a sequence of
<b><i>N</i></b> steps, with each step being defined by a length and a
value.
It is ensured that the last step ends at the domain upper limit and
the domain is always <b>[0,10]</b>.

<h2><font color=blue>Input</font></h2>

<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
<p>The input is made of two sequences of text lines, representing the functions <b><i>f</i></b> and <b><i>g</i></b>.

<p>In each sequence, the first line contains the number of the
function
steps <b>N</b> (integer format); it is followed by <b><i>N</i></b>
lines containing, each one, the step value and the step length
(by this order, in decimal format) separated by one or more spaces.
It is ensured that a sequence has no more than 100 steps.

<h2><font color=blue>Output</font></h2>

<p>For each test case, the output is made of one text line containing the minimum value of the horizon line <b><i>h(x)</i></b>. It must be rounded to
three decimal digits.

<h2><font color=blue>Example Input</font></h2>
<pre>
4
6.0 2.0
1.0 3.0
3.0 1.0
5.0 4.0
3
4.0 4.0
8.0 4.0
1.0 2.0
</pre>

<h2><font color=blue>Example Output</font></h2>
<pre>
4.000
</pre>

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>Augusto Sousa</b> - FEUP)</i>
<hr>

</body>

</html>

______________________________________________________
973||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<head>
<title>The Guessing Game</title>
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
	.center {text-align: center;}
</style>
</head>

<body bgcolor=white>

<h1 align="center"><font color=blue>Problem B - The Guessing Game</font></h1>

<p>
<img align=right src="http://uva.onlinejudge.org/external/9/p973.jpg"  width="135" height="250" alt="  border="0">
Chaos is installed in Sesame Street! Elmo, the furry red creature, has created
a new game and everyone wants to play it. Oscar the Grouch, who loves trash,
says he is the one who plays the game better. Bert and Ernie say that they
rock. The monster Herry disagrees, and simply says that no one can play the
game. Grover thinks that he knows the secret to the game. The Cookie Monster
cannot believe that someone would rather prefer to play the game than to eat
cookies. Everyone is screaming against each other!

<p>Meanwhile, Kermit the Frog is observing everyone and secretly preparing
the strategy that will make him the most respected muppet: learning
how to master Elmo's new game. But what game is this?

<p>Elmo has a box filled with delicious cookies. Inside, the box has a grid
shape, but Elmo does not show the contents of the box to anyone. Instead,
he just says how many cookies are in each row, in each column and in each
diagonal. For example, imagine the following cookie box (where 'X' stands
for a cookie, and '.' for an empty spot). Figure 1 shows the numbers
of cookies in each row and in each column.

<center>
<table><tr><td>
<pre class=center>
. X . . X X . . 3
. X . . X . . . 2
. . . X . X X X 4
. X . . . . . . 1

0 3 0 1 2 2 1 1
</pre>
<p class=center><b>Figure 1 -</b> Cookies in each row and column
</td></tr></table>
</center>

<p>In what respects do diagonals, everyone in Sesame Street knows what to do,
but since you may not know their standards, they number their diagonals
starting from the bottom left and ending in the upper right, like it is
depicted in figure 2.

<pre class=center>
456789
345678
234567
123456
</pre>
<p class=center><b>Figure 2 -</b> Diagonals in Sesame Street

<p>So given this order of the diagonals, the number of cookies in the
diagonals for the box of figure 1 would be given by
<tt>0 1 0 1 2 0 2 2 2 0 0</tt>.

<p>Given the number of cookies in each column, row and diagonal, Elmo's
guessing game is to discover the contents of the box. If someone can guess
the positions of the box, Elmo will give this person all the cookies!

<p>You must help Kermit the Frog in mastering this game...

<h2><font color=blue>The Problem</font></h2>

<p>Given the number of cookies in each column, row and Diagonal of Elmo's
box, you must discover the positions of the cookies inside the box.
If there is more than one possible solution to the contents of the box,
you should discover how many possible arrangements are there that fulfill
the conditions and would give the same number of cookies in rows, columns
and diagonals.

<h2><font color=blue>Input</font></h2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

<p>
The first line of input contains two integers, <b>R</b> and <b>C</b>,
representing respectively the number of rows and columns of the cookie box
(<i>1 &le R,C &le; 10</i>).

<p>Then comes a line with exactly <i>R</i> integers separated by a space,
indicating the number of cookies in each row, from the top to the bottom.

<p>After that there is line with exactly <i>C</i> integers separated
by a space, indicating the number of cookies in each column,
from the left to the right.

<p>Finally comes a line with exactly <i>R+C-1</i> integers separated
by a space, indicating the number of cookies in each diagonal,
from the bottom right to the top left.

<h2><font color=blue>Output</font></h2>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


<p>If there is a single possible solution (arrangement of cookies) for
the given input, then you should output the contents of the box,
by printing <i>R</i> lines, each one with <i>C</i> chars, with
'X' representing cookies and '.' representing empty spots.

<p>If there is more than one possible solution, simply print
a line with a single integer, indicating the number of possible
arrangements of cookies in the box that would give the numbers of the input
for quantities in rows, columns and diagonals. You can be sure that
there will never be more than 10000 valid arrangements for the test
cases in the input.

<h2><font color=blue>Sample Input</font></h2>
<pre>
4 8
3 2 4 1
0 3 0 1 2 2 1 1
0 1 0 1 2 0 2 2 2 0 0

5 5
1 1 1 1 0
1 1 1 0 1
0 0 0 1 1 2 0 0 0
</pre>

<h2><font color=blue>Sample Output</font></h2>
<pre>
.X..XX..
.X..X...
...X.XXX
.X......

2
</pre>

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
974||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<head>
<title>Kaprekar Numbers</title>
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
</style>
</head>

<body bgcolor=white>

<h1 align="center"><font color=blue>Problem C - Kaprekar Numbers</font></h1>

<p>
<img align=right src="http://uva.onlinejudge.org/external/9/p974.jpg"  width="150" height="196" alt="  border="0">

Shri Dattathreya Ramachandra Kaprekar was an Indian mathematician,
whose name is associated with a number of concepts in number theory.
He was born in Dahanu, near Mumbai, in India. Even as a small child, he was already
interested in numbers.

<p>Among his numerous contributions are the so called <i>Kaprekar numbers</i>.
These are non-negative integer numbers such that the representation of their square
can be split into two parts that add up to the original number again. For example,
55 is a <i>Kaprekar number</i>, because 55<sup>2</sup> = 3025, which can be split
into 30 and 25, and 30 + 25 = 55. There is one special rule: both
parts of this sum must be positive. This means that, for example, 10 is
not a <i>Kaprekar number</i>, even when 10^2 = 100 and 10+0=10 (but
the second part of the sum is zero - not positive).

 
<h2><font color=blue>The Problem</font></h2>

<p>
Given a range of numbers, your task is to discover and print all <i>Kaprekar
numbers</i> within that range.


<h2><font color=blue>Input</font></h2>

<p>
The first line of input contains a single number
<b>N</b>, representing the number of test cases that follow (<i>1 &le;
N &le; 1000</i>).

<p>
Than follow exactly <i>N</i> lines (one for each test case),
each one containing two
positive integers separated by a single space: <b>INF</b> and <b>SUP</b> (<i>2 &le; INF

&le; SUP &le 40000</i>),
indicating that the range to consider is the number interval <i>[INF,SUP]</i>
(this means that the limits are included in the interval to consider).

<h2><font color=blue>Output</font></h2>

<p>For each test case you should start by printing a line in the
format <tt><b>case #NUM</b></tt> where <i>NUM</i> is the test case
number (starting in one).


<p>Then, you must print all the <i>Kaprekar numbers</i> that appear in
the respective range, in ascending order, one per line. If there are no <i>Kaprekar
numbers</i> in the specified interval, you should print <tt><b>no
kaprekar numbers</b></tt>.

<p>There should also be a blank line between test cases.

<p>See the sample output for an example. 


<h2><font color=blue>Example Input</font></h2>
<pre>
3
2 90
30 35
50 55
</pre>

<h2><font color=blue>Example Output</font></h2>
<pre>
case #1
9
45
55

case #2
no kaprekar numbers

case #3
55
</pre>

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
975||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html><head>
 <meta content="text/html; charset=ISO-8859-1"
 http-equiv="content-type">

<style>
  p {text-align: justify;}
  p.center {text-align: center;}
  h1, h2 {color: blue;}
  h1 {text-align: center}</style>
   <title>Gutenberg Clumsy Helper</title>
</head>
<body>
<h1 align="center">Problem D - Gutenberg Clumsy Helper</h1>

<p><img align=right src="http://uva.onlinejudge.org/external/9/p975.jpg" >
Johannes Gensfleisch zur Laden zum Gutenberg was a German goldsmith and inventor who achieved fame for his invention of the technology of printing with movable types during 1447.</p>

<p>As his invention became famous orders from printing books poured in. With too much work to handle he hired Clumseisch zur Hidemberg to help him. Clumseisch was also a brilliant inventor but under Gutemberg's shadow he never had the chance to showcase his own inventions (word has spread that we would be 400 years more advanced if he had done so).</p>

<p>Clumseisch work consisted of carrying trays containing block letters that allowed Gutemberg to print each individual book page. But he was very clumsy and constantly dropped the tray. And when this happened, often individual blocks would fall from the tray leaving empty spaces.</p>

<p>He was lucky though, because when this happened he could use his most wonderfull invention: a C++ portable compiler crafted from solid wood. He invented an algorithm that would tell him in how many different ways he could rearrange the fallen letter blocks and still form meaningfull words.</p>

<h2>The Problem</h2>

<p>Your problem will be to recreate Clumseisch's algorithm</p>

<h2>Input</h2>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
 
<p>The first line of the input will contain the number of lines (<em>1<=nl<=10</em>) of the tray Clumseisch was carrying. Then, <em>nl</em> lines will contain the words that were in that same tray. Underscores ("_") will represent fallen letters. There will never be more than 200 total words.</p>

<p>The next line will contain the number of different letters on the ground (lowercase english alphabet). Beware that not all letters on the ground were part of the tray being carried (Gutemberg's shop was many times a complete mess). After that, comes a line for each letter containing the actual letter and the number of times Clumseisch found it lying in the floor.</p>

<p>The last part of the input contains an english dictionary. This dictionary will contain several english words (in no particular order) in the same line. The first line will contain the number of lines of the dictionary. The dictionary will not contain more than 1000 words.</p>

<p>In all the input, words will never have more than 40 letters.</p>

<h2>Output</h2>

<p>For each test case, output a single line containing the number of possible ways of rearranging the letters into the tray using valid english words.</p>

<h2>Example Input</h2>
<pre>
7
Th_s _s the f_rst b___ ever printed
on my shiny new pre__ Its good to
print bo__s l_ke this because you never
know what can h___en next. The tray
might fall and you have to pick all
the letters and put them in order
again. That ____d be lots of fun.
10
i 4
o 4
k 2
s 2
a 1
p 2
u 1
w 1
l 1
t 2
4
because book books boots boot can ever first
good happen is its know like on
my new never next press print printed
shiny the this to what would you</pre>
<h2>Example Output</h2>
<pre>
4</pre>

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>AndrÃ© Restivo</b> - FEUP)</i>
<hr>

</body>
</html>

______________________________________________________
976||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<head>
<title>Bridge Building</title>
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
	.center {text-align: center;}
</style>
</head>

<body bgcolor=white>

<h1 align="center"><font color=blue>Problem E - Bridge Building</font></h1>

<p>
<img align=right src="http://uva.onlinejudge.org/external/9/p976.gif"  width="378" height="222" alt="  border="0">
<i>Against the city's gleaming spires,<br>
Above the ships that ply the stream,<br>
A bridge of haunting beauty stands -<br>
Fulfillment of an artist's dream<br>
(D. B. Steinman)</i>
</p>

<p>Algorithm city is crossed by the beautiful Complexity River. Up
until now, the only possible way to travel from one bank (margin) of the river
to the other is by boat. This is very negative for the city economics
and therefore the mayor has decided to build a series of bridges to
connect the two parts of the city, lying on different banks of the river.

<p>He has a fixed number of bridges to build, but in order to save the
maximum amount of money he wishes to build the bridges has short as possible.
However, since he wants to really help the citizens, the bridges must not be
to close together, in order to have them splitted all over the city.

<p>The mayor has asked for your help, and has given
you the map of the part of city with that is near the river. To simplify,
this map can be seen as a grid of chars. <b>'#'</b> means a piece of
terrain and <b>'.'</b> means water. So, for example, a map could be something
like:

<pre class=center>
####################
..######........##..
....##..............
....................
....................
.................#..
..######........##..
####################</pre>
<p class=center>
<b>Figure 1</b> - An example of a valid map
</p>

<p>You can be sure that the map will always have
terrain-only on the first and last rows, and that those pieces of 
terrain correspond
to different banks. There will be no islands in the river, and all terrain
will either be connected to the north or south bank. We consider a piece
of terrain to be connected to another if they are adjacent, that is,
if they are next to each other horizontally or vertically (but not
diagonally). You can also be sure that on the same column of the grid map,
there will never be a south piece of the bank above a north
one. However, small lakes (that do not belong to the river) can exist 
inside banks, as exemplified in figure 2.

<pre class=center>
###############
.#..#.......#..
.####......##..
.####..........
.#........##...
..........#....
###############</pre>
<p class=center>
<b>Figure 2</b> - Another example of a valid map
</p>

<p>The Algorithm City mayor is very old fashioned and has decided that the
bridges to build must only be built in the north-south direction (vertically,
in the grid). So, for example, imagine that the mayor would like to build
3 bridges, that must be separated at least by 4 positions, on the map of
the figure 1. A solution that would minimize the length of the bridges
would be the one in figure 3, where <b>'B'</b> represents a bridge.

<pre class=center>
####################
..######........##..
..<b>B</b>.##.<b>B</b>.........<b>B</b>..
..<b>B</b>....<b>B</b>.........<b>B</b>..
..<b>B</b>....<b>B</b>.........<b>B</b>..
..<b>B</b>....<b>B</b>.........#..
..######........##..
####################</pre>
<p class=center>
<b>Figure 3</b> - A solution for the map of figure 1
</p>

<p>Note that the first two bridges in the solution are exactly separated by
4 spaces as required, and could not be more close. If we measure the length
of the bridges built by squares in the grid, we can say that the total
length used was 11 (4+4+3). Any other way of building the bridges in this map
would give more total length and therefore would be worse.
 
<h2><font color=blue>The Problem</font></h2>

<p>
Given a grid map as specified above, a number of bridges to build and
the minimum space (on columns) that should separate the bridges, your task is
to calculate the best positions to build the bridges in order to minimize
their total length, and print the total length of the bridges in that
best arrangement.

<h2><font color=blue>Input</font></h2>
The input file contains several test cases, each of them as describes below.

<p>
The first line of input contains two integers,
<b>R</b> and <b>C</b>, representing respectively the numbers of rows
and the number of columns of the grid map (<i>5 &le; R,C &le; 1000</i>).

<p>Then comes a line with two integers, <b>B</b> and <b>S</b>, where
<i>B</i> represents the number of bridges to build (<i>1 &le; B &le 100</i>)
and <i>S</i> the minimum space (in columns) that should separate bridges.

<p>After that come exactly <i>R</i> lines, each one with <i>C</i> chars,
that represent the map. This map obeys to the rules described above
and only has <i>'#'</i> or <i>'.'</i>.

<h2><font color=blue>Output</font></h2>

<p>For each test case, the output should contain a single line, with an integer representing
the total length of bridges to build in the solution that minimizes this same
total, as described above.

<p>There will always be a way to build the bridges.

<h2><font color=blue>Sample Input</font></h2>
<pre>
8 20
3 4
####################
..######........##..
....##..............
....................
....................
.................#..
..######........##..
####################
7 15
2 8
###############
.#..#.......#..
.####......##..
.####..........
.#........##...
..........#....
###############
</pre>

<h2><font color=blue>Sample Output</font></h2>
<pre>
11
2
</pre>

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
977||||||false||||||
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta content="text/html; charset=ISO-8859-1"
http-equiv="content-type">
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
	h1, h2 {color: blue;}
	h1 {text-align: center}
	</style>
  <title>Old West Rumours</title>
</head>
<body>
<h1 align="center">Problem F - Old West Rumours</h1>

<p>Never have rumours been so fast as in the internet era. Although not as fast, in the old west, they still runned pretty darn fast. As soon as a rumour started in one town it would quickly spread to its neighbours in a matter of hours. Besides that rumours could easily destroy many kinds of deals, both legal and illegal.</p>

<p>This was the context that allowed Lightning Billy to make his living. Billy had a business where he sold to his customers the usefull service of stopping rumours. When a customer came to Billy he would give Billy the details of the rumour being spread. This allowed Billy to estimate how much time he would need to stop that rumour in any given town. With this information and knowing all the possible routes the rumour could take, Billy could estimate in how many towns he could kill the rumour before it reached them (See Figure 1).</p>

<div style="text-align: center;">&nbsp;<img src="http://uva.onlinejudge.org/external/9/p977a.png"  alt=" ></div>
<div style="text-align: center;"><b>Figure 1 -</b> Towns, routes and rumour distances<br></div>

<h2>The Problem</h2>
<p>Your problem will be to design an algorithm that given a set of towns and routes between them will calculate how many cities Billy can reach in time, knowing that Billy could travel twice as fast as any rumour (he wasn't called Ligthning Billy for nothing). The time needed by Billy to travel through any route will always be rounded down (yes, he really was that fast). Billy will be able to kill the rumour only if he manages to reach a town at least at the same time the rumour gets there.</p>

<h2>Input</h2>
The input file contains several test cases, each of them as describes below.

<p>The first line of the input will contain the number
of towns in the area (<em>1<=nt<=50 </em>), and the number of routes
(<em>0<=nr<=1000</em>), between them. Then, a single line containing
<i>nt</i> values with the time needed by Billy to stop the rumour in each
town (<em>0<=s<=10</em>), followed by <i>nr</i> lines containing routes. Each
route will be composed by the starting city, the ending city and the
time needed for the rumour to spread along that path
(<em>1<=t<=200</em>).
Note that rumours run both ways between the cities of the route at the same
speed, and so does Billy (actually, at half the speed of the rumours, as
described above).</p>

<h2>Output</h2>
<p>For each test case, output a single line containing the number of towns where Billy can stop the rumour. Billy always starts from the first town in the input file. Towns that are not reached by the rumour should not be counted as they are not saved by Billy.</p>

<h2>Example Input</h2><pre>6 9
1 2 3 4 5 6
0 1 10
0 3 10
0 4 20
1 3 10
1 2 5
2 3 5
2 5 20
3 5 20
4 5 20</pre>
<h2>Example Output</h2><pre>4</pre>

<strong>Output explanation</strong>: Billy loses 1 time unit to solve the rumour at town 0. He then travels to town 1 taking 5 time units (10/2) and arriving there at time unit 6. He loses 2 time units there solving the rumour and then travels to town 2 taking 2 time units and arriving at time unit 10. He loses 3 time units at this town, departing at time unit 13 to town 5 where he arrives at time unit 23 with plenty of time to solve the rumour in that town (See Figure 2). No other towns can be kept safe from the rumour.

<div style="text-align: center;">&nbsp;<img src="http://uva.onlinejudge.org/external/9/p977a.png"  alt=" ></div>
<div style="text-align: center;"><b>Figure 2 -</b> Output Explanation

<p>&nbsp;

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>AndrÃ© Restivo</b> - DCC/FCUP)</i>
<hr>

</body>
</html>

______________________________________________________
978||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML>
<head>
<title>Lemmings Battle!</title>
<style>
	p {text-align: justify;}
	p.center {text-align: center;}
</style>
</head>

<body bgcolor=white>

<h1 align="center"><font color=blue>Problem G - Lemmings Battle!</font></h1>

<p>
<img align=right src="http://uva.onlinejudge.org/external/9/p978.jpg"  width="200" height="197" alt="  border="0">

Oh no... more lemmings!! And in Lemmings Planet a huge battle is being
fought between the two great rival races: the green lemmings and the blue
lemmings. Everybody was now assigned to battle and they will fight until
one of the races completely dissapears: the Deadly War has begun!

<p>Every single lemming has a
power measure that describes its ability to fight. When two single lemmings
fight with each one, the lemming with more power survives and the other one
dies. However, the power of the living lemming gets smaller after the fight,
exactly in the value of the power of the lemming that died. For example,
if we have a green lemming with power 50 and a blue lemming with power 40,
the blue one dies and the green one survives, but having only
power 10 after the battle (50-40=10). If two lemmings have the same power
when they fight, both of them die.

<p>In the fight between the two races, there are a certain number of
battlefields. Each race assigns one lemming for each battlefield, starting
with the most powerful. So for example, if a race has 5 lemmings with
power 50 50 40 40 30 and we have 3 battlefields, then a lemming with power 50
will be assigned to battlefield 1, another with 50 power will be assigned to
battlefield 2 and last a lemming with power 40 will go to battlefield 3. The
other race will do the same.

<p>The Deadly War is processed by having each race send its best soldiers
as described to the battlefields, making a battle round.
Then, all battles process at the same time,
and some of the lemmings will emerge victorious (but with less power) and
some of them will die. The surviving ones will return to their race's army
and then a new round will begin, with each race sending again its best
remaining soldiers to the battlefields. If at some point a race does not
have enough soldiers to fill all battlefields, then only the ones with
soldiers from both races will have a fight.

<p>The Deadly War ends when one of the races has no more lemmings or when
both of them disappear at the same time. For example, imagine a war with 2
battlefields and a green army with powers 20 10 and a blue army with powers
10 10 15. The first round will have 20 vs 15 in battlefield 1 and 10 vs 10
in battlefield 2. After these battles, green race will still have a power 5
lemming (that won on battlefield 1) and blue race will have one with power
10 (that did not fight). The ones in battlefield 2 died, since they both had
the same power. Afer that comes a second round, and only battlefield 1 will have a
fight, being 5 vs 10. The blue lemming wins, killing the last green soldier
and giving the victory do the blue race!

<p>But in the real battle, will victory be green or blue?

 
<h2><font color=blue>The Problem</font></h2>

<p>Given the number of battefields and the armies of both races,
your task is to discover which race will win the Deadly War and show
the power of the surviving soldiers.

<h2><font color=blue>Input</font></h2>

<p>
The first line of input contains a single number
<b>N</b>, representing the number of test cases that follow (<i>1 &le;
N &le; 100</i>).

<p>Each test case starts with a line with three space-separated integers,
<b>B</b>, <b>SG</b> and <b>SB</b>, representing respectively
the number of battlefields available, the number of lemmings
in the green army and the number of lemmings in the blue army
(<i>1 &le; B,SG,SB &le; 100000</i>).

<p>Than follow exactly <i>SG</i> lines, each one with an integer
indicating the power of one single lemming of the green army, followed
by <i>SB</i> lines, each one with an integer
indicating the power of one single lemming of the blue army. This
power
is a positive integer smaller than 101.

<p>The lemmings in each army do not need to come in any particular order.

<h2><font color=blue>Output</font></h2>

<p>For each test case you should print:
<ul>
<li><tt>green and blue died</tt> if both races died in the same round
<li><tt>green wins</tt> if the green army won the Deadly War, followed
by one line for each surviving soldier (in descending order)
<li><tt>blue wins</tt> if the blue army won the Deadly War, followed
by one line for each surviving soldier (in descending order)
</ul>

<p>There should also be a blank line beetween test cases.

<h2><font color=blue>Example Input</font></h2>
<pre>
3
5 1 1
10
10
2 2 3
20
10
10
10
15
3 5 5
50
40
30
40
50
50
30
30
20
60
</pre>

<h2><font color=blue>Example Output</font></h2>
<pre>
green and blue died

blue wins
5

green wins
10
10
</pre>

<hr>
<p class=center><b>2006 Programming Contest of Porto University</b><br>
Round 3, 11th of October of 2006<br>
&nbsp;<br>
<i>(Author: <b>Pedro Ribeiro</b> - DCC/FCUP)</i>
<hr>

</body>

</html>

______________________________________________________
979||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="hevea 1.08">
  <style type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.dir {float: right;}
.titulo {clear: right;}
  </style>
</head>
<body>
<!--HEVEA command line is: /usr/bin/hevea -fix triangleman.tex -o triangleman.html --><!--HTMLHEAD--><!--ENDHTML--><!--PREFIX <ARG ></ARG>--><!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem A-->
<h2 class="section">Problem A</h2>
<!--SEC END -->

<div class="center"><font size="5"><span
 style="font-variant: small-caps;">The Abominable Triangleman</span></font></div>
<!--TOC subsection Problem-->
<h3 class="subsection">Problem</h3>
<!--SEC END -->You discovered the Magic Gold Triangle, which has the
power to give
fortune and wisdom to his owner, during an archaeological excavation
in the tomb of the Egyptian emperor Triangles III. However, the
Abominable Triangleman has followed your footsteps, stole the Triangle
and hid it in the Plane World of the Visible Points. You know that,
to disguise the Triangle, the Abominable Triangleman made some
operations over it, but you don't know the complete details. You know
that the Magic Triangle may have been subject to an arbitrary rotation,
may have been subject an arbitrary translation (both in the 2D
plane) and may been subject to a reflection on a mirror, but its
dimensions were kept unchanged. You also know that its
sides became transparent and the only parts you can see from the
Triangle are its vertices. However, there are so many points in the
Plane World of the Visible Points! If you could guess which of them
are the vertices of the Magic Gold Triangle, you could get it back...<BR><BR>
<div class="figure">
  <div class="center"> <img src="http://uva.onlinejudge.org/external/9/p979a.png" > <br>
  <br>
  <div class="center">Figure 1: The Magic Gold Triangle before being
stolen</div>
  <br>
  <br>
  </div>
  <div class="center"> <img src="http://uva.onlinejudge.org/external/9/p979a.png" > <br>
  <br>
  <div class="center">Figure 2: The Triangle is hidden in the Plane
World of the Visible Points</div>
  <br>
  <br>
  </div>
</div>
You know the coordinates of the vertices A, B and C of the Magic Gold
Triangle when it was in your possession (example in Figure 1). You
also know the coordinates of all the points currently in the Plane
World of the Visible Points, which include the vertices of the stolen
Triangle (example in figure 2). Your task is to make a program that
may discover the Triangle, i. e., to find out which of the points in
the Plane are the vertices of the hidden triangle.
<!--TOC subsection Input-->
<h3 class="subsection">Input</h3>
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>
<!--SEC END -->The input of your program will be a sequence of text
lines. The first
three lines will contain the original coordinates of the Triangle,
before being stolen. The next line will contain an integer N in the
interval [4..2000] representing the number of points in Plane World,
and the next N lines the coordinates of those points. Coordinates will
be represented by two integer numbers, the x-coordinate and the
y-coordinate, separated by a space.
<!--TOC subsection Output-->
<h3 class="subsection">Output</h3>
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
<!--SEC END -->The output will be a sequence of three lines with the
coordinates of
the points in the Plane World of the Visible Points corresponding to
the vertices of the Magic Gold Triangle.
<!--TOC subsection Sample Input-->
<h3 class="subsection">Sample Input</h3>
<!--SEC END -->
<pre class="verbatim">5 15<br>8 5<br>20 10<br>6<br>5 17<br>5 20<br>20 5<br>10 5<br>15 20<br>15 10<br></pre>
<!--TOC subsection Sample Output-->
<h3 class="subsection">Sample Output</h3>
<!--SEC END -->
<pre class="verbatim">5 17<br>10 5<br>15 20<br></pre>
<!--HTMLFOOT-->
<!--ENDHTML--><!--FOOTER-->
</p>

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;<br>&nbsp;
</p>
<hr>
<p><b>Author:</b> Franscisco Pereira and Amilcar Cardoso (Universidade de Coimbra)


</body>
</html>

______________________________________________________
980||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix miup06prh.tex -o miup06prh.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem B-->

<H2 CLASS="section">Problem B</H2><!--SEC END -->

<DIV CLASS="center"><FONT SIZE=5><SPAN STYLE="font-variant:small-caps">X-Express</SPAN></FONT></DIV>

<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->

Wagon-Lit Co., the worldwide famous train company, runs every
working-day X-Express, an important train that links twice a day
(early in the morning, and in the evening) Paris to Brussels and
Amsterdam.<BR>
Each train composition has at least two wagons: one 1.st
class, with capacity for 48 passengers; and
one 2.nd class, with capacity for 64 passengers.<BR>
However to determine the minimal number of wagons for each travel is
not so easy because X-Express passengers have very strict rules for
allocation inside the train:
<UL CLASS="itemize"><LI CLASS="li-itemize">
Politicians and Businessmen always travel in 1.st class, but
 never in the same wagon;<BR><BR>
<LI CLASS="li-itemize">Artists and Young people always travel in 2.nd class, but never
 in the same wagon;<BR><BR>
 <LI CLASS="li-itemize">Tourist always travel in 2.nd class, but they don't care the wagon (they can be mixed with artists or young people);<BR><BR>
 <LI CLASS="li-itemize">The Regular passengers prefer to travel in 2.nd class, but they can also be placed in 1.st class
 (in order to keep minimal the number of wagons), and they can also be sited together with any other class of people.
</UL>
Your task is to write a program to read the booking-list and to compute the minimal number of 1.st and 2.nd
class wagons that shall be included at Paris to assure place for everybody in the list,
complying the strict rules above.<BR>
Notice that some passengers leave the train at Brussels, and others get on there,
but the train composition will not change
(it arrives at Amsterdam with the same number of wagons that were included at Paris).
Also notice that passengers that booked a ticket
from Paris to Amsterdam can change wagon at Brussels.
<BR>
<BR>
<!--TOC section Input-->

<H2 CLASS="section">Input</H2><!--SEC END -->

The input is a file (stdin) with just three lines, each one with 6
integers separated by a single space. The 6 integers represent the
number of Politicians, Businessmen, Artists, Young people, Tourist,
and Regular passengers that booked a ticket from Paris to Amsterdam
(1.st line), Paris to Brussels (2.nd line), and Brussels to Amsterdam
(3.rd line).<BR>
<BR>
<!--TOC section Output-->

<H2 CLASS="section">Output</H2><!--SEC END -->

The output should be written to a file (stdout) with two lines in the following format:
<UL CLASS="itemize"><LI CLASS="li-itemize">
 one line with the number of 1.st class wagons (always less than 100).<BR>
 <LI CLASS="li-itemize">one line with the number of 2.nd class wagons (always less than 100).
</UL>

<!--TOC section Sample Input-->

<H2 CLASS="section">Sample Input</H2><!--SEC END -->

<PRE CLASS="verbatim">
20 120 50 80 100 30
40 80 5 10 100 40
15 12 20 100 30 20
</PRE>
<!--TOC section Sample Output-->

<H2 CLASS="section">Sample Output</H2><!--SEC END -->

<PRE CLASS="verbatim">
7
6
</PRE>
<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
</p>
<hr>
<p><b>Author:</b> Pedro Henriques (Universidade do Minho)

</BODY>
</HTML>

______________________________________________________
981||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix SCRC/enunciado.tex -o SCRC/enunciado.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem C-->

<H2 CLASS="section">Problem C</H2><!--SEC END -->


<DIV CLASS="center"><FONT SIZE=5><B>Systematic Cyclic Redundancy Check Codes</B></FONT></DIV><BR>

<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->

An error-detection technique used widely in today's computer networks and data storage devices is based on Cyclic Redundancy Check (CRC) codes. A systematic CRC encoder takes two binary inputs, a data word and a generator polynomial, and carries out the necessary calculation to produce the encoded word. <BR>
<BR>
Your task is to write a program to decode a systematic CRC encoded message. In the case of error detection your program should return an ERROR message.<BR>
<BR>
<!--TOC subsubsection Systematic CRC-->

<H4 CLASS="subsubsection">Systematic CRC</H4><!--SEC END -->

Given a data word <I>D</I>(<I>x</I>) of length <I>k</I>, a Systematic Encoder generates the encoded data word <I>E</I>(<I>x</I>) according to the expression: 
<DIV CLASS="center"><I>E</I>(<I>x</I>) = <I>X</I><SUP><I>n</I>&minus;<I>k</I></SUP><I>D</I>(<I>x</I>) + <I>R</I>(<I>x</I>)</DIV> where <I>n</I> is the size of the encoded message, <I>G</I>(<I>x</I>) is the generator polynomial of length (<I>n</I>&minus;<I>k</I>+1) bits, <I>X</I><SUP><I>n</I>&minus;<I>k</I></SUP> is the (<I>n</I>&minus;<I>k</I>) term of <I>G</I>(<I>x</I>) and <I>R</I>(<I>x</I>) is the remainder of the modulo-2 division of <I>X</I><SUP><I>n</I>&minus;<I>k</I></SUP><I>D</I>(<I>x</I>) by <I>G</I>(<I>x</I>).<BR>
<BR>
Remark: we can obtain <I>E</I>(<I>x</I>) by shifting the data word that represents <I>D</I>(<I>X</I>) <I>n</I>&minus;<I>k</I> bits to the left (identical to multiplying it by <I>X</I><SUP><I>n</I>&minus;<I>k</I></SUP>), and then adding <I>R</I>(<I>x</I>) (where <I>R</I>(<I>x</I>) is obtained by dividing the left-shifted word by <I>G</I>(<I>x</I>)).<BR><BR>
<B>Example</B><BR>
Let the binary data word 110 represent the original polynomial <I>D</I>(<I>x</I>)=<I>X</I><SUP>2</SUP>+<I>X</I>, and 11101 represent the generator polynomial <I>G</I>(<I>x</I>)=<I>X</I><SUP>4</SUP>+<I>X</I><SUP>3</SUP>+<I>X</I><SUP>2</SUP>+1. Thus, 1100000 represents <I>X</I><SUP>4</SUP><I>D</I>(<I>x</I>)=<I>X</I><SUP>6</SUP>+<I>X</I><SUP>5</SUP>, and 1100000 mod 11101=1001 represents the remainder <I>R</I>(<I>x</I>)=<I>X</I><SUP>4</SUP><I>D</I>(<I>x</I>) mod <I>G</I>(<I>x</I>). Finally, 1100000+1001=1101001 represents the generated encoded word <I>E</I>(<I>x</I>)=<I>X</I><SUP>4</SUP><I>D</I>(<I>x</I>)+<I>R</I>(<I>x</I>).<BR>
<BR>
<!--TOC subsection Input-->

<H3 CLASS="subsection">Input</H3><!--SEC END -->
The input file contains several test cases, each of them as describes below.

Three lines containing:
<UL CLASS="itemize"><LI CLASS="li-itemize">
An integer <I>k</I> representing the length of the original data word (<I>k</I>&lt;=16);
<LI CLASS="li-itemize">A binary sequence ( string with caracters '0' and '1') representing the encoded message <I>E</I>(<I>x</I>);
<LI CLASS="li-itemize">A binary sequence ( string with caracters '0' and '1') representing the generator polynomial <I>G</I>(<I>x</I>).
</UL>
The binary sequences have maximum length 200.<BR>
<BR>
<!--TOC subsection Output-->

<H3 CLASS="subsection">Output</H3><!--SEC END -->

For each test case, output a single line containing the decoded message, or the word ERROR if your program detects that the given E(x) could not have been generated by the given generator polynomial.<BR>
<BR>
<!--TOC subsection Sample Input 1-->

<H3 CLASS="subsection">Sample Input</H3><!--SEC END -->

<PRE CLASS="verbatim">
3
1101001
11101
3
1101011
11101
</PRE>
<!--TOC subsection Sample Output 1-->

<H3 CLASS="subsection">Sample Output</H3><!--SEC END -->

<PRE CLASS="verbatim">
110
ERROR
</PRE>
<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
</p>
<hr>
<p><b>Author:</b> Manuela Pereira (Universidade da Beira Interior)

</BODY>
</HTML>

______________________________________________________
982||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix Cube-miup06-v3.1-B.tex -o Cube-miup06-v3.1-B.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem D-->

<H2 CLASS="section">Problem D</H2><!--SEC END -->

<DIV CLASS="center"><FONT SIZE=5><SPAN STYLE="font-variant:small-caps">Cube</SPAN></FONT></DIV>


<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->


You wake up and find yourself inside an empty cubic room.<BR>
<BR>

At first you feel surprised but then you notice that at the
center of each wall, roof, and floor there is a gate that seems to
give access to another similar empty cubic room.<BR>
<BR>

You start feeling a kind of fear as you move from room to room and
realize that there is no water, there is no food, and the number
of rooms seems endless. Unless you find an exit to get out of
there, you are going to starve to death!<BR>
<BR>

To make things even worse, you meet other people, also wandering
through the rooms, who tell you that some of the rooms are
booby-trapped. If you enter a booby-trapped room, some nasty thing
will happen to you, like an acid shower or a poisonous atmosphere
and you will die slowly but surely.<BR>
<BR>

But there is hope! You had already notice that at a given corner
of each room there is a decimal number, that you call the room
number. By comparing information with the other people trapped in
the cubes, you realize that each room number encodes the Cartesian
coordinates of the gate that leads towards the exit. This gate
may not be safe, though: the pointed room may have a bomb or some
other booby-trap. Here is what you found:<BR>
<BR>

<OL CLASS="enumerate" type=1><LI CLASS="li-enumerate">
In the coordinate system, the dimension of each cube side is 1.
 Therefore, the gate on the floor is at (1/2, 1/2, 0), while the gate
 at the ceiling is at (1/2, 1/2, 1).<BR><BR>
<LI CLASS="li-enumerate">The x coordinate is the quotient between the number of even
 digits and the number of digits.<BR><BR>
<LI CLASS="li-enumerate">The y coordinate is the quotient between the number of digits
 that are prime number and the number of digits (notice that 1 is not
 a prime).<BR><BR>
<LI CLASS="li-enumerate">The z coordinate is the quotient of the number of digits that
 correspond to odd numbers less than 5, by the number of digits.<BR><BR>
<LI CLASS="li-enumerate">Once simplified, all the above quotients are either 0, 1/2, or
 1.<BR><BR>
<LI CLASS="li-enumerate">In order to find if the pointed room is booby-trapped you must
 set up a vector with three coordinates using the room number,
 computed as follows. The x-coordinate is the quotient of the first
 digit by the second, the y-coordinate is the quotient of the third
 digit by the fourth, and the z-coordinate is the quotient of the
 fifth digit by the sixth. If the room number has less than 6 digits,
 restart from the first digit; If it has more than 6 ignore the
 remaining digits. Now, compute the dot product of this vector and
 the vector describing the coordinates of the exit. Simplify the
 resulting fraction. If the numerator of the simplified fraction is
 composite (i.e., not prime nor equals to 1) the exit is safe.<BR>

 Note: the dot product can be defined for two <I>n</I>-dimensional vectors X and Y by <I>X</I>.<I>Y</I>=
 &Sigma;<SUB><I>i</I>=1</SUB><SUP><I>n</I></SUP> <I>x</I><SUB>1</SUB> <I>y</I><SUB>1</SUB> + &hellip; + <I>x</I><SUB><I>n</I></SUB> <I>y</I><SUB><I>n</I></SUB>.<BR>
</OL>

Your job is to decode the room number so that you and your companions
can find the exit and get some fresh air. Hurry up and good luck!



<!--TOC subsection Input-->

<H3 CLASS="subsection">Input</H3><!--SEC END -->

The input file contains several test cases, each of them is integer number, N, with 0 &lt; <I>N</I> &lt; 2000000000, representing a number found in a room, on a line by itself.


<!--TOC subsection Output-->

<H3 CLASS="subsection">Output</H3><!--SEC END -->

For each test case, the output has two lines.

The first line is a triple of fractions separated by spaces
indicating in Cartesian coordinates of the local direction
towards the exit.

The second line has only one word: SAFE or FATAL, depending on
whether the room in the pointed direction is safe or booby
trapped.


<!--TOC subsection Sample Input 1-->

<H3 CLASS="subsection">Sample Input 1</H3><!--SEC END -->

<PRE CLASS="verbatim">
24556789
</PRE>

<!--TOC subsection Sample Output 1-->

<H3 CLASS="subsection">Sample Output 1</H3><!--SEC END -->

<PRE CLASS="verbatim">
1/2 1/2 0
FATAL

</PRE>
<!--TOC subsection Sample Input 2-->

<H3 CLASS="subsection">Sample Input 2</H3><!--SEC END -->

<PRE CLASS="verbatim">
74974652
</PRE>

<!--TOC subsection Sample Output 2-->

<H3 CLASS="subsection">Sample Output 2</H3><!--SEC END -->

<PRE CLASS="verbatim">
1/2 1/2 0
SAFE
</PRE>

<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
   </p>
<hr>
<p><b>Author:</b> Jose Oliveira (Universidade do Algarve)

</BODY>
</HTML>

______________________________________________________
983||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix blurring.tex -o blurring.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>


<!--TOC section Problem E-->

<H2 CLASS="section">Problem E</H2><!--SEC END -->

<DIV CLASS="center"><FONT SIZE=5><SPAN STYLE="font-variant:small-caps"> Localized Summing for Blurring</SPAN></FONT></DIV>


<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->


Many problems in image processing and computer graphics need to
process large two dimensional arrays and with modern real time
applications they need to process them very <B>fast</B>. For
instance when one wishes to blur an image a "Convolution" filter is
applied, this involves nothing more than summing the values near or
around a particular pixel and applying some mathematical function for
instance calculating the average value. More complicated functions
exist, the Gaussian Blur being quite popular. In a Gaussian Blur when
summing not all pixel values have equal weights in the sum, in other
words pixel weights aren't equal - they are given a value according to
a bell-shaped Gaussian curve.<BR><BR>

This problem involves computing local information, very similar to
"blurring" an image, but a shade simpler! You will be given an <I>N</I> &times; <I>N</I>
array of integer data and your task will be to calculate an (<I>N</I>&minus;<I>M</I>+1) &times;
(<I>N</I>&minus;<I>M</I>+1) array of integers. Each element of this resulting matrix is
the sum of the local <I>M</I> &times; <I>M</I> points of the original matrix.
<BR><BR>

For instance, consider the following example for a 4 by 4 Matrix <I>X</I> with <I>M</I>=3.<BR><BR>


For 
<I>X</I>=<IMG SRC="http://uva.onlinejudge.org/external/9/p983a.png" > the resultant "blurred" matrix is <IMG SRC="http://uva.onlinejudge.org/external/9/p983a.png" ><br><br>

The highlighted matrix elements show the points to be summed at the first element of the matrix. The first element of a matrix is the bottom left hand corner (in this diagram).

<!--TOC subsection Input-->

<H3 CLASS="subsection">Input</H3><!--SEC END -->
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>


The input values consist of (<I>N</I> &times; <I>N</I>) +1 lines.<BR>

The first line contains the integer values of N and M separated by a single space.<BR>

The next <I>N</I> &times; <I>N</I> lines contain the elements of the matrix, one per line, from the bottom left element to the top right one. <BR>

The maximum value of N is 1000. M is always greater or equal to 2 and less than N.<BR>

Each element of the matrix is a positive integer value less than 16 (0,1,..15). 

<!--TOC subsection Output-->

<H3 CLASS="subsection">Output</H3><!--SEC END -->
<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>


The output data consists of the elements of the resulting matrix plus one extra integer value, the total sum of the elements.<BR>

The elements of the "blurred" matrix are displayed one per line, starting from the bottom left to the top right element. <BR>

The last line contains the total sum. This sum is guaranteed to be at most a 64 bit integer. 

<!--TOC subsection Sample Input 1-->

<H3 CLASS="subsection">Sample Input</H3><!--SEC END -->

<PRE CLASS="verbatim">
4 3
1 
2 
2 
1 
1 
0 
2 
2 
0 
2 
3 
3 
1 
2 
1 
3 

5 2
1 
0 
1 
0 
0 
0 
0 
1 
0 
0 
1
1 
1 
1 
1 
0 
0 
1 
0 
0 
0 
0 
1
0
0 
</PRE>
<!--TOC subsection Sample Output 1-->

<H3 CLASS="subsection">Sample Output</H3><!--SEC END -->

<PRE CLASS="verbatim">
13 
17 
12 
18 
60

1 
2
2 
0 
2 
3 
3 
2 
2 
3 
3 
2 
0 
2 
2 
0 
29
</PRE>

<p>
<h3>Note:</h3> The first sample input represents the input and output data for the example described above.

<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
   </p>
<hr>
<b>Author:</b> Paul Crocker (Universidade da Beira Interior)

</BODY>
</HTML>

______________________________________________________
984||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix haplo.tex -o haplo.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem F-->

<H2 CLASS="section">Problem F</H2><!--SEC END -->

<DIV CLASS="center"><FONT SIZE=5><SPAN STYLE="font-variant:small-caps">Finding Haplotypes</SPAN></FONT></DIV>

<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->


Everybody inherits two copies of each chromossome (except for the X
and Y chromossomes), one for each parent. In some positions of the
DNA, (about 0.1% of them) there are variations in the base that is
present. These are called Single Nucleotide Polymorfisms (SNPs). In
most cases, there are only two possible values in each position, that
will be denoted by 0 and 1.<BR><BR>

When DNA is sequenced, stretches from both copies are pasted together,
and is impossible, with present technology, to identify from which
chromossome each copy came. Computers are called to help. Your job is
to figure out the haplotypes (original chromossomes) that generated a
given set of genotypes. <BR><BR>

A genotype is given by a sequence of 0s, 1s and 2s. A 0 means that the
genotype is homozygotic at that position and the SNP has value 0; 
1 means that the genotype is homozygotic at that position and the SNP has
value 1; and a 2 means the genotype is heterozygotic at that position
and that the SNP has value 0 in one haplotype and 1 in the other
haplotype. An haplotype is a sequence of 0s and 1s.<BR><BR>

Given a set of genotypes, the objective is to find a minimum sized
set of haplotypes that can be combined in pairs to obtain the given
genotypes. For example, given the three genotypes 02120, 20120 and
22110, it is enough to have three haplotpes to explain them: 00100,
10110 and 01110. Haplotype 00100 combines with 10110 to give genotype
20120, and so on.<BR><BR>

Given a set of genotypes, you should print the minimum number of
haplotypes that is necessary to explain it.


<!--TOC subsection Input-->

<H3 CLASS="subsection">Input</H3><!--SEC END -->
The input file contains several test cases, each of them as describes below.


The input file contains two numbers in the first line, 
that indicate the number of genotypes that follow (<I>N</I>) and the length of
each genotype (<I>L</I>). Is is followed by <I>N</I> lines, each with <I>L</I>
characters that describe each genotype. <I>N</I> will never be larger than
12 and <I>L</I> will never be larger than 10.

<!--TOC subsection Output-->

<H3 CLASS="subsection">Output</H3><!--SEC END -->

For each test case, the output should consist of one integer, that represents the minimum number of haplotypes necessary to explain the given genotypes, on a line by itself.

<!--TOC subsection Sample Input-->

<H3 CLASS="subsection">Sample Input</H3><!--SEC END -->

<PRE CLASS="verbatim">
3 5
02120
20120
22110
</PRE>

<!--TOC subsection Sample Output-->

<H3 CLASS="subsection">Sample Output</H3><!--SEC END -->

<PRE CLASS="verbatim">
3
</PRE>

<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
   </p>
<hr>
<b>Author:</b> Arlindo Oliveira (Instituto Superior TÃ©cnico)

</BODY>
</HTML>

______________________________________________________
985||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta name="GENERATOR" content="hevea 1.08">
  <style type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
  </style>
</head>

<body>
<!--HEVEA command line is: /usr/bin/hevea -fix RRMaze.tex -o RRMaze.html --><!--HTMLHEAD--><!--ENDHTML--><!--PREFIX <ARG ></ARG>--><!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem G-->
<h2 class="section">Problem G</h2>
<!--SEC END --><br>

<div class="center"><font size="5"><span
 style="font-variant: small-caps;">Round and Round Maze</span></font></div>
<br>
<br>
You have been blindfolded and brought to a strange complex of mazes.
Each maze is divided in squares, each one with a strange circular
plate with arrows on it. The start of each maze is on the upper left
corner and the exit is always on the bottom right. The following
figure shows an example maze: <br><br>
<div class="figure"> 
  <div class="center"> <img src="http://uva.onlinejudge.org/external/9/p985a.png" ></div>
  <br>
  <div class="center">Figure 1: An example maze</div>
  <br>
</div>
During a single time unit you can go from a square to one of the four
adjacent squares. But you can only follow the directions that the
arrows on your current square point. Trying to do other thing will get
you killed. Each time you pass from one square to another, all plates
rotate 90 degrees in clockwise direction, changing the way the maze
looks. Is it possible to get to the exit? And what is the best and
fastest way to do that? <br> <br>
<div class="figure">
  <div class="center"> <img src="http://uva.onlinejudge.org/external/9/p985a.png" ></div>
  <br>
  <div class="center">Figure 2: The quickest path to get out of the
example maze</div>
  <br>
</div>
<!--TOC subsection Problem-->
<h3 class="subsection">Problem</h3>
<!--SEC END -->Given a particular maze in the conditions described
above, your task
is to discover how much time does it take the quickest path from the
upper left corner to the bottom right corner (the exit). You must also
discover if that is not possible.<br>
<br>
<!--TOC subsection Input-->
<h3 class="subsection">Input</h3>
The input file contains several test cases, each of them as describes below.

<!--SEC END -->The input will start with a single line containing two
numbers
separated by a single space: R and C indicating respectively the
number of rows and columns of the maze (2 &nbsp; R,C &nbsp; 500).<br>
<br>
Then there are exactly (R*C)-1 lines indicating in which directions
are the arrows of each square pointing. These lines are given in a
specific order, starting from the north to the south, and from the
west to the east. This is, if we use the notation (row,column), the
lines are given in the order
(1,1),(1,2),...,(1,C),(2,1),...,(2,N),...,(R,1),...,(R,C-1). The
bottom right corner (R,C) is not given, since it is always the exit.<br>
<br>
Each of these lines contains a single string of length one to four
chars, indicating the arrows of the plate on time 0. The chars belong
to the set N,S,W,E and represent respectively an arrow pointing to
North, South, West and East. See example input 1 for a representation
of the example maze given in figure 1. There will not be repeated
chars on the same line and the chars can appear in any order.<br>
<br>
<!--TOC subsection Output-->
<h3 class="subsection">Output</h3>
<!--SEC END -->For each test case, the output should contain a single line with an integer that represents the time taken by the quickest path from the start (always square (1,1)) to the exit (always (R,C)). Remember that the plates
always rotate when you change your current square (therefore is does
not help to stay on the same place waiting for a rotation - it won't
happen!) and you can only follow the directions that the arrows point
on the present time you are on that square.<br>
<br>
If there is no path from the start to the exit you should print "no
path to exit".<br>
<br>
<!--TOC subsection Sample Input 1-->
<h3 class="subsection">Sample Input</h3>
<!--SEC END -->
<pre class="verbatim">2 2<br>NES<br>S<br>WS<br>3 2<br>NSWE<br>SW<br>SEW<br>NEW<br>SN<br></pre>
<!--TOC subsection Sample Output 1-->
<h3 class="subsection">Sample Output</h3>
<!--SEC END -->
<pre class="verbatim">4<br>no path to exit</pre>

<br><BR><BR>
<div class="figure"> 
  <img src="http://uva.onlinejudge.org/external/9/p985a.png" > <br>
  <br>
  Figure 3: The maze of the sample input 2
</div>
 
<!--HTMLFOOT-->
<!--ENDHTML--><!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
   </p>
<hr>
<b>Author:</b> Pedro Ribeiro (Universidade do Porto)

</body>
</html>

______________________________________________________
986||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix HowMany.tex -o HowMany.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem H-->

<H2 CLASS="section">Problem H</H2><!--SEC END -->

<DIV CLASS="center"><FONT SIZE=5><SPAN STYLE="font-variant:small-caps">How Many?</SPAN></FONT></DIV>

<BR>
<BR>

Let us consider paths in the plane integer lattice
<I>Z</I> &times; <I>Z</I> consisting only of steps (1,1) and
(1,&minus;1) and which never pass below the <I>x</I>-axis. A peak at
height <I>k</I> is then defined as a point on the path with coordinate
<I>y</I>=<I>k</I> that is immediately preceded by a (1,1) step and
immediately followed by a (1,&minus;1) step. The pictures below show two
such paths: on the left picture we have 4 peaks (2 peaks at height
2 and 2 peaks at height 3); while on the right picture we have 3
peaks (1 peak at height 1, 1 peak at height 2 and 1 peak at height
3).<BR><BR>


<DIV CLASS="center">
<IMG SRC="http://uva.onlinejudge.org/external/9/p986.png" >
</DIV>


<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->


The problem consists of counting the number of admissible paths
starting at (0,0) and ending at (2<I>n</I>,0) with exactly <I>r</I> peaks
at height <I>k</I>.

<!--TOC subsection Input-->

<H3 CLASS="subsection">Input</H3><!--SEC END -->


The input file contains several test cases, each of them consists of one line with the natural numbers <I>n</I>,
<I>r</I> and <I>k</I> which define the problem (first number gives <I>n</I>, second
number <I>r</I>, and the last one <I>k</I>). Assume that 1 &#8804; <I>n</I> &lt; 20,
0 &#8804; <I>r</I> &lt; 20, and 1 &#8804; <I>k</I> &lt; 20.

<!--TOC subsection Output-->

<H3 CLASS="subsection">Output</H3><!--SEC END -->


For each test case, the output is a single integer on a line by itself, answering the problem, being guaranteed to be less than 2<SUP>31</SUP>.

<!--TOC subsection Sample Input 1-->

<H3 CLASS="subsection">Sample Input</H3><!--SEC END -->


<PRE CLASS="verbatim">
3 1 2
10 3 2
</PRE>

<!--TOC subsection Sample Output 1-->

<H3 CLASS="subsection">Sample Output</H3><!--SEC END -->


<PRE CLASS="verbatim">
2
2002
</PRE>



<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
   </p>
<hr>
<b>Author:</b> Delfim Torres (Universidade de Aveiro)

</BODY>
</HTML>

______________________________________________________
987||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
            "http://www.w3.org/TR/REC-html40/loose.dtd">
<HTML>

<HEAD>


<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META name="GENERATOR" content="hevea 1.08">
<STYLE type="text/css">
.toc{list-style:none;}
.title{margin:auto;text-align:center}
.center{text-align:center;margin-left:auto;margin-right:auto;}
.flushleft{text-align:left;margin-left:0ex;margin-right:auto;}
.flushright{text-align:right;margin-left:auto;margin-right:0ex;}
DIV TABLE{margin-left:inherit;margin-right:inherit;}
PRE{text-align:left;margin-left:0ex;margin-right:auto;}
BLOCKQUOTE{margin-left:4ex;margin-right:4ex;text-align:left;}
.part{margin:auto;text-align:center;}
.esq {float: left;}
.dir {float: right;}
.titulo {clear: right;}
</STYLE>
</HEAD>

<BODY >
<!--HEVEA command line is: /usr/bin/hevea -fix maternity_pg_20060918.tex -o maternity_pg_20060918.html -->
<!--HTMLHEAD-->
<!--ENDHTML-->
<!--PREFIX <ARG ></ARG>-->
<!--CUT DEF section 1 -->

<p class="titulo">
        <span class="esq">Universidade da Beira Interior</span>
        <span class="dir">21-10-2006</span>&nbsp;
   </p>

<!--TOC section Problem I-->

<H2 CLASS="section">Problem I</H2><!--SEC END -->

<DIV CLASS="center"><FONT SIZE=5><SPAN STYLE="font-variant:small-caps">Maternity</SPAN></FONT></DIV><BR>
<BR>
<!--TOC subsection Problem-->

<H3 CLASS="subsection">Problem</H3><!--SEC END -->

The government of Coviland has decided to close down the maternity
services in some smaller hospitals, so that better care can be
provided to mothers-to-be and their babies in a few central
facilities that are modern, technologically-advanced and
fully-equipped for the task.<BR>
<BR>
This way the government will also save some public money, it is
argued. On the other hand, some mothers-to-be will have to travel
further than usual to deliver their babies, and spend more of their
own money for that.<BR>
<BR>
Acknowledging this, the minister decided to choose the maternities
to close in a way that minimizes the extra cost on the women that
give birth further than usual. Your task is to write a program to
help the minister chose, or better still, a program that does the
choice for the minister.<BR>
<BR>
Your program will be given the list of cities in Coviland, the
population and location of each, plus the list of cities whose
hospitals currently have maternity services and also the number of
services that must be closed down. It then computes the list of
services that should be closed down, so that the total extra cost to
be supported by all the mothers-to-be in traveling to the closest
available service is kept to a minimum.<BR>
<BR>
Coviland is a well managed country in which all cities are connected
by a grid of roads, all of them running either north-south or
east-west. (Actually, the town planners of New York City got their
inspiration for the layout of the streets and avenues of Manhattan
from the road network of Coviland.)<BR>
<BR>
You can assume that all cities are equally fertile, i.e., the number
of babies to be born to parents living in a certain city is
proportional to the population of that city. Furthermore, note the
cost of giving birth in Coviland is just the cost of traveling to
the nearest open maternity, and this is proportional to the distance
traveled.<BR>
<BR>
<!--TOC subsection Input-->

<H3 CLASS="subsection">Input</H3><!--SEC END -->
<b>
The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</b>
<p>
<p>

The first line of the input file contains a positive integer, <I>C</I>, the
number of cities, 0 &lt; <I>C</I> &#8804; 100. Each of the following <I>C</I> lines
contains a unique non-empty string, representing the city name, a positive integer,
representing the population of that city, and two integer numbers,
representing the Euclidean coordinates of the city in Coviland
units, all separated by a space. Next, comes a line with a positive
integer, <I>M</I>, the number of cities currently having maternity services
0 &lt; <I>M</I> &#8804; <I>C</I> and <I>M</I> &#8804; 20. The following <I>M</I> lines contain the list of
such cities. Next, comes the last line, with a single positive
integer, <I>N</I>, the number of services to close down, 0 &lt; <I>N</I> &lt; <I>M</I> and <I>N</I> &#8804;
10. Names of cities in Coviland are written in lowercase only, using
the 26 Latin letters, with no embedded spaces, and their length is 31 or less.<BR>
<BR>
<!--TOC subsection Output-->

<H3 CLASS="subsection">Output</H3><!--SEC END -->

<b>
For each test case, the output must follow the description below.
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
The output file contains <I>N</I> lines (where <I>N</I> is the number of services
to close down), representing the list of cities whose services will
close down. This list is alphabetically sorted. In case of a tie,
i.e., if two or more sets of cities would minimize the total extra
cost, your program should choose the one that is lexicographically
least. (This means that, for example, of the two sets {&#8220;aaa",
&#8220;ccc", &#8220;hhh"} and {&#8220;aaa", &#8220;ddd", &#8220;fff"}, your program should prefer
the former.)<BR>
<BR>
<!--TOC subsection Sample Input-->

<H3 CLASS="subsection">Sample Input</H3><!--SEC END -->

<PRE CLASS="verbatim">
7
covi 2800 500 600
fund 1000 500 400
penam 500 900 600
castle 2500 700 300
belmont 600 900 900
butter 700 200 400
gard 5000 700 900
4
covi
gard
castle
fund
2
</PRE>
<!--TOC subsection Sample Output-->

<H3 CLASS="subsection">Sample Output</H3><!--SEC END -->

<PRE CLASS="verbatim">
castle
covi
</PRE>
<!--HTMLFOOT-->
<!--ENDHTML-->
<!--FOOTER-->

<p class="titulo">
        <span class="esq">Maratona Inter-UniversitÃƒÂ¡ria de ProgramaÃƒÂ§ÃƒÂ£o 2006</span>
        <span class="dir">MIUP'2006</span>&nbsp;
   </p>
<hr>
<b>Author:</b> Pedro Guerreiro (Universidade Nova de Lisboa)

</BODY>
</HTML>

______________________________________________________
988||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>
Interspeech2005
</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

<h1>Many paths, one destination</h1>

<h2>Problem</h2>

<p>
In life, one has many paths to choose, leading to many different lives.
Philosophers have long thought about this problem, that can now be
studied using computers and mathematics. 
</p>
<p>
The objective of this task is to enumerate how many different lives
one can live, given a specific set of choices at each point in time.
One is given a list of events, and a number of choices that can be
selected, for each event. The objective is to count how many ways exist
to go from event zero (birth) to an event that has no choices
(death). 
</p>

<h2>Input</h2>
<p>
nput contains several test cases separated by a blank line. The first number in the each test case is the number of
events. It is followed by a list of events. Each event is described by
a number, n, (possibly 0) of choices. For every one of the n
possible choices, follows a list of the next event (with sequence
number larger than the present event) that will happen
when that choice is picked. An event with no choices (n=0) 
represents a death. It has no further events in life. The first
event, event number 0, represents birth.
</p>


<h2>Output</h2>
<p>
The output for each test case is simply an integer that represents how many different ways
it is possible to live that particular life. This number will always
be less than 2 to the 30th. Print a blank line between test cases.
</p>


<h2>Sample input</h2>

<pre>
6
3 1 2 5
3 2 3 4
2 3 4
0
1 5
0
</pre>

<h2>Sample output</h2>

<pre>
7
</pre>

</html>


______________________________________________________
989||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>
Problem B
</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

<h1>Su Doku</h1>

<h2>Problem</h2>

<p>
In many newspapers we may find some puzzles to solve, one of those is Su
Doku. Given a grid <i>9&times;9</i> with some of entries filled, the objective is to fill
in the grid so that every row, every column, and every <i>3&times;3</i> box contains
the digits <i>1</i> through <i>9</i>.
</p>

<p align="center">
<img src="http://uva.onlinejudge.org/external/9/989a.gif" >
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<img src="http://uva.onlinejudge.org/external/9/989a.gif" >
<br>
<i>source:</i> http://www.sudoku.com
<p>

<h2>Input</h2>

<p>
Input contains several test cases separated by a blank line. Each of them contains an integer <i>n</i> such that <i>1&le;n&le;3</i> and a grid <i>n&sup2;&times;n&sup2;</i> with some of the entries
filled with digits from <i>1</i> to <i>n&sup2;</i> (an entrie not filled will have <i>0</i>). In this case,
the objective is to fill in the grid so that every row, every column, and every
<i>n&times;n</i> box contains the digits <i>1</i> through <i>n&sup2;</i>.
</p>

<h2>Output</h2>

<p>
A solution for the problem. If exists more than one, you should give the
lower one assuming a lexicographic order. If there is no solution, you should
print '<tt>NO SOLUTION</tt>'. For lexicographic comparison you should consider lines
in first place. Print a blank line between test cases.
</p>

<h2> Sample input</h2>
<pre>
3
0 6 0 1 0 4 0 5 0
0 0 8 3 0 5 6 0 0
2 0 0 0 0 0 0 0 1
8 0 0 4 0 7 0 0 6
0 0 6 0 0 0 3 0 0
7 0 0 9 0 1 0 0 4
5 0 0 0 0 0 0 0 2
0 0 7 2 0 6 9 0 0
0 4 0 5 0 8 0 7 0
</pre>

<h2> Sample output</h2>
<pre>
9 6 3 1 7 4 2 5 8
1 7 8 3 2 5 6 4 9
2 5 4 6 8 9 7 3 1
8 2 1 4 3 7 5 9 6
4 9 6 8 5 2 3 1 7
7 3 5 9 6 1 8 2 4
5 8 9 7 1 3 4 6 2
3 1 7 2 4 6 9 8 5
6 4 2 5 9 8 1 7 3
</pre>

</body></html>

______________________________________________________
990||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>
Problem C
</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

<h1>Diving for gold</h1>

<h2>Problem</h2>

<p>
John is a diver and a treasure hunter. He has just found the location of a pirate ship full of treasures. The sofisticated sonar system on board his ship allows him to identify the location, depth and quantity of gold in each suken treasure. Unfortunatelly, John forgot to bring a GPS device and the chances of ever finding this location again are very slim so he has to grab the gold now. To make the situation worse, John has only one compressed air bottle.
</p>
<p>
John wants to dive with the compressed air bottle to recover as much gold as possible  from the wreck. Write a program John can use to select which treasures he should pick to maximize the quantity of gold recovered.
</p>

<p>The problem has the following restrictions:</p>

<UL>
 <LI> There are <i>n</i> treasures <i>{(d<sub>1</sub>,v<sub>1</sub>), (d<sub>2</sub>,v<sub>2</sub>), ... (d<sub>n</sub>,v<sub>n</sub>)}</i> represented by the pair (depth, quantity of gold).  There are at most 30 treasures.
 <LI> The air bottle only allows for <i>t</i> seconds under water. <i>t</i> is at most 1000 seconds.
 <LI> In each dive, John can bring the maximum of one treasure at a time.
 <LI> The descent time is <i>td<sub>i</sub>=w*d<sub>i</sub></i>, where <i>w</i> is an integer constant.
 <LI> The ascent time is <i>ta<sub>i</sub>=2w*d<sub>i</sub></i>, where w is an integer constant.
 <LI> Due to instrument limitations, all parameters are integer.
</UL>

<h2>Input</h2>
<p>
The input to this program consists of a sequence of integer values. Input contains several test cases.
The first line of each dataset should contain the values <i>t</i> and <i>w</i>. The second
line contains the number of treasures. Each of the following lines contains
the depth <i>d<sub>i</sub></i> and quantity of gold <i>v<sub>i</sub></i> of a different treasure. </p>
<p>A blank line separates each test case.</p>

<h2>Output</h2>
<p>
The first line of the output for each dataset should contain the maximum amount of gold that
John can recover from the wreck. The second line should contain the number of
recovered treasures. Each of the following lines should contain the depth and amount of gold of each recovered treasure. Treasures should be presented in the same order as the input file.</p>
<p>Print a blank line between outputs for different datasets.</p>


<h2>Sample input</h2>

<pre>
210 4
3
10 5
10 1
7 2
</pre>
<p>
In this sample input, the bottle of compressed air has a capacity of 200 seconds, the constant <i>w</i> has the value 4 and there are 3 treasures, the first one at a depth of 10 meters and worth 5 coins of gold, the second one at a depth of 10 meters and worth 1 coin of gold, and the third one at 7 meters and worth 2 coins of gold.
</p>

<h2>Sample output</h2>

<pre>
7
2
10 5
7 2
</pre>

</html>

______________________________________________________
991||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>
TIUP June 2005 - Problem D
</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>

<h1>Safe Salutations</h1>

<h2>Problem</h2>

<p>
As any minimally superstitious person knows all too well, terrible
things will happen when four persons do a crossed handshake.
</p>
<p>
You, an intrepid computer scientist, are given the task of easing the
burden of these people by providing them with the feasible set of
handshakes that include everyone in the group while avoiding any such
crossings. The following figure illustrates the case for 3 pairs of
persons:
</p>
<img width=75% src="http://uva.onlinejudge.org/external/9/991.gif" >

<h2>Input</h2>
<p>
The input to this problem contains several datasets separated by a blank line. Each dataset is simply an integer <i>n</i>, the number of
<b>pairs</b> of people in the group, with 1 &le; <i>n</i> &le; 10.
</p>


<h2>Output</h2>
<p>
The output is equally simple. For each dataset, print a single integer indicating the number
of possible crossless handshakes that involve everyone in a group
with <i>n</i> pairs of people. Print a blank line between datasets.
</p>


<h2>Sample Input</h2>

<pre>
4
</pre>

<h2>Sample Output</h2>

<pre>
14
</pre>

</html>

______________________________________________________
992||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
  <title>Problem E</title>
  <meta name="description" content="wondergizmo">
  <meta name="keywords" content="wondergizmo">
  <meta name="resource-type" content="document">
  <meta name="distribution" content="global">
  <meta name="Generator" content="LaTeX2HTML v2002-2-1">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <link rel="STYLESHEET" href="wondergizmo.css">
</head>
<body>

<!--
<div class="navigation">
<br>
</div>
-->

<h1>Customer service cost evaluation</h1>

<!--
<div class="centerline" id="par96" align="center"><big><big><big><big
 class="XXLARGE">C<small>USTOMER SERVICE COST EVALUATION</small></big></big></big></big></div>

<p><big><big><big><big><big>
</big></big></big></big></big></p>
<p></p>
<p><br>
</p>
<p></p>
-->
<h2><a name="SECTION00010000000000000000">Problem</a>
</h2>
<p>
Corporation XPTO has developed a catchy new gizmo it expects to sale in
large numbers.
However its quality assurance department found out a major fault with
the new product, named <span class="textit">WonderGizmo</span>, which
will lead to high
complaint and return rates.
When exposed to direct moon light it will break!
</p>
<p>XTPO's CEO decided to compare the cost of redesigning
<span class="textit">WonderGizmo</span> with the cost of replacing
faulty products, and put
you in charge of developing a tool for calculating the amount of units
that will have to be fixed or replaced during a period of time after
sales begin.
</p>
<p>This is what you were told:
</p>
<p></p>
<ul>
  <li>Sales will begin on a Monday.
    <p></p>
  </li>
  <li><span class="textit">WonderGizmo</span> will sell every day of
the week from 10:00:00 to
18:00:00.
A unit will be sold after every <span class="textit">S</span> seconds
the store is open.
No sales will be conducted after close time.
    <p></p>
  </li>
  <li>The Costumer Care Service will have the same schedule but will
only be
open from Monday to Friday.
It will have a staff of <span class="textit">E</span> employees, each
requiring <span class="textit">R</span>
seconds to repair a broken <span class="textit">WonderGizmo</span>.
A unit which would only be fixed after close time, will not be fixed
that day, but left untouched to be fixed the following work day.
    <p></p>
  </li>
  <li>Every night, <span class="textit">F</span> percent of the faulty
units in circulation will
break. The number of broken units is the floor of this percentage.
The following morning the owners of the failed units will join the
end of the queue at the Costumer Care Service.
They will either leave with a repaired unit or, should they wait for
three days without being serviced, a new replacement unit.
Replacement will be granted each day at closing time, to every client
who is in its third (or more) day of waiting.
That very same night these costumers will be using their units.
    <p>For instance, a client who joins the queue on Monday morning
will be
given a replacement at Wednesday's closing time if he is still waiting
to be serviced.
However, a client who joins the queue on Thursday may have to wait
until Monday's close time. </p>
    <p></p>
  </li>
  <li>Costumer Care Service's fixed units will never again fail.
Replaced units are just like the ones sold to costumers, faulty.
    <p></p>
  </li>
</ul>
<p>
</p>
<h2><a name="SECTION00020000000000000000">Input</a>
</h2>
Your program will receive several test cases separated by a blank line. Each of them contains 5 integer numbers, each on a line of its
own.
The first is the number of seconds between each sale in seconds,
<span class="textit">S</span>.
The second is the numbers of employees repairing <span class="textit">WonderGizmos</span>,
<span class="textit">E</span>.
The third is the number of seconds it takes to repair each unit in
seconds, <span class="textit">R</span>.
The fourth is the percentage of faulty units in circulation that will
fail each night, <span class="textit">F</span>, which will be a number
between 1 and 99.
The fifth number is the number of selling days for which the results
must be known.
<p></p>
<h2><a name="SECTION00030000000000000000">Output</a>
</h2>
<p>
The output for each test case consists of four lines, each with an integer number.
The first line will indicate the number of replaced units.
The second line will indicate the number of repaired units.
The third line will indicate the number of faulty units in
circulation.
The last line represents the length of the queue at the Costumer Care
Service.
</p>
<p>The program will give the results at shop closing time of the last
day. Print a blank line between test cases.
</p>
<p></p>
<h2><a name="SECTION00040000000000000000">Sample input 1</a>
</h2>
<p>
</p>
<pre>3600<br>1<br>28800<br>50<br>2<br></pre>
<p>
</p>
<h2><a name="SECTION00050000000000000000">Sample output 1</a>
</h2>
<p>
</p>
<pre>0<br>1<br>12<br>3<br></pre>
<p>
</p>
<h2><a name="SECTION00060000000000000000">Sample input 2</a>
</h2>
<p>
</p>
<pre>1800<br>2<br>14400<br>10<br>8<br></pre>
<p>
</p>
<h2><a name="SECTION00070000000000000000">Sample output 2</a>
</h2>
<p>
</p>
<pre>3<br>16<br>97<br>15<br></pre>
<p>
</p>
<br>
</body>
</html>

______________________________________________________
993||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Product of digits</TITLE>
<META NAME="description" CONTENT="Product of digits">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Product of digits</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
For a given non-negative integer number <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark>, find the minimal natural <SPAN CLASS="MATH"><I>Q</I></SPAN>
<tex2html_verbatim_mark> such that the product of all digits of <SPAN CLASS="MATH"><I>Q</I></SPAN>
<tex2html_verbatim_mark> is equal <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of input contains one positive integer number, which is the number of data sets. Each subsequent line contains one data set which consists of one non-negative integer number <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> <!-- MATH
 $(0 \le N \le 10^{9})$
 -->
<SPAN CLASS="MATH">(0<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/993img1.png" 
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/993img1.png" 
 ALT="$ \le$">10<SUP>9</SUP>)</SPAN>
<tex2html_verbatim_mark>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each data set, write one line containing the corresponding natural number <SPAN CLASS="MATH"><I>Q</I></SPAN>
<tex2html_verbatim_mark> or `<TT>-1</TT>' if <SPAN CLASS="MATH"><I>Q</I></SPAN>
<tex2html_verbatim_mark> does not exist.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
3 
1 
10 
123456789
</PRE> 

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1 
25 
-1
</PRE> 

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>

______________________________________________________
994||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>POP-Partitioning an Orthogonal Polygon</TITLE>
<META NAME="description" CONTENT="POP-Partitioning an Orthogonal Polygon">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
POP-Partitioning an Orthogonal Polygon</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A <SPAN  CLASS="textit">partition</SPAN> of a polygon <SPAN CLASS="MATH"><I>P</I></SPAN>
<tex2html_verbatim_mark> is a decomposition of <SPAN CLASS="MATH"><I>P</I></SPAN>
<tex2html_verbatim_mark> in which the component subpolygons do not overlap except at their boundaries. The elements that are obtained by means of the partition of <SPAN CLASS="MATH"><I>P</I></SPAN>
<tex2html_verbatim_mark> are called pieces. 

<P>
A polygon is called <SPAN  CLASS="textit">orthogonal</SPAN> if its edges meet at right angles. If each of the pieces of a partition are rectangular, then the partition is a <SPAN  CLASS="textit">rectilinear partition</SPAN>. A rectilinear partition of an orthogonal polygon can be obtained by extending each edge incident to a <SPAN  CLASS="textit">reflex vertex</SPAN> (the interior angle between its two incident vertices is at least <SPAN CLASS="MATH"><IMG
 WIDTH="15" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/994img1.png" 
 ALT="$ \pi$"></SPAN>
<tex2html_verbatim_mark>) of <SPAN CLASS="MATH"><I>P</I></SPAN>
<tex2html_verbatim_mark> through the interior of <SPAN CLASS="MATH"><I>P</I></SPAN>
<tex2html_verbatim_mark> until it hits the boundary of <SPAN CLASS="MATH"><I>P</I></SPAN>
<tex2html_verbatim_mark> (see Figure (a)).

<P>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfbox{p994.eps}$
 -->
<IMG
 WIDTH="869" HEIGHT="511" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/994img1.png" 
 ALT="\epsfbox{p994.eps}">
<tex2html_verbatim_mark>
</DIV>

<P>
Write a program that, given a sequence of vertices, determine the rectilinear partition of a simple orthogonal polygon without holes.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file contains several test cases, each of them as described below.

<P>
The first line contains an integer <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark>, <!-- MATH
 $6 \le N \le 50$
 -->
<SPAN CLASS="MATH">6<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/994img1.png" 
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/994img1.png" 
 ALT="$ \le$">50</SPAN>
<tex2html_verbatim_mark>, which is the number of vertices in the orthogonal polygon. The following <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> lines contain two non-negative integers <SPAN CLASS="MATH"><I>X</I></SPAN>
<tex2html_verbatim_mark> and <SPAN CLASS="MATH"><I>Y</I></SPAN>
<tex2html_verbatim_mark>, <SPAN CLASS="MATH">0<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/994img1.png" 
 ALT="$ \le$"><I>X</I></SPAN>
<tex2html_verbatim_mark>, <SPAN CLASS="MATH"><I>Y</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/994img1.png" 
 ALT="$ \le$">20</SPAN>
<tex2html_verbatim_mark>, separated by a space. Each of the pairs <SPAN CLASS="MATH">(<I>X</I>, <I>Y</I>)</SPAN>
<tex2html_verbatim_mark> specify the <SPAN CLASS="MATH"><I>x</I></SPAN>
<tex2html_verbatim_mark>-coordinate and the <SPAN CLASS="MATH"><I>y</I></SPAN>
<tex2html_verbatim_mark>-coordinate of a vertex. (See the <SPAN  CLASS="textbf">Sample Input</SPAN>, which corresponds to the situation in the Figure (a) above.)

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
<B>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>
The output is the rectilinear partition of the polygon, where each set of four lines represent a rectilinear piece. The pieces must be listed from left to right and from top to bottom. The vertexes of each piece must be listed as indicated in Figure (b).

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
8 
1 2 
4 2 
4 1 
5 1 
5 5 
3 5 
3 4 
1 4
</PRE> 

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1 4 
1 2 
3 2 
3 4 
3 5 
3 4 
4 4 
4 5 
3 4 
3 2 
4 2 
4 4 
4 5 
4 4 
5 4 
5 5 
4 4 
4 2 
5 2 
5 4 
4 2
4 1
5 1
5 2
</PRE> 

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>

______________________________________________________
995||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Super Divisible Numbers</TITLE>
<META NAME="description" CONTENT="Super Divisible Numbers">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Super Divisible Numbers</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A positive integer <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> is a super divisible number in the base <SPAN CLASS="MATH"><I>B</I></SPAN>
<tex2html_verbatim_mark> if and only if the number formed by the <SPAN CLASS="MATH"><I>k</I></SPAN>
<tex2html_verbatim_mark> most significant base-<SPAN CLASS="MATH"><I>B</I></SPAN>
<tex2html_verbatim_mark> digits of <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> is divisible by <SPAN CLASS="MATH"><I>k</I></SPAN>
<tex2html_verbatim_mark>, for all <SPAN CLASS="MATH"><I>k</I></SPAN>
<tex2html_verbatim_mark> between 1 and the number of base-<SPAN CLASS="MATH"><I>B</I></SPAN>
<tex2html_verbatim_mark> digits of <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark>. (By definition, the most significant digit of <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> can not be 0.) 

<P>
For example, <!-- MATH
 $2220301_{4}$
 -->
<SPAN CLASS="MATH">2220301<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is a base-4 super divisible number because <SPAN CLASS="MATH">2<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 1, <SPAN CLASS="MATH">22<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 2, <SPAN CLASS="MATH">222<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 3, <SPAN CLASS="MATH">2220<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 4, <SPAN CLASS="MATH">22203<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 5, <!-- MATH
 $222030_{4}$
 -->
<SPAN CLASS="MATH">222030<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 6, and <!-- MATH
 $2220301_{4}$
 -->
<SPAN CLASS="MATH">2220301<SUB>4</SUB></SPAN>
<tex2html_verbatim_mark> is divisible by 7.

<P>
Find the largest super divisible number of a given base which uses only digits from a given list of digits.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input file contains several test cases. For each of them, the program input is a single line containing the base and the list of valid digits. The base will always be an integer between 4 and 10. The list of valid digits will have a length of at most 10, and may contain repeated digits (the repetitions should be ignored).

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case, the program output is a single line containing the largest super divisible number of the given base which uses only the digits given on the input. It is known that the largest super divisible number will not have more than 50 digits.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
4 0123
10 010011
</PRE>  

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2> 

<P>
<PRE>
2220301
10
</PRE>  

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>

______________________________________________________
996||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Find the Sequence</TITLE>
<META NAME="description" CONTENT="Find the Sequence">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Find the Sequence</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The problem of finding the next term of a given sequence of numbers is usually proposed in QI tests. We want to construct a method and a codification that allow us to know all the sequence from the first <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> terms.

<P>
Let <!-- MATH
 $S = (S_{i})_{i \in \mathbb{N}}$
 -->
<SPAN CLASS="MATH"><I>S</I> = (<I>S</I><SUB>i</SUB>)<SUB>i <IMG
 WIDTH="13" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\scriptstyle \in$"> <IMG
 WIDTH="17" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\scriptstyle \mathbb {N}$"></SUB></SPAN>
<tex2html_verbatim_mark> denote a sequence of real numbers whose <SPAN CLASS="MATH"><I>i</I></SPAN>
<tex2html_verbatim_mark>-order term is <SPAN CLASS="MATH"><I>S</I><SUB>i</SUB></SPAN>
<tex2html_verbatim_mark>. We codify a constant sequence with the following operator: 

<P>
<P><!-- MATH
 \begin{displaymath}
S = [n] \quad \mbox{ meaning that } \quad S_{i} = n \quad \forall i \in \mathbb{N},
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>S</I> = [<I>n</I>]&nbsp;&nbsp;&nbsp;&nbsp; meaning that &nbsp;&nbsp;&nbsp;&nbsp;<I>S</I><SUB>i</SUB> = <I>n</I>&nbsp;&nbsp;&nbsp;&nbsp;<IMG
 WIDTH="14" HEIGHT="16" ALIGN="bottom" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\displaystyle \forall$"><I>i</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\displaystyle \in$"> <IMG
 WIDTH="20" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\displaystyle \mathbb {N}$">,
</DIV><P>
<tex2html_verbatim_mark></P>
where <!-- MATH
 $n \in \mathbb{Z}$
 -->
<SPAN CLASS="MATH"><I>n</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \in$"> <IMG
 WIDTH="17" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \mathbb {Z}$"></SPAN>
<tex2html_verbatim_mark>. We also define the following operators on a given sequence of numbers <!-- MATH
 $S = (S_{i})_{i \in \mathbb{N}}$
 -->
<SPAN CLASS="MATH"><I>S</I> = (<I>S</I><SUB>i</SUB>)<SUB>i <IMG
 WIDTH="13" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\scriptstyle \in$"> <IMG
 WIDTH="17" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\scriptstyle \mathbb {N}$"></SUB></SPAN>
<tex2html_verbatim_mark>: 

<P>
<P><!-- MATH
 \begin{displaymath}
V = [m + S] \quad \mbox{ meaning that } \quad V_{i} = \cases{m & , $i=1$ \cr V_{i-1}+ S_{i-1} & , $i > 1$ \cr};
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>V</I> = [<I>m</I> + <I>S</I>]&nbsp;&nbsp;&nbsp;&nbsp; meaning that &nbsp;&nbsp;&nbsp;&nbsp;<I>V</I><SUB>i</SUB> = <IMG
 WIDTH="181" HEIGHT="55" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\displaystyle \cases{m &amp; , $i=1$ \cr V_{i-1}+ S_{i-1} &amp; , $i &gt; 1$ \cr}$">;
</DIV><P>
<tex2html_verbatim_mark></P>
<P><!-- MATH
 \begin{displaymath}
V = [m \ast S] \quad \mbox{ meaning that } \quad V_{i} = \cases{m \ast S_{1} & , $i=1$ \cr V_{i-1} \ast S_i & , $i > 1$ \cr};
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>V</I> = [<I>m</I> <TT>*</TT> <I>S</I>]&nbsp;&nbsp;&nbsp;&nbsp; meaning that &nbsp;&nbsp;&nbsp;&nbsp;<I>V</I><SUB>i</SUB> = <IMG
 WIDTH="158" HEIGHT="55" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$\displaystyle \cases{m \ast S_{1} &amp; , $i=1$ \cr V_{i-1} \ast S_i &amp; , $i &gt; 1$ \cr}$">;
</DIV><P>
<tex2html_verbatim_mark></P>
where <!-- MATH
 $m \in \mathbb{N}$
 -->
<SPAN CLASS="MATH"><I>m</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \in$"> <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \mathbb {N}$"></SPAN>
<tex2html_verbatim_mark>. For example we have the following codifications:

<P>

<P>
<BR>

<!-- MATH
 $\begin{array}{cc} [2 + [1]] = 2, 3, 4, 5, 6 \cdots & [1 + [2 + [1]]] = 1, 3, 6, 10, 15, 21, 28, 36 \cdots  \\
\par [2 \ast [1+[2+[1 ] ] ] ] = 2, 6, 36, 360, 5400, 113400 \cdots & [2 \ast [5 + [-2]]] = 10, 30, 30, -30, 90, -450, 3150 \cdots \end{array}$
 -->
<SPAN CLASS="MATH"><TABLE>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>[2 + [1]] = 2, 3, 4, 5, 6<SUP> ... </SUP></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>[1 + [2 + [1]]] = 1, 3, 6, 10, 15, 21, 28, 36<SUP> ... </SUP></TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP><P>[2 <TT>*</TT> [1 + [2 + [1]]]] = 2, 6, 36, 360, 5400, 113400<SUP> ... </SUP></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>[2 <TT>*</TT> [5 + [- 2]]] = 10, 30, 30, -30, 90, -450, 3150<SUP> ... </SUP></TD></TR>
</TABLE></SPAN>
<tex2html_verbatim_mark>

<P>

<P>
<BR>
Given a sequence of <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> integer numbers and an integer <SPAN CLASS="MATH"><I>M</I></SPAN>
<tex2html_verbatim_mark>, the problem is to write the codification that generate the sequence and have at most <SPAN CLASS="MATH"><I>M</I></SPAN>
<tex2html_verbatim_mark> operators. We have that <!-- MATH
 $2 \le N \le 51$
 -->
<SPAN CLASS="MATH">2<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \le$">51</SPAN>
<tex2html_verbatim_mark> and <!-- MATH
 $1 \le M \le 50$
 -->
<SPAN CLASS="MATH">1<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \le$"><I>M</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/996img1.png" 
 ALT="$ \le$">50</SPAN>
<tex2html_verbatim_mark>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input file contains several test cases. For each of them, the program input is a single line containing <SPAN CLASS="MATH"><I>M</I></SPAN>
<tex2html_verbatim_mark> followed by the list of first terms of the sequence. The terms of the given sequence are positive (in the interval [1, 200000]) or negative integers (in the interval [-200000, -1]), and their number <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> can differ but it is always greater than <SPAN CLASS="MATH"><I>M</I></SPAN>
<tex2html_verbatim_mark> .

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case, the program output is a single line containing the codification without any space. If there exists no solution with at most <SPAN CLASS="MATH"><I>M</I></SPAN>
<tex2html_verbatim_mark> operators, the output must be <TT>[0]</TT>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
3 10 30 30 -30 90 -450 3150 
2 2 6 36 360 5400 113400
</PRE> 

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
[2*[5+[-2]]] 
[0]
</PRE> 

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>

______________________________________________________
997||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Show the Sequence</TITLE>
<META NAME="description" CONTENT="Show the Sequence">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Show the Sequence</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
The problem of finding the next term of a given sequence of numbers is usually proposed in QI tests. We want to generate the <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> terms of a sequence from a given codification of the sequence.

<P>
Let <!-- MATH
 $S = (S_{i})_{i \in \mathbb{N}}$
 -->
<SPAN CLASS="MATH"><I>S</I> = (<I>S</I><SUB>i</SUB>)<SUB>i <IMG
 WIDTH="13" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\scriptstyle \in$"> <IMG
 WIDTH="17" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\scriptstyle \mathbb {N}$"></SUB></SPAN>
<tex2html_verbatim_mark> denote a sequence of real numbers whose <SPAN CLASS="MATH"><I>i</I></SPAN>
<tex2html_verbatim_mark>-order term is <SPAN CLASS="MATH"><I>S</I><SUB>i</SUB></SPAN>
<tex2html_verbatim_mark>. We codify a constant sequence with the following operator: 

<P>
<P><!-- MATH
 \begin{displaymath}
S = [n] \quad \mbox{ meaning that } \quad S_{i} = n \quad \forall i \in \mathbb{N},
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>S</I> = [<I>n</I>]&nbsp;&nbsp;&nbsp;&nbsp; meaning that &nbsp;&nbsp;&nbsp;&nbsp;<I>S</I><SUB>i</SUB> = <I>n</I>&nbsp;&nbsp;&nbsp;&nbsp;<IMG
 WIDTH="14" HEIGHT="16" ALIGN="bottom" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\displaystyle \forall$"><I>i</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\displaystyle \in$"> <IMG
 WIDTH="20" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\displaystyle \mathbb {N}$">,
</DIV><P>
<tex2html_verbatim_mark></P>
where <!-- MATH
 $n \in \mathbb{Z}$
 -->
<SPAN CLASS="MATH"><I>n</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$ \in$"> <IMG
 WIDTH="17" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$ \mathbb {Z}$"></SPAN>
<tex2html_verbatim_mark>. We also define the following operators on a given sequence of numbers <!-- MATH
 $S = (S_{i})_{i \in \mathbb{N}}$
 -->
<SPAN CLASS="MATH"><I>S</I> = (<I>S</I><SUB>i</SUB>)<SUB>i <IMG
 WIDTH="13" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\scriptstyle \in$"> <IMG
 WIDTH="17" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\scriptstyle \mathbb {N}$"></SUB></SPAN>
<tex2html_verbatim_mark>: 

<P>
<P><!-- MATH
 \begin{displaymath}
V = [m + S] \quad \mbox{ meaning that } \quad V_{i} = \cases{m & , $i=1$ \cr V_{i-1}+ S_{i-1} & , $i > 1$ \cr};
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>V</I> = [<I>m</I> + <I>S</I>]&nbsp;&nbsp;&nbsp;&nbsp; meaning that &nbsp;&nbsp;&nbsp;&nbsp;<I>V</I><SUB>i</SUB> = <IMG
 WIDTH="181" HEIGHT="55" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\displaystyle \cases{m &amp; , $i=1$ \cr V_{i-1}+ S_{i-1} &amp; , $i &gt; 1$ \cr}$">;
</DIV><P>
<tex2html_verbatim_mark></P>
<P><!-- MATH
 \begin{displaymath}
V = [m \ast S] \quad \mbox{ meaning that } \quad V_{i} = \cases{m \ast S_{1} & , $i=1$ \cr V_{i-1} \ast S_i & , $i > 1$ \cr};
\end{displaymath}
 -->
</P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<I>V</I> = [<I>m</I> <TT>*</TT> <I>S</I>]&nbsp;&nbsp;&nbsp;&nbsp; meaning that &nbsp;&nbsp;&nbsp;&nbsp;<I>V</I><SUB>i</SUB> = <IMG
 WIDTH="158" HEIGHT="55" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$\displaystyle \cases{m \ast S_{1} &amp; , $i=1$ \cr V_{i-1} \ast S_i &amp; , $i &gt; 1$ \cr}$">;
</DIV><P>
<tex2html_verbatim_mark></P>
where <!-- MATH
 $m \in \mathbb{N}$
 -->
<SPAN CLASS="MATH"><I>m</I> <IMG
 WIDTH="16" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$ \in$"> <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$ \mathbb {N}$"></SPAN>
<tex2html_verbatim_mark>. For example we have the following codifications:

<P>

<P>
<BR>

<!-- MATH
 $\begin{array}{cc} [2 + [1]] = 2, 3, 4, 5, 6 \cdots & [1 + [2 + [1]]] = 1, 3, 6, 10, 15, 21, 28, 36 \cdots  \\
\par [2 \ast [1+[2+[1 ] ] ] ] = 2, 6, 36, 360, 5400, 113400 \cdots & [2 \ast [5 + [-2]]] = 10, 30, 30, -30, 90, -450, 3150 \cdots \end{array}$
 -->
<SPAN CLASS="MATH"><TABLE>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>[2 + [1]] = 2, 3, 4, 5, 6<SUP> ... </SUP></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>[1 + [2 + [1]]] = 1, 3, 6, 10, 15, 21, 28, 36<SUP> ... </SUP></TD></TR>
<TR><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP><P>[2 <TT>*</TT> [1 + [2 + [1]]]] = 2, 6, 36, 360, 5400, 113400<SUP> ... </SUP></TD><TD VALIGN=BASELINE ALIGN=CENTER NOWRAP>[2 <TT>*</TT> [5 + [- 2]]] = 10, 30, 30, -30, 90, -450, 3150<SUP> ... </SUP></TD></TR>
</TABLE></SPAN>
<tex2html_verbatim_mark>

<P>

<P>
<BR>
Given a codification, the problem is to write the first <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> terms of the sequence.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input file contains several test cases. For each of them, the program input is a single line containing the codification, without any space, followed by an integer <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> <!-- MATH
 $(2 \le N \le 50)$
 -->
<SPAN CLASS="MATH">(2<IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$ \le$"><I>N</I><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/9/997img1.png" 
 ALT="$ \le$">50)</SPAN>
<tex2html_verbatim_mark>.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case, the program output is a single line containing the list of first <SPAN CLASS="MATH"><I>N</I></SPAN>
<tex2html_verbatim_mark> terms of the sequence.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2> 

<P>
<PRE>
[2+[1]] 3 
[2*[5+[-2]]] 7
</PRE>  

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2> 

<P>
<PRE>
2 3 4 
10 30 30 -30 90 -450 3150
</PRE> 

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>

______________________________________________________
998||||||false||||||

<!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Dendogram</TITLE>
<META NAME="description" CONTENT="Dendogram">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v2K.1beta">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="htmlatex.css">

</HEAD>

<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0000ff><TR><TD><B><FONT SIZE=5 COLOR=#FFff00>&nbsp;<A NAME="SECTION0001000000000000000000">
Dendogram</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
This problem is about building a tree from a simple concept. 

<P>
A dendogram is a tree for visual classification of similarity, commonly used in Biology for grouping species. Let us see an example. The dendogram for the following data <SPAN CLASS="MATH">(<I>a</I>, 1)</SPAN>
<tex2html_verbatim_mark>, <SPAN CLASS="MATH">(<I>b</I>, 3)</SPAN>
<tex2html_verbatim_mark> and <SPAN CLASS="MATH">(<I>c</I>, 12)</SPAN>
<tex2html_verbatim_mark>, where the first parameter is the object name, and the second parameter is the object value, is presented in the following picture. 

<P>
<PRE>
                       +----- a,1 
                       | 
  +------------------- 2 
  |                    | 
  |                    +----- b,3 
 -7 
  | 
  +-------------------------- c,12
</PRE> 

<P>
The Definition and Example clarifies how to build it. 

<P>

<P>
<BR>

<SPAN  CLASS="textbf">Definition and terminology</SPAN>. An <SPAN  CLASS="textbf">object</SPAN> is a pair <TT>name,value</TT>. Elements of a dendogram are <SPAN  CLASS="textbf">clusters</SPAN> (middle tree elements) and objects (the leaves). An association of two objects or clusters forms a new cluster. In a dendogram, <SPAN  CLASS="textbf">two</SPAN> elements are grouped in one cluster when they have the closest values of all elements available. The arithmetic mean of the two elements is associated with the cluster. 

<P>

<P>
<BR>

<SPAN  CLASS="textbf">Example.</SPAN> In the dendogram of the picture, objects `a' e `b' are close in value. Together, they make a <SPAN  CLASS="textit">cluster</SPAN> with mean <!-- MATH
 $(1+3)/2 = 2$
 -->
<SPAN CLASS="MATH">(1 + 3)/2 = 2</SPAN>
<tex2html_verbatim_mark>. Then object `c' and this cluster with value 2 produce a new cluster with mean <!-- MATH
 $(2+12)/2=7$
 -->
<SPAN CLASS="MATH">(2 + 12)/2 = 7</SPAN>
<tex2html_verbatim_mark>.

<P>
Write a program that accept a sequence of numbers and produces a dendogram tree as a infix list of elements (clusters and objects). 

<P>
The input is a sequence of positive numbers. Each number is associated with a label automatically given, starting by letter `a', then `b', and so on (see section <SPAN  CLASS="textbf">Input</SPAN> below). 

<P>

<P>
<BR>

<SPAN  CLASS="textbf">Solution uniqueness.</SPAN> Usually there are several ways to draw the same dendogram tree, for example, mirroring the dendogram tree. However, as stated in general rules, we are forced to choose a unique solution representation each time an equal input is given. 

<P>
To guarantee a unique solution, the comparisons must include the names when equal values are being compared. For example, <!-- MATH
 $(1, a) < (1, b)$
 -->
<SPAN CLASS="MATH">(1, <I>a</I>) &lt; (1, <I>b</I>)</SPAN>
<tex2html_verbatim_mark> where 1 is the value of both `a' and `b' objects. Clusters also have names, and clusters with equal value must use the same lexicographical comparison. The rules are: 

<P>

<OL>
<LI>Each node represents an object or a cluster, and each node has an ASCII label with a maximum width of 30 characters. 
</LI>
<LI>Each object node has a label which is a single letter, automatically given, as described in the input section. 12
</LI>
<LI>Each cluster node has a label formed by concatenation of the lexicographical `lower order label' followed by the `higher order label' of the two branches. The top cluster has a label which contains all used letters in the input. 
</LI>
<LI>Lower numbers must be grouped first. Example: {1, 2} must be grouped before {4, 5}. 
</LI>
</OL>

<P>
All numeric calculations and store must use `float' number format.

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<B>The input will contain several test cases, each of them as described below.
Consecutive test cases are separated by a single blank line.
</B>

<P>

<P><P>
<BR>

<P>
A sequence of positive numbers, line by line, ended by 0. 

<P>
Your program must associate each number with a letter from `a' to `z' using standard ASCII sequence (except the 0, which only ends the sequence). 

<P>
Please take in consideration the following <SPAN  CLASS="textbf">Input Assumptions:</SPAN> 

<P>

<OL>
<LI>The input values are from the set {1, ..., 99}. 
</LI>
<LI>The input has a maximum of 26 (twenty six) numbers, and more than 2 (two) numbers.
</LI>
</OL>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
<B>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</B>

<P>

<P><P>
<BR>

<P>
The requested output is a unique dendogram tree without shape: only the list of nodes in <SPAN  CLASS="textit">infix</SPAN> form. The output must obey the following rules: 

<P>

<OL>
<LI>The infix output of the tree is always obtained writing the nodes from the lower label to the higher label. 
</LI>
<LI>Each node represents an object or a cluster. 
</LI>
<LI>Each node in each line. 
</LI>
<LI>Each node value is outputted as a positive integer, possibly rounded to the nearest integer of the stored value. 
</LI>
<LI>Each node has the following output syntax: <TT>positive integer number</TT>,<TT>label</TT>. A sample is <TT>13,kerolinux</TT> : this is a cluster node valuing 13 (possible 12.5 to 13.4999...) and the cluster label is `kerolinux'.
</LI>
</OL>

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1 
12 
45 
3 
0
</PRE> 

<P>

<H2><FONT size=4 COLOR=#ff0000><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
1,a 
2,ad 
3,d 
7,adb 
12,b 
26,adbc 
45,c
</PRE> 

<P>


<P>
<BR><HR>

</BODY>
</HTML>
</HTML>

______________________________________________________
999||||||false||||||
<html><head><!--Converted with LaTeX2HTML 2K.1beta (1.48)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck, Roger Isanta and others --><title>Book Signatures</title>




<meta name="description" content="Book Signatures">
<meta name="keywords" content="htmlatex">
<meta name="resource-type" content="document">
<meta name="distribution" content="global">

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="Generator" content="LaTeX2HTML v2K.1beta">
<meta http-equiv="Content-Style-Type" content="text/css">

<!--h1><br clear="all"><center><table bgcolor="#0000ff"><tbody><tr><td><b><font color="#ffff00" size="5">&nbsp;<a name="SECTION0001000000000000000000">
Book Signatures</a>&nbsp;</font></b></td></tr></tbody></table></center>
</h1-->

<p>
Have you ever imagined how you can make a book by yourself? Let's
suppose you already have an hardcover of the right size. The next tasks
are printing the contents of the book onto sheets of paper (4 pages per
sheet, 2 per side), followed by folding the sheets in half, and then
stitching the sheets along the bisection to the cover. Simple, isn't
it? </p><p>
Not quite so! There are a couple of problems that must be solved. For
instance, there is a rather low limit to the number of sheets you can
stitch at a time (say, up to 32), and then there is the challenge of
printing the pages in the right order. If your book has hundreds pages
you will have to do multiple stitches, one for each section of sheets
of paper. A book signature is a section of sheets of printed paper
folded in half, ready to be stitched. </p><p>
Let's see an example: you want to make a mini-book with just 16 pages,
but the needle and thread you use only allow stitching 2 sheets of
paper at a time. In these conditions your book will have 2 signatures,
each containing (2 sheets of paper <span class="MATH">Ã—</span>
<tex2html_verbatim_mark> 4 pages per sheet) = 8 pages per signature.
The following figure shows a top view of the folded sheets with numbers
indicating the book pages that you printed on each side. </tex2html_verbatim_mark></p><p>

</p><p>
<br>
</p><div align="center">
</div><pre>  Signature 1: pages 1-8          Signature 2: pages 9-16 

   Sheet 1      Sheet 2             Sheet 1      Sheet 2
                                                  
     /\           /\                  /\           /\ 
  1 /  \ 8     3 /  \ 6            9 /  \ 16   11 /  \ 14
   /    \       /    \              /    \       /    \ 
  /      \     /      \            /      \     /      \
 / 2    7 \   / 4    5 \          / 10  15 \   / 12  13 \
</pre>
<div align="center">
</div> 

<p>

</p><p>
<br>
To finish making the mini-book you place sheet 2 inside sheet 1 (of
signature 1) and stitch them both to the hard cover. The operation is
repeated for sheets 1 and 2 of signature 2. And there you have it: a
hand-made mini-book!
</p><p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001001000000000000000">
Input</a>&nbsp;</font>
</h2>

<p>The input file contains several test cases. For each of them, the
input is a single line containing two integer numbers <b>n</b> and <b>m</b> separated by a
semi-colon. The first integer indicates the number of pages of the
book; the second integer is the size of the signature, measured in
sheets of paper. For example, <tt>16;2</tt> reflects the mini-book scenario described previously. ( 0<<b>n</b><=10000 , 0<<b>m</b><=32 ).
</p><p>

</p><p>
<br>

<b>Note:</b> if the number of pages of the book is not a multiple of (4 pages per sheet <span class="MATH">Ã—</span>
<tex2html_verbatim_mark> number of sheets per signature) you must add
empty pages at the end of the book. For instance, if the mini-book had
15 pages you would have to adjust the book size to 16.
</tex2html_verbatim_mark></p><p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001002000000000000000">
Output</a>&nbsp;</font>
</h2>

<p>
<b>For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>

</p><p>

</p><p></p><p>
<br>The output contains instructions for printing the signatures. For
each signature you must indicate what pages will be printed on each
side of the each sheet of paper. See the sample output for the exact
output format; watch carefully that only lowercase letters are used as
well as the positions of spaces, colon, and semi-colon symbols.
</p><p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001003000000000000000">
Sample Input</a>&nbsp;</font>
</h2>

<p>
</p><pre>9;2
</pre> 

<p>

</p><h2><font color="#ff0000" size="4"><a name="SECTION0001004000000000000000">
Sample Output</a>&nbsp;</font>
</h2>

<p>
</p><pre>signature 1
 sheet 1: pages 2 and 7 (front); pages 8 and 1 (back) 
 sheet 2: pages 4 and 5 (front); pages 6 and 3 (back) 
signature 2
 sheet 1: pages 10 and 15 (front); pages 16 and 9 (back) 
 sheet 2: pages 12 and 13 (front); pages 14 and 11 (back)
</pre> 

<p>
<br></p><hr>

</body></html>

______________________________________________________
10000||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Longest Paths</TITLE>
<META NAME="description" CONTENT="Problem A: Longest Paths">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Longest Paths</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
It is a well known fact that some people do not have their social abilities completely 
enabled.
One example is the lack of talent for calculating distances and intervals of time. 
This causes
some people to always choose the longest way to go from one place to another, 
with the
consequence that they are late to whatever appointments they have, including weddings 
and
programming contests. This can be highly annoying for their friends.

<P>
C&#233;sar has this kind of problem. When he has to go from one point to another
he realizes that he has to visit many people, and thus always chooses the
longest path. One of C&#233;sar's friends, Felipe, has understood the nature of
the problem. Felipe thinks that with the help of a computer he might be able
to calculate the time that C&#233;sar is going to need to arrive to his
destination. That way he could spend his time in something more enjoyable than
waiting for C&#233;sar. 

<P>

<P>
<BR>
Your goal is to help Felipe developing a program that
computes the length of the longest path that can be constructed in a given
graph from a given starting point (C&#233;sar's residence). You can assume that
the graph has no cycles (there is no path from any node to itself), so C&#233;sar
will reach his destination in a finite time. In the same line of reasoning,
nodes are not considered directly connected to themselves. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
The input
consists of a number of cases. The first line on each case contains a positive
number <I>n</I> (
<!-- MATH: $1 < n \le 100$ -->
<IMG
 WIDTH="96" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10000img1.gif" 
 ALT="$1 < n \le 100$">)
that specifies the number of points that C&#233;sar
might visit (i.e., the number of nodes in the graph).

<P>
A value of <I>n</I> = 0
indicates the end of the input. 

<P>

<P>
<BR>
After this, a second number <I>s</I> is provided,
indicating the starting point in C&#233;sar's journey (
<!-- MATH: $1 \le s \le n$ -->
<IMG
 WIDTH="78" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10000img1.gif" 
 ALT="$1 \le s \le n$">). Then, you
are given a list of pairs of places <I>p</I> and <I>q</I>, one pair per line, with the
places on each line separated by white-space. The pair ``<IMG
 WIDTH="27" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10000img1.gif" 
 ALT="$p \ q$">" indicates
that C&#233;sar can visit <I>q</I> after <I>p</I>.

<P>
A pair of zeros (``<TT>0 0</TT>") indicates
the end of the case. 

<P>

<P>
<BR>
As mentioned before, you can assume that the graphs provided will
not be cyclic.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case you have to find the length of the
longest path that begins at the starting place. You also have to print the
number of the final place of such longest path. If there are several paths of
maximum length, print the final place with smallest number. 

<P>

<P>
<BR>
Print a new line after each test case. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
1
1 2
0 0
5
3
1 2
3 5
3 1
2 4
4 5
0 0
5
5
5 1
5 2
5 3
5 4
4 1
4 2
0 0
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case 1: The longest path from 1 has length 1, finishing at 2.

Case 2: The longest path from 3 has length 4, finishing at 5.

Case 3: The longest path from 5 has length 2, finishing at 1.
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10001||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Garden of Eden</TITLE>
<META NAME="description" CONTENT="Problem B: Garden of Eden">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Garden of Eden</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Cellular automata are mathematical idealizations of physical systems in which both 
space and
time are discrete, and the physical quantities take on a finite set of
discrete values. A cellular automaton consists of a lattice (or array),
usually infinite, of discrete-valued variables. The state of such automaton is
completely specified by the values of the variables at each place in the
lattice. Cellular automata evolve in discrete time steps, with the value at
each place (cell) being affected by the values of variables at sites in its
neighborhood on the previous time step. For each automaton there is a set of
rules that define its evolution. 

<P>
For most cellular automata there are
configurations (states) that are unreachable: no state will produce them by the
application of the evolution rules. These states are called Gardens of Eden
for they can only appear as initial states. As an example consider a trivial
set of rules that evolve every cell into 0; for this automaton any state with
non-zero cells is a Garden of Eden. 

<P>
In general, finding the ancestor of a given
state (or the non-existence of such ancestor) is a very hard, compute
intensive, problem. For the sake of simplicity we will restrict the problem to
1-dimensional binary finite cellular automata. This is, the number of cells is
a finite number, the cells are arranged in a linear fashion and their state
will be either 0 or 1. To further simplify the problem each cell state will
depend only on its previous state and that of its immediate neighbors (the one
to the left and the one to the right). 

<P>
The actual arrangement of the cells
will be along a circumference, so that the last cell is next to the first.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Problem definition</A>&nbsp;</FONT>
</H2> 
Given a circular binary cellular automaton you
must find out whether a given state is a Garden of Eden or a reachable state.
The cellular automaton will be described in terms of its evolution rules. For
example, the table below shows the evolution rules for the automaton:
Cell=XOR(Left,Right). 

<P>

<P>
<BR>

<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Left</TD>
<TD ALIGN="CENTER">Cell</TD>
<TD ALIGN="CENTER">Right</TD>
<TD ALIGN="CENTER">New</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">[<I>i</I>-1]</TD>
<TD ALIGN="CENTER">[<I>i</I>]</TD>
<TD ALIGN="CENTER">[<I>i</I> + 1]</TD>
<TD ALIGN="CENTER">State</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">0 * 2<SUP>0</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">
0</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">1 * 2<SUP>1</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">0 * 2<SUP>2</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">1 * 2<SUP>3</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">1 * 2<SUP>4</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">0 * 2<SUP>5</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">1 * 2<SUP>6</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">0</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">0 * 2<SUP>7</SUP></TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER" COLSPAN=4>&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">90</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">=</TD>
<TD ALIGN="CENTER">Automaton Identifier</TD>
</TR>
<TR><TD ALIGN="CENTER" COLSPAN=9>&nbsp;</TD>
</TR>
</TABLE></DIV>

<P>

<P>
<BR>
Notice that, with the restrictions imposed to this problem, there are only 256
different automata. An identifier for each automaton can be generated by
taking the New State vector and interpreting it as a binary number (as shown
in the table). For instance, the automaton in the table has identifier 90. The
<EM>Identity</EM> automaton (every state evolves to itself) has identifier 204.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
The input will consist of several test cases. Each input
case will describe, in a single line, a cellular automaton and a state. The
first item in the line will be the identifier of the cellular automaton you
must work with. The second item in the line will be a positive integer <I>N</I>
(
<!-- MATH: $4 \le N \le 32$ -->
<IMG
 WIDTH="93" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10001img1.gif" 
 ALT="$4 \le N \le 32$">)
indicating the number of cells for this test case. Finally,
the third item in the line will be a state represented by a string of exactly
<I>N</I> zeros and ones. Your program must keep reading lines until the end of the
input (end of file). 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Output</A>&nbsp;</FONT>
</H2>
If an input case describes a Garden of Eden you must
output the string <TT>GARDEN OF EDEN</TT>. If the input does not describe a Garden
of Eden (it is a reachable state) you must output the string <TT>REACHABLE</TT>.

<P>
The output for each test case must be in a different line. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
0 4 1111
204 5 10101
255 6 000000
154 16 1000000000000000
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
GARDEN OF EDEN
REACHABLE
GARDEN OF EDEN
GARDEN OF EDEN
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10002||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Center of Masses</TITLE>
<META NAME="description" CONTENT="Problem C: Center of Masses">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Center of Masses</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Find out the center of masses of a convex polygon.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
A series of convex polygons, defined as a number <I>n</I> (<IMG
 WIDTH="64" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10002img1.gif" 
 ALT="$n \le 100$">)
stating the
number of points of the polygon, followed by <I>n</I> different pairs of integers
(in no particular order), denoting the <I>x</I> and <I>y</I> coordinates of each point.
The input is finished by a fake ``polygon" with <I>m</I> (<I>m</I> &lt; 3) points, which
should not be processed.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2> 
For each polygon, a single line with the coordinates <I>x</I>
and <I>y</I> of the center of masses of that polygon, rounded to three decimal
digits.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
4 0 1 1 1 0 0 1 0
3 1 2 1 0 0 0
7
-4 -4
-6 -3
-4 -10
-7 -12
-9 -8
-3 -6
-8 -3
1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
0.500 0.500
0.667 0.667
-6.102 -7.089
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10003||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Cutting Sticks</TITLE>
<META NAME="description" CONTENT="Problem D: Cutting Sticks">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Cutting Sticks</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
You have to cut a wood stick into pieces. The most affordable company, The
Analog Cutting Machinery, Inc. (ACM), charges money according to the length of
the stick being cut. Their procedure of work requires that they only make one
cut at a time. 

<P>
It is easy to notice that different selections in the order of
cutting can led to different prices. For example, consider a stick of length 10
meters that has to be cut at 2, 4 and 7 meters from one end. There are several
choices. One can be cutting first at 2, then at 4, then at 7. This leads to a
price of 10 + 8 + 6 = 24 because the first stick was of 10 meters, the
resulting of 8 and the last one of 6. Another choice could be cutting at 4,
then at 2, then at 7. This would lead to a price of 10 + 4 + 6 = 20, which is
a better price. 

<P>
Your boss trusts your computer abilities to find out the
minimum cost for cutting a given stick.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
The input will consist of several input cases. The first
line of each test case will contain a positive number <I>l</I> that represents the
length of the stick to be cut. You can assume <I>l</I> &lt; 1000. The next line will
contain the number <I>n</I> (<I>n</I> &lt; 50) of cuts to be made. 

<P>
The next line consists
of <I>n</I> positive numbers <I>c</I><SUB><I>i</I></SUB> (
<!-- MATH: $0 < c_i < l$ -->
0 &lt; <I>c</I><SUB><I>i</I></SUB> &lt; <I>l</I>) representing the places where the
cuts have to be done, given in strictly increasing order. 

<P>
An input case with <I>l</I> = 0 will represent the end of the input. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2> 
You have to print the cost of the
optimal solution of the cutting problem, that is the minimum cost of cutting
the given stick. Format the output as shown below. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
100
3
25 50 75
10
4
4 5 7 8
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
The minimum cutting is 200.
The minimum cutting is 22.
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10004||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Bicoloring</TITLE>
<META NAME="description" CONTENT="Problem E: Bicoloring">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Bicoloring</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
In 1976 the ``Four Color Map Theorem" was proven with the assistance of a
computer. This theorem states that every map can be colored using only four
colors, in such a way that no region is colored using the same color as a
neighbor region. 

<P>
Here you are asked to solve a simpler similar problem. You
have to decide whether a given arbitrary connected graph can be bicolored.
That is, if one can assign colors (from a palette of two) to the nodes in such
a way that no two adjacent nodes have the same color. To simplify the problem
you can assume:

<P>
<UL>
<LI>no node will have an edge to itself.
<LI>the graph is nondirected. That is, if a node <I>a</I> is said to be connected
to a node <I>b</I>, then you must assume that <I>b</I> is connected to <I>a</I>.
<LI>the graph will be strongly connected. That is, there will be at least
one path from any node to any other node.
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
The input consists of several test cases. Each test case
starts with a line containing the number <I>n</I> (
<!-- MATH: $1 < n < 200$ -->
1 &lt; <I>n</I> &lt; 200) of different
nodes. The second line contains the number of edges <I>l</I>. After this, <I>l</I> lines
will follow, each containing two numbers that specify an edge between the two
nodes that they represent. A node in the graph will be labeled using a number
<I>a</I> (
<!-- MATH: $0 \le a < n$ -->
<IMG
 WIDTH="79" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10004img2.gif" 
 ALT="$0 \le a < n$">). 

<P>
An input with <I>n</I> = 0 will mark the end of the input and is
not to be processed.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2> 
You have to decide whether the input graph can be
bicolored or not, and print it as shown below.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3
3
0 1
1 2
2 0
9
8
0 1
0 2
0 3
0 4
0 5
0 6
0 7
0 8
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
NOT BICOLORABLE.
BICOLORABLE.
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10005||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Packing polygons</TITLE>
<META NAME="description" CONTENT="Problem F: Packing polygons">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Packing polygons</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Given a polygon of <I>n</I> points (not necessarily convex), your goal is to say
whether there is a circle of a given a radius <I>R</I> that contains the polygon or
not.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
The input consists of several input cases. The first line
of each input case is the number <I>n</I> (with <I>n</I> &lt; 100) of vertices in the
polygon. Then you are given <I>n</I> lines each containing a couple of integers that
define the coordinates of the vertices. The last line of the input case will be
a real number indicating the radius <I>R</I> of the circle. 

<P>
The end of the input
will be signaled by an input case with <I>n</I> = 0 vertices, that must not be
processed. 

<P>
You may assume that no vertex will appear twice in any given input
case.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2> 
If the polygon can be packed in a circle of the given
radius you have to print: 

<P>

<P>
<BR>

<TT>The polygon can be packed in the circle.</TT>

<P>

<P>
<BR>
If the polygon cannot be packed you have to print:

<P>

<P>
<BR>

<TT>There is no way of packing that polygon.</TT>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3
0 0
1 0
0 1
1.0
3
0 0
1 0
0 1
0.1
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
The polygon can be packed in the circle.
There is no way of packing that polygon.
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10006||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Carmichael Numbers</TITLE>
<META NAME="description" CONTENT="Problem G: Carmichael Numbers">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Carmichael Numbers</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
An important topic nowadays in computer science is cryptography. Some people even 
think
that cryptography is the only important field in computer science, and that
life would not matter at all without cryptography.

Alvaro is one of such persons, and is designing a set of cryptographic
procedures for cooking paella. Some of the cryptographic algorithms he is
implementing make use of big prime numbers. However, checking if a big number
is prime is not so easy. An exhaustive approach can require the division of
the number by all the prime numbers smaller or equal than its square root. For
big numbers, the amount of time and storage needed for such operations would
certainly ruin the paella. 

<P>
However, some probabilistic tests exist that offer
high confidence at low cost. One of them is the Fermat test.

<P>
Let <I>a</I> be a random number between 2 and <I>n</I> - 1 (being <I>n</I> the number whose
primality we are testing). Then, <I>n</I> is probably prime if the following
equation holds: 
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
a^n \bmod n = a
\end{displaymath} -->


<IMG
 WIDTH="104" HEIGHT="27"
 SRC="http://uva.onlinejudge.org/external/100/10006img1.gif" 
 ALT="\begin{displaymath}a^n \bmod n = a
\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
If a number passes the Fermat test several times then it is prime with a high 
probability.

<P>
Unfortunately, there are bad news. Some numbers that are not prime still pass
the Fermat test with every number smaller than themselves. These numbers are
called Carmichael numbers.

<P>
In this problem you are asked to write a program to test if a given number is
a Carmichael number. Hopefully, the teams that fulfill the task will one day be
able to taste a delicious portion of encrypted paella. As a side note, we need
to mention that, according to Alvaro, the
main advantage of encrypted paella over conventional paella is that nobody but you 
knows
what you are eating.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input will consist of a series of lines, each
containing a small positive number <I>n</I> (
<!-- MATH: $2 < n < 65000$ -->
2 &lt; <I>n</I> &lt; 65000). A number <I>n</I> = 0 will
mark the end of the input, and must not be processed. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2> 
For each number in the
input, you have to print if it is a Carmichael number or not, as shown in the
sample output. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1729
17
561
1109
431
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
The number 1729 is a Carmichael number.
17 is normal.
The number 561 is a Carmichael number.
1109 is normal.
431 is normal.
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10007||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Count the Trees</TITLE>
<META NAME="description" CONTENT="Problem H: Count the Trees">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Count the Trees</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
Another common social inability is known as ACM (Abnormally Compulsive Meditation).
This psychological disorder is somewhat common among programmers. It can be 
described
as the temporary (although frequent) loss of the faculty of speech when the whole 
power of
the brain is applied to something extremely interesting or challenging.

<P>
Juan is a very gifted programmer, and has a severe case of ACM (he even 
participated
in an ACM world championship a few months ago). Lately, his loved ones are worried 
about
him, because he has found a new exciting problem to exercise his intellectual 
powers, and he
has been speechless for several weeks now. The problem is the determination of 
the number
of different labeled binary trees that can be built using exactly <I>n</I> different
elements. 

<P>
For example, given one element <I>A</I>, just one binary tree can be formed
(using <I>A</I> as the root of the tree). With two elements, <I>A</I> and <I>B</I>, four
different binary trees can be created, as shown in the figure.

<P>
<DIV ALIGN="CENTER">
<BR>
<IMG
 WIDTH="538" HEIGHT="96" ALIGN="BOTTOM" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10007img1.gif" 
 ALT="\begin{picture}(400,90)(50,0)
\put(115,62){A}
\put(75,10){B}
\put(120,60){\vecto...
...}}
\put(365,62){B}
\put(405,10){A}
\put(370,60){\vector(1,-1){40}}
\end{picture}">
<BR></DIV>

<P>
If you are able to provide a solution for this problem, Juan will be able to 
talk again, and his
friends and family will be forever grateful.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 
The input will consist of several input cases, one per
line. Each input case will be specified by the number <I>n</I> (
<I>1 &le; n &le; 300</I>
) of
different elements that must be used to form the trees. A number <TT>0</TT> will
mark the end of input and is not to be processed. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2> 
For each input case print
the number of binary trees that can be built using the <I>n</I> elements, followed
by a newline character. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1
2
10
25
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
1
4
60949324800
75414671852339208296275849248768000000
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-21</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10008||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>What's Cryptanalysis?</TITLE>
<META NAME="description" CONTENT="Problem A: What's Cryptanalysis?">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
What's Cryptanalysis?</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

Cryptanalysis is the process of breaking someone else's cryptographic
writing.  This sometimes involves some kind of statistical analysis of
a passage of (encrypted) text.  Your task is to write a program
which performs a simple analysis of a given text.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

The first line of input contains a single positive decimal integer
<I>n</I>.  This is the number of lines which follow in the input.  The next
<I>n</I> lines will contain zero or more characters (possibly including
whitespace).  This is the text which must be analyzed.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

Each line of output contains a single uppercase letter, followed by a
single space, then followed by a positive decimal integer.  The integer
indicates how many times the corresponding letter appears in the input
text.  Upper and lower case letters in the input are to be considered
the same.  No other characters must be counted.  The output must be
sorted in descending count order; that is, the most frequent letter is
on the first output line, and the last line of output indicates the
least frequent letter.  If two letters have the same frequency, then
the letter which comes first in the alphabet must appear first in the
output.  If a letter does not appear in the text, then that letter must
not appear in the output.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<PRE>

3
This is a test.
Count me 1 2 3 4 5.
Wow!!!!  Is this question easy?
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<PRE>

S 7
T 6
I 5
E 4
O 3
A 2
H 2
N 2
U 2
W 2
C 1
M 1
Q 1
Y 1
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-22</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10009||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others

* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->
<HTML>
<HEAD>
<TITLE>All Roads Lead Where?</TITLE>
<META NAME="description" CONTENT="Problem B: All Roads Lead Where?">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
All Roads Lead Where?</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

There is an ancient saying that ``All Roads Lead to Rome''.  If this
were true, then there is a simple algorithm for finding a path between
any two cities.  To go from city A to city B, a traveller could take a
road from A to Rome, then from Rome to B.  Of course, a shorter route
may exist.

The network of roads in the Roman Empire had a simple structure:
beginning at Rome, a number of roads extended to the nearby cities.
From these cities, more roads extended to the next further cities, and
so on.  Thus, the cities could be thought of as existing in
<EM>levels</EM> around Rome, with cities in the <I>i</I>th level only
connected to cities in the <I>i</I>-1th and <I>i</I>+1th levels (Rome was
considered to be at level 0).  No loops existed in the road network.
Any city in level <I>i</I> was connected to a single city in level <I>i</I>-1,
but was connected to zero or more cities in level <I>i</I>+1.  Thus, to get
to Rome from a given city in level <I>i</I>, a traveller could simply walk
along the single road leading to the connected <I>i</I>-1 level city, and
repeat this process, with each step getting closer to Rome.

Given a network of roads and cities, your task is to find the shortest
route between any two given cities, where distance is measured in the
number of intervening cities.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The first line is the number of test cases, followed by a blank line.
<p>

The first line of each test case of the input contains two numbers in decimal notation
separated by a single space.  The first number (<I>m</I>) is the number of
roads in the road network to be considered.  The second number (<I>n</I>)
represents the number of queries to follow later in the file.

For each test case, in the next <I>m</I> lines of the input, each contain the names of a pair of
cities separated by a single space.  A city name consists of one or
more letters, the first of which is in uppercase.  No two cities begin
with the same letter.  The name <TT>Rome</TT> always appears at least
once in this section of input, for each test case;  this city is considered to be at level
0, the lowest-numbered level.  The pairs of names indicate that a road
connects the two named cities.  The first city named on a line exists
in a lower level than the second named city.  The road structure obeys
the rules described above.  For each test case, no two lines of input in this section are
repeated.

The next <I>n</I> lines, for each test case in the input contain the names of a pair of
cities separated by a single space.  City names are as described
above.  These pairs of cities are the <EM>query pairs</EM>.  Your task
for each query pair is to find the shortest route from the first named
city to the second.  Each of the cities in a query pair is guaranteed
to have appeared somewhere in the previous input section, for each test case, describing the
road structure.
<p>
Each test case will be separated by a single line.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

In each test case, for each of the <I>n</I> query pairs, output a sequence of uppercase letters
indicating the shortest route between the two query pair cities.  The
sequence must be output as consecutive letters, without intervening
whitespace, on a single line.  For each test case, the first output line corresponds to the
first query pair, the second output line corresponds to the second
query pair, and so on.  The letters in each sequence indicate the first
letter of the cities on the desired route between the query pair
cities, including the query pair cities themselves.  A city will never
be paired with itself in a query.
<p>
Print a blank line between the outputs for two consecutive test cases.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<PRE>
1

7 3
Rome Turin
Turin Venice
Turin Genoa
Rome Pisa
Pisa Florence
Venice Athens
Turin Milan
Turin Pisa
Milan Florence
Athens Genoa
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<PRE>

TRP
MTRPF
AVTG
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-22</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10010||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Where's Waldorf?</TITLE>
<META NAME="description" CONTENT="Problem C: Where's Waldorf?">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Where's Waldorf?</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

Given a <I>m</I> by <I>n</I> grid of letters, (
<!-- MATH: $1 \leq m,n \leq 20$ -->
<IMG
 WIDTH="111" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10010img2.gif" 
 ALT="$1 \leq m,n \leq 20$">), and a list
of words, find the location in the grid at which the word can be found.

A word matches a straight, uninterrupted line of letters in the grid.
A word can match the letters in the grid regardless of case (i.e.  upper
and lower case letters are to be treated as the same).  The matching
can be done in any of the eight directions either horizontally, vertically
or diagonally through the grid.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The input begins with a pair of integers, <I>m</I> followed by <I>n</I>, 
<!-- MATH: $1 \leq
m,n \leq 50$ -->
<IMG
 WIDTH="111" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10010img2.gif" 
 ALT="$1 \leq
m,n \leq 50$">
in decimal notation on a single line.  The next <I>m</I> lines
contain <I>n</I> letters each;  this is the grid of letters in which the
words of the list must be found.  The letters in the grid may be in
upper or lower case.  Following the grid of letters, another integer
<I>k</I> appears on a line by itself (
<!-- MATH: $1 \leq k \leq 20$ -->
<IMG
 WIDTH="87" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10010img2.gif" 
 ALT="$1 \leq k \leq 20$">).  The next <I>k</I>
lines of input contain the list of words to search for, one word per
line.  These words may contain upper and lower case letters only (no
spaces, hyphens or other non-alphabetic characters).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
For each word in the word list, a pair of integers representing the
location of the corresponding word in the grid must be output.  The
integers must be separated by a single space.  The first integer is the
line in the grid where the first letter of the given word can be found
(1 represents the topmost line in the grid, and <I>m</I> represents the
bottommost line).  The second integer is the column in the grid where
the first letter of the given word can be found (1 represents the
leftmost column in the grid, and <I>n</I> represents the rightmost column in
the grid).  If a word can be found more than once in the grid, then the
location which is output should correspond to the uppermost occurence
of the word (i.e. the occurence which places the first letter of the
word closest to the top of the grid).  If two or more words are
uppermost, the output should correspond to the leftmost of these
occurences.  All words can be found at least once in the grid.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<PRE>
1

8 11
abcDEFGhigg
hEbkWalDork
FtyAwaldORm
FtsimrLqsrc
byoArBeDeyv
Klcbqwikomk
strEBGadhrb
yUiqlxcnBjf
4
Waldorf
Bambi
Betty
Dagbert
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<PRE>
2 5
2 3
1 2
7 8
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-22</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10011||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Where Can You Hide?</TITLE>
<META NAME="description" CONTENT="Problem D: Where Can You Hide?">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Where Can You Hide?</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

The planet Cartesia has a perfectly flat surface, on which is a grid of
squares.  Each location on Cartesia is associated with a pair of
numbers, (<I>x</I>,<I>y</I>), where <I>x</I> is the number of grid squares north
of the planet's center and <I>y</I> is the number of grid squares east
of the planet's center for the given location.  Thus, (2.3,1.5) is
the location 2.3 squares north and 1.5 squares east of the planet's
center.

The inhabitants of this planet, the Cartesians, are very small.
They are so small, in fact, that they could be considered to have
no width, much like a point does in Earth-style geometry.

At the center of the planet is a radioactive source with no width as
well.  This source emits radiation which is harmful to the Cartesians,
even in the tiniest quantities.  The radiation spreads in straight
lines outwards from the source along the surface of the planet.

Fortunately for the Cartesians, there are naturally-occuring trees on
the planet which can block the harmful radiation.  Trees, unlike all
else on Cartesia, have a given radius, being perfectly circular.  A
Cartesian is safe from the radiation if, when a straight line segment
is drawn between him/her and the radiation source, the line segment
passes through a tree.

Because of the beneficial nature of trees, Cartesians like to build
their houses where they are shaded by trees.  Your task is, given a
single tree on the surface of Cartesia and a house location, to find the
largest distance which a Cartesian can travel in a straight line from
the house while guaranteed protection from the radioactive source.
Note that Cartesians cannot walk through trees.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

The first line of input is a single positive integer (<I>n</I>) in decimal
notation which represents the number of input lines to follow.  The
next <I>n</I> lines contain 5 numbers in decimal notation separated by
single spaces.  The first two numbers (<I>x</I>,<I>y</I>) give the location of the
tree (where <I>x</I> is the number of squares north of the planet center and
<I>y</I> is the number of squares east of the planet center).  The third
number (<I>r</I> &gt; 0) gives the radius of the tree.  The last two numbers
(<I>u</I>,<I>v</I>) give the location of the Cartesian house (where <I>u</I> is the
number of squares north of the planet center and <I>v</I> is the number of
squares east of the planet center).  The radioactive source is at
location (0,0).  Neither the house nor the radiation source is inside
the tree.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

For each input line, your program must output the furthest distance a
Cartesian may travel from the house in a straight line while still
under protection from the radioactive source.  The value output must be
a decimal number with three digits after the decimal point.  A leading
zero must be included if and only if the output value is less than
<TT>1.000</TT>, i.e. <TT>0.123</TT> is a valid output, but
<TT>.123</TT> is not.  If a Cartesian may not leave the house safely at
all, then output a value of <TT>0.000</TT>.

<DIV ALIGN="CENTER">

<img src=p10011.gif>
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<PRE>

3
5 5 1 12 12
20 0 3 7 -7
-9.6 4.3 2.1 -19.2 7.9
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<PRE>

2.400
0.000
3.517
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-22</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10012||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>How Big Is It?</TITLE>
<META NAME="description" CONTENT="Problem E: How Big Is It?">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
How Big Is It?</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

Ian's going to California, and he has to pack his things, including his
collection of circles.  Given a set of circles, your program must
find the smallest rectangular box in which they fit.

All circles must touch the bottom of the box.  The figure below shows
an acceptable packing for a set of circles (although this may not be
the optimal packing for these particular circles).  Note that in an
ideal packing, each circle should touch at least one other circle
(but you probably figured that out).

<DIV ALIGN="CENTER">

<img src=p10012.gif>
 
</DIV>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

The first line of input contains a single positive decimal integer <I>n</I>,
<I>n</I>&lt;=50.  This indicates the number of lines which follow.  The
subsequent <I>n</I> lines each contain a series of numbers separated by
spaces.  The first number on each of these lines is a positive integer
<I>m</I>, <I>m</I>&lt;=8, which indicates how many other numbers appear on that
line.  The next <I>m</I> numbers on the line are the radii of the circles
which must be packed in a single box.  These numbers need not be
integers.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

For each data line of input, excluding the first line of input containing
<I>n</I>, your program must output the size of the smallest rectangle which can
pack the circles.  Each case should be output on a separate line by itself,
with three places after the decimal point.  Do not output leading zeroes
unless the number is less than 1, e.g. <code>0.543</code>.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>

<PRE>

3
3 2.0 1.0 2.0
4 2.0 2.0 2.0 2.0
3 2.0 1.0 4.0
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<PRE>

9.657
16.000
12.657
</PRE>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-08-22</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10013||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./pa.files/filelist.xml">
<title>Super long sums</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>1</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>1</o:LastAuthor>
  <o:Revision>17</o:Revision>
  <o:TotalTime>13</o:TotalTime>
  <o:Created>1996-08-26T09:13:00Z</o:Created>
  <o:LastSaved>1996-08-26T09:48:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>160</o:Words>
  <o:Characters>916</o:Characters>
  <o:Lines>7</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>1124</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
p.a, li.a, div.a
	{mso-style-name:?????;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.a0
	{mso-style-name:"ÃŽÃ±Ã­Ã®Ã¢Ã­Ã®Ã© Ã¸Ã°Ã¨Ã´Ã²";
	mso-style-parent:" ;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=RU style='tab-interval:35.4pt'>

<div class=Section1>

<h1><span lang=EN style='mso-ansi-language:EN'><br clear=all style='mso-special-character:
line-break'>
<o:p></o:p></span></h1>

<div align=center>

<table border=0 cellpadding=0 bgcolor="#0060f0" style='mso-cellspacing:1.5pt;
 background:#0060F0;mso-padding-alt:0cm 0cm 0cm 0cm'>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><b><span lang=EN-US style='font-size:18.0pt;color:#C0FFFF;
  mso-ansi-language:EN-US'>&nbsp;<a name=SECTION0001000000000000000000>Super
  long sums</a></span></b><b><span lang=EN-US style='mso-ansi-language:EN-US'>&nbsp;</span></b><span
  lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>
  </td>
 </tr>
</table>

</div>

<h2><a name=SECTION0001002000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>The Problem</span></a><span style='mso-bookmark:SECTION0001002000000000000000'></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=a><span lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;
font-family:"Times New Roman";mso-ansi-language:EN-US'>The creators of a new
programming language D++ have found out that whatever limit for SuperLongInt
type they make, sometimes programmers need to operate even larger numbers. A limit
of 1000 digits is so small... You have to find the sum of two numbers with
maximal size of 1.000.000 digits.<o:p></o:p></span></p>

<h2><a name=SECTION0001003000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>The Input</span></a><span style='mso-bookmark:SECTION0001003000000000000000'></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=a><a name=SECTION0001004000000000000000><span lang=EN
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-ansi-language:EN'>The first line of a input file is an integer N, then a
blank line followed by N input blocks. </span></a><span style='mso-bookmark:
SECTION0001004000000000000000'><span lang=EN-US style='font-size:12.0pt;
mso-bidi-font-size:10.0pt;font-family:"Times New Roman";mso-ansi-language:EN-US'>The
first line of an each input block contains a single number M (1&lt;=M&lt;=1000000)
Â— the length of the integers (in order to make their lengths equal, some
leading zeroes can be added). It is followed by these integers written in
columns. That is, the next M lines contain two digits each, divided by a space.
Each of the two given integers is not less than 1, and the length of their sum
does not exceed M.<o:p></o:p></span></span></p>

<p class=a><span style='mso-bookmark:SECTION0001004000000000000000'><span
lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-US'>There is a blank line between input blocks.<o:p></o:p></span></span></p>

<h2><span style='mso-bookmark:SECTION0001004000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>The Output</span></span><span
style='mso-bookmark:SECTION0001004000000000000000'></span><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=a><a name=SECTION0001005000000000000000><span lang=EN-US
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-US'>Each output block should contain exactly M digits in a
single line representing the sum of these two integers.<o:p></o:p></span></a></p>

<p class=a><span style='mso-bookmark:SECTION0001005000000000000000'><span
lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-US'>There is a blank line between output blocks.<o:p></o:p></span></span></p>

<h2><span style='mso-bookmark:SECTION0001005000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>Sample Input</span></span><span
style='mso-bookmark:SECTION0001005000000000000000'></span><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<pre>
2

4
0 4
4 2
6 8
3 7

3
3 0
7 9
2 8
</pre>

<h2><a name=SECTION0001006000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>Sample Output</span></a><span style='mso-bookmark:SECTION0001006000000000000000'></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<pre>
4750

470
</pre></div>

</body>

</html>

______________________________________________________
10014||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->

<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./pb.files/filelist.xml">
<title>Simple calculations</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>1</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>1</o:LastAuthor>
  <o:Revision>8</o:Revision>
  <o:TotalTime>5</o:TotalTime>
  <o:Created>1996-08-26T09:19:00Z</o:Created>
  <o:LastSaved>1996-08-26T18:32:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>95</o:Words>
  <o:Characters>544</o:Characters>
  <o:Lines>4</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>668</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
p.a, li.a, div.a
	{mso-style-name:?????;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	text-autospace:none;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=RU style='tab-interval:35.4pt'>

<div class=Section1>

<h1><span lang=EN style='mso-ansi-language:EN'><br clear=all style='mso-special-character:
line-break'>
<o:p></o:p></span></h1>

<div align=center>

<table border=0 cellpadding=0 bgcolor="#0060f0" style='mso-cellspacing:1.5pt;
 background:#0060F0;mso-padding-alt:0cm 0cm 0cm 0cm'>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><b><span lang=EN style='font-size:18.0pt;color:#C0FFFF;
  mso-ansi-language:EN'>&nbsp;</span></b><a name=SECTION0001000000000000000000><b><span
  lang=EN-US style='font-size:18.0pt;color:#C0FFFF;mso-ansi-language:EN-US'>Simple
  calculations</span></b></a><b><span lang=EN style='mso-ansi-language:EN'>&nbsp;</span></b><span
  lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></p>
  </td>
 </tr>
</table>

</div>

<h2><a name=SECTION0001002000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>The Problem</span></a><span style='mso-bookmark:SECTION0001002000000000000000'></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=a><span lang=EN-US style='font-size:12.0pt;mso-bidi-font-size:10.0pt;
font-family:"Times New Roman";mso-ansi-language:EN-US'>There is a sequence of
n+2 elements a<sub>0</sub>, a<sub>1</sub>,
, a<sub>n+1</sub>
(n <= 3000; -1000 <=
&nbsp;a<sub>i</sub>&nbsp;1000). It is known that <b>a<sub>i</sub>
= (a<sub>iÂ–1</sub>&nbsp;+&nbsp;a<sub>i+1</sub>)/2&nbsp;Â–&nbsp;c<sub>i</sub><span
style="mso-spacerun: yes">Â  </span></b><span style="mso-spacerun:
yes">Â </span>for each i=1, 2, ..., n. You are given a<sub>0</sub>, a<sub>n+1</sub>,
c<sub>1</sub>, ... , c<sub>n</sub>. Write a program which calculates a<sub>1</sub>.<o:p></o:p></span></p>

<h2><a name=SECTION0001003000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>The Input</span></a><span style='mso-bookmark:SECTION0001003000000000000000'></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=a><a name=SECTION0001004000000000000000><span lang=EN-US
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-US'>The first line is the number of test cases, followed by a blank line.<p>
For each test case, the first line of an input file contains an integer n.
The next two lines consist of numbers a<sub>0</sub> and a<sub>n+1</sub> each
having two digits after decimal point, and the next n lines contain numbers c<sub>i</sub>
(also with two digits after decimal point), one number per line.
<p>Each test case will be separated by a single line.<o:p></o:p></span></a></p>

<h2><span style='mso-bookmark:SECTION0001004000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>The Output</span></span><span
style='mso-bookmark:SECTION0001004000000000000000'></span><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=a><a name=SECTION0001005000000000000000><span lang=EN-US
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-US'>For each test case, the output file should contain a<sub>1</sub> in the
same format as a<sub>0</sub> and a<sub>n+1</sub>.
<p>Print a blank line between the outputs for two consecutive test cases.<o:p></o:p></span></a></p>

<h2><span style='mso-bookmark:SECTION0001005000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>Sample Input</span></span><span
style='mso-bookmark:SECTION0001005000000000000000'></span><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<pre>
1

1
50.50
25.50
10.15
</pre>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name=SECTION0001006000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>Sample Output</span></a><span style='mso-bookmark:SECTION0001006000000000000000'></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<pre>
27.85
</pre></div>

</body>

</html>

______________________________________________________
10015||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.73 [en] (Win98; U) [Netscape]">
   <title>Joseph's Cousin</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>Joseph's
Cousin</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
The JosephÂ’s problem is notoriously known. For those who are not familiar
with the problem, among n people numbered 1,2
n, standing in circle every
mth is going to be executed and only the life of the last remaining person
will be saved. Joseph was smart enough to choose the position of the last
remaining person, thus saving his life to give the message about the incident.
<p>Although many good programmers have been saved since Joseph spread out
this information, JosephÂ’s Cousin introduced a new variant of the malignant
game. This insane character is known for its barbarian ideas and wishes
to clean up the world from silly programmers. We had to infiltrate some
the agents of the ACM in order to know the process in this new mortal game.
<p>In order to save yourself from this evil practice, you must develop
a tool capable of predicting which person will be saved.
<p><b>The Destructive Process</b>
<p>&nbsp;The persons are eliminated in a very peculiar order; m is a dynamical
variable, which each time takes a different value corresponding to the
prime numbersÂ’ succession (2,3,5,7
). So in order to kill the ith person,
JosephÂ’s cousin counts up to the ith prime.
<p><b>NOTE:</b> This problem may have a runtime of up to 4 minutes.
<br>&nbsp;
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
&nbsp;It consists of separate lines containing n [1..3501], and finishes
with a 0.
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
&nbsp;The output will consist in separate lines containing the position
of the person which life will be saved.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>
6
<br>0
<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>
4
<br>&nbsp;
</body>
</html>

______________________________________________________
10016||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.73 [en] (Win98; U) [Netscape]">
   <title>Flip-Flop the Squarelotron</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>Flip-Flop
the Squarelotron</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
Anita is the baby siter of Baron Von HauserÂ’ kids, a famous Physics Assistant
of ITESM Campus Monterrey Physics department. As such Von Hauser kids have
weird toys, all of which Anita has to master to be able to effectively
entertain Baron&acute; Kids.
<p>While Anita was cleaning the bathtub she found a new toy. It is extremely
weird, and posses a lot of mathematical symmetry, it is a Squarelotron
game. She is determined to understand this new toy, otherwise she won&acute;t
be able to play with Von HauserÂ’ kids. However the complexity of such extreme
toy makes it dificult to play. ThatÂ’s why Anita asked the judges of this
ITESM Campus Monterrey internal ACM programming contest eliminatory to
put this problem, so that answers could be given by the best sttudents
of computer science and engineering of this Campus.
<p>A Squarelotron consist basically of a matrix of numbers. However this
matrix can be decomposed as squared rings which can rotate independently
in 4 diferent ways, Upside-Down, Left-Rigt, through the Main Inverse Diagonal
and through the Main Diagonal.
<p>For example Consider the following Squarelotrons.
<p><img SRC="http://uva.onlinejudge.org/external/100/p10016a.jpg"  height=217 width=407>
<br>Squarelotron a) as 2 rings while squarelotron b) has 3.
<p>A Upside-Down Flip of the outmost ring of Squarelotron a) yields:
<br><img SRC="http://uva.onlinejudge.org/external/100/p10016a.jpg"  NOSAVE height=137 width=149>
<br>&nbsp;
<br>&nbsp;
<p>A Left-Rigth Flip of the 2 ring of squarelotron b) yields:
<br><img SRC="http://uva.onlinejudge.org/external/100/p10016a.jpg"  height=169 width=171>
<br>&nbsp;
<p>A Flip through&nbsp; the Main Inverse Diagonal of the second ring of
squarelotron a) yields:
<br><img SRC="http://uva.onlinejudge.org/external/100/p10016a.jpg"  height=132 width=135>
<br>&nbsp;
<p>A Flip through the Main Diagonal of the outermost ring of squarelotron
b) yields:
<br><img SRC="http://uva.onlinejudge.org/external/100/p10016a.jpg"  height=161 width=163>
<p>Anita wants you to do a program which performs the following. She will
give you a Squarelotron and your program will perform several of the flips
described earlier for each of the rings of the given Squarelotron. The
output of your program should be the final state of the Squarelotron.
<br>&nbsp;
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
The first line contains the number M of different cases to process, consisting
of blocks of lines.
<br>Each of these blocks consist of the following.
<br>The first line of each block contains a number N which describes the
order N x N&nbsp; of the Squarelotron.
<br>Following comes N lines of N numbers each, which describes the Squarelotron
itself.
<br>Next comes an equal number of lines as number of rings of the Squarelotron.
Each of these lines begins with a number T, followed by T numbers C which
identifies the move to perform on the ring.
<p>All these numbers are in the following ranges:
<br>0&lt;M&lt;=1000
<br>1&lt;=N&lt;101
<br>0&lt;T&lt;= Number of Rings
<br>1&lt;=C&lt;5
<br>The numbers in the squarelotron are smaller than 2^16.
<p>The Moves are identifies as follows. 1 means Upside-Down Flip, 2 Means
Left-Right Flip, 3 means flip through the Main&nbsp; Diagonal, 4 means
a flip through the Main Inverse Diagonal.
<br>&nbsp;
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
For each of the M cases, output a a N x N squarelotron at the state it
is supposed to be after all the moves. This squarelotron should be N lines
with N numbers each. No blank line in between each case should be output.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>

<pre>4
3
1 2 3
4 5 6
7 8 9
2 1 2
4 1 2 3 4
4
1 2 3 4
5 6 7 8
9 1 2 3
4 5 6 6
2 1 2
2 3 4
5
1 2 3 4 5
6 7 8 9 1
2 3 4 5 6
7 8 9 1 2
3 4 5 6 7
2 3 4
2 1 3
4 1 3 2 4
6
1 2 3 4 5 6
7 8 9 1 2 3
4 5 6 7 8 9
1 2 3 4 5 6
7 8 9 1 2 3
4 5 6 7 8 9
2 4 1&nbsp;
2 2 3
1 1</pre>

<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>

<pre>9 8 7
6 5 4
3 2 1
6 6 5 4
3 2 1 9
8 7 6 5
4 3 2 1
7 6 5 4 3
2 8 3 7 7
6 9 4 8 2
1 1 5 9 6
5 4 3 2 1
4 7 1 4 7 1
5 2 8 5 2 2
6 1 3 4 1 3
7 9 6 7 9 4
8 8 5 2 8 5
9 3 6 9 3 6</pre>

</body>
</html>

______________________________________________________
10017||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.73 [en] (Win98; U) [Netscape]">
   <title>The Never Ending Towers of Hanoi</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>The
Never Ending Towers of Hanoi</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
In 1883, Edward Lucas invented, or perhaps reinvented, one of the most
popular puzzles of all times - the Tower of Hanoi, as he called it - which
is still used today in many computer science textbooks to demonstrate how
to write a recursive algorithm or program. First of all, we will make a
list of the rules of the puzzle:
<p>&middot; There are three pegs: A, B and C.
<br>&middot; There are n disks. The number n is constant while working
the puzzle.
<br>&middot; All disks are different in size.
<br>&middot; The disks are initially stacked on peg A so that they increase
in size from the top to the bottom.
<br>&middot; The goal of the puzzle is to transfer the entire tower from
the A peg to the peg C.
<br>&middot; One disk at a time can be moved from the top of a stack either
to an empty peg or to a peg with a larger disk than itself on the top of
its stack.
<p>Your job will be to write a program which will show a copy of the puzzle
on the screen step by step, as you move the disks around. This program
has to solve the problem in an efficient way.
<p>TIP: It is well known and rather easy to prove that the minimum number
of moves needed to complete the puzzle with n disks is&nbsp; 2<sup>n</sup> -1.
<br>&nbsp;
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
<font color="#000000">The input file will consist of a series of lines.
Each line will contain two integers n, m. n, lying within the range [1,250],
will denote the number of disks and m, belonging to [0,2<sup>n</sup>-1], will be
the number of the last move, you may assume that m will also be less than
2<sup>16</sup>, and you may also assume that a good algorithm will always have enough
time. The file will end at a line formed by two zeros.</font>
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
The output will consist again of a series of lines, formatted as show below.
<br><i>NOTES</i>: There are 3 spaces between de Â‘=>Â’ and the first number
printed. If there isn't any number, there should be no spaces.
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
All the disks in a single peg are printed in a single line.<BR>
Print a blank line after every problem.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>
64 2
<br>8 45
<br>0 0
<p><a NAME="SECTION0001006000000000000000"></a><font color="#0070E8"><font size=+2>Sample
Output</font></font>
<pre>
Problem #1

A=>   64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1
B=>
C=>

A=>   64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
B=>   1
C=>

A=>   64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3
B=>   1
C=>   2

Problem #2

A=>   8 7 6 5 4 3 2 1
B=>
C=>

A=>   8 7 6 5 4 3 2
B=>   1
C=>

A=>   8 7 6 5 4 3
B=>   1
C=>   2

A=>   8 7 6 5 4 3
B=>
C=>   2 1

A=>   8 7 6 5 4
B=>   3
C=>   2 1

A=>   8 7 6 5 4 1
B=>   3
C=>   2

A=>   8 7 6 5 4 1
B=>   3 2
C=>

A=>   8 7 6 5 4
B=>   3 2 1
C=>

A=>   8 7 6 5
B=>   3 2 1
C=>   4

A=>   8 7 6 5
B=>   3 2
C=>   4 1

A=>   8 7 6 5 2
B=>   3
C=>   4 1

A=>   8 7 6 5 2 1
B=>   3
C=>   4

A=>   8 7 6 5 2 1
B=>
C=>   4 3

A=>   8 7 6 5 2
B=>   1
C=>   4 3

A=>   8 7 6 5
B=>   1
C=>   4 3 2

A=>   8 7 6 5
B=>
C=>   4 3 2 1

A=>   8 7 6
B=>   5
C=>   4 3 2 1

A=>   8 7 6 1
B=>   5
C=>   4 3 2

A=>   8 7 6 1
B=>   5 2
C=>   4 3

A=>   8 7 6
B=>   5 2 1
C=>   4 3

A=>   8 7 6 3
B=>   5 2 1
C=>   4

A=>   8 7 6 3
B=>   5 2
C=>   4 1

A=>   8 7 6 3 2
B=>   5
C=>   4 1

A=>   8 7 6 3 2 1
B=>   5
C=>   4

A=>   8 7 6 3 2 1
B=>   5 4
C=>

A=>   8 7 6 3 2
B=>   5 4 1
C=>

A=>   8 7 6 3
B=>   5 4 1
C=>   2

A=>   8 7 6 3
B=>   5 4
C=>   2 1

A=>   8 7 6
B=>   5 4 3
C=>   2 1

A=>   8 7 6 1
B=>   5 4 3
C=>   2

A=>   8 7 6 1
B=>   5 4 3 2
C=>

A=>   8 7 6
B=>   5 4 3 2 1
C=>

A=>   8 7
B=>   5 4 3 2 1
C=>   6

A=>   8 7
B=>   5 4 3 2
C=>   6 1

A=>   8 7 2
B=>   5 4 3
C=>   6 1

A=>   8 7 2 1
B=>   5 4 3
C=>   6

A=>   8 7 2 1
B=>   5 4
C=>   6 3

A=>   8 7 2
B=>   5 4 1
C=>   6 3

A=>   8 7
B=>   5 4 1
C=>   6 3 2

A=>   8 7
B=>   5 4
C=>   6 3 2 1

A=>   8 7 4
B=>   5
C=>   6 3 2 1

A=>   8 7 4 1
B=>   5
C=>   6 3 2

A=>   8 7 4 1
B=>   5 2
C=>   6 3

A=>   8 7 4
B=>   5 2 1
C=>   6 3

A=>   8 7 4 3
B=>   5 2 1
C=>   6

A=>   8 7 4 3
B=>   5 2
C=>   6 1
</pre>
</body>
</html>

______________________________________________________
10018||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.73 [en] (Win98; U) [Netscape]">
   <title>Reverse and Add</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">

<h1>
</h1>

<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>Reverse
and Add</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
The "reverse and add" method is simple: choose a number, reverse its digits
and add it to the original. If the sum is not a palindrome (which means,
it is not the same number from left to right and right to left), repeat
this procedure.
<p>For example:
<br>195 Initial number
<br>591
<br>-----
<br>786
<br>687
<br>-----
<br>1473
<br>3741
<br>-----
<br>5214
<br>4125
<br>-----
<br>9339 Resulting palindrome
<p>In this particular case the palindrome 9339 appeared after the 4th addition.
This method leads to palindromes in a few step for almost all of the integers.
But there are interesting exceptions. 196 is the first number for which
no palindrome has been found. It is not proven though, that there is no
such a palindrome.
<p>Task :
<br>You must write a program that give the resulting palindrome and the
number of iterations (additions) to compute the palindrome.
<p>You might assume that all tests data on this problem:
<br>- will have an answer ,
<br>- will be computable with less than 1000 iterations (additions),
<br>- will yield a palindrome that is not greater than 4,294,967,295.
<br>&nbsp;
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
The first line will have a number N with the number of
test cases, the next N lines will have a number P to compute its palindrome.
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
For each of the N tests you will have to write a line with the following
data : minimum number of iterations (additions) to get to the palindrome
and the resulting palindrome itself separated by one space.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>

<pre>3
195
265
750
</pre>

<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>
4 9339
<br>5 45254
<br>3 6666
</body>
</html>

______________________________________________________
10019||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.73 [en] (Win98; U) [Netscape]">
   <title>Funny Encryption Method</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>Funny
Encryption Method</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
History :
<br>A student from ITESM Campus Monterrey plays with a new encryption method
for numbers. These method consist of the following steps:
<p>Steps :&nbsp; Example
<br>1) Read the number N to encrypt M = 265
<br>2) Interpret N as a decimal number X1= 265 (decimal)
<br>3) Convert the decimal interpretation of N to its binary representation
X1= 100001001 (binary)
<br>4) Let b1 be equal to the number of 1Â’s in this binary representation
B1= 3
<br>5) Interpret N as a Hexadecimal number X2 = 265 (hexadecimal)
<br>6) Convert the hexadecimal interpretation of N to its binary representation
X2 = 1001100101
<br>7) Let b2 be equal to the number of 1Â’s in the last binary representation
B2 = 5
<br>8) The encryption is the result of&nbsp; M xor (b1*b2) M xor (3*5)
= 262
<p>This student failed Computational Organization, thatÂ’s why this student
asked the judges of ITESM Campus Monterrey internal ACM programming Contest
to ask for the numbers of 1Â’s bits of this two representations so that
he can continue playing.
<p>Task :
<br>You have to write a program that read a Number and give as output the
number b1 and b2
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
The first line will contain a number N which is the number of cases that
you have to process. Each of the following N Lines ( 0&lt;N&lt;=1000) will
contain the number M (0&lt;M&lt;=9999, in decimal representation)&nbsp;
which is the number the student wants to encrypt.
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
You will have to output N lines, each containing the number b1 and b2 in
that order, separated by one space&nbsp; corresponding to that lines number
to crypt
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>
3<br>
265<br>
111<br>
1234
<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>
3 5
<br>6 3
<br>5 5
</body>
</html>

______________________________________________________
10020||||||false||||||
<HTML>
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->
<HEAD>
<TITLE>Minimal coverage</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Minimal coverage</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Given several segments of line (int the X axis) with coordinates
[L<sub>i</sub>,R<sub>i</sub>]. You are to choose the
minimal amount of them, such they would completely cover
the segment [0,M].<p>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
<p>The first line is the number of test cases, followed by a blank line.<p>
Each test case in the input should contains an integer M(1&lt=M&lt=5000), followed by
pairs "L<sub>i</sub> R<sub>i</sub>"(|L<sub>i</sub>|, |R<sub>i</sub>|&lt=50000, i&lt=100000),
each on a separate line. Each test case of input is terminated by pair "0 0".
<p>Each test case will be separated by a single line.<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, in the first line of output your programm should print the minimal number
of line segments which can cover segment [0,M]. In the following lines,
the coordinates of segments, sorted by their left end
(L<sub>i</sub>), should be printed in the same format as in the input.
Pair "0 0" should not be printed. If [0,M] can not be covered by given line segments, your programm
should print "0"(without quotes).
<p>Print a blank line between the outputs for two consecutive test cases.<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A></FONT></H2>
<P>
<PRE>
2

1
-1 0
-5 -3
2 5
0 0

1
-1 0
0 1
0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A></FONT></H2>
<P>
<PRE>
0

1
0 1
</PRE>

<ADDRESS><HR>
<A HREF="http://diaspro.com/~gevak">Alex Gevak</A><BR>
September 10, 2000 (Revised 2-10-00, Antonio Sanchez) </ADDRESS>

</BODY>
</HTML>
______________________________________________________
10021||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds

* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->

<HTML>
<HEAD>
<TITLE>Cube in the labirint</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Cube in the labirint </A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

There is a cube on a rectangular field of size X*Y, composed by squares of size 1x1. The sides of the cube fit in one square. The cube can move to horizontaly or verticaly to the next square by rolling over its edge. There are may be walls between squares. Cube can not move(role) through the walls. Also, cube can not leave the field. <br>
You are to determinate the minimal number of moves, needed to take the cube from square (A, B) to square (C, D). In the end point, cube should be lay on the same side on which it was laid in the starting point.<p>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The first line is the number of test cases, followed by a blank line.<p>
The first line of each test case of input contains integers X and Y (2&lt=X, Y&lt=10),
separated by one or more spaces. Second and third lines of each test cases contain integers A B and C D in the same format.
There may be inforamtion about walls in the following strings.
<p>
<P>
After symbol "v", in a separate line, there will be a list of pairs of integers, describing vertical walls.
Pair of integers N and M set a wall between squares N, M and N+1, M.
Each pair on a separated line, with no blank lines in the middle.<p>
<P>
Symbol "h", denotes horizontal walls. Pair of integers N and M set a wall between squares N, M and N, M+1.
<p>Each test case will be separated by a single line.
<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
Your programm should print the minimal number of moves for each test case.
If target point can not be reached, print "No solution".
<p>Print a blank line between the outputs for two consecutive test cases.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
1

10 2
1 1
10 1
v
2 1
6 2
h
4 1
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
11
</PRE>

<ADDRESS><HR>
<A HREF="http://diaspro.com/~gevak">Alex Gevak</A><BR>
September 10, 2000 (Revised 2-10-00, Antonio Sanchez)</ADDRESS>

</BODY>
</HTML>
______________________________________________________
10022||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->

<HTML>
<HEAD>
<TITLE>Delta-wave</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Delta-wave </A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<IMG SRC="http://uva.onlinejudge.org/external/100/p10022.gif"  ALIGN=left>
On the triangular field shown on the picture, small triangles are numbered from 1 to oo (infinity). Traveller wants to go from triangle M to triangle N. Traveller can move only through the sides of triangles, not vertices. The number of sides he crosses is called the path length.<br>
You are to determine the shortest path from M to N.<p>

<U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The first line is the number of test cases, followed by a blank line.<p>
Each test case of the input contains integers M and N (1&lt=M,N&lt=1000000000), separated by some spaces.
<p>Each test case will be separated by a single line.<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, your programm should print the length of the shortest path from M to N.
<p>Print a blank line between the outputs for two consecutive test cases.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
1

6 12
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
3
</PRE>

<ADDRESS><HR>
<A HREF="http://diaspro.com/~gevak">Alex Gevak</A><BR>
September 10, 2000 (Revised 2-10-00, Antonio Sanchez)</ADDRESS>

</BODY>
</HTML>

______________________________________________________
10023||||||false||||||
<HTML>
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->

<HEAD>
<TITLE>Square root</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Square root </A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>You are to determinate X by given Y, from expression
<IMG SRC="http://uva.onlinejudge.org/external/100/p10023.gif"  ALIGN=center><p>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The first line is the number of test cases, followed by a blank line.<p>
Each test case of the input contains a positive integer Y (1&lt=Y&lt=10<sup>1000</sup>),
with no blanks or leading zeroes in it.<br>
It is guaranteed, that for given Y, X will be always an integer.
<p>Each test case will be separated by a single line.<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, your program should print X in the same format as Y was given in input.
<p>Print a blank line between the outputs for two consecutive test cases.<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A></FONT></H2>
<P>
<PRE>
1

7206604678144
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A></FONT></H2>
<P>
<PRE>
2684512
</PRE>

<ADDRESS><HR>
<A HREF="http://diaspro.com/~gevak">Alex Gevak</A><BR>
September 10, 2000 (Revised 2-10-00, Antonio Sanchez)</ADDRESS>

</BODY>
</HTML>

______________________________________________________
10024||||||false||||||
<HTML>
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->

<HEAD>
<TITLE>Curling up the cube</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Curling up the cube</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

A paper cube can be made up from six paper squares
Given an projection (map) of the cube, you are to determine its correctness. A projection is correct, if a cube can be made up from it.<p>

<U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The first line is the number of test cases, followed by a blank line.<p>
Input for each test case, contains a projection represented as a 6*6 grid containing six
ones and 30 zeroes, separated by spaces. 1s represent the paper squares. All squares
are placed immediately to each other, so that each square is connected with at least one other square.
<p>Each test case will be separated by a single line.<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, your program should print "correct" if cube can be made up from
the given project, or "incorrect" otherwise.
<p>Print a blank line between the outputs for two consecutive test cases.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2

0 0 0 0 0 0
0 0 0 1 0 0
0 0 0 1 0 0
0 0 1 1 1 0
0 0 0 1 0 0
0 0 0 0 0 0

0 0 0 0 0 0
0 0 0 1 1 0
0 0 1 1 0 0
0 0 0 1 1 0
0 0 0 0 0 0
0 0 0 0 0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
correct

incorrect
</PRE>

<ADDRESS><HR>
<A HREF="http://diaspro.com/~gevak">Alex Gevak</A><BR>
September 10, 2000 (Revised 2-10-00, Antonio Sanchez)</ADDRESS>

</BODY>
</HTML>
______________________________________________________
10025||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0066)http://acm.fi.uva.es/contest/data/0006/problemset-hc78wefv/p5.html -->
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->

<HTML><HEAD><TITLE>The ? 1 ? 2 ? ... ? n = k problem</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2919.6307" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff lang=EN>
<H1><BR clear=all>
<CENTER>
<TABLE bgColor=#0060f0>
  <TBODY>
  <TR>
    <TD><B><FONT color=#c0ffff size=5>&nbsp;<A
      name=SECTION0001000000000000000000>The ? 1 ? 2 ? ... ? n = k
      problem</A></FONT>&nbsp;</B></TR></TBODY></TABLE></CENTER></H1>
<P></U></U>
<H2><FONT color=#0070e8><A name=SECTION0001002000000000000000>The
problem</A></FONT></H2>
<P>Given the following formula, one can set operators '+' or '-' instead of each '?', in order to obtain a given k<br/>
<FONT size=+1>? 1 ? 2 ? ... ? n = k</FONT>
<P>For example: to obtain <B>k = 12 </B>, the expression to be used will be:<br/> <B>- 1 + 2 + 3 + 4 + 5 + 6 - 7 = 12</B> <BR> with <B>n = 7</B>
<P></U></U>
<H2><FONT color=#0070e8><A name=SECTION0001003000000000000000>The
Input</A></FONT></H2>
<P>The first line is the number of test cases, followed by a blank line.<p>
Each test case of the input contains integer k (0&lt;=|k|&lt;=1000000000).
<p>Each test case will be separated by a single line.
<H2><FONT color=#0070e8><A name=SECTION0001004000000000000000>The Output</A></FONT></H2>
<P>For each test case, your program should print the minimal possible n (1&lt;=n) to obtain k with the above formula.
<p>Print a blank line between the outputs for two consecutive test cases.
<H2><FONT color=#0070e8><A name=SECTION0001005000000000000000>Sample Input</A></FONT></H2>
<P><PRE>
2

12

-3646397
</PRE>
<P>
<H2><FONT color=#0070e8><A name=SECTION0001006000000000000000>Sample Output</A></FONT></H2>
<P><PRE>
7

2701
</PRE>
<ADDRESS>
<HR>
<A href="http://diaspro.com/~gevak">Alex Gevak</A><BR>September 15,
2000 (Revised 4-10-00, Antonio Sanchez)</ADDRESS></BODY></HTML>

______________________________________________________
10026||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0066)http://acm.fi.uva.es/contest/data/0006/problemset-hc78wefv/p6.html -->
<HTML><HEAD><TITLE>Shoemaker's Problem</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content="MSHTML 5.00.2919.6307" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff lang=EN>
<H1><BR clear=all>
<CENTER>
<TABLE bgColor=#0060f0>
  <TBODY>
  <TR>
    <TD><B><FONT color=#c0ffff size=5>&nbsp;<A 
      name=SECTION0001000000000000000000>Shoemaker's Problem</A></FONT>&nbsp;</B></TR></TBODY></TABLE></CENTER></H1>
<P>Shoemaker has N jobs (orders from customers) which he must make. Shoemaker can 
work on only one job in each day. For each i<SUB>th</SUB> job, it is known the integer T<SUB>i</SUB> (1&lt;=T<SUB>i</SUB>&lt;=1000), the time in days it takes the shoemaker to finish the job. 
For each day of delay before starting to work for the i<SUB>th</SUB> job, shoemaker must pay a fine of 
S<SUB>i</SUB> (1&lt;=S<SUB>i</SUB>&lt;=10000) cents. Your task is to help the shoemaker, writing a programm to find the sequence of jobs with minimal total fine. </U></U>
<H2><FONT color=#0070e8><A name=SECTION0001003000000000000000>The 
Input</A></FONT></H2>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


<P>First line of input contains an integer N (1&lt;=N&lt;=1000). The next
N lines each contain two numbers: the time and fine of each
task in order.
<H2><FONT color=#0070e8><A name=SECTION0001004000000000000000>The 
Output</A></FONT></H2>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
<P>You programm should print the sequence of jobs with minimal fine. Each 
job should be represented by its number in input. All integers should be placed 
on only one output line and separated by one space. If multiple solutions are possible, 
print the first lexicographically.
<H2><FONT color=#0070e8><A name=SECTION0001005000000000000000>Sample Input 
</A></FONT></H2>
<P><PRE>
1

4
3 4
1 1000
2 2
5 5
</PRE>
<P>
<H2><FONT color=#0070e8><A name=SECTION0001006000000000000000>Sample Output 
</A></FONT></H2>
<P><PRE>2 1 3 4
</PRE>
<ADDRESS>
<HR>
<A href="http://diaspro.com/~gevak">Alex Gevak</A><BR>September 16, 
2000(Revised 4-10-00, Antonio Sanchez)</ADDRESS></BODY></HTML>

______________________________________________________
10027||||||false||||||
<center><h2>Problem A: Language Cardinality</h2></center><br>

A (formal) language is a set of strings.  One way to define a particular
language is using ordinary set notation. 
Alternatively, some form of grammar may be more convenient for representing
large sets.  The UW grammar in which we are interested has two parts:
<ul>
<li>An initial string</li>
<li>A set of replacement rules of the form <i>s<sub>1</sub></i> -> <i>s<sub>2</sub></i> where <i>s<sub>1</sub></i> and <i>s<sub>2</sub></i> are strings
</ul>
The language defined by this grammar is the set of all strings
that can be generated by repeatedly replacing 
<i>s<sub>1</sub></i> by <i>s<sub>2</sub></i> within the initial string.
For example, consider the grammar G consisting of the initial string 
<p>
<pre>
"AyB"
</pre>
and the replacement rules
<pre>
{"A"->"ab", "Ay"->"cdy", "B"->"w", "B"->"x"} .
</pre>
G generates the language 
<p>
<pre>
L = {"AyB", "Ayw", "Ayx", "abyB", "abyw", "abyx", "cdyB", "cdyw", "cdyx"}
</pre>
<p>
Given a UW grammar G, compute how many different strings there
are in the language generated by G.
<h3>Input</h3>
<p>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The first line of input contains the initial string.
The second and subsequent lines contain the replacement rules, one per
line, terminated by end-of-file.   
There are at most 100 replacement rules.  Each input string contains between 0 and 10 upper and lower case 
letters, and is enclosed in quotes.  There are no spaces in the input.
<h3>Output</h3>
<p>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Output consists of a single integer, the number of distinct strings in
the language generated by G.  If there are more than 1000 distinct strings,
print "Too many." instead.
<h3>Sample Input</h3>
<pre>
1

"AyB"
"A"->"ab"
"Ay"->"cdy"
"B"->"w"
"B"->"x"
</pre>
<h3>Sample Output</h3>
<pre>
9
</pre>

______________________________________________________
10028||||||false||||||
<center><h2>Problem B: Demerit Points</h2></center><br>

A province to our west, which shall remain nameless, but whose name does
not start with A, B, or S, has a unique system for driver's license demerit
and merit points.  The system works (more or less) as follows.
<p>
A new driver starts with no merit or demerit points.  When the driver
is convicted of a driving offense, he or she is given between 2 and
15 demerit points, depending on the severity of the offense.  
<p>
A merit point is given, to a maximum of five, for each interval of
two years in which a driver has no offenses and no demerit points.
Each merit point cancels up to two demerit points.  If a subsequent
offense occurs and the number of demerit points exceeds double the
number of merit points, the number of demerit points is reduced by double
the number of merit points, and the number of merit points is set to 0.
If a subsequent offense occurs and the number of demerit points is
less than or equal to double the number of merit points, the number of demerit
points is reduced to 0, and the number of merit points is reduced
by half the number of demerit points.  Any fractional merit points are
discarded.
<p>
Demerit points are reduced whenever a driver has one year free of any
driving offense.  This reduction decreases
the number of demerits by half or by 2, whichever is more.  
Any fractional or negative demerit points are
discarded.  This reduction takes place on each anniversary of the most
recent offense until no points remain.
<p>
If a new offense occurs on the same day as a demerit point reduction
or merit point award, the reduction/award is done before the new demerit
points are given.
<p>
Your job is to read a set of information records for a driver, and to
print the number of merit or demerit points at any given time.
<h3>Input</h3>
<p>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The first line of input contains the date of issue of the license (yyyymmdd)
Subsequent lines contain information
on offenses, in chronological order.  Each such line contains
the offense date (yyyymmdd) and the number of points applied 
(an integer between 2 and 15).  

<h3>Output</h3>
<p>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
On the day the license is issued, and on every occasion that the number 
of merit or demerit points changes, output
a line giving the date and the number of points, in the format below.
<br>
Output terminates when 5 merit points are accumulated following the
last offense.
<h3>Sample Input</h3>
<pre>
1

19820508
19830606 2
19830607 2
19891212 15
</pre>
<h3>Sample Output</h3>
<pre>
1982-05-08 No merit or demerit points.
1983-06-06 2 demerit point(s).
1983-06-07 4 demerit point(s).
1984-06-07 2 demerit point(s).
1985-06-07 No merit or demerit points.
1987-06-07 1 merit point(s).
1989-06-07 2 merit point(s).
1989-12-12 11 demerit point(s).
1990-12-12 5 demerit point(s).
1991-12-12 2 demerit point(s).
1992-12-12 No merit or demerit points.
1994-12-12 1 merit point(s).
1996-12-12 2 merit point(s).
1998-12-12 3 merit point(s).
2000-12-12 4 merit point(s).
2002-12-12 5 merit point(s).
</pre>
</pre>

______________________________________________________
10029||||||false||||||
<center><h2>Problem C: Edit Step Ladders</h2></center><br>

An <i>edit step</i> is a transformation from one word <i>x</i> to another
word <i>y</i> such that <i>x</i> and <i>y</i> are words in the dictionary,
and <i>x</i> can be
transformed to <i>y</i> by adding, deleting, or changing one letter.
So the transformation from <i>dig</i> to <i>dog</i> or from
<i>dog</i> to <i>do</i> are both edit steps.  An <i>edit step ladder</i>
is a lexicographically ordered sequence of words 
<i>w<sub>1</sub>, w<sub>2</sub>, ... w<sub>n</sub></i>
such that the transformation from <i>w<sub>i</sub></i> to <i>w<sub>i+1</sub></i>
is an edit step for all <i>i</i> from 1 to <i>n-1</i>.
<p>
For a given dictionary, you are to compute the length of the longest
edit step ladder.  
<h3>Input</h3>
The input to your program consists of the dictionary -
a set of lower case words in lexicographic order - one per line.  No word exceeds
16 letters and there are no more than 25000 words in the dictionary.

<h3>Output</h3>

The output consists of a single integer, the number of words in the 
longest edit step ladder.
<h3>Sample Input</h3>
<pre>
cat
dig
dog
fig
fin
fine
fog
log
wine
</pre>
<h3>Sample Output</h3>
<pre>
5
</pre>

______________________________________________________
10030||||||false||||||
<html>
<!--
* Multiple test case problem corrected by
  Mahbub Murshed Suman (udvranto@hotmail.com)
  09.January.2004 -->


<center><h2>Problem D: Computer Dialogue</h2></center>
<br>

<p>
There are three computers connected by a network. One of them is a
server and the other two are clients.  The server has some files, each
with a different name.  The full name of each file consists of two
parts, a name and an extension.  Both clients know the full names of
all of the files stored on the server.  From among its files, the
server chooses a single file and sends the name part of that file's
full name to one of the clients and the extension part of the full
name to the other client.

<p>
The clients then begin communicating in an effort to determine which
file was selected by the server (they want to learn the file's full name).
However, the clients have to communicate in a very restricted manner.
Clients take turns sending messages to each other, but they can only
say when they don't know the full name of the file.  If
one client does not know the full name of the chosen file, that client
may send a message saying "I don't know the full file name" to the
other client. The two clients alternate, sending only this message back and
forth. This continues until either one of the clients knows the
full file name or they decide to quit.  The
client that received the name part of the full file name always waits
for the other client to send the first message.

<p>
Pretend that you know all the full file names that reside on the
server (both the name and the extension part) and you
are listening to the conversation between the clients.
Based on this conversation, you should determine the set of files
that might have been chosen by the server.
Files in this set are called <b>candidate files</b>.

<h3>Input</h3>

<p>
The first line is the number of test cases, followed by a blank line.
<p>
The first line of each test case in the input file contains two integers
<em>N</em> and <em>M</em>, separated by a space.
<em>N</em> (1&nbsp;&lt;=&nbsp;<em>N</em>&nbsp;&lt;=&nbsp;1000) is the number of
files of the server, and <em>M</em> (1&nbsp;&lt;=&nbsp;<em>M</em>&nbsp;&lt;=&nbsp;100)
is the number of messages exchanged between the clients in their
effort to determine the full file name.

<p>
Each of the next <em>N</em> lines, in each test case contain one full file name.
Full file names are given in a manner similar to
MS-DOS 8.3 format.
Each full file name is represented in name.extension form, where
both the name and the extension consist of only capital, alphabetic
characters and decimal digits. The name part will have at least one
character and
at most eight. The extension part will have at most three characters
and may be empty. If extension is empty then separating
dot may be omitted.

<p>
Each full file name appears in each test case no more than once.
<p>
Each test case will be separated by a single line.

<h3>Output</h3>

<p>

Write on the first line of the output for each test case, the number of candidate
files based on the given set of files and the number of messages
exchanged between the clients.  Write zero if there are no candidate files.

<p>
On the following lines for each test case, write the full names of all candidate files.
Each of these names should be written on a separate line.
They should appear in the same order and with exactly the same spelling
as in the input file. That means that if the separating dot was omitted in the input for a particular file then it should also be
omitted for this file in the output and vice versa.
No file may be listed more than once.
<p>
Print a blank line between the outputs for two consecutive test cases.
<h3>Sample input</h3>

<tt><pre>
1

19 2
LICENCE.TMP
WIN32.LOG
FILEID.
PSTOTEXT.TXT
GSVIEW32.EXE
GSVIEW32.ICO
GSVIEWDE.HLP
LICENCE
GSVIEWEN.HLP
GSVW32DE.DLL
FILEID.TMP
GSVW32EN.DLL
PSTOTXT3.DLL
PSTOTXT3.EXE
GSV16SPL.EXE
GVWGS32.EXE
ZLIB32.DLL
PRINTER.INI
README.TXT</pre></tt>

<h3>Sample Output</h3>

<tt><pre>6
LICENCE.TMP
FILEID.
LICENCE
FILEID.TMP
PSTOTXT3.DLL
PSTOTXT3.EXE</pre></tt>



</html>

______________________________________________________
10031||||||false||||||
<center><h2>Problem E: Saskatchewan</h2></center><br>

The province of Saskatchewan is surveyed in <i>sections</i>.  
A section is a square mile of land.  Grid roads delimit sections; there is
one north-south and one east-west road exactly every mile.  (Complications
arise because of the curvature of the earth but you can disregard these
and assume that the province is a plane.)  The provincial border is
a polygon whose vertices correspond to the intersections of grid roads.
However, the edges do not necessarily follow grid roads; some sections are cut by the border.  Your
job is to compute how many sections are completely within a province like
Saskatchewan.
<h3>Input</h3>
<p>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

Standard input contains a series of no more than 100 coordinate pairs,
one pair per line.  These coordinates give the vertices of the perimeter of the
province; the border is formed by connecting them in order.  All coordinates
are in the first quadrant; they range from 0 to 100,000. 
<h3>Output</h3>
<p>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Your output should be a single integer:  the number of sections 
(i.e. unit squares with corners at integer coordinates) 
fully contained within the
province.
<h3>Sample Input</h3>
<pre>
1

0 0
0 100000
99999 100000
100000 0
</pre>
<h3>Sample Output</h3>
<pre>
9999900000
</pre>

______________________________________________________
10032||||||false||||||
<center><h2>Problem F: Tug of War</h2></center><br>

A tug of war is to be arranged at the local office picnic.  For
the tug of war, the picnickers must be divided into two teams.  Each
person must be on one team or the other; the number of people on the
two teams must not differ by more than 1; the total weight of the
people on each team should be as nearly equal as possible.
<h3>Input</h3>
<p>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The first line of input contains <i>n</i> the number of people at the
picnic.  <i>n</i> lines follow.  The first line gives the weight of
person 1; the second the weight of person 2; and so on.  Each weight is
an integer between 1 and 450.  There are at most 100 people at the picnic.
<h3>Output</h3>
<p>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Your output will be a single line containing 2 numbers:  the total
weight of the people on one team, and the total weight of the people on
the other team.  If these numbers differ, give the lesser first.
<h3>Sample Input</h3>
<pre>
1

3
100
90
200
</pre>
<h3>Sample Output</h3>
<pre>
190 200
</pre>

______________________________________________________
10033||||||false||||||
<center><h2>Problem G: Interpreter</h2></center><br>

A certain computer has 10 registers and 1000 words of RAM.  Each register
or RAM location holds a 3-digit integer between 0 and 999.  Instructions
are encoded as 3-digit integers and stored in RAM.  
The encodings are as follows:

<ul>
<li> 100 means <i>halt</i>
<li> 2dn means <i>set register d to n (between 0 and 9)</i>
<li> 3dn means <i>add n to register d</i>
<li> 4dn means <i>multiply register d by n</i>
<li> 5ds means <i>set register d to the value of register s</i>
<li> 6ds means <i>add the value of register s to register d</i>
<li> 7ds means <i>multiply register d by the value of register s</i>
<li> 8da means <i>set register d to the value in RAM whose address is in register a</i>
<li> 9sa means <i>set the value in RAM whose address is in register a
to the value of register s</i>
<li> 0ds means <i>goto the location in register d unless register s contains 0</i>
</ul>

<p>All registers initially contain 000.  The initial content of the RAM
is read from standard input.  The first instruction to be executed is
at RAM address 0.  All results are reduced modulo 1000.
<h3>Input</h3>
<p>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The input to your program consists of up to 1000 3-digit unsigned integers,
representing the contents of consecutive RAM locations starting at 0.
Unspecified RAM locations are initialized to 000.
<h3>Output</h3>
<p>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
The output from your program is a single integer:  the number of 
instructions executed up to and including the <i>halt</i> instruction.
You may assume that the program does halt.
<h3>Sample Input</h3>
<pre>
1

299
492
495
399
492
495
399
283
279
689
078
100
000
000
000
</pre>
<h3>Sample Output</h3>
<pre>
16
</pre>

______________________________________________________
10034||||||false||||||
<center><h2>Problem A: Freckles</h2></center>
In an episode of the Dick Van Dyke show, little Richie connects the freckles
on his Dad's back to form a picture of the Liberty Bell.  Alas, one of the
freckles turns out to be a scar, so his Ripley's engagement falls through.
<p>
Consider Dick's back to be a plane with freckles at various (x,y) locations.
Your job is to tell Richie how to connect the dots so as to minimize the
amount of ink used.  Richie connects the dots by drawing straight lines
between pairs, possibly lifting the pen between lines.
When Richie is done there must be
a sequence of connected lines from any freckle to any other freckle.  
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>
The first line contains 0 &lt; <i>n</i> &lt;= 100, the number of freckles
on Dick's back.  For each freckle, a line follows; each following line
contains two real numbers indicating the (x,y) coordinates of the
freckle.
<h3>Output</h3> 
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Your program prints a single real number to two decimal places:  the
minimum total length of ink lines that can connect all the freckles.
<h3>Sample Input</h3>
<pre>
1

3
1.0 1.0
2.0 2.0
2.0 4.0
</pre>
<h3>Sample Output</h3>
<pre>
3.41
</pre>

______________________________________________________
10035||||||false||||||
<center><h2>Problem B: Primary Arithmetic</h2></center>

Children are taught to add multi-digit numbers from right-to-left one
digit at a time.  Many find the "carry" operation - in which a 1 is
carried from one digit position to be added to the next - to be
a significant challenge.  Your job is to count the number of 
carry operations for each of a set of addition problems so that
educators may assess their difficulty.

<h3>Input</h3>
Each line of input contains two unsigned integers less than 10 digits.  
The last line of input contains 0 0. 
<h3>Output</h3>
For each line of input except the 
last you should compute and print the number of carry operations that
would result from adding the two numbers, in the format
shown below.

<h3>Sample Input</h3>
<pre>
123 456
555 555
123 594
0 0
</pre>
<h3>
Sample Output
</h3><pre>
No carry operation.
3 carry operations.
1 carry operation.
</pre>

______________________________________________________
10036||||||false||||||
<center><h2>Problem C: Divisibility</h2></center>
<p>
Consider an arbitrary sequence of integers. One can place + or - operators between
integers in the sequence, thus deriving different arithmetical expressions
that evaluate to different values. Let us, for example, take the sequence:
17, 5, -21, 15. There are eight possible expressions:

<table>
<col><col align=center>
<col><col align=center>
<col><col align=center>
<col><col align=center>
<col>
<tr><td>17<td>+<td>5<td>+<td>-21<td>+<td>15<td>=<td>16
<tr><td>17<td>+<td>5<td>+<td>-21<td>-<td>15<td>=<td>-14
<tr><td>17<td>+<td>5<td>-<td>-21<td>+<td>15<td>=<td>58
<tr><td>17<td>+<td>5<td>-<td>-21<td>-<td>15<td>=<td>28
<tr><td>17<td>-<td>5<td>+<td>-21<td>+<td>15<td>=<td>6
<tr><td>17<td>-<td>5<td>+<td>-21<td>-<td>15<td>=<td>-24
<tr><td>17<td>-<td>5<td>-<td>-21<td>+<td>15<td>=<td>48
<tr><td>17<td>-<td>5<td>-<td>-21<td>-<td>15<td>=<td>18
</table>

We call the sequence of integers <b>divisible</b> by <em>K</em> if
+ or - operators can be placed between integers in the sequence in such
way that resulting value is divisible by <em>K</em>. In the above example,
the sequence is divisible by 7 (17+5+-21-15=-14) but is not divisible by 5.

<p>
You are to write a program that will determine divisibility of 
sequence of integers.

<h3>Input</h3>

The first line of the input file contains a integer M indicating the number of
cases to be analyzed. Then M couples of lines follow. 
<br>
For each one of this couples,
the first line contains two integers, <em>N</em>
and <em>K</em> (1&nbsp;&lt;=&nbsp;<em>N</em>&nbsp;&lt;=&nbsp;10000, 2&nbsp;&lt;=&nbsp;<em>K</em>&nbsp;&lt;=&nbsp;100)
separated by a space.


The second line contains a sequence of <em>N</em> integers separated 
by spaces. Each integer is not greater than 10000 by it's absolute 
value.

<h3>Output</h3>

For each case in the input file, write to the output file the word "Divisible" if given sequence of integers is
divisible by <em>K</em> or "Not divisible" if it's not.

<h3>Sample input</h3>
<tt><pre>
2
4 7
17 5 -21 15
4 5
17 5 -21 15
</pre></tt>

<h3>Sample Output</h3>
<pre>
<tt>Divisible</tt>
<tt>Not divisible</tt>
</pre>

______________________________________________________
10037||||||false||||||
<center><h2>Problem D: Bridge</h2></center>

<i>n</i> people wish to cross a bridge at night.  A group of at most
two people may cross at any time, and each group must have a flashlight.
Only one flashlight is available among the <i>n</i> people, so some sort
of shuttle arrangement must be arranged in order to return the flashlight
so that more people may cross.
<p>
Each person has a different crossing speed; the speed of a group is
determined by the speed of the slower member.  Your job is to determine
a strategy that gets all <i>n</i> people across the bridge in the
minimum time.
<h3>Input</h3>
<p>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The first line of input contains <i>n</i>, followed by <i>n</i> lines
giving the crossing times for each of the people.
There are not more than 1000 people and nobody takes more than 100 seconds 
to cross the bridge. 
<h3>Output</h3>
<p>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
The first line of output must contain the total number of seconds required
for all <i>n</i> people to cross the bridge.   The following lines give
a strategy for achieving this time.  Each line contains either one or
two integers, indicating which person or people form the next group to
cross.  (Each person is indicated by the crossing time specified in
the input.  Although many people may have the same crossing time the
ambiguity is of no consequence.)
Note that the crossings alternate directions, as it is necessary
to return the flashlight so that more may cross.  If more than one strategy
yields the minimal time, any one will do.
<h3>Sample Input</h3>
<pre>
1

4
1
2
5
10
</pre>
<h3>Sample Output</h3>
<pre>
17
1 2
1
5 10
2
1 2
</pre>

______________________________________________________
10038||||||false||||||
<center><h2>Problem E: Jolly Jumpers</h2></center>
A sequence of <i>n > 0</i> integers is called a <i>jolly jumper</i>
if the absolute values of the difference between successive elements
take on all the values 1 through <i>n-1</i>.  For instance,
<p>
<pre>
1 4 2 3
</pre>
is a jolly jumper, because the absolutes differences are 3, 2, and 1
respectively.  The definition implies that any sequence of a single
integer is a jolly jumper.  You are to write a program to determine
whether or not each of a number of sequences is a jolly jumper.
<h3>Input</h3>
<p>
Each line of input contains an integer <i>n</i> &lt;= 3000 followed by <i>n</i> integers
representing the sequence. 
<h3>Output</h3>

 For each line of input, generate a line
of output saying "Jolly" or "Not jolly".
<h3>Sample Input</h3>
<pre>
4 1 4 2 3
5 1 4 2 -1 6
</pre>
<h3>Sample Output</h3>
<pre>
Jolly
Not jolly
</pre>

______________________________________________________
10039||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem A: Railroads</TITLE>
<META NAME="description" CONTENT="Problem A: Railroads">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem A: Railroads</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>
It's Friday evening and Jill hates two things
which are common to all trains:
<DL COMPACT>
<DT>1.
<DD>They are always late.
<DT>2.
<DD>The schedule is always wrong.
</DL>

<P>
Nevertheless, tomorrow in the early morning hours Jill will have to
travel from Hamburg to Darmstadt in order to get to the regional
programming contest. 
Since she is afraid of arriving too late and being excluded from the contest
she is looking for the train which gets her to Darmstadt as early 
as possible.
However, she dislikes to get to the station too early, so if there 
are several schedules with the same arrival time then she will choose the 
one with the latest departure time.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Problem</A>&nbsp;</FONT>
</H2>
Jill asks you to help her with her problem.
You are given a set of railroad schedules from which you must compute 
the train with the earliest arrival time and the fastest connection from one 
location to another. 
One good thing: Jill is very experienced in changing trains. She can do this
instantaneously, i.e., in zero time!!!  

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The very first line of the input gives the number of scenarios.
Each scenario consists of three parts.

<P>
Part one lists the names of all cities connected by the
railroads. It starts with a number 
<!-- MATH: $1<C \le 100$ -->
<IMG
 WIDTH="100" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10039img1.gif" 
 ALT="$1<C \le 100$">,
followed by <I>C</I> lines
containing city names. These names consist of letters.

<P>
Part two describes all the trains running during a day. 
It starts with a number 
<!-- MATH: $T \le 1000$ -->
<IMG
 WIDTH="75" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10039img1.gif" 
 ALT="$T \le 1000$">
followed by <I>T</I> train descriptions.
Each of them consists of one line with a number 
<!-- MATH: $t_i \le 100$ -->
<IMG
 WIDTH="66" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10039img1.gif" 
 ALT="$t_i \le 100$">
and <I>t</I><SUB><I>i</I></SUB> 
more lines 
with a time and a city name, meaning that passengers can get on or off the 
train at that time at that city.

<P>
Part three consists of three lines: Line one contains the earliest journey's 
starting time, line two the name of the city where she starts,
and line three the destination city. The two cities are always different.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each scenario print a line containing ``<TT>Scenario </TT><I>i</I>'',
where <I>i</I> is the number of the scenario starting at 1.  

<P>
If a connection exists then print the two lines
containing zero padded timestamps and locations as shown in the sample. Use 
blanks to achieve the indentation. 
If no connection exists on the same day (i.e., arrival before midnight) 
then print a line containing
``<TT>No connection</TT>''.

<P>
After each scenario print a blank line.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
3
Hamburg
Frankfurt
Darmstadt
3
2
0949 Hamburg
1006 Frankfurt
2
1325 Hamburg
1550 Darmstadt
2
1205 Frankfurt
1411 Darmstadt
0800
Hamburg
Darmstadt
2
Paris
Tokyo
1
2
0100 Paris
2300 Tokyo
0800
Paris
Tokyo
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Scenario 1
Departure 0949 Hamburg
Arrival   1411 Darmstadt

Scenario 2
No connection
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10040||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem B: Ouroboros Snake</TITLE>
<META NAME="description" CONTENT="Problem B: Ouroboros Snake">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem B: Ouroboros Snake</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>

<P>
Ouroboros was a mythical snake in Ancient Egypt. It has its tail
inside its mouth and continuously devours itself.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Problem</A>&nbsp;</FONT>
</H2>

<P>
Ouroboros numbers are binary numbers of 2<SUP><I>n</I></SUP> bits that have the
property of generating the whole set of numbers from 0 to 2<SUP><I>n</I></SUP>-1 as
follows: To produce all of them we place the 2<SUP><I>n</I></SUP> bits wrapped in a
circle so that the last bit goes before the first one. Then we can
denote all 2<SUP><I>n</I></SUP> different strings with <I>n</I> bits starting each time
with the next bit in the circle.

<P>
For example, for <I>n</I>=2 there are only four Ouroboros numbers. These
are 0011, 0110, 1100 and 1001. For 0011, the following diagram and table
depicts the process of
finding all the bitstrings:

<P>

<P>
<BR>

<DIV ALIGN="CENTER">

<img src=p10040.gif width=150>

<P>
<BR>
<BR>
<BR>

<P>
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER"><B><I>k</I></B></TD>
<TD ALIGN="LEFT"><TT><B>0011</b>0011...</TT></TD>
<TD ALIGN="CENTER"><B><I>o</I>(<I>n</I>=2,<I>k</I>)</B></TD>
</TR>
<TR><TD ALIGN="CENTER">0</TD>
<TD ALIGN="LEFT"><TT>00</TT></TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">1</TD>
<TD ALIGN="LEFT"><code>&nbsp;01</code></TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">2</TD>
<TD ALIGN="LEFT"><code>&nbsp;&nbsp;11</code></TD>
<TD ALIGN="CENTER">3</TD>
</TR>
<TR><TD ALIGN="CENTER">3</TD>
<TD ALIGN="LEFT"><code>&nbsp;&nbsp;&nbsp;10</code></TD>
<TD ALIGN="CENTER">2</TD>
</TR>
</TABLE></DIV>

<P>
Your program will compute the function <B><I>o</I>(<I>n</I>,<I>k</I>)</B>, where <B><I>n</I> &gt; 0</B> and

<!-- MATH: $0 \leq k < 2^n$ -->
<IMG
 WIDTH="87" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10040img1.gif" 
 ALT="$0 \leq k < 2^n$">.
This function calculates the <B><I>k</I></B>-th number
inside the smallest Ouroboros number of size <B><I>n</I></B>-bits.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input starts with a line containing the number of test cases.
For each test case you will be given a line with two integers <B><I>n</I></B>
(<B>0&lt;<I>n</I>&lt;22</B>) and <B><I>k</I></B> (
<!-- MATH: $0\leq k < 2^n$ -->
<IMG
 WIDTH="87" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10040img1.gif" 
 ALT="$0 \leq k < 2^n$">).

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For every test case your output must evaluate the function <B><I>o</I>(<I>n</I>,<I>k</I>)</B> and
print the result on a line by itself.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
4 
2 0
2 1
2 2
2 3
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
0
1
3
2
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10041||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem C: Vito's family</TITLE>
<META NAME="description" CONTENT="Problem C: Vito's family">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem C: Vito's family</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>
The world-known gangster Vito Deadstone is moving to New York. He has
a very big family there, all of them living in Lamafia Avenue. Since
he will visit all his relatives very often, he is trying to find a
house close to them. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Problem</A>&nbsp;</FONT>
</H2>
Vito wants to minimize the total distance to
all of them and has blackmailed you to write a 
program that solves his problem.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of several test cases. The first line contains 
the number of test cases.

<P>
For each test
case you will be given the integer number of relatives <I>r</I> (
<!-- MATH: $0 < r < 500$ -->
0 &lt; <I>r</I> &lt; 500)
and the street numbers (also integers) 
<!-- MATH: $s_1, s_2, \ldots, s_i, \ldots, s_r$ -->
<IMG
 WIDTH="150" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10041img1.gif" 
 ALT="$s_1, s_2, \ldots, s_i, \ldots, s_r$">
where
they live (
<!-- MATH: $0 < s_i < 30000$ -->
0 &lt; <I>s</I><SUB><I>i</I></SUB> &lt; 30000 ). Note that several relatives could live in
the same street number.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For each test case your program must write the minimal sum of
distances from the optimal Vito's house to each one of his
relatives. The distance between two street numbers <I>s</I><SUB><I>i</I></SUB> and <I>s</I><SUB><I>j</I></SUB> is 

<!-- MATH: $d_{ij}= |s_i-s_j|$ -->
<I>d</I><SUB><I>ij</I></SUB>= |<I>s</I><SUB><I>i</I></SUB>-<I>s</I><SUB><I>j</I></SUB>|.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
2 2 4 
3 2 4 6
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
2
4
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10042||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem D: Smith Numbers</TITLE>
<META NAME="description" CONTENT="Problem D: Smith Numbers">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem D: Smith Numbers</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>
While skimming his phone directory in 1982, Albert Wilansky, a mathematician
of Lehigh University
, noticed that the telephone number of
his brother-in-law H.&nbsp;Smith had the following peculiar property: The sum of the
digits of that number was equal to the sum of the digits of the prime factors
of that number. Got it? Smith's telephone number was 493-7775. This number can
be written as the product of its prime factors in the following way:
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
4937775 = 3\cdot 5\cdot 5\cdot 65837
\end{displaymath} -->


<IMG
 WIDTH="191" HEIGHT="27"
 SRC="http://uva.onlinejudge.org/external/100/10042img1.gif" 
 ALT="\begin{displaymath}4937775 = 3\cdot 5\cdot 5\cdot 65837\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
The sum of all digits of the telephone number is

<!-- MATH: $4+9+3+7+7+7+5=42$ -->
4+9+3+7+7+7+5=42, 
and the sum of the digits of its prime factors is equally

<!-- MATH: $3+5+5+6+5+8+3+7=42$ -->
3+5+5+6+5+8+3+7=42. Wilansky was so amazed by his discovery that he named
this type of numbers after his brother-in-law: Smith numbers.

<P>
As this observation is also true for every prime number, Wilansky 
decided later that a (simple and unsophisticated) prime number is 
not worth being a Smith number and he excluded them from the definition.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Problem</A>&nbsp;</FONT>
</H2>
Wilansky published an article about Smith numbers in the <EM>Two Year
  College Mathematics Journal</EM> and was able to present a whole collection of
different Smith numbers: For example, 9985 is a Smith number and so is 6036.
However, Wilansky was not able to give a Smith number which was larger
than the telephone number of his brother-in-law. It is your task to find 
Smith numbers which are larger than 4937775.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input consists of several test cases, the number of which you are given in 
the first line of the input.

<P>
Each test case consists of one line containing a
single positive integer smaller than 10<SUP>9</SUP>. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For every input value <I>n</I>, you are to
compute the smallest Smith number which is larger than <I>n</I>
and print each number on a single line. You can assume
that such a number exists.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1
4937774
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>

<P>
<PRE>
4937775
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10043||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem E: Chainsaw Massacre</TITLE>
<META NAME="description" CONTENT="Problem E: Chainsaw Massacre">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem E: Chainsaw Massacre</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>

<P>
As every year the Canadian Lumberjack Society has just held its annual 
woodcutting competition and the national forests between Montreal and 
Vancouver are devastated. Now for the social part!
In order to lay out an adequate dance floor for the evening party
the organizing committee is looking for a large rectangular area without 
trees. Naturally, all lumberjacks are already drunk and nobody wants to 
take the risk of having any of them operate a chainsaw.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
The Problem</A>&nbsp;</FONT>
</H2>
The organizing committee has asked you to find the largest yet free
rectangle which could serve as the dance floor. The area in
which you should search is also rectangular and the dance floor must
be entirely located in that area.
Its sides should be parallel to the borders of the area.
It is allowed that the dance floor is located at the borders of the area
and also that trees grow on the borders of the dance floor.
What is the maximum size of the dance floor?

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
The Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of the input specifies the number of scenarios.
 
For each scenario, the first line provides the length <I>l</I> and width
<I>w</I> of the area in meters (
<!-- MATH: $0<l,w\leq 10000$ -->
<IMG
 WIDTH="130" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10043img1.gif" 
 ALT="$0<l,w\leq 10000$">,
both integers). Each of
the following lines describes either a single tree, or a line of trees
according to one of the following formats:

<P>
<UL>
<LI><code>1 x y</code>, where the ``one'' characterizes a single tree, and   
<I>x</I> and <I>y</I> provide its coordinates in meters with respect to the upper left
corner.
<LI><code>k x y dx dy</code>, where <I>k</I>&gt;1 provides the number of trees in a line with
coordinates 
<!-- MATH: $(x,y),(x+dx,y+dy),\ldots,(x+(k-1)dx,y+(k-1)dy)$ -->
<IMG
 WIDTH="438" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10043img1.gif" 
 ALT="$(x,y),(x+dx,y+dy),\ldots,(x+(k-1)dx,y+(k-1)dy)$">.
<LI>
<code>0</code> denotes the end of the scenario.
</UL>
The coordinates <I>x</I>, <I>y</I>, <I>dx</I>, and <I>dy</I> are given as integers. It is 
guaranteed that all the trees are situated in the area, i.e. have coordinates
in 
<!-- MATH: $[0,l]\times[0,w]$ -->
<IMG
 WIDTH="97" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10043img1.gif" 
 ALT="$[0,l]\times[0,w]$">.
There will be at most 1000 trees. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
The Output</A>&nbsp;</FONT>
</H2>

<P>
For each scenario print a line containing the maximum size of the dance floor 
measured in square meters.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
2 3
0
10 10
2 1 1 8 0
2 1 9 8 0
0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
6
80
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10044||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem F: Erd&#246;s Numbers</TITLE>
<META NAME="description" CONTENT="Problem F: Erd&#246;s Numbers">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem F: Erd&#246;s Numbers</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>
The Hungarian Paul Erd&#246;s (1913-1996, speak as ``Ar-dish'') not only was one
of the strangest mathematicians of the 20th century, he was also one of the
most famous. He kept on publishing widely circulated papers up to a very high
age and every mathematician having the honor of being a
co-author to Erd&#246;s is well respected.

<P>
Not everybody got the chance to co-author a paper with Erd&#246;s, so many people
were content if they managed to publish a paper with somebody who had
published a scientific paper with Erd&#246;s. This gave rise to the 
so-called <EM>Erd&#246;s numbers</EM>. 
An author who has jointly published with Erd&#246;s had Erd&#246;s
number 1. An author who had not published with Erd&#246;s but with somebody with
Erd&#246;s number 1 obtained Erd&#246;s number 2, and so on.  

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Problem</A>&nbsp;</FONT>
</H2>
Today, nearly everybody wants to know which Erd&#246;s number he or she
has. Your task is to write a program which computes Erd&#246;s numbers
for a given set of scientists.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The first line of the input contains the number of scenarios.

<P>
The input for each scenario consists of a paper database and a list of names. 
It begins with the line

<P>

<I>P N</I>

<P>
where <I>P</I> and <I>N</I> are  natural numbers. Following this line are
<I>P</I> lines containing descriptions of papers (this is the paper database). A
paper appears on a line by itself and is specified in the following way: 
<PRE>
Smith, M.N., Martin, G., Erdos, P.: Newtonian forms of prime factors matrices
</PRE>
Note that umlauts like `&#246;' are simply written as `o'. After the <I>P</I> papers
follow <I>N</I> lines with names. Such a name line has the following format:
<PRE>
Martin, G.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Output</A>&nbsp;</FONT>
</H2>
For every scenario you are to print a line containing a string 
``<TT>Scenario </TT><I>i</I>" (where <I>i</I> is the number of the scenario) and
the author names together with their Erd&#246;s number of all authors in the 
list of names. The authors should appear in the same order as they appear 
in the list of names.
The Erd&#246;s number is based on the papers in the paper database of this
scenario. Authors which do not have any relation to Erd&#246;s via the papers
in the database have Erd&#246;s number ``<TT>infinity</TT>".

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1
4 3
Smith, M.N., Martin, G., Erdos, P.: Newtonian forms of prime factor matrices 
Erdos, P., Reisig, W.: Stuttering in petri nets
Smith, M.N., Chen, X.: First oder derivates in structured programming
Jablonski, T., Hsueh, Z.: Selfstabilizing data structures
Smith, M.N.
Hsueh, Z.
Chen, X.
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Scenario 1
Smith, M.N. 1
Hsueh, Z. infinity
Chen, X. 2
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10045||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem G: Echo</TITLE>
<META NAME="description" CONTENT="Problem G: Echo">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem G: Echo</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>

<P>
In the Ancient Caves of Mystery (ACM), scientists have
found another old computer. Surprisingly it still worked.
The scientists started typing text at the keyboard which was shown immediately 
on the
computer screen. But every now and again some characters were inserted
- apparently out of nowhere.
After a while they noticed that only characters were inserted 
which they had typed before. Andrew C. Matthiews, a young and very 
ambitious theoretician, conjectured that 
the computer was connected to an interstellar computer network and 
the inserted characters were in fact an echo generated by
some mysterious alien <EM>Echo Race</EM>.
The scientists were very excited and immediately started 
chatting with whoever was sitting (or whatever was convenient 
to them) at the other side of the network. 

<P>
They also suspected that such a system must have some 
finite buffer, so to avoid overloading the system they were careful to wait for
a reply when ten characters were entered without remote echo.

<P>
Unfortunately, after several hours of work, one of the tired scientists 
spilled his cup of coffee all over the keyboard. That was too much for the
old computer, and it just blew up and could not be revived. 

<P>
All that the scientists can do now to verify their theory - and such prove the
aliens' existence - is looking at their notes of the display contents. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Problem</A>&nbsp;</FONT>
</H2>

<P>
You are hired to check whether the scientists' notes are consistent
with their theory, i.e., if a given string is an ``echo string with
buffer size ten''. Here, an ``echo string'' <I>e</I> is a merged version of
a string <I>s</I><SUB>1</SUB> and its identical echo <I>s</I><SUB>2</SUB>. Note that the order in
which the characters of <I>s</I><SUB>1</SUB> and <I>s</I><SUB>2</SUB> appear in <I>e</I> is not
changed. The ``buffer size ten'' means, that a character in <I>s</I><SUB>1</SUB>
is not separated by more than nine characters from its echo in <I>s</I><SUB>2</SUB>.

<P>
Due to the sudden end of the experiment, there are three cases:
<UL>
<LI>
The system had echoed all characters when it blew up, so the string really is 
an echo string with buffer size ten.
<LI>
The system blew up before it could echo all characters that were entered, but
up to that point its behaviour was consistent with the theory.
<LI>
The string cannot be completed by more output to form an echo string of buffer
size ten, so the scientists must have entered too many characters at a time or
their theory is wrong.
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
The Input</A>&nbsp;</FONT>
</H2>

<P>
The first line contains the number <I>n</I> of scenarios.

<P>
In each of the following <I>n</I> lines you will find one non-empty string to be 
examined, and it consists of letters and digits only. No line will contain 
more than 1000 characters.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
The Output</A>&nbsp;</FONT>
</H2>

<P>
For each scenario, print one of the following, corresponding to the three cases
described above:
<UL>
<LI><code>An echo string with buffer size ten</code>
<LI>
<code>Not an echo string, but still consistent with the theory</code>
<LI>
<code>Not consistent with the theory</code>
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
3
ACABCB
ABCAB
aa0123456789b
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
An echo string with buffer size ten
Not an echo string, but still consistent with the theory
Not consistent with the theory
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10046||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem H: Fold-up Patterns</TITLE>
<META NAME="description" CONTENT="Problem H: Fold-up Patterns">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem H: Fold-up Patterns</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Background</A>&nbsp;</FONT>
</H2>
Fold-up patterns for solids like cubes or octahedrons can be found in many
books, but without actually folding them it is hard to tell whether they will
really work. We will restrict our attention to a special class of patterns.

<P>

<P>
<BR>

<DIV ALIGN="CENTER">

<img src=p10046a.gif width=700>
</DIV>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
The Problem</A>&nbsp;</FONT>
</H2>
Given a fold-up pattern built from unit squares in the plane, together with a 
description along what edges it should be folded in what direction, decide
whether it will result in a closed surface of a solid in three dimensions.
If it does, find the volume of the solid.

<P>
More precisely, the pattern consists of a connected set of unit
squares in the plane. For any edge between connected sides you are
told whether to fold forward, back, or not at all along that edge,
always at right angles. If an edge of two adjacent squares in the
pattern is not mentioned in the input, you may assume that the squares
are not connected and can be ripped apart when folding. However,
connected edges must always be folded according to the description.

<P>
For our purposes a closed surface is one so that every square in the
pattern separates the inside from the outside. When folded, the squares of 
the pattern lie on a rectangular, 3-dimensional grid, and each separates a cell
(cubes of side length one unit) on the inside from one on the outside. For
every cell it must be clear whether it is inside or outside. The following
sketch illustrates this rule in two dimensions (the ``insides'' are shaded).

<P>

<P>
<BR>

<DIV ALIGN="CENTER">

<img src=p10046b.gif width=700>
</DIV>

<P>
Note that according to our definition the second pattern in the sketch at 
the top of the page is a closed surface, although it rather looks like two 
separate cubes attached along an edge.

<P>
Two different squares must not occupy exactly the same position in
space, though they may (and should for a closed surface) touch at
edges and vertices. Make sure that the pattern does not interpenetrate
itself through connected edges. Apart from that, do not worry about
the process of folding, e.g. what edges are folded first or whether
part of the structure is in the way for the rest.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
The Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of the input specifies the number of scenarios. 

<P>
For each scenario, the first line provides the number 
<!-- MATH: $1\leq n\leq 1000$ -->
<IMG
 WIDTH="105" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10046img1.gif" 
 ALT="$1\leq n\leq 1000$">
of 
squares in the pattern and the number 
<!-- MATH: $0\leq e\leq 4000$ -->
<IMG
 WIDTH="103" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10046img1.gif" 
 ALT="$0\leq e\leq 4000$">
of edges. Squares are 
labelled by the integers 0 to (<I>n</I>-1). The following <I>e</I> lines describe one 
edge each using the following four numbers:
<UL>
<LI>
The two numbers <I>s</I><SUB>1</SUB> and <I>s</I><SUB>2</SUB> (with 
<!-- MATH: $0\leq s_1<s_2<n$ -->
<IMG
 WIDTH="125" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10046img1.gif" 
 ALT="$0\leq s_1<s_2<n$">)
of the squares that 
are joined by the edge.
<LI>
The position <I>p</I> of the square <I>s</I><SUB>2</SUB> with respect to the square <I>s</I><SUB>1</SUB> in the
pattern. Here <I>p</I>=0,1,2, or 3 mean above, to the left, below, or to the
right, respectively (see sketch).
<LI>The number <I>f</I>=0,1,2 tells you to fold along the edge either not at all, or 
forward, or back, respectively.
</UL>
It is guaranteed that the folded pattern fits in a cube with a side length of 
40. You can also assume that the pattern is connected and can be drawn in the 
plane without overlapping.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
The Output</A>&nbsp;</FONT>
</H2>
For each scenario print a line containing either 
``<code>Not a closed surface</code>'' 
if the pattern does not form a closed surface or 
``<code>Closed surface, volume=</code>'' 
and the volume as an integer if it does. 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
6 5
0 2 2 1
1 2 3 1
2 3 3 1
2 4 2 1
4 5 2 0
12 11
0 3 2 1
1 5 2 1
2 3 3 1
3 4 3 1
4 5 3 2
5 6 3 1
6 7 3 1
7 8 3 1
8 9 3 2
3 10 2 1
5 11 2 1
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Not a closed surface
Closed surface, volume=2
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-11-19</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10047||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem A: The Monocycle</TITLE>
<META NAME="description" CONTENT="Problem A: The Monocycle">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem A: The Monocycle</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
A monocycle is a cycle that runs on one wheel and the one we will be considering 
is a bit more special. It has a solid wheel colored with five different
colors as shown in the figure: 

<P>
<DIV ALIGN="CENTER">

<!--width 5in p0a.pdf-->
<img src="http://uva.onlinejudge.org/external/100/p10047a.gif" >
</DIV>

<P>
The colored segments make equal angles (72<SUP><I>o</I></SUP>) at
the center. A monocyclist rides this cycle on an 
<!-- MATH: $M \times N$ -->
<IMG
 WIDTH="61" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10047a.gif" 
 ALT="$M \times N$">
grid of square
tiles. The tiles have such size that moving forward from the center of one
tile to that of the next one makes the wheel rotate exactly 72<SUP><I>o</I></SUP> around its
own center. The effect is shown in the above figure. When the wheel is at the
center of square 1, the midÂ­point of the periphery of its blue segment is in
touch with the ground. But when the wheel moves forward to the center of the
next square (square 2) the midÂ­point of its white segment touches the ground. 

<P>
<DIV ALIGN="CENTER">
<img src="http://uva.onlinejudge.org/external/100/p10047a.gif" >

<!--p0b.pdf-->
</DIV>

<P>
Some of the squares of the grid are blocked and hence
the cyclist cannot move to them. The cyclist starts from some square and tries
to move to a target square in minimum amount of time. From any square either
he moves forward to the next square or he remains in the same square but turns
90<SUP><I>o</I></SUP> left or right. Each of these actions requires exactly 1 second to
execute. He always starts his ride facing north and with the midÂ­point of the
green segment of his wheel touching the ground. In the target square, too, the
green segment must be touching the ground but he does not care about the
direction he will be facing. 

<P>
Before he starts his ride, please help him find out whether
the destination is reachable and if so the minimum amount of time he will
require to reach it.   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2> 

<P>
The input may contain multiple test cases. 

<P>
The first line of each test case contains two integers <I>M</I> and <I>N</I> (<IMG
 WIDTH="55" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10047a.gif" 
 ALT="$1 \le M$">,
<IMG
 WIDTH="61" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10047a.gif" 
 ALT="$N \le 25$">)
giving the dimensions of the grid. Then follows the description of
the grid in <I>M</I> lines of <I>N</I> characters each. The character `<TT>#</TT>' will
indicate a blocked square, all other squares are free. The starting location
of the cyclist is marked by `<TT>S</TT>' and the target is marked by `<TT>T</TT>'.
  
The input terminates with two zeros for <I>M</I> and <I>N</I>.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input first print the test case number on a
separate line as shown in the sample output. If the target location can be
reached by the cyclist print the minimum amount of time (in seconds) required
to reach it exactly in the format shown in the sample output, otherwise, print
``<TT>destination not reachable</TT>".                 

<P>
Print a blank line between two successive test cases.  

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
1 3
S#T
10 10
#S.......#
#..#.##.##
#.##.##.##
.#....##.#
##.##..#.#
#..#.##...
#......##.
..##.##...
#.###...#.
#.....###T
0 0
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case #1
destination not reachable
 
Case #2
minimum time = 49 sec
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-26</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10048||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem B: Audiophobia</TITLE>
<META NAME="description" CONTENT="Problem B: Audiophobia">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem B: Audiophobia</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
 
Consider yourself lucky! Consider yourself lucky to be still breathing and having 
fun participating in this
contest. But we apprehend that many of your descendants may not have this luxury. 
For, as you know, we
are the dwellers of one of the most polluted cities on earth. Pollution is everywhere, 
both in the environment
and in society and our lack of consciousness is simply aggravating the situation.

<P>
However, for the time being, we will consider only one type of pollution Â­-
the sound  pollution. The loudness
or intensity level of sound is usually measured in <EM>decibels</EM> and sound
having intensity  level 130 decibels or
higher is considered painful. The intensity level of normal conversation is 60Â­65 
decibels and that of heavy traffic is 70Â­80 decibels.

<P>
Consider the following city map where the edges refer to streets and the
nodes refer to crossings. The integer on each edge is the average intensity
level of sound (in decibels) in the corresponding street. 

<P>
<DIV ALIGN="CENTER">
<img src="http://uva.onlinejudge.org/external/100/p10048.gif" >

<!--p1.pdf-->
</DIV>

<P>
To get from crossing <B>A</B> to crossing <B>G</B> you may follow
the following path: <B>AÂ­CÂ­FÂ­G</B>. In that case you must be capable of
tolerating sound intensity as high as 140 decibels. For the paths <B>
AÂ­BÂ­EÂ­G</B>, <B>AÂ­BÂ­DÂ­G</B> and <B>AÂ­CÂ­FÂ­DÂ­G</B> you must tolerate respectively 90,
120 and 80 decibels of sound intensity. There are other paths, too. However,
it is clear that <B>AÂ­CÂ­FÂ­DÂ­G</B> is the most comfortable path since it does not
demand you to tolerate more than 80 decibels. 

<P>
In this problem, given a city
map you are required to determine the minimum sound intensity level you must
be able to tolerate in order to get from a given crossing to another.   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input may contain multiple test cases.

<P>
The first line of each test case contains three integers 
<!-- MATH: $C (\le 100)$ -->
<IMG
 WIDTH="76" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10048.gif" 
 ALT="$C (\le 100)$">,

<!-- MATH: $S (\le
1000)$ -->
<IMG
 WIDTH="83" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10048.gif" 
 ALT="$S (\le
1000)$">
and 
<!-- MATH: $Q (\le 10000)$ -->
<IMG
 WIDTH="94" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10048.gif" 
 ALT="$Q (\le 10000)$">
where <I>C</I> indicates the number of crossings
(crossings are numbered using distinct integers ranging from 1 to <I>C</I>), <I>S</I>
represents the number of streets and <I>Q</I> is the number of queries. 

<P>
Each of the next <I>S</I> lines contains three integers: <I>c</I><SUB>1</SUB>, <I>c</I><SUB>2</SUB> and <I>d</I>
indicating that the average sound intensity level on the street connecting the
crossings <I>c</I><SUB>1</SUB> and <I>c</I><SUB>2</SUB> (
<!-- MATH: $c_1 \ne c_2$ -->
<IMG
 WIDTH="58" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10048.gif" 
 ALT="$c_1 \ne c_2$">)
is <I>d</I> decibels.  

<P>
Each of the next <I>Q</I>
lines contains two integers <I>c</I><SUB>1</SUB> and <I>c</I><SUB>2</SUB> (
<!-- MATH: $c_1 \ne c_2$ -->
<IMG
 WIDTH="58" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10048.gif" 
 ALT="$c_1 \ne c_2$">)
asking for the minimum
sound intensity level you must be able to tolerate in order to get from
crossing <I>c</I><SUB>1</SUB> to crossing <I>c</I><SUB>2</SUB>. 

<P>
The input will terminate with three zeros
form <I>C</I>, <I>S</I> and <I>Q</I>.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input first output
the test case number (starting from 1) as shown in the sample output. Then for
each query in the input print a line giving the minimum sound intensity level
(in decibels) you must be able to tolerate in order to get from the first to
the second crossing in the query. If there exists no path between them just
print the line ``<TT>no path</TT>". 

<P>
Print a blank line between two consecutive test cases.   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
7 9 3
1 2 50
1 3 60
2 4 120
2 5 90
3 6 50
4 6 80
4 7 70
5 7 40
6 7 140
1 7
2 6
6 2
7 6 3
1 2 50
1 3 60
2 4 120
3 6 50
4 6 80
5 7 40
7 5
1 7
2 4
0 0 0
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case #1
80
60
60
 
Case #2
40
no path
80
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-26</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10049||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem C: SelfÂ­describing Sequence</TITLE>
<META NAME="description" CONTENT="Problem C: SelfÂ­describing Sequence">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem C: SelfÂ­describing Sequence</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
 
Solomon Golomb's <EM>selfÂ­describing sequence</EM> 
<!-- MATH: $\langle f(1), f(2), f(3), \dots \rangle$ -->
<IMG
 WIDTH="160" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10049img1.gif" 
 ALT="$\langle f(1), f(2), f(3), \dots \rangle$">
is the only nonÂ­decreasing sequence of positive integers with the property
that it contains exactly <I>f</I>(<I>k</I>) occurrences of <I>k</I> for each <I>k</I>. A few moments
thought reveals that the sequence must begin as follows:  

<P>
<BR><P></P>
<DIV ALIGN="CENTER">
<!-- MATH: \begin{displaymath}
\begin{array}{c|cccccccccccc}
\mbox{\boldmath $n$} & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & 11 & 12 \\
\hline
\mbox{\boldmath $f(n)$} & 1 & 2 & 2 & 3 & 3 & 4 & 4 & 4 & 5 & 5 & 5 & 6
\end{array}
\end{displaymath} -->


<IMG
 WIDTH="378" HEIGHT="51"
 SRC="http://uva.onlinejudge.org/external/100/10049img1.gif" 
 ALT="\begin{displaymath}\begin{array}{c\vert cccccccccccc}
\mbox{\boldmath $n$} & 1 &...
...)$} & 1 & 2 & 2 & 3 & 3 & 4 & 4 & 4 & 5 & 5 & 5 & 6
\end{array}\end{displaymath}">
</DIV>
<BR CLEAR="ALL">
<P></P>
In this problem you are expected to write a program that calculates the value 
of <I>f</I>(<I>n</I>) given the value of <I>n</I>.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input may contain multiple test cases. Each test case occupies a separate line 
and contains an integer <I>n</I>
(
<!-- MATH: $1 \le n \le 2,000,000,000$ -->
<IMG
 WIDTH="181" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10049img1.gif" 
 ALT="$1 \le n \le 2,000,000,000$">). The input terminates with a test case
containing a value <TT>0</TT> for <I>n</I> and this case must not be processed.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input output the value of <I>f</I>(<I>n</I>) on a separate line.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
100
9999
123456
1000000000
0
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
21
356
1684
438744
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-26</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10050||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem D: Hartals</TITLE>
<META NAME="description" CONTENT="Problem D: Hartals">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem D: Hartals</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
 
A social research organization has determined a simple set of parameters to simulate 
the behavior of the political parties of our country. One of the parameters is a positive integer
<I>h</I> (called the <EM>hartal parameter</EM>) that denotes the average number of days
between two successive <EM>hartals</EM> (strikes) called by the corresponding
party. Though the parameter is far too simple to be flawless, it can still be
used to forecast the damages caused by <EM>hartals</EM>. The following example
will give you a clear idea: 

<P>

<P>
<BR>
Consider three political parties. Assume <I>h</I><SUB>1</SUB> = 3,
<I>h</I><SUB>2</SUB> = 4 and <I>h</I><SUB>3</SUB> = 8 where <I>h</I><SUB><I>i</I></SUB> is the <EM>hartal parameter</EM> for party <I>i</I>
(
<!-- MATH: $i = 1, 2, 3$ -->
<I>i</I> = 1, 2, 3). Now, we will simulate the behavior of these three parties
for <I>N</I> = 14 days. One must always start the simulation on a Sunday and assume
that there will be no <EM>hartals</EM> on weekly holidays (on Fridays and
Saturdays).   

<P>

<P>
<BR>
<DIV ALIGN="CENTER"><TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">2</TD>
<TD ALIGN="CENTER">3</TD>
<TD ALIGN="CENTER">4</TD>
<TD ALIGN="CENTER">5</TD>
<TD ALIGN="CENTER">6</TD>
<TD ALIGN="CENTER">7</TD>
<TD ALIGN="CENTER">8</TD>
<TD ALIGN="CENTER">9</TD>
<TD ALIGN="CENTER">10</TD>
<TD ALIGN="CENTER">11</TD>
<TD ALIGN="CENTER">12</TD>
<TD ALIGN="CENTER">13</TD>
<TD ALIGN="CENTER">14</TD>
</TR>
<TR><TD ALIGN="CENTER">Days</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">Su</TD>
<TD ALIGN="CENTER">Mo</TD>
<TD ALIGN="CENTER">Tu</TD>
<TD ALIGN="CENTER">We</TD>
<TD ALIGN="CENTER">Th</TD>
<TD ALIGN="CENTER">Fr</TD>
<TD ALIGN="CENTER">Sa</TD>
<TD ALIGN="CENTER">Su</TD>
<TD ALIGN="CENTER">Mo</TD>
<TD ALIGN="CENTER">Tu</TD>
<TD ALIGN="CENTER">We</TD>
<TD ALIGN="CENTER">Th</TD>
<TD ALIGN="CENTER">Fr</TD>
<TD ALIGN="CENTER">Sa</TD>
</TR>
<TR><TD ALIGN="CENTER">Party 1</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">Party 2</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">Party 3</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">x</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
<TR><TD ALIGN="CENTER">Hartals</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">1</TD>
<TD ALIGN="CENTER">2</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">3</TD>
<TD ALIGN="CENTER">4</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">5</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
<TD ALIGN="CENTER">&nbsp;</TD>
</TR>
</TABLE></DIV>

<P>
<BR>
The simulation above shows that there will be exactly 5 <EM>hartals</EM> (on days
3, 4, 8, 9 and 12) in 14 days. There will be no <EM>hartal</EM> on day 6 since it
is a Friday. Hence we lose 5 working days in 2 weeks. 

<P>
In this problem, given
the hartal parameters for several political parties and the value of <I>N</I>, your
job is to determine the number of working days we lose in those <I>N</I> days.  

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of the input consists of a single integer <I>T</I> giving the number
of test cases to follow.

<P>
The first line of each test case contains an integer
<I>N</I> (
<!-- MATH: $7 \le N \le 3650$ -->
<IMG
 WIDTH="110" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10050img1.gif" 
 ALT="$7 \le N \le 3650$">)
giving the number of days over which the simulation
must be run. The next line contains another integer <I>P</I> (
<!-- MATH: $1 \le P \le 100$ -->
<IMG
 WIDTH="100" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10050img1.gif" 
 ALT="$1 \le P \le 100$">)
representing the number of political parties in this case. The <I>i</I>Â­th of the
next <I>P</I> lines contains a positive integer <I>h</I><SUB><I>i</I></SUB> (which will never be a
multiple of 7) giving the <EM>hartal parameter</EM> for party <I>i</I> (
<!-- MATH: $1 \le i \le
P$ -->
<IMG
 WIDTH="79" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10050img1.gif" 
 ALT="$1 \le i \le
P$">).   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input output the number of working days we lose.
Each output must be on a separate line.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
14
3
3
4
8
100
4
12
15
25
40
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
5
15
</PRE>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-26</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10051||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem A: Tower of Cubes</TITLE>
<META NAME="description" CONTENT="Problem A: Tower of Cubes">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem A: Tower of Cubes</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
 
In this problem you are given <I>N</I> colorful cubes each having a distinct
weight. Each face of a cube is colored with one color. Your job is to build a
tower using the cubes you have subject to the following restrictions: 

<P>
<UL>
<LI>Never put a heavier cube on a lighter one.
<LI>The bottom face of every
cube (except the bottom cube, which is lying on the floor) must have the same
color as the top face of the cube below it.
<LI>Construct the tallest tower possible.
</UL>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>
The input may contain multiple test cases. The first line of each test case contains 
an integer <I>N</I> (
<!-- MATH: $1 \le N \le 500$ -->
<IMG
 WIDTH="102" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10051img2.gif" 
 ALT="$1 \le N \le 500$">)
indicating the number of cubes you are given. The <I>i</I>Â­th (
<!-- MATH: $1 \le i \le
N$ -->
<IMG
 WIDTH="82" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10051img2.gif" 
 ALT="$1 \le i \le
N$">)
of the next <I>N</I> lines contains the description of the <I>i</I>Â­th cube. A cube
is described by giving the colors of its faces in the following order: front,
back, left, right, top and bottom face. For your convenience colors are
identified by integers in the range 1 to 100. You may assume that cubes are
given in the increasing order of their weights, that is, cube 1 is the
lightest and cube <I>N</I> is the heaviest.                 

<P>
The input terminates with a value <TT>0</TT> for <I>N</I>.                 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input first print the test case number on a
separate line as shown in the sample output. On the next line print the number
of cubes in the tallest tower you have built. From the next line describe the
cubes in your tower from top to bottom with one description per line. Each
description contains an integer (giving the serial number of this cube in the
input) followed by a single whiteÂ­space character and then the identification
string (front, back, left, right, top or bottom) of the top face of the cube
in the tower. Note that there may be multiple solutions and any one of them is
acceptable.                 

<P>
Print a blank line between two successive test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2> 
<PRE>
3
1 2 2 2 1 2
3 3 3 3 3 3
3 2 1 1 1 1
10
1 5 10 3 6 5
2 6 7 3 6 9
5 7 3 2 1 9
1 3 3 5 8 10
6 6 2 2 4 4
1 2 3 4 5 6
10 9 8 7 6 5
6 1 2 3 4 7
1 2 3 3 2 1
3 2 1 1 2 3
0
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case #1
2
2 front
3 front
 
Case #2
8
1 bottom
2 back
3 right
4 left
6 top
8 front
9 front
10 top
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-28</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10052||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem B: Inviting Politicians</TITLE>
<META NAME="description" CONTENT="Problem B: Inviting Politicians">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem B: Inviting Politicians</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
 
Before the next parliamentary election the president is going to have a
meeting with the top politicians of the country. But, as you know, our
politicians are usually arrogant in nature and can't tolerate opposition. So,
if all of them are invited to the same meeting, they will ruin it (the same
way they are ruining the country). However, from his past experience the
president knows that he can always divide the politicians into four disjoint
groups such that no two fighting politicians are placed in the same group.
Then each of the four groups will be invited on a different day and thus
avoiding any unpleasant situation. 

<P>
The president requests you to help him in solving the problem.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The first line of the input contains an integer 
<!-- MATH: $T (\le 15)$ -->
<IMG
 WIDTH="67" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10052img1.gif" 
 ALT="$T (\le 15)$">
indicating the
number of test cases to follow.

<P>
The first line of each test case contains two
integers 
<!-- MATH: $N (\le 300)$ -->
<IMG
 WIDTH="79" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10052img1.gif" 
 ALT="$N (\le 300)$">
and 
<!-- MATH: $M (\le 5000)$ -->
<IMG
 WIDTH="90" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10052img1.gif" 
 ALT="$M (\le 5000)$">.
Each of the next <I>N</I> lines contains
the name of a politician. No name will be more than 10 characters long and
will not contain any whiteÂ­space character. Each of the next <I>M</I> lines contains
the name of two politicians (both of which are valid names occurring in the
namesÂ­list given at the beginning of the test case) who are not in good terms
with each other and hence can not be placed in the same group.   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input first output the test case number (starting
from 1) as shown in the sample output. Then for each <I>i</I>(= 1, 2, 3, 4) print
an integer <I>P</I><SUB><I>i</I></SUB> on line 2<I>i</I> indicating the number of politicians to be
invited on day <I>i</I>, and on line 2<I>i</I> + 1 print the names of those politicians
with every two consecutive names separated by a single whiteÂ­space character.
Assume that the politicians can always be invited in 4 days and can never be
invited in less than 4 days. Note that the solution is not unique and hence
any valid solution is acceptable. 

<P>
Print a blank line between two consecutive test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2
4 6
A
B
C
D
A B
A C
A D
B C
B D
C D
6 7
A
B
C
D
E
F
A B
A C
A D
B C
B D
C D
D E
</PRE>

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case #1
1
A
1
B
1
C
1
D
 
Case #2
2
A E
1
B
1
C
2
D F
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-28</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10053||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem C: Envelopes</TITLE>
<META NAME="description" CONTENT="Problem C: Envelopes">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem C: Envelopes</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>
 
I have bought some greeting cards for my friends but in order to send them I
must also buy some envelopes. Each card must be put inside a separate envelope
without bending or tearing. The envelopes are made of so thin papers that one
can put inside an envelope a card having even the same dimensions as that
envelope. 

<P>
Please help me choose envelopes so that the total amount I need to
spend in buying them is minimized.   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input may contain multiple test cases.

<P>
The first line of each test case contains two integers <I>M</I> (
<!-- MATH: $1 \le M \le 5$ -->
<IMG
 WIDTH="87" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10053img1.gif" 
 ALT="$1 \le M \le 5$">)
and <I>N</I> (
<!-- MATH: $M \le N \le 10$ -->
<IMG
 WIDTH="103" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10053img1.gif" 
 ALT="$M \le N \le 10$">)
where <I>M</I> is the number of greeting cards and <I>N</I> is
the number of envelopes to choose from. The <I>i</I>Â­th (
<!-- MATH: $1 \le i \le M$ -->
<IMG
 WIDTH="85" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10053img1.gif" 
 ALT="$1 \le i \le M$">)
of the
next <I>M</I> lines consists of two integers <I>l</I><SUB><I>i</I></SUB> and <I>w</I><SUB><I>i</I></SUB> (
<!-- MATH: $1 \le l_i, w_i \le
50000$ -->
<IMG
 WIDTH="140" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10053img1.gif" 
 ALT="$1 \le l_i, w_i \le
50000$">)
giving the dimensions of the <I>i</I>Â­th greeting card. The <I>i</I>Â­th (
<!-- MATH: $1 \le
i \le N$ -->
<IMG
 WIDTH="82" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10053img1.gif" 
 ALT="$1 \le
i \le N$">)
of the next <I>N</I> lines contains three integers <I>L</I><SUB><I>i</I></SUB>, <I>W</I><SUB><I>i</I></SUB> and <I>C</I><SUB><I>i</I></SUB>
(
<!-- MATH: $1 \le L_i, W_i, C_i \le 50000$ -->
<IMG
 WIDTH="176" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="http://uva.onlinejudge.org/external/100/10053img1.gif" 
 ALT="$1 \le L_i, W_i, C_i \le 50000$">)
where <I>L</I><SUB><I>i</I></SUB> and <I>W</I><SUB><I>i</I></SUB> give the dimensions of
the <I>i</I>Â­th envelope and <I>C</I><SUB><I>i</I></SUB> is its price in Taka.

<P>
The input terminates with two zeros for <I>M</I> and <I>N</I>.                 

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input first print the test case number on a separate
line as shown in the sample output. If an envelope can be chosen for each of
the greeting cards in the input, print one line for each where the <I>i</I>Â­th line
contains the number of the envelope (in the order given in the input) inside
which the <I>i</I>Â­th greeting card should be put. Otherwise, print ``<TT>cannot
buy</TT>" on a line by itself. Note that if there are multiple solutions with
minimum cost, any one of them is acceptable.

<P>
Print a blank line between two successive test cases.

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2>
<PRE>
2 4
105 9
99 149
110 10 10
100 50 5
150 100 7
90 140 15
1 2
100 150
99 149 10
142 100 5
0 0
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case #1
2
3
 
Case #2
cannot buy
</PRE>

<P>

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-28</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10054||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Problem D: The Necklace</TITLE>
<META NAME="description" CONTENT="Problem D: The Necklace">
<META NAME="keywords" CONTENT="htmlatex">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK REL="STYLESHEET" HREF="htmlatex.css">
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>

<H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">
Problem D: The Necklace</A>&nbsp;</FONT></B></TABLE></CENTER>
</H1>

<P>
My little sister had a beautiful necklace made of colorful beads. Two
successive beads in the necklace shared a common color at their meeting point.
The figure below shows a segment of the necklace:  
 
<DIV ALIGN="CENTER">
<img src="http://uva.onlinejudge.org/external/100/p10054.gif" >

<!--p3.pdf-->
</DIV>

<P>
But, alas! One day, the necklace was torn and the beads were all scattered
over the floor. My sister did her best to recollect all the beads from the
floor, but she is not sure whether she was able to collect all of them.
Now, she has come to me for help. She wants to know
whether it is possible to make a necklace using all the beads she has in the
same way her original necklace was made and if so in which order the bids must
be put. 

<P>
Please help me write a program to solve the problem.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001001000000000000000">
Input</A>&nbsp;</FONT>
</H2>

<P>
The input contains <I>T</I> test cases. The first line of the input contains the
integer <I>T</I>. 

<P>
The first line of each test case contains an integer <I>N</I> (
<!-- MATH: $5 \le
N \le 1000$ -->
<IMG
 WIDTH="110" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10054.gif" 
 ALT="$5 \le
N \le 1000$">)
giving the number of beads my sister was able to collect. Each of
the next <I>N</I> lines contains two integers describing the colors of a bead.
Colors are represented by integers ranging from 1 to 50.  

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">
Output</A>&nbsp;</FONT>
</H2>

<P>
For each test case in the input first output the test case number as shown in
the sample output. Then if you apprehend that some beads may be lost just
print the sentence ``<TT>some beads may be lost</TT>" on a line by itself.
Otherwise, print <I>N</I> lines with a single bead description on each line. Each
bead description consists of two integers giving the colors of its two ends.
For 
<!-- MATH: $1 \le i \le N Â­ 1$ -->
<IMG
 WIDTH="90" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 src="http://uva.onlinejudge.org/external/100/p10054.gif" 
 ALT="$1 \le i \le N Â­ 1$">,
the second integer on line <I>i</I> must be the same as the
first integer on line <I>i</I> + 1. Additionally, the second integer on line <I>N</I>
must be equal to the first integer on line 1. Since there are many solutions,
any one of them is acceptable.                 

<P>
Print a blank line between two successive test cases.   

<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">
Sample Input</A>&nbsp;</FONT>
</H2> 
<PRE>
2
5
1 2
2 3
3 4
4 5
5 6
5
2 1
2 2
3 4
3 1
2 4
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">
Sample Output</A>&nbsp;</FONT>
</H2>
<PRE>
Case #1
some beads may be lost
 
Case #2
2 1
1 3
3 4
4 2
2 2
</PRE> 

<P>
<BR><HR>
<ADDRESS>
<I>Miguel Revilla</I>
<BR><I>2000-12-28</I>
</ADDRESS>
</BODY>
</HTML>
</HTML>

______________________________________________________
10055||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<title>Problem A - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>16</o:Revision>
  <o:TotalTime>72</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-07T13:41:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>126</o:Words>
  <o:Characters>719</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>5</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>882</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1030"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem A<o:p></o:p></span></font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Hashmat the brave warrior</font> <o:p></o:p></span></b></font></p>


<p class=MsoNormal align=center style='text-align:center'><b><font size=4>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>
</b>
<p class=MsoNormal align=center style='text-align:center'><b><font size=4>Output: </b>standard output</p>
</b>
<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Hashmat is a brave warrior who
with his group of young soldiers moves from one place to another to fight
against his opponents. Before fighting he just calculates one
thing, the difference between his soldier number and the opponent's soldier
number. From this difference he decides whether to fight or not. Hashmat's
soldier number is never greater than his opponent. </p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains two integer numbers in
every line. These two numbers in each line denotes the number of soldiers in
Hashmat's army and his opponent's army or vice versa. The input numbers are not
greater than 2^32. Input is terminated by End of File.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;For each line of input,
print the difference of number of soldiers between Hashmat's army and his
opponent's army. Each output should be in seperate line.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font><o:p></o:p></span></b></p>
<font size=3>
10 12<br>
10 14<BR>
100 200<BR>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>


<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><b><font size=5>Sample Output:</font><o:p></o:p></b></span></b></p>
<font size=3>
2<BR>

4<BR>

100<BR>
</font>

</div>
_______________________________________
<font face="Times New Roman,Helvetica, Arial" SIZE=4>
<br>
<i>
Shahriar Manzoor<br>
16-12-2000

</i>
</body>

</html>

______________________________________________________
10056||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p1_files/filelist.xml">
<title>Problem B - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>30</o:Revision>
  <o:TotalTime>104</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-16T05:43:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>275</o:Words>
  <o:Characters>1570</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1928</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size="5">Problem B</font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size="6">What is the Probability? </font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b>
<span style='font-size:13.5pt'>Input: </span></b><span style='font-size:13.5pt;
mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:13.5pt'>Output:</span></b><span style='font-size:13.5pt'>
standard output<o:p></o:p></span></p>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Probability has always been an
integrated part of computer algorithms. Where the deterministic algorithms have
failed to solve a problem in short time, probabilistic algorithms have come to
the rescue. In this problem we are not dealing with any probabilistic
algorithm. We will just try to determine the winning probability of a certain
player. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A game is played by throwing a
dice like thing (it should not be assumed that it has six sides like an
ordinary dice). If a certain event occurs when a player throws the dice (such
as getting a 3, getting green side on top or whatever) he is declared the
winner. There can be N such player. So the first player will throw the dice,
then the second and at last the N th player and again the first player and so
on. When a player gets the desired event he or she is declared winner and
playing stops. You will have to determine the winning probability of one (The
I th) of these players. </p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size="5">Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>Input will contain an integer S (S&lt;=1000)
at first, which indicates how many sets of inputs are there. The next S lines
will contain S sets of inputs. Each line contain an integer N (N&lt;=1000) which
denotes the number players, a floating point number p which indicates the
probability of the happening of a successful event in a single throw (If success
means getting 3 then p is the probability of getting 3 in a single throw. For a
normal dice the probability of getting 3 is 1/6), and I (I&lt;=N) the serial of
the player whose winning probability is to be determined (Serial no varies from
1 to N). You can assume that no invalid probability (p) value will be given as input.</p>
<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size="5">Output</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each set of input, output in a single line the probability of the I th
player to win. The output floating point number will always have four digits after the decimal point
as shown in the sample output.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size="5">Sample Input:</font><o:p></o:p></span></b></p>
<font size=3>
2<br>

2 0.166666 1<br>

2 0.166666 2<br>
</font>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><font size="5">Sample Output:</font><o:p></o:p></span></b></p>
<font size=3>
0.5455<br>
0.4545<br>
_______________________________________________
<br><i>Shahriar Manzoor<br>
16-12-2000 </i>
</p>
</div>
</font>

</body>

</html>

______________________________________________________
10057||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p2_files/filelist.xml">
<title>Problem C - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>17</o:Revision>
  <o:TotalTime>283</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T23:22:00Z</o:Created>
  <o:LastSaved>2000-12-06T09:08:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>248</o:Words>
  <o:Characters>1415</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>11</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1737</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem C</font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><b><font size=6> A mid-summer
nightÂ’s dream </font></b><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>
<font size=3>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>This is year 2200AD. Science has
progressed a lot in two hundred years. Two hundred years is mentioned here because
this problem is being sent back to 2000AD with the help of time machine. Now
it is possible to establish direct connection between man and computer CPU.
People can watch other peopleÂ’s dream on 3D displayer (That is the monitor
today) as if they were watching a movie. One problem in this century is that
people have become so dependent on computers that their analytical ability is
approaching zero. Computers can now read problems and solve them automatically.
But they can solve only difficult problems. There are no easy problems now. Our
chief scientist is in great trouble as he has forgotten the number of his
combination lock. For security reasons computers today cannot solve combination
lock related problems. In a mid-summer night the scientist has a dream where he
sees a lot of unsigned integer numbers flying around. He records them with the
help of his computer, Then he has a clue that if the numbers are (X1, X2,<span
style="mso-spacerun: yes">Â Â  </span>
<span style="mso-spacerun: yes">Â  </span>,
Xn) he will have to find an integer number <b>A</b> (This <b>A</b> is the combination lock code) 
such that</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â  </span></p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â  </span>(|X1-A| + |X2-A| + 
 
 + |Xn-A|) is minimum.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input<o:p></o:p></span></b></p>
<font size =3>
<p class=MsoNormal style='text-align:justify'>Input will contain several
blocks. Each block will start with a number n (0&lt;n&lt;=1000000) indicating
how many numbers he saw in the dream. Next there will be n numbers. All the
numbers will be less than 65536. The input will be terminated by end of file.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output<o:p></o:p></span></b></p>
<font size=3>
<p class=MsoNormal style='text-align:justify'>

For each set of input there will be one line of output. That line will
 contain the minimum possible value for A. Next it will contain how many numbers are there in the input that
 satisfy the property of A (The summation of absolute deviation from A is minimum). And finally you have to print how many possible
different  integer values are there for A (these values need not be present in the input). These numbers will be  separated by single space.

<!--For each set of input there will be one line of
output. That line will contain the number A (If there are more than one such value print the smallest) and how many 
such numbers are there in the input and then how many such different integer values are there (the values need not be present in the input). 
These numbers will be seperated by single space.--> 
</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font><o:p></o:p></span></b></p>
<font size=3>
2<br>

10<br>

10<br>


4<br>

1<br>

2<br>

2<br>

4<br>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:<o:p></o:p></span></b></p>
<font size=3>
10 2 1<br>


2 2 1<br>
<p class=MsoNormal><span style='font-size:13.5pt;color:windowtext'>_________________________

<i>Shahriar Manzoor<br>
16-12-2000 </i></span><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10058||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<title>Problem D - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>7</o:Revision>
  <o:TotalTime>24</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T13:30:00Z</o:Created>
  <o:LastSaved>2000-12-12T14:18:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>323</o:Words>
  <o:Characters>1843</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2263</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	mso-bidi-font-weight:normal;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem D<o:p></o:p></span></font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>JimmyÂ’s Riddles</font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b>standard input</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<br>

<p class=MsoNormal style='text-align:justify'>Little Jimmy is only three years
old but appears to be more intelligent than even Sir Isaac Newton at the age of
three. People say that Jimmy could count up to ten when he was a child of ten
months. His field of interest changes with his age and at present he is
researching on how to trouble his mother scientifically. He has a book of 5000
riddles and applies them every now and then. For example, if his mother asks
him Â– Â“ Will you stop watching Tom and Jerry?Â” he will say Â– Â“tom hates jerry,
jimmy hates tomÂ” which means, Â“yes I willÂ”. Obviously his mother is in all
sorts of trouble.</p>

<br>
<p class=MsoNormal style='text-align:justify'>However, Jimmy is considerate. After
all, he knows that his days will not be very smooth if he continues annoying
his mother this way. So he taught her a number of ridiculous (riddle calculus)
formulas so that she can quickly interpret JimmyÂ’s riddles. But, she was a
student of history and doesnÂ’t know much about ridiculous formulas. So, you are
to help her to get out of this trouble. You are to write a program that will
read a number of riddles and, by using a number of ridiculous formulas,
determine what they mean. The formulas are given below:</p>

<br><b>
<p class=MsoNormal style='text-align:justify;line-height:150%'>STATEMENT =
ACTION | STATEMENT , ACTION</p>

<p class=MsoNormal style='text-align:justify;line-height:150%'>ACTION =
ACTIVE_LIST VERB ACTIVE_LIST</p>

<p class=MsoNormal style='text-align:justify;line-height:150%'>ACTIVE_LIST =
ACTOR | ACTIVE_LIST and ACTOR</p>

<p class=MsoNormal style='text-align:justify;line-height:150%'>ACTOR = NOUN |
ARTICLE NOUN</p>

<p class=MsoNormal style='text-align:justify;line-height:150%'>ARTICLE = a |
the</p>

<p class=MsoNormal style='text-align:justify;line-height:150%'>NOUN = tom |
jerry | goofy | mickey | jimmy | dog | cat | mouse</p>

<p class=MsoNormal style='text-align:justify;line-height:150%'>VERB = hate | love
| know | like | VERBs</p>
</b>
<p class=MsoNormal style='text-align:justify;text-indent:.5in'>If a riddle is a
valid ridiculous calculus statement, it means YES I WILL; otherwise it means NO
I WONÂ’T.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>Input file will contain a number
of riddles each on a different line. Each riddle will consist of lowercase
alphabetic characters and comma(s) only. The riddle may contain words not
mentioned in the formulas. For each riddle, you are to determine what it means.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>


<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output<o:p></font></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each riddle the output will
be YES I WILL if the riddle is a valid ridiculous calculus statement and NO I
WONÂ’T otherwise. The output for each riddle is to be on a separate line.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font><o:p></o:p></span></b></p>
<font size=3>
the dog and a cat know goofy<br>
jimmy kills tom<br>
goofy hate mouse jerry<br>
tom hates jerry , jimmy hates tom<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:</font><o:p></o:p></span></b></p>
<font size=3>
YES I WILL<br>
NO I WONÂ’T<br>
NO I WONÂ’T<br>
YES I WILL
__________________________________________
<br><i>Rezaul Alam Chowdhury, Suman Kumar Nath, Tarique Mesbaul Islam.<br>
</i>
<o:p></o:p></span></p>
</div>
</body>

</html>

______________________________________________________
10059||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p4_files/filelist.xml">
<title>Problem E - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>47</o:Revision>
  <o:TotalTime>466</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-19T13:50:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>545</o:Words>
  <o:Characters>3107</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>25</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3815</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem E</font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Hazard of CSE Department! </font><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output:</span></b><span style='mso-bidi-font-size:
13.5pt'> standard output<o:p></o:p></span></p>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The department of Computer
Science &amp; Engineering of <b>BUET</b> is arranging a programming contest for
the young programmers of the department. The teachers have prepared eight
problems for the contest. The teachers have also written the judge solution for
seven problems and after that they have gone home to enjoy Christmas and EID
Vacation. But the Head of the Department and also the <b>BUET</b> contest team
coach are still in the Department. They have discovered that the judge solution
of one question is still not written. But both of them are so exhausted with
the preparation of the contest that they have no strength to write the judge
solution for another problem. Shahriar Manzoor a not so young student of that
department is then asked to write the solution and it is found out that he is
not as good a programmer as he pretends to be. He has no idea what so ever of
how to solve the problem. The problem is stated below. See if you can help out
the exhausted teachers.</p>

<br>
<p class=MsoNormal style='text-align:justify'>From a given point <b>A,</b> a
person covered a certain distance <b>d</b> in a certain direction and reached a point <b>B</b>
and then he maintained that direction and reached a point <b>C</b> after he had
covered a distance <b>e</b>. Then he came back to point <b>A</b> and did the
same thing covering the same amount of distances in each step but may or may
not be in another direction and got two similar points <b>D </b>and <b>E.<span
style="mso-spacerun: yes">Â  </span></b>Here, <b>D</b> is similar to <b>B</b>
and <b>E</b> is similar to <b>C</b>. The point <b>C</b>, <b>D</b> and <b>B</b>,
<b>E</b> are then connected. <b>CD</b> and <b>BE</b> intersects at a point <b>P</b>
(or in some case on a line <b>P</b>). The problem is that after one week that person
forgot if the distance <b>e</b> was measured from <b>A </b>or from <b>B</b> (in
case of the second journey point <b>D</b>). He remembered one thing that in both cases
he followed the same strategy. He also discovered that if <b>e&lt;d</b> he
could assume that the distance was not measured from <b>A</b> but in other
cases he was unsure. Given the equation of the line <b>AC</b> and <b>AE</b> and
the value of <b>d</b> and <b>e</b> you will have to determine the equation of
the line <b>AP</b> (if possible). When there are infinite numbers of <b>AP</b>
the determination of <b>AP</b> is impossible. The determination of the equation
of <b>AP </b>is also impossible when point <b>A </b>is at infinite distance. Keep
one thing in mind that the alphabetic symbols of this questions are case
sensitive. That is <b>A</b> and <b>a</b> are not the same. One of the angles
between the two walking directions will be less than 180 degree.</p>

<img src=p10059.jpg align=center>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains and integer N
at first, which is the number of test cases, then followed by N test cases.
Each test case contains two lines with three integers and one line with two
integers. The two lines with three integers contain the integers <b>p</b>, <b>q</b>,
<b>r</b> and <b>s</b>, <b>t</b>, <b>u</b> (-1000&gt;= <b>p, q, r, s, t, u</b> &lt;=1000)
respectively where the Equation of<span style="mso-spacerun: yes">Â 
</span>&nbsp;<b>AC</b> is <b>px + qy + r = 0 </b>and the equation of <b>AE</b>
is <b>sx + ty + u = 0</b> and the last line with two integers are the values <b>d</b>
(<b>d</b>&gt;=0 &amp; <b>d</b>&lt;=1000) and <b>e</b> (<b>e</b>&gt;=0 &amp; <b>e</b>&lt;=1000).</p>

<br>
<p class=MsoNormal style='text-align:justify'><b><font size=5>Output</font></b><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each line of input output the coefficients of the equation of </span><b
style='mso-bidi-font-weight:normal'>AP</b><span style='mso-bidi-font-weight:
bold'>. The equation is of the form </span><b style='mso-bidi-font-weight:normal'>x
+ by + c = 0 </b><span style='mso-bidi-font-weight:bold'>(when the absolute
value of the coefficient of x is greater than the absolute value of the
coefficient of y or even equal) or of the form </span><b style='mso-bidi-font-weight:
normal'>ax + y + c = 0 </b><span style='mso-bidi-font-weight:bold'>(in other
cases). The output will be in floating point format with three digits after the
decimal. If the Equation of </span><b style='mso-bidi-font-weight:normal'>AP</b><span
style='mso-bidi-font-weight:bold'> is not determinable print the line Â“</span><b
style='mso-bidi-font-weight:normal'>Equation not found.</b><span
style='mso-bidi-font-weight:bold'>Â” As a line denotes two directions so you may
be confused which direction to take. In that case you may get finite numbers of
equations of AP. Print all those equations according to the rule specified
above, according to the sample output and in ascending order of their slopes.
The numbers in the output are separated by a single space.<o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'><b><font size=5>Sample Input:</font></b><o:p></o:p></span></b></p>
<font size=3>
2<br>

1 0 0<br>

0 1 0<br>

10 20<br>

1 2 3<br>

4 5 6<br>

0 0<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b><font size=5>Sample Output:</font><o:p></o:p></span></b></p>
<font size=3>
1.000 -1.000 0.000<br>

1.000 1.000 0.000<br>

Equation not found.<br>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'>_______________
<br>
<i>Shahriar Manzoor<br>
16-12-2000 </i></span><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10060||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./f_files/filelist.xml">
<title>Problem F - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>38</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-04T12:46:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>284</o:Words>
  <o:Characters>1619</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1988</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem F</font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>A Hole to Catch a Man</font><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input : </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output : </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>How can a manhole be a hole if it
is covered? Perhaps, to prove a manhole a hole, most of the manholes of Dhaka
are uncovered. So now manhole means <i style='mso-bidi-font-style:normal'>a
hole to catch a man</i>. Anyway, the new Mayor of Dhaka does not like this
definition and he has recently been highly acclaimed by general people for
ordering corresponding department to cover all the manholes of the city within
a month.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><i
style='mso-bidi-font-style:normal'>Manhole Cover Manufacturing Corporation</i>
(<i style='mso-bidi-font-style:normal'>MCMC</i>) somehow managed to get the
order. (Yes, this is a big deal, since a lot of manhole covers are to be made).
MCMC makes the cover using steel, and they import polygonal steel sheets of
different shapes and thickness from abroad. Then they melt the sheets to make
the circular manhole covers, which also differ in size and thickness.</p>

<p class=MsoBodyText style='text-align:justify;text-indent:.5in'>MCMC needs a
program which, given dimensions of a number of steel sheets, will calculate how
many manhole cover can be made from these sheets. You are to help them by
writing the program.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font><o:p></o:p></span></b></p>


<p class=MsoNormal style='text-align:justify'>The input file consists of
several data blocks. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Each data block
starts with an integer <i style='mso-bidi-font-style:normal'>N, </i>the number
of polygonal steel sheets. <i style='mso-bidi-font-style:normal'>i</i>Â’th line
of the next <i style='mso-bidi-font-style:normal'>N</i> lines starts with
thickness of the <i style='mso-bidi-font-style:normal'>i</i>Â’th sheet followed
by co-ordinates of the polygonsÂ’ corner points in some order (clockwise or
anti-clockwise). Each line consists of a series of real numbers in following
format:</p>

<p class=MsoNormal style='margin-left:1.0in;text-align:justify;text-indent:
.5in'><i style='mso-bidi-font-style:normal'>T<sub>i</sub> X</i><sub>0</sub> <i
style='mso-bidi-font-style:normal'>Y</i><sub>0</sub> <i style='mso-bidi-font-style:
normal'>X</i><sub>1</sub> <i style='mso-bidi-font-style:normal'>Y</i><sub>1</sub>
<i style='mso-bidi-font-style:normal'>X</i><sub>2</sub> <i style='mso-bidi-font-style:
normal'>Y</i><sub>2</sub> 
 
 <i style='mso-bidi-font-style:normal'>X<sub>n</sub></i>
<i style='mso-bidi-font-style:normal'>Y<sub>n</sub></i> <i style='mso-bidi-font-style:
normal'>X</i><sub>0</sub> <i style='mso-bidi-font-style:normal'>Y</i><sub>0</sub></p>

<p class=MsoNormal style='text-align:justify'>Where <i style='mso-bidi-font-style:
normal'>T<sub>i</sub></i> is the thickness of the sheet, and <i
style='mso-bidi-font-style:normal'>X<sub>i</sub></i> <i style='mso-bidi-font-style:
normal'>Y<sub>i</sub></i> are the coordinates of corner points. The line ends
with co-ordinate of the first point. Last line of each data block will have two
real numbers, <i style='mso-bidi-font-style:normal'>R</i> and <i
style='mso-bidi-font-style:normal'>T</i>, radius and thickness of the manhole
cover respectively.</p>

<p class=MsoNormal style='text-align:justify'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span>Input
file ends with a data block with <i style='mso-bidi-font-style:normal'>N</i> =
0.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output<o:p></font></o:p></span></b></p>


<p class=MsoNormal style='text-align:justify'>For each data block, print the
number of manhole cover in separate line.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font><o:p></o:p></span></b></p>
<font size=3>
2<br>

2 0 0 0 10 5 15 12 10 10 0 0 0<br>

5 0 0 5 100 100 0 0 0<br>

5 3<br>

1<br>

2 0 0 10 0 10 10 0 10 0 0<br>

5 2<br>

0<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:</font><o:p></o:p></span></b></p>
<font size=3>

107<br>

1<br>
____________________________
<br><i>Rezaul Alam Chowdhury, Suman Kumar Nath, Tarique Mesbaul Islam.<br>
</i>

</div>

</body>

</html>

______________________________________________________
10061||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p6_files/filelist.xml">
<title>Problem G - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>28</o:Revision>
  <o:TotalTime>153</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-07T13:42:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>152</o:Words>
  <o:Characters>869</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>7</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>1067</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1030"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem G</font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>How many zeros and how many digits? </font><o:p></o:p></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>


<br>
<p class=MsoNormal style='text-align:justify'>Given a decimal integer number you will
have to find out how many trailing zeros will be there in its factorial in a given number system and also
you will have to find how many digits will its factorial have in a given number system? You can assume that for
a <b>b</b> based number system there are <b>b</b> different symbols to denote values 
ranging from 0 ... <b>b-1</b>.</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>There will be several lines of input. Each line makes a block. Each line
will contain a decimal number N (a 20bit unsigned number) and a decimal number B
(1&lt;B&lt;=800), which is the base of the number system you have to consider.
As for example 5! = 120 (in decimal) but it is 78 in hexadecimal number system.
So in Hexadecimal 5! has no trailing zeros <o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each line of input output in
a single line&nbsp;how many trailing zeros will the factorial of that number
have in the given number system and also how many digits will the factorial of that
number have in that given number system. Separate these two numbers with a single space. You can be sure
that the number of trailing zeros or the number of digits will not be greater
than 2^31-1</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>
<font size=3>
2 10<br>

5 16<br>

5 10<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:</font><o:p></o:p></span></b></p>
<font size=3>
0 1<br>

0 2<br>

1 3<br>

</font>
____________________________________________
<font face="Times New Roman,Helvetica, Arial" SIZE=4>
<br>
<i>
Shahriar Manzoor<br>
16-12-2000

</div>

</body>

</html>

______________________________________________________
10062||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p7_files/filelist.xml">
<title>Problem H - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>20</o:Revision>
  <o:TotalTime>137</o:TotalTime>
  <o:LastPrinted>2000-12-06T14:04:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-17T09:22:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>144</o:Words>
  <o:Characters>821</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>6</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>1008</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem H</font></span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Tell me the frequencies!</font></span> <o:p></o:p></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Given a line of text you will
have to find out the frequencies of the ASCII characters present in it. The given
lines will contain none of the first 32 or last 128 ASCII characters. Of course
lines may end with Â‘\nÂ’ and Â‘\rÂ’ but always keep those out of consideration. </p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>Several lines of text are given
as input. Each line of text is considered as a single input. Maximum length of
each line is 1000.</p>

<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>Print the ASCII value of the
ASCII characters which are present and their frequency according to the given
format below. A blank line should separate each set of output.
Print the ASCII characters in the ascending order of their frequencies. If two
characters are present the same time print the information of the ASCII
character with higher ASCII value first. Input is terminated by end of file. </p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font></span><o:p></o:p></b></p>
<font size=3>
AAABBC<br>

122333<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:</font></span><o:p></o:p></b></p>
<font size=3>
67 1<br>

66 2<br>

65 3<br>

<br>

49 1<br>

50 2<br>

51 3<br>
</font>

<p class=MsoNormal><span style='font-size:13.5pt;color:windowtext'>_____________
<i>Shahriar Manzoor<br>
16-12-2000 </i></span><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10063||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p8_files/filelist.xml">
<title>Problem I - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>16</o:Revision>
  <o:TotalTime>91</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-07T13:41:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>221</o:Words>
  <o:Characters>1264</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1552</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1030"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem I</font><o:p></o:p></span></b></p>

<br>
<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>KnuthÂ’s Permutation</font><o:p></o:p></span></b></p>

<br>
<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>There are some permutation
generation techniques in KnuthÂ’s book Â“The Art of Computer Programming - Volume 1Â”. One of the
processes is as follows:</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â  </span>For each permutation A1, A2, 
, An-1 form n others by
inserting a character n in all possible places obtaining</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â  </span>n A1 A2 
 An-1,<span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â 
</span>A1 n A2 
 An-1,<span style="mso-spacerun: yes">Â Â Â Â Â Â Â  </span>
.,<span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â  </span>A1 A2 
n An-1,<span
style="mso-spacerun: yes">Â Â Â Â Â Â  </span>A1 A2, 
 An-1 n</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â  </span>For example, from the permutation 231 inserting 4 in all
possible places we get 4231 2431 2341 2314</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Following this rule you have to
generate all the permutation for a given set of characters. All the given
characters will be different and there number will be less than 10 and they all
will be alpha numerals. This process is recursive and you will have to start
recursive call with the first character and keep inserting the other characters
in order. The sample input and output will make this clear. Your output should
exactly mach the sample output for the sample input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains several lines of input. 
Each line will be a sequence of characters. There will be less than ten alphanumerals in each line.
The input will be terminated by End of File. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;For each line of input generate the permutation
of those characters. The input ordering is very important for the output. That is the permutation sequence
for <b>abc</b> and <b>bca</b> will not be the same. Seperate each set of permutation output with a blank line. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font><o:p></o:p></span></b></p>
<font size=3>
abc<br>

bca<br>

dcba<br>
</font>
<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:</font><o:p></o:p></span></b></p>

<font size=3>
cba<br>


bca<br>


bac<br>


cab<br>


acb<br>


abc<br>


<br>


acb<br>


cab<br>


cba<br>


abc<br>


bac<br>


bca<br>


<br>


abcd<br>


bacd<br>


bcad<br>


bcda<br>


acbd<br>


cabd<br>


cbad<br>


cbda<br>


acdb<br>


cadb<br>


cdab<br>


cdba<br>


abdc<br>


badc<br>


bdac<br>


bdca<br>


adbc<br>


dabc<br>


dbac<br>


dbca<br>


adcb<br>


dacb<br>


dcab<br>


dcba<br>

</font>

_______________________<br>
<i>Shahriar Manzoor<br>
16-12-2000 </i></span><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10064||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p9_files/filelist.xml">
<title>Problem J - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>27</o:Revision>
  <o:TotalTime>217</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2000-12-27T08:38:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>527</o:Words>
  <o:Characters>3004</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>25</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3689</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:996685202;
	mso-list-type:hybrid;
	mso-list-template-ids:-236783806 -66786728 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:.75in;
	mso-level-number-position:left;
	margin-left:.75in;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem J</font></span><o:p></o:p></b></p>

<br>
<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Traveling in another dimension</font> </span><o:p></o:p></b></p>

<br>
<p class=MsoNormal align=center style='text-align:center'><b>Input: </b><span
style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Many of us would like to break
the barrier of dimensions but the fact is that this is not that easy. Some consider
Time as the fourth dimension and many others have other ideas. Some just ignore
the concept of time. Our scientist friend Arnold has discovered some ways to
travel in four dimensions. But the problem is that he being a three-dimensional
animal has to spend more energy to go from one point to another in
four-dimensional space and this energy is proportional to the square of the
distance between the two points. Arnold has taken many of his friends to the
four-dimensional world. The problems they face are:</p>

<p class=MsoNormal style='margin-left:.75in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list .75in'><![if !supportLists]>a)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]><b>Safety
problem:</b> The four-dimensional creatures come from nowhere and hit them. It
is very difficult for them to track the four-dimensional creatures.</p>

<p class=MsoNormal style='margin-left:.75in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list .75in'><![if !supportLists]>b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]><b>Losing
way: </b>They always lose their way in the four dimensions.</p>

<br>
<p class=MsoNormal style='text-align:justify'>To avoid this problems they have
made a tracking device and has discovered the moving paths of the four
dimensional creatures and also has discovered a straight line (a four
dimensional straight line is of the form Aw + Bx+ Cy+ Dz+ E=0) which is very
safe. They have started building house on or beside the line. They have
transformed the coordinate system along the safe line and uses a single
dimensional coordinate system on the line. So if two points has coordinates d1
and d2 the distance between them is |d1-d2| and the cost to go from one point
to another is proportional to the square of the distance between them. Now
given the coordinates of Arnold's friends' houses you have to find out the
coordinate of Arnold's house. Arnold builds his house in such a place from
where his effort of visiting his friends' house will be minimum. Initially
Arnold is in his home. Arnold visits a friend's house, stops there and then
returns home, stops there and then go to another friend's house and so on. His
final position is also in his home. Note that as they are all three-dimensional
creatures so their houses are also three-dimensional. So in the same place in
four dimensions there can be more than one house. Another important thing here is
that Arnold stops in every house. If he had not done that he would have
required more energy.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains several
blocks. Each block contains an integer N (N&gt;=0 &amp;&amp; N&lt;=10000)
indicating the number of Arnold's friends in the four dimensions and then
contains the N coordinates of their houses. The input is terminated by the end
of file.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The output contains Arnold's
coordinate if when Arnold stops at each house and when his voyage is continuous
(He starts from his home follows the same path as before but never stops
anywhere). These two coordinates will be separated by a single space. If
Arnold's coordinates cannot be determined print a<span style="mso-spacerun:
yes">Â  </span>Â–1 (minus one). (Note that if one coordinate is found the other will also be found) The outputs for each block will be in separate
lines. The output format is shown in the sample output. If there are more than
one such places (in the first case or in the second case) print the smallest
coordinate.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input:</font></span><o:p></o:p></b></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>1 100<br>
1 200<br>
2 300 300<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output:</font></span><o:p></o:p></b></p>
<font size=3>
100.00 100.00<br>
200.00 200.00<br>
300.00 300.00<br>
</font>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>(<b>Explanation,
why Arnold needs more energy if he does not stop at each house:</b><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>LetÂ’s
assume that Arnold is going from point A to point C<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
</span>A----------------------- B -------------------- C<o:p></o:p></span></p>

<p class=MsoBodyText2>If he does not stop at B he will require an energy
proportional to AC*AC. If he stops at B and then goes to C then he will need
energy proportional to (AB*AB + BC*BC). You donÂ’t have to be magician to prove
that (AB*AB + BC*BC) &lt; (AC*AC). Change of direction does not cost any
energy. )</p>

</div>

</body>

</html>

______________________________________________________
10065||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0_files/filelist.xml">
<link rel=Edit-Time-Data href="./p0_files/editdata.mso">
<link rel=OLE-Object-Data href="./p0_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - Useless Tile Packers</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>63</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-11T11:41:00Z</o:Created>
  <o:LastSaved>2001-01-11T11:41:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>230</o:Words>
  <o:Characters>1311</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1610</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	layout-grid-mode:line;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem A</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Useless Tile Packers</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Yes, as you have apprehended the <i
style='mso-bidi-font-style:normal'>Useless Tile Packers</i> (UTP) pack tiles. The
tiles are of uniform thickness and have simple polygonal shape. For each tile a
container is custom-built. The floor of the container is a convex polygon and under
this constraint it has the minimum possible space inside to hold the tile it is
built for. But this strategy leads to wasted space inside the container. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;<img width=308 height=170
src="http://uva.onlinejudge.org/external/100/p10065.gif"  >
<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The UTP
authorities are interested to know the percentage of wasted space for a given
tile.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>The input file consists of
several data blocks. Each data block describes one tile. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The first line
of a data block contains an integer <em>N</em> (3 <= N <= 100) indicating the number of corner points of the tile. Each of the next <i
style='mso-bidi-font-style:normal'>N</i> lines contains two integers giving the
(<i style='mso-bidi-font-style:normal'>x</i>, <i style='mso-bidi-font-style:
normal'>y</i>) co-ordinates of a corner point (determined using a suitable origin
and orientation of the axes) where 0 <= x, </i>, <i style='mso-bidi-font-style:normal'>y <= 1000. </i> Starting from the first point given in the input the corner points occur
in the same order on the boundary of the tile as they appear in the input. No
three consecutive points are co-linear.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The input file
terminates with a value of 0 for <i style='mso-bidi-font-style:normal'>N</i>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>For each tile in the input output
the percentage of wasted space rounded to two digits after the decimal point.
Each output must be on a separate line. Print a blank line after each output block.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">

5<br>

0 0<br>

2 0<br>

2 2<br>

1 1<br>

0 2<br>

5<br>

0 0<br>

0 2<br>

1 3<br>

2 2<br>

2 0<br>

0<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">

Tile #1<br>

Wasted Space = 25.00 %<br>

<br>
Tile #2<br>

Wasted Space = 0.00 %<br><br>
</font>
</div>
<font size=3 face="Times New Roman">

______________________________________<br>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10066||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./b_files/filelist.xml">
<title>Problem B - The Twin Towers</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2001-01-10T10:34:00Z</o:Created>
  <o:LastSaved>2001-01-10T10:55:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>315</o:Words>
  <o:Characters>1801</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2211</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem B</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Twin Towers</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Once upon a time, in an ancient Empire,
there were two towers of dissimilar shapes in two different cities. The towers
were built by putting circular tiles one upon another. Each of the tiles was of
the same height and had integral radius. It is no wonder that though the two
towers were of dissimilar shape, they had many tiles in common. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>However, more
than thousand years after they were built, the Emperor ordered his architects
to remove some of the tiles from the two towers so that they have exactly the
same shape and size, and at the same time remain as high as possible. The order
of the tiles in the new towers must remain the same as they were in the
original towers. The Emperor thought that, in this way the two towers might be
able to stand as the symbol of harmony and equality between the two cities. He
decided to name them the<i style='mso-bidi-font-style:normal'> Twin Towers</i>.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Now, about two
thousand years later, you are challenged with an even simpler problem: given
the descriptions of two dissimilar towers you are asked only to find out the
number of tiles in the highest twin towers that can be built from them. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>The input file consists of
several data blocks. Each data block describes a pair of towers. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The first line
of a data block contains two integers N1 and N2 (1 <= N1, N2 <= 100) indicating the
number of tiles respectively in the two towers. The next line contains N1 positive integers giving the
radii of the tiles (from top to bottom) in the first tower. Then follows
another line containing N2 integers
giving the radii of the tiles (from top to bottom) in the second tower. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The input file
terminates with two zeros for N1 and N2.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>For each pair of towers in the
input first output the twin tower number followed by the number of tiles (in
one tower) in the highest possible twin towers that can be built from them.
Print a blank line after the output of each data set.<b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">

7 6<br>

20
15 10 15 25 20 15<br>

15
25 10 20 15 20<br>

8
9<br>

10
20 20 10 20 10 20 10<br>

20
10 20 10 10 20 10 10 20<br>

0
0<br>
</font>
<p class=Preformatted><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;
font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>


<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">

Twin Towers #1<br>

Number of Tiles : 4<br>

<br>
Twin Towers #2<br>

Number of Tiles : 6<br>

<br>
</font>
</div>
<font face="Times New Roman"> 
______________________________________<br>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10067||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=Edit-Time-Data href="./p2_files/editdata.mso">
<link rel=OLE-Object-Data href="./p2_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - Playing with Wheels</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>302</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-10T11:00:00Z</o:Created>
  <o:LastSaved>2001-01-10T11:00:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>287</o:Words>
  <o:Characters>1637</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2010</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
strong
	{mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.DefinitionList, li.DefinitionList, div.DefinitionList
	{mso-style-name:"Definition List";
	mso-style-next:"Definition Term";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.25in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.DefinitionTerm, li.DefinitionTerm, div.DefinitionTerm
	{mso-style-name:"Definition Term";
	mso-style-next:"Definition List";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.H2, li.H2, div.H2
	{mso-style-name:H2;
	mso-style-next:Normal;
	margin-top:5.0pt;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	layout-grid-mode:char;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Address, li.Address, div.Address
	{mso-style-name:Address;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem C</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Playing with
Wheels</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard Input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'>In this problem we
will be considering a game played with four wheels. Digits ranging from 0 to 9
are printed consecutively (clockwise) on the periphery of each wheel. The
topmost digits of the wheels form a four-digit integer. For example, in the
following figure the wheels form the integer 8056. Each wheel has two buttons
associated with it. Pressing the button marked with a <i style='mso-bidi-font-style:
normal'>left arrow</i> rotates the wheel one digit in the clockwise direction
and pressing the one marked with the <i style='mso-bidi-font-style:normal'>right
arrow</i> rotates it by one digit in the opposite direction. </p>
<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img width=571 height=251
src="http://uva.onlinejudge.org/external/100/p10067.gif" >
<p class=MsoNormal style='margin-top:6.0pt;text-align:justify;text-indent:.5in'>The
game starts with an initial configuration of the wheels. Say, in the initial
configuration the topmost digits form the integer <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>S</i><sub>1</sub><i
style='mso-bidi-font-style:normal'>S</i><sub>2</sub><i style='mso-bidi-font-style:
normal'>S</i><sub>3</sub><i style='mso-bidi-font-style:normal'>S</i><sub>4</sub></b>.
You will be given some (say, <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>n</i></b>) forbidden configurations <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>F<sub>i</sub></i><sub>1</sub><i
style='mso-bidi-font-style:normal'>F<sub>i</sub></i><sub>2</sub><i
style='mso-bidi-font-style:normal'>F<sub>i</sub></i><sub>3</sub><i
style='mso-bidi-font-style:normal'>F<sub>i</sub></i><sub>4 </sub></b><span
style="mso-spacerun: yes">Â </span>(1 <= i <= n </i></b>) and a target
configuration <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>T</i><sub>1</sub><i style='mso-bidi-font-style:normal'>T</i><sub>2</sub><i
style='mso-bidi-font-style:normal'>T</i><sub>3</sub><i style='mso-bidi-font-style:
normal'>T</i><sub>4</sub></b>. Your job will be to write a program that can
calculate the minimum number of button presses required to transform the
initial configuration to the target configuration by never passing through a
forbidden one. </p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Input</font></o:p></span></b></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'>The first line
of the input contains an integer <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>N</i></b> giving the number of test cases to
follow. </p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify;text-indent:.5in'>The
first line of each test case contains the initial configuration of the wheels
specified by 4 digits. Two consecutive digits are separated by a space. The
next line contains the target configuration. The third line contains an integer
<b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>n</i></b>
giving the number of forbidden configurations. Each of the following <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>n</i></b>
lines contains a forbidden configuration.</p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify;text-indent:.5in'>There
is a blank line between two consecutive input sets.</p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></b></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'>For each test
case in the input print a line containing the minimum number of button presses
required. If the target configuration is not reachable then print -1.</p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Sample Input</font></span></b><span style='font-size:11.0pt;mso-bidi-font-size:
10.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman";
layout-grid-mode:line'><o:p></o:p></span></p>
<font size=3 face="Courier">

2<br>

8 0 5 6<br>

6 5 0 8<br>

5<br>

8 0 5 7<br>

8 0 4 7<br>

5 5 0 8<br>

7 5 0 8<br>

6 4 0 8<br>

<br>
0 0 0 0<br>

5 3 1 7<br>

8<br>

0 0 0 1<br>

0 0 0 9<br>

0 0 1 0<br>

0 0 9 0<br>

0 1 0 0<br>

0 9 0 0<br>

1 0 0 0<br>

9 0 0 0<br>
</font>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'>
<font size=5><b>Sample Output</font></span></b></p>
<font size=3 face="Courier">
14<br>
-1<br>
</font>
</div>
<font size=3 face="Times New Roman">
____________________________________________
<br>Rezaul Alam Chowdhury
</body>
</html>

______________________________________________________
10068||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./d_files/filelist.xml">
<title>Problem D - The Treasure Hunt</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>3</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:14:00Z</o:LastPrinted>
  <o:Created>2001-01-10T10:41:00Z</o:Created>
  <o:LastSaved>2001-01-10T10:41:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>395</o:Words>
  <o:Characters>2256</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2770</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem D</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Treasure
Hunt</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input : </b>treasure.in<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output : </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>In this problem you will be given
a map of a rectangular maze with square blocks. From each block you can move in
four directions (N, E, W, S) and you lose some energy for every walk from one
block to an adjacent one. Some blocks of the maze are really blocked - that is
you cannot move to those blocks. Some other blocks contain some treasures that
you will have to collect. Each treasure has a particular pickup cost and
carrying cost associated with it. The pickup cost is the energy required to
pick up the treasure from the floor and the carrying cost is the energy
required to carry the treasure from one block to an adjacent one.</p>

<p class=MsoNormal style='text-align:justify'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span>Now
given a starting and ending location in the maze you will have to plan a single
walk from the starting location to collect and carry all the treasures to the
ending location at the expense of minimum energy.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</span></b></font></p>


<p class=MsoNormal style='text-align:justify'>The first line of the input
contains two integers <i style='mso-bidi-font-style:normal'>R</i> and <i
style='mso-bidi-font-style:normal'>C</i> (each <= 20) describing the dimensions
of the maze. Then follows <i style='mso-bidi-font-style:normal'>R</i> lines of <i
style='mso-bidi-font-style:normal'>C</i> characters each representing the map
of the maze. Each character corresponds to a square block and represents its
property ('.' : an empty block, '#' : a blocked block, '*' : a block containing
a treasure, 'S' : the starting block, 'T' : the ending block).</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The next line
contains an integer representing the energy required in calories for a walk
from a block to an adjacent one. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The next line
contains pairs of integers (<i style='mso-bidi-font-style:normal'>P<sub>i</sub></i>,
<i style='mso-bidi-font-style:normal'>C<sub>i</sub></i>) representing the
pickup and carrying cost in calories for the treasures given in the map from
top to bottom and for the same row from left to right. There will be at most 10
treasures in the maze.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The input may
contain multiple test cases and ends with two zeros for <i style='mso-bidi-font-style:
normal'>R</i> and <i style='mso-bidi-font-style:normal'>C</i>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>For each test case first output
the hunt number. In the next line print the minimum energy required for the
hunt. The third line will contain the description of the hunt as a sequence of
characters containing 'N', 'E', 'W', 'S' and 'P'. 'N', 'E', 'W' and 'S' represent
a walk to the north, east, west and south respectively and 'P' means that the
treasure is picked up from the current location. If the hunt is impossible just
output the sentence 'The hunt is impossible.' in a line by itself. Each test
case output must be followed by a blank line.</p>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="courier">
5 8<br>

#......T<br>

..#*..#.<br>

..######<br>

...*...#<br>

####S.#*<br>

5<br>

10 50 50 100 30 80 <br>

10 10<br>

#........*<br>

..#*..#...<br>

..######..<br>

.......#..<br>

####S..##.<br>

.*.#...#..<br>

.......#..<br>

.##.#....#<br>

.*.....#.#<br>

....*..#.T<br>

10<br>

100 400 20 50 150 250 30 70 4 5 <br>

0 0<br><br>
</font>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">

Hunt #1<br>

The hunt is impossible.<br>

<br>
Hunt #2<br>

Minimum energy required = 17539 cal<br>

NWWWNNNEESPNWWSSSEEESSSWSSESPWWWNPWNNENPESEEESEEENENNNNNNPSSSSSWSSSSE<br>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
</font>
</div>

<font size=3 face="Times New Roman">
________________________________________
<br>Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10069||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./e_files/filelist.xml">
<title>Problem E - Distinct Subsequences</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2001-01-10T10:28:00Z</o:Created>
  <o:LastSaved>2001-01-10T10:28:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Company>BUET</o:Company>
  <o:Lines>1</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	layout-grid-mode:line;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem E</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Distinct
Subsequences</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b>standard input <style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A subsequence of a given sequence
is just the given sequence with some elements (possibly none) left out.
Formally, given a sequence <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>X</i></b> <b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>=</span></span></b>
<b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>x</i><sub>1</sub><i
style='mso-bidi-font-style:normal'>x</i><sub>2</sub>
<i style='mso-bidi-font-style:
normal'>x<sub>m</sub></i></b>, another sequence <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>Z</i></b> <b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>=</span></span></b>
<b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>z</i><sub>1</sub><i
style='mso-bidi-font-style:normal'>z</i><sub>2</sub>
<i style='mso-bidi-font-style:
normal'>z<sub>k</sub></i></b> is a subsequence of <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>X</i></b> if there exists a
strictly increasing sequence <b style='mso-bidi-font-weight:normal'><span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>&lt;</span></span><i
style='mso-bidi-font-style:normal'>i</i><sub>1</sub>, <i style='mso-bidi-font-style:
normal'>i</i><sub>2</sub>, 
, <i style='mso-bidi-font-style:normal'>i<sub>k</sub></i></b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>&gt;</span></span></b> of indices of <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>X</i></b> such that for all <i
style='mso-bidi-font-style:normal'>j</i> = 1, 2, 
, <i style='mso-bidi-font-style:
normal'>k</i>, we have <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>x<sub>i</sub></i></b><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'><sub><span style='font-size:8.0pt;
mso-bidi-font-size:12.0pt'>j</span></sub></i></b> <b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>=</span></span></b>
<b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>z<sub>j</sub></i></b>.
For example, <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>Z</i> </b><b style='mso-bidi-font-weight:normal'><span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>=</span></span> <i
style='mso-bidi-font-style:normal'>bcdb</i></b> is a subsequence of <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>X</i>
</b><b style='mso-bidi-font-weight:normal'><span style='font-family:Symbol;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>=</span></span> <i style='mso-bidi-font-style:
normal'>abcbdab</i></b> with corresponding index sequence <b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>&lt;</span></span>
2, 3, 5, 7 </b><b style='mso-bidi-font-weight:normal'><span style='font-family:
Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>&gt;</span></span></b>.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>In this problem
your job is to write a program that counts the number of occurrences of <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>Z</i></b>
in <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>X</i></b>
as a subsequence such that each has a distinct index sequence. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>The first line of the input
contains an integer <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>N</i></b> indicating the number of test cases to follow. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The first line
of each test case contains a string <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>X</i></b>, composed entirely of lowercase
alphabetic characters and having length no greater than 10,000. The second line
contains another string <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>Z</i></b> having length no greater than 100
and also composed of only lowercase alphabetic characters. Be assured that
neither <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>Z</i></b> nor any prefix or suffix of <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>Z</i></b> will have more than 10<sup>100</sup>
distinct occurrences in <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>X</i></b> as a subsequence.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>For each test case in the input
output the number of distinct occurrences of <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>Z</i></b> in <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>X</i></b> as a subsequence.
Output for each input set must be on a separate line.<b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">

2<br>

babgbag<br>

bag<br>

rabbbit<br>

rabbit<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>


<font size=3 face="Courier">
5<br>

3
</font>

</div>
<font size=3>
____________________________________<br>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10070||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./a_files/filelist.xml">
<title>Problem A - Leap Year or Not Leap Year and ...</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>6</o:Revision>
  <o:TotalTime>287</o:TotalTime>
  <o:Created>2001-01-10T14:14:00Z</o:Created>
  <o:LastSaved>2001-01-12T04:24:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>191</o:Words>
  <o:Characters>1091</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1339</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:0pt;
	font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem A</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Leap Year or Not Leap Year and 
</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Input:</font> </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>standard input<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Output: </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;<span style='font-size:
12.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>The ancient race of Gulamatu is very advanced in
their year calculation scheme. They understand what leap year is (A year that
is divisible by 4 and not divisible by 100 with the exception that years that
are divisible by 400 are also leap year.) and they have also similar festival
years. One is the Huluculu festival (happens on years divisible by 15) and the
Bulukulu festival (Happens on years divisible by 55 provided that is also a
leap year). Given an year you will have to state what properties these years
have. If the year is not leap year nor festival year, then print the line 'This is an ordinary year.' 
The order of printing (if present) the properties is leapyear-->huluculu-->bulukulu.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Input
will contain several years as input. Each year will be in separate lines. Input
is terminated by end of file. All the years will not be less than 2000 (to
avoid the earlier different rules for leap years). 
 Please donÂ’t assume anything else.<o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:.5in'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>For each input, output the different properties of
the years in different lines according to previous description and sample
output. A blank line should separate the output for each line of input. Note that
there are four different properties.</span>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">
2000<br>

3600<br>

4515<br>

2001<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">
This is leap year.<br><br>

This is leap year.<br>
This is huluculu festival year.<br><br>

This is huluculu festival year.<br><br>

This is an ordinary year.<br>


</div>
<font size=3 face="Times New Roman">
__________________________<br>
Shahriar Manzoor
</body>

</html>

______________________________________________________
10071||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p1_files/filelist.xml">
<title>Problem B - Back to High School Physics.</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>14</o:Revision>
  <o:TotalTime>470</o:TotalTime>
  <o:Created>2001-01-10T14:14:00Z</o:Created>
  <o:LastSaved>2001-01-12T09:11:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>94</o:Words>
  <o:Characters>536</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>4</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>658</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:0pt;
	font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem B<o:p></font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Back to High School Physics</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Input: </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>standard input<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Output: </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;<span style='font-size:
12.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>A particle has initial velocity and constant acceleration. If
its velocity after certain time is v then what will its displacement be in twice of
that time? <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'><span style="mso-spacerun: yes">Â </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoBodyText2>The input will contain two integers in each line. Each
line makes one set of input. These two integers denote the value of v 

(-100 &lt;= v &lt;= 100) and t(0&lt;=t&lt;= 200) ( t means at
the time the particle gains that velocity)<span style="mso-spacerun: yes">Â 
</span></p>

<p class=MsoBodyText2><span style="mso-spacerun: yes">Â  </span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'>For each line of input
print a single integer in one line denoting the displacement in double of that time.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt;mso-bidi-font-weight:bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">
0 0<br>

5 12<br>
</font>
<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">

0<br>

120<br>

</div>
</font>
<font size=3 face="Times New Roman">

_____________________________________________<br>
Shahriar Manzoor
</body>

</html>

______________________________________________________
10072||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./c_files/filelist.xml">
<title>Problem C - Bob Laptop Woolmer and Eddie Desktop Barlow</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>255</o:TotalTime>
  <o:Created>2001-01-10T14:14:00Z</o:Created>
  <o:LastSaved>2001-01-10T14:14:00Z</o:LastSaved>
  <o:Pages>4</o:Pages>
  <o:Words>829</o:Words>
  <o:Characters>4726</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>39</o:Lines>
  <o:Paragraphs>9</o:Paragraphs>
  <o:CharactersWithSpaces>5803</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:0pt;
	font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	layout-grid-mode:line;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:849416235;
	mso-list-type:simple;
	mso-list-template-ids:67698689;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l1
	{mso-list-id:2004966046;
	mso-list-type:simple;
	mso-list-template-ids:67698689;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
@list l2
	{mso-list-id:2062636332;
	mso-list-type:simple;
	mso-list-template-ids:67698689;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	font-family:Symbol;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem C</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Bob Laptop Woolmer and Eddie Desktop Barlow</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Input: </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>standard input<b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>Output: </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>standard output<o:p></o:p></span></p>

<br>
<p class=MsoBodyText style='text-align:justify'>Have you heard of Bob Woolmer,
the former coach of South African cricket team? Unlike other conventional
coaches, Woolmer relies on his laptop computer for storing and analyzing
information on players, selecting team, planning match strategy etc. Since his
laptop is his constant companion, people call him Bob<i style='mso-bidi-font-style:
normal'> Laptop </i>Woolmer.</p>

<br>
<p class=MsoBodyText style='text-align:justify'>Having seen Woolmer in action
during World Cup Â’99, the <i style='mso-bidi-font-style:normal'>BCB</i> (<i
style='mso-bidi-font-style:normal'>Bangladesh Cricket Board</i>) officials
sacked Gordon<i style='mso-bidi-font-style:normal'> Abacus </i>Greenidge (he
was not willing to use computers) and decided to appoint someone as charismatic
as Woolmer for coaching Bangladesh cricket team. So, Eddie Barlow was appointed
as the new coach. They say that he is no less than Bob Woolmer with his
computer. Then why donÂ’t you ever see him with his laptop? That is because he
doesnÂ’t have one!<span style="mso-spacerun: yes">Â  </span>Actually, he has a
desktop PC, and he loves his computer so much that people call him Eddie <i
style='mso-bidi-font-style:normal'>Desktop</i> Barlow.</p>

<br>
<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>Now, to select Bangladesh national team for the next
World Cup, Barlow has asked <i style='mso-bidi-font-style:normal'>BCB</i> to
call a number of players to <i style='mso-bidi-font-style:normal'>BKSP</i>
camp, so that he can minutely observe them before selection. Accordingly, <i
style='mso-bidi-font-style:normal'>BCB</i> invites around 100 players to join <i
style='mso-bidi-font-style:normal'>BKSP</i> camp. BarlowÂ’s strategy for
selecting the best team is as follows. He will observe each playerÂ’s batting,
bowling and fielding capabilities individually, and each player will have three
individual scores in these three aspects (batting, bowling and fielding). He
will store each playerÂ’s scores in his hard disk. After he has scored all the
players in this way, he will use his computer to select the best combination.
He believes that it is only his computer that can handle this huge data and
select the best combination to have the best capabilities in each department of
the game.<o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>Barlow plans to have four specialist batsmen, three
specialist bowlers, three all-rounders and one wicket-keeper in the team.
Since, Khaled Mashud has no competitor for the wicket keeping position, this
position is almost fixed. Barlow is now to decide for the rest 10 positions.
For a specialist batsman, batting capability is the most important, but he
should have some fielding capability too; a specialist bowler, besides bowling,
should have some fielding and batting capabilities (since our bowlers need to
score runs in order to avoid making records(!)), and an all-rounder should have
all the capabilities. So, he sets the following rules:<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>For any player <i
style='mso-bidi-font-style:normal'>P</i><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.25in;text-align:justify;text-indent:
-.25in;mso-list:l2 level1 lfo1;tab-stops:list 1.25in'><![if !supportLists]><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Symbol'>Â·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>If
<i style='mso-bidi-font-style:normal'>P</i> is selected as a batsman, his
effective score = 0.8 * Batting score<span
style="mso-spacerun: yes">Â  </span>+ 0.2 * Fielding Score<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.25in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 1.25in'><![if !supportLists]><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Symbol'>Â·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>If
<i style='mso-bidi-font-style:normal'>P</i> is selected as a bowler, his
effective score = 0.7 * Bowling score<span
style="mso-spacerun: yes">Â  </span>+ 0.10 * Batting Score + 0.2 * Fielding Score<span
style='mso-tab-count:1'> </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.25in;text-align:justify;text-indent:
-.25in;mso-list:l1 level1 lfo3;tab-stops:list 1.25in'><![if !supportLists]><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:Symbol'>Â·<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'>If
<i style='mso-bidi-font-style:normal'>P</i> is selected as an all-rounder, his
effective score = 0.4 * Batting score + 0.4 * Bowling Score + 0.2 * Fielding Score<span style='mso-tab-count:
1'> </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>All the effective scores should be rounded to the
nearest integer for further calculation.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>Barlow believes (and the mathematicians too will
believe) that the best team will have the maximum total effective score.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>After the daylong practice session with the players,
Barlow is to spend his nights with writing a program that will select the best
team. He wants his program to be a bit flexible. So, it will take the number of
candidate players, number of players to be selected, that is, number of
batsmen, bowlers or all-rounders as parameters. (But the rules are fixed). But,
spending the whole night in programming, he feels tired during the next day
practice session, and cannot concentrate in his coaching or observing the
players.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'>So, <i style='mso-bidi-font-style:normal'>BCB</i>
wants to relieve Barlow from this strenuous job, and hires you to do the job
for Barlow. Now you are to write the program for selecting the best team,
according to the playersÂ’ scores assigned by Barlow. (You can write this in
your CV that you once worked with Eddie <i style='mso-bidi-font-style:normal'>Desktop</i>
Barlow).<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:12.0pt;
mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>


<p class=MsoBodyText2>The input may contain several data sets. </p>


<p class=MsoBodyText2>The first line of each data set contains an integer <i
style='mso-bidi-font-style:normal'>N</i> (10 <= N <= 100) indicating the number of players in the camp. The <i style='mso-bidi-font-style:
normal'>i</i>th (1 <= i <= N</i>) of the next <i style='mso-bidi-font-style:normal'>N</i> lines
contains three integers: <i style='mso-bidi-font-style:normal'>bt<sub>i</sub></i>,
<i style='mso-bidi-font-style:normal'>bl<sub>i </sub></i>and <i
style='mso-bidi-font-style:normal'>fl<sub>i</sub></i> (0 <= bt, bl, fl
<= 100)
representing respectively the batting, bowling and fielding scores of the <i
style='mso-bidi-font-style:normal'>i</i>th player. After these <i
style='mso-bidi-font-style:normal'>N</i> lines follows another line containing
three integers <i style='mso-bidi-font-style:normal'>BT</i> (1 <= BT <= 7), <i style='mso-bidi-font-style:
normal'>BL</i> (0 <= BL <= 5) and <i
style='mso-bidi-font-style:normal'>AR</i> (0 <= AR <= 4), indicating respectively the number of batsmen, bowlers and all-rounders
required for the final team. You may always assume that <i style='mso-bidi-font-style:
normal'>BT</i> + <i style='mso-bidi-font-style:normal'>BL</i> + <i
style='mso-bidi-font-style:normal'>AR</i> = 10. </p>

<p class=MsoBodyText2 style='text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText2>The input terminates with a value 0 for <i
style='mso-bidi-font-style:normal'>N</i>.</p>

<p class=MsoBodyText2 style='text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>


<p class=MsoBodyText2>For each data set in the input, first output the team
number (starting from 1). In the 2nd line print the sentence Â“Maximum effective
score = Â”, followed by the effective score of the best team. Print Â“Batsmen :
Â”, followed by the numbers of the players selected as batsmen in the 3rd line.
The 4th line will contain Â“Bowlers : Â”, followed by the numbers of the players
selected as bowlers. In the 5th line print Â“All-rounders : Â”, followed by the
numbers of the players selected as all-rounders. If there are multiple
solutions any one of them is acceptable. Print a blank line between the outputs
of two consecutive data sets. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">

15<br>

43 17 97<br>

10 75 15<br>

53 33 62<br>

85 12 19<br>

44 77 85<br>

19 10 76<br>

58 26 84<br>

33 32 80<br>

88 29 83<br>

30 4 7<br>

66 15 18<br>

20 93 1<br>

11 74 98<br>

20 89 40<br>

58 24 35<br>

6 3 1<br>

20<br>

96 1 38<br>

82 53 66<br>

42 22 29<br>

47 57 41<br>

41 70 19<br>

50 21 19<br>

72 57 54<br>

3 71 99<br>

42 8 10<br>

20 81 67<br>

82 2 91<br>

72 48 66<br>

45 8 76<br>

5 38 68<br>

69 27 88<br>

30 43 67<br>

37 92 46<br>

56 22 7<br>

57 54 18<br>

69 71 64<br>

5 3 2<br>

0<br>
</font>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:11.0pt;mso-bidi-font-size:10.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">


Team #1<br>
Maximum Effective Score = 664<br>

Batsmen : 1 3 4 7 9 11<br>

Bowlers : 12 13 14<br>

All-rounders : 5<br>

<br>
Team #2<br>

Maximum Effective Score = 741<br>

Batsmen : 1 2 11 12 15<br>

Bowlers : 8 10 17<br>

All-rounders : 7 20<br>

</div>
</font>
<font size=3 face="Times New Roman">

______________________________________<br>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10073||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<title>Problem D - Constrained Exchange Sort</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>33</o:TotalTime>
  <o:Created>2001-01-17T03:56:00Z</o:Created>
  <o:LastSaved>2001-01-17T03:56:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>215</o:Words>
  <o:Characters>1228</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1508</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1409231832;
	mso-list-type:simple;
	mso-list-template-ids:67698695;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F071;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-ansi-font-size:8.0pt;
	font-family:Wingdings;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem D</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Constrained
Exchange Sort</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input : </b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output : </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Given a
permutation of 12 letters 'A'-'L', you are invited to write a program to sort
them in ascending order under the following set of constraints:</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.75in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo1;tab-stops:list .75in'><![if !supportLists]><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings'>q<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>The
only allowed operation is the exchange of letters between two locations
(locations are numbered from 1 to 12).</p>

<p class=MsoNormal style='margin-left:.75in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo1;tab-stops:list .75in'><![if !supportLists]><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings'>q<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>The
letter 'L' must be involved in each operation.</p>

<p class=MsoNormal style='margin-left:.75in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo1;tab-stops:list .75in'><![if !supportLists]><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings'>q<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>The
letter 'L' at location <i style='mso-bidi-font-style:normal'>l</i><sub>1</sub>
can be swapped with the letter at location <i style='mso-bidi-font-style:normal'>l</i><sub>2</sub>
provided <i style='mso-bidi-font-style:normal'>l</i><sub>1 </sub><span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>~</span></span> <i
style='mso-bidi-font-style:normal'>l</i><sub>2</sub> = <i style='mso-bidi-font-style:
normal'>d<sub>i</sub></i> and floor((<i style='mso-bidi-font-style:normal'>l</i><sub>1</sub>
- 1) / <i style='mso-bidi-font-style:normal'>d<sub>i</sub></i><sub> + 1</sub>)
= floor((<i style='mso-bidi-font-style:normal'>l</i><sub>2</sub> - 1) / <i
style='mso-bidi-font-style:normal'>d<sub>i</sub></i><sub> + 1</sub>)for <i
style='mso-bidi-font-style:normal'>i</i> = 1 | 2 | 3, where (<i
style='mso-bidi-font-style:normal'>d</i><sub>1</sub>, <i style='mso-bidi-font-style:
normal'>d</i><sub>2</sub>, <i style='mso-bidi-font-style:normal'>d</i><sub>3</sub>,
<i style='mso-bidi-font-style:normal'>d</i><sub>4</sub>) = (1, 3, 6, 12). </p>

<p class=MsoNormal style='margin-left:.75in;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo1;tab-stops:list .75in'><![if !supportLists]><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings'>q<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>You
must use the minimum number of exchange operations possible.</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>The first line of the input file
contains an integer representing the number of test cases to follow.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Each test case
contains a permutation of the letters 'A'-'L' on a line by itself. It is
guaranteed that the given permutation can be sorted in ascending order under
the given set of constraints. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<br>
<p class=MsoNormal style='text-align:justify'>For each test case first output
the permutation number on a line by itself. The next line will contain a
sequence of letters where the letter at location <i style='mso-bidi-font-style:
normal'>i</i> represents the letter with which 'L' is swapped in the <i
style='mso-bidi-font-style:normal'>i-</i>th exchange during the sorting
process. Output an empty line after each test case. <b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">
2<br>

BKLAIGFHEDCJ<br>

LIFDHJAKEGCB<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face = "Courier">

Permutation #1<br>

EHCJGIKCJGIECBADFJGFJGHIFKEF<br>

<br>
Permutation #2<br>

AKIHCBJCBJEFCEFIKGJKHBEF<br>
</font>
</div>
<font size=3 face= "Times New Roman">
_______________________________________________
<br>Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10074||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./e_files/filelist.xml">
<title>Problem E - Take the Land</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2001-01-10T14:25:00Z</o:Created>
  <o:LastSaved>2001-01-10T14:27:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>252</o:Words>
  <o:Characters>1440</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1768</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 3.0in right 6.0in;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-title-page:yes;
	mso-even-footer:url("./e_files/header.htm") ef1;
	mso-footer:url("./e_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem E</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Take the Land</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input : </b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output : </b>standard output</p>

<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='font-weight:normal'>The poor man went to the
King and said, Â“Lord, I cannot maintain my family. Please give me some wealth
so that I can survive with my wife and children.Â” The King replied, Â“I shall
grant you a piece of land so that you can cultivate and grow food for your
family. In the southern part of the Kingdom there is a rectangular forest.
Trees have been planted there at regular intervals. Some of the trees have been
cut for use. You are allowed to take any rectangular piece of land that does
not contain any tree. You need not go to the forest to select the piece of
land. I have a map containing 1s at places where there is a tree and 0s at
points where the tree has been cut.Â”<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Help the poor man to find out the
largest piece of land. Area of the land is measured in units of number of trees
that were there. Your program should take a matrix of 1s and 0s as input and
output the area of the largest rectangular piece of land that contain no tree.
Be careful about the efficiency of your program.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'>The input file
may contain multiple test cases. The first line of each test case contains two
integers <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>M</i></b> and <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>N</i></b><span style="mso-spacerun: yes">Â 
</span>(1<=M,N<=100) giving the number of rows and columns in the matrix that follows. Each of
the next <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>M</i></b> lines contains <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>N</i></b> symbols (either 0 or 1). Two
consecutive symbols in a line will be separated by a single space. The input
terminates with two zeros for <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>M</i></b> and <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>N</i></b>. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='margin-top:6.0pt'>For each test case in the input
print a line giving the area (in terms of the number of trees were there) of
the largest rectangular piece of land containing no tree. </p>

<p class=MsoNormal style='margin-top:6.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Sample Input</font></span></b></p>
<font size=3>
6 7<br>

0 1 1 0 1 1 0<br>

0 0 0 0 0 1 0<br>

1 0 0 0 0 0 1<br>

0 1 0 0 0 0 1<br>

1 1 0 0 0 1 0<br>

1 1 0 1 1 0 0<br>

0 0<br>
</font>
<br>
<p class=MsoNormal style='margin-top:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Sample Output</font></span></b></p>


12<br>


</div>
_____________________________________________<br>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10075||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./a_files/filelist.xml">
<title>Problem A - Airlines</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>8</o:Revision>
  <o:TotalTime>8</o:TotalTime>
  <o:Created>2001-01-10T16:07:00Z</o:Created>
  <o:LastSaved>2001-01-13T02:22:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>514</o:Words>
  <o:Characters>2934</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>24</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3603</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;
	mso-bidi-font-weight:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem A</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Airlines</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'>Input: </b></font><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A leading airlines company has
hired you to write a program that answers the following query: given a list of
city locations (latitudes and longitudes) and a list of direct flights what is
the minimum distance a passenger needs to fly to get from a given city to
another?</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>To get from a city to another a
passenger may either take a direct flight (if exists) or take a sequence of
connecting flights (if there exists such a route).</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Assume that if a passenger takes
a direct flight from <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>X</i></b> to <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>Y</i></b> he never flies more
than the geographical distance between <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>X</i></b> and <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>Y</i></b>.<span
style="mso-spacerun: yes">Â  </span>The geographical distance between two
locations <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>X</i></b> and <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>Y</i></b> is the length of the geodetic line
segment connecting <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>X</i></b> and <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>Y</i></b>. The geodetic line segment between
two points on a sphere is the shortest connecting curve lying entirely in the
surface of the sphere. Assume that the Earth is a perfect sphere with a radius
of exactly 6378-km and the value of <span style='font-family:Symbol;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>p</span></span><!--[if supportFields]><span style='mso-element:field-begin'></span>PRIVATE
&quot;TYPE=PICT;ALT=$\pi$&quot;<![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]--> is approximately <b>3.141592653589793</b>.
Round the geographical distance between every pair of cities to the nearest
integer.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<font size=5><b>Input</b></font><br>

<p class=MsoNormal style='text-align:justify'>The input may contain multiple
test cases. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The first line of each test case
contains three integers <b style='mso-bidi-font-weight:normal'>N</b> (N &lt;= 100),
<b style='mso-bidi-font-weight:normal'>M</b> (M &lt;= 300) and <b
style='mso-bidi-font-weight:normal'>Q</b> (Q &lt;= 10000) where <b
style='mso-bidi-font-weight:normal'>N</b> indicates the number of cities, <b
style='mso-bidi-font-weight:normal'>M</b> represents the number of direct
flights and <b style='mso-bidi-font-weight:normal'>Q</b> is the number of queries.
</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The next <b style='mso-bidi-font-weight:
normal'>N</b> lines contain the city list. The <b style='mso-bidi-font-weight:
normal'>i</b>-th of these <b style='mso-bidi-font-weight:normal'>N</b> lines
will contain a string <b style='mso-bidi-font-weight:normal'>c<sub>i</sub></b>
followed by two real numbers <b style='mso-bidi-font-weight:normal'>lt<sub>i</sub></b>
and <b style='mso-bidi-font-weight:normal'>ln<sub>i</sub></b>, representing the
city name, its latitude and longitude respectively. The city name will be no
longer than 20 characters and will not contain white-space characters. The
latitude will be between -90 (South Pole) and +90 (North Pole). The longitude
will be between -180 and +180 where negative numbers denote locations west of
the meridian and positive numbers denote locations east of the meridian. (The
meridian passes through Greenwich, London.) </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The next <b style='mso-bidi-font-weight:
normal'>M</b> lines contain the direct flight list. The <b style='mso-bidi-font-weight:
normal'>i</b>-th of these <b style='mso-bidi-font-weight:normal'>M</b> lines
will contain two city names <b style='mso-bidi-font-weight:normal'>a<sub>i</sub></b>
and <b style='mso-bidi-font-weight:normal'>b<sub>i</sub></b> indicating that
there exists a direct flight from city <b style='mso-bidi-font-weight:normal'>a<sub>i</sub></b>
to city <b style='mso-bidi-font-weight:normal'>b<sub>i</sub></b>. Be assured
that both city names will occur in the city list.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The next <b style='mso-bidi-font-weight:
normal'>Q</b> lines contain the query list. The <b style='mso-bidi-font-weight:
normal'>i</b>-th of these <b style='mso-bidi-font-weight:normal'>Q</b> lines
will contain two city names <b style='mso-bidi-font-weight:normal'>a<sub>i</sub></b>
and <b style='mso-bidi-font-weight:normal'>b<sub>i</sub></b> asking for the
minimum distance a passenger needs to fly in order to get from city <b
style='mso-bidi-font-weight:normal'>a<sub>i</sub></b> to city <b
style='mso-bidi-font-weight:normal'>b<sub>i</sub></b>. Be assured that <b
style='mso-bidi-font-weight:normal'>a<sub>i</sub> <span style="mso-spacerun:
yes">Â </span>b<sub>i</sub></b> are not equal and both city names will occur in
the city list.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The input will terminate with
three zeros form <b style='mso-bidi-font-weight:normal'>N</b>, <b
style='mso-bidi-font-weight:normal'>M</b> and <b style='mso-bidi-font-weight:
normal'>Q</b>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<font size=5><b>Output</b></font><br>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
first output the test case number (starting from 1) as shown in the sample
output. Then for each query in the input print a line giving the shortest
distance (in km) a passenger needs to fly to get from the first city (<b
style='mso-bidi-font-weight:normal'>a<sub>i</sub></b>) in the query to the
second one (<b style='mso-bidi-font-weight:normal'>b<sub>i</sub></b>). If there
exists no route form <b style='mso-bidi-font-weight:normal'>a<sub>i</sub></b>
to <b style='mso-bidi-font-weight:normal'>b<sub>i</sub></b>, just print the
line &quot;no route exists&quot;. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Print a blank
line between two consecutive test cases. <b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="courier" size=3>
3 4 2<br>

Dhaka 23.8500 90.4000<br>

Chittagong 22.2500 91.8333<br>

Calcutta 22.5333 88.3667<br>

Dhaka Calcutta<br>

Calcutta Dhaka<br>

Dhaka Chittagong<br>

Chittagong Dhaka<br>

Chittagong Calcutta<br>

Dhaka Chittagong<br>

5 6 3<br>

Baghdad 33.2333 44.3667<br>

Dhaka 23.8500 90.4000<br>

Frankfurt 50.0330 8.5670<br>

Hong_Kong 21.7500 115.0000<br>

Tokyo 35.6833 139.7333<br>

Baghdad Dhaka<br>

Dhaka Frankfurt<br>

Tokyo Hong_Kong<br>

Hong_Kong Dhaka<br>

Baghdad Tokyo<br>

Frankfurt Tokyo<br>

Dhaka Hong_Kong<br>

Frankfurt Baghdad<br>

Baghdad Frankfurt<br>

0 0 0<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="courier" size=3>
Case #1<br>

485 km<br>

231 km<br>

<br>
Case #2<br>

19654 km<br>

no route exists<br>

12023 km<br>

</font>
</div>
___________________________________________
<br>Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10076||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./b_files/filelist.xml">
<link rel=Edit-Time-Data href="./b_files/editdata.mso">
<link rel=OLE-Object-Data href="./b_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem B - The Bumpy Robot</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>91</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-10T16:14:00Z</o:Created>
  <o:LastSaved>2001-01-13T02:28:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>312</o:Words>
  <o:Characters>1782</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>14</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2188</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1028"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem B</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Bumpy Robot</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The bumpy robot moves around an M
<span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>Â´</span></span>
N grid of square blocks. Each block has an integral height. To move from a
block of height h<sub>1</sub> to an adjacent block of height h<sub>2</sub>, the
amount of energy required is,</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img width=231 height=75
src="http://uva.onlinejudge.org/external/100/p10076a.gif"  v:shapes="_x0000_i1025">
<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>and the amount of time required
is,</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img width=231 height=75
src="http://uva.onlinejudge.org/external/100/p10076a.gif"  v:shapes="_x0000_i1025">

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Here, <span style='font-family:
Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>a</span></span><sub>1</sub>, <span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>a</span></span><sub>2</sub>,
<span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>g</span></span>,
<span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>b</span></span><sub>1</sub>,
<span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>b</span></span><sub>2</sub>
and <span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>d</span></span>
are some known constants. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The bumpy robot must move from a
given starting block to a target block in minimum amount of time that is
possible without consuming more than a given amount of energy. Please help him
find out whether it is possible for him to move to the target block under the
given constraint and if possible to determine the minimum amount of time
required for reaching there.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Note that two blocks are assumed
to be adjacent if they have a side in common.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input may contain multiple
test cases. Each test case begins with a line containing two integers M and N (1&lt;=M,
N &lt;=15). The second line contains two positive floating point numbers <span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>a</span></span><sub>1</sub>
and <span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>a</span></span><sub>2</sub>,
and a positive integer <span style='font-family:Symbol;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>g</span></span>. The second line contains two more positive floating
point numbers <span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>b</span></span><sub>1</sub>
and <span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>b</span></span><sub>2</sub>,
and another positive integer <span style='font-family:Symbol;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>d</span></span>. Then follow M lines containing N integers each giving
the height of the corresponding block in the grid. The top-left corner of the
grid is assumed to be in row 1 and column 1. The next line contains five
integers r<sub>s</sub>, c<sub>s</sub>, r<sub>t</sub>, r<sub>t</sub> and E,
where (r<sub>s</sub>, c<sub>s</sub>) is the row, column numbers of the starting
block, (r<sub>t</sub>, c<sub>t</sub>) is the row-column number of the target
block and E (1 &lt;= E&lt;= 200) is the energy constraint for the bumpy robot.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing two zeros
for M and N terminates the input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
file print a line containing the minimum time required if the target is
reachable, print &quot;failed&quot; otherwise.<b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>

6 6<br>

3.2 1.2 3<br>

5.0 2.0 2<br>

5 -7 10 25 6 23<br>

1 7 9 -2 20 2<br>

12 -10 2 6 9 22<br>

11 19 -20 4 8 0<br>

2 2 6 8 10 12<br>

12 10 2 3 6 9<br>

1 1 6 6 5<br>

6 6<br>

1.5 0.2 1<br>

0.2 1.5 1<br>

5 10 20 25 30 43<br>

15 -7 30 34 40 50<br>

20 35 -10 40 45 55<br>

30 35 45 -20 50 57<br>

40 42 48 50 -25 60<br>

50 55 60 63 68 -30<br>

1 1 6 6 200<br>

0 0<br>
</font>
<p class=Preformatted><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt;
font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>

failed<br>

112<br>

</div>
<font face="Time New Roman">
____________________________________________
<br>Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10077||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./c_files/filelist.xml">
<link rel=Edit-Time-Data href="./c_files/editdata.mso">
<link rel=OLE-Object-Data href="./c_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - The Stern-Brocot Number System</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>4</o:Revision>
  <o:TotalTime>70</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-10T15:49:00Z</o:Created>
  <o:LastSaved>2001-01-10T16:02:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>375</o:Words>
  <o:Characters>2138</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2625</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	layout-grid-mode:line;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem C</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Stern-Brocot Number System</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The <i style='mso-bidi-font-style:
normal'>Stern-Brocot tree</i> is a beautiful way for constructing the set of
all nonnegative fractions <i style='mso-bidi-font-style:normal'>m</i> / <i
style='mso-bidi-font-style:normal'>n</i> where <i style='mso-bidi-font-style:
normal'>m</i> and <i style='mso-bidi-font-style:normal'>n</i> are relatively
prime. The idea is to start with two fractions <span style='mso-text-raise:
-7.0pt'><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1110" type="#_x0000_t75" style='width:27.75pt;
 height:20.25pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=37 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1110"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1110"
  DrawAspect="Content" ObjectID="_1040669320">
 </o:OLEObject>
</xml><![endif]--><span style="mso-spacerun: yes">Â </span>and then repeat the
following operations as many times as desired:</p>

<p class=MsoNormal align=center style='text-align:center'>Insert <span
style='mso-text-raise:-12.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1109"
 type="#_x0000_t75" style='width:38.25pt;height:30.75pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=51 height=41
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1109"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1109"
  DrawAspect="Content" ObjectID="_1040669321">
 </o:OLEObject>
</xml><![endif]--><span style="mso-spacerun: yes">Â </span>between two adjacent
fractions <span style='mso-text-raise:-12.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1111" type="#_x0000_t75" style='width:15pt;height:30.75pt' o:ole=" 
 fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=20 height=41
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1111"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1111"
  DrawAspect="Content" ObjectID="_1040669322">
 </o:OLEObject>
</xml><![endif]--><span style="mso-spacerun: yes">Â </span>and <span
style='mso-text-raise:-12.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1112"
 type="#_x0000_t75" style='width:18pt;height:30.75pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=24 height=41
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1112"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1112"
  DrawAspect="Content" ObjectID="_1040669323">
 </o:OLEObject>
</xml><![endif]-->.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>For example, the
first step gives us one new entry between <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1113" type="#_x0000_t75" style='width:9.75pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1113"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1113"
  DrawAspect="Content" ObjectID="_1040669324">
 </o:OLEObject>
</xml><![endif]--><span style="mso-spacerun: yes">Â </span>and <span
style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1114"
 type="#_x0000_t75" style='width:9.75pt;height:20.25pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1114"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1114"
  DrawAspect="Content" ObjectID="_1040669325">
 </o:OLEObject>
</xml><![endif]-->,</p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-text-raise:-12.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1115"
 type="#_x0000_t75" style='width:39.75pt;height:30.75pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=53 height=41
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1115"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1115"
  DrawAspect="Content" ObjectID="_1040669326">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>and the next
gives two more:</p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-text-raise:-12.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1116"
 type="#_x0000_t75" style='width:66.75pt;height:30.75pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=89 height=41
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1116"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1116"
  DrawAspect="Content" ObjectID="_1040669327">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The next gives
four more,</p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-text-raise:-12.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1117"
 type="#_x0000_t75" style='width:120.75pt;height:30.75pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=161 height=41
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1117"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1117"
  DrawAspect="Content" ObjectID="_1040669328">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>and then we will
get 8, 16, and so on. The entire array can be regarded as an infinite binary
tree structure whose top levels look like this:</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><!--[if gte vml 1]><v:shape id="_x0000_i1118"
 type="#_x0000_t75" style='width:442.5pt;height:229.5pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=590 height=306
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1118"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Visio.Drawing.4" ShapeID="_x0000_i1118"
  DrawAspect="Content" ObjectID="_1040669329">
 </o:OLEObject>
</xml><![endif]--></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The construction
preserves order, and we couldn't possibly get the same fraction in two
different places. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>We can, in fact,
regard the <i style='mso-bidi-font-style:normal'>Stern-Brocot tree</i> as a <i
style='mso-bidi-font-style:normal'>number system</i> for representing rational
numbers, because each positive, reduced fraction occurs exactly once. Let's use
the letters <i style='mso-bidi-font-style:normal'>L</i> and <i
style='mso-bidi-font-style:normal'>R</i> to stand for going down to the left or
right branch as we proceed from the root of the tree to a particular fraction;
then a string of <i style='mso-bidi-font-style:normal'>L</i>'s and <i
style='mso-bidi-font-style:normal'>R</i>'s uniquely identifies a place in the
tree. For example, <i style='mso-bidi-font-style:normal'>LRRL</i> means that we
go left from <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1119" type="#_x0000_t75" style='width:8.25pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=11 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1119"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1119"
  DrawAspect="Content" ObjectID="_1040669330">
 </o:OLEObject>
</xml><![endif]--><span style="mso-spacerun: yes">Â </span>down to <span
style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1120"
 type="#_x0000_t75" style='width:9.75pt;height:20.25pt' o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1120"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1120"
  DrawAspect="Content" ObjectID="_1040669331">
 </o:OLEObject>
</xml><![endif]-->, then right to <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1121" type="#_x0000_t75" style='width:9.75pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1121"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1121"
  DrawAspect="Content" ObjectID="_1040669332">
 </o:OLEObject>
</xml><![endif]-->, then right to <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1122" type="#_x0000_t75" style='width:9.75pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1122"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1122"
  DrawAspect="Content" ObjectID="_1040669333">
 </o:OLEObject>
</xml><![endif]-->, then left to <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1123" type="#_x0000_t75" style='width:9.75pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1123"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1123"
  DrawAspect="Content" ObjectID="_1040669334">
 </o:OLEObject>
</xml><![endif]-->. We can consider <i style='mso-bidi-font-style:normal'>LRRL</i>
to be a representation of <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1124" type="#_x0000_t75" style='width:9.75pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=13 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1124"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1124"
  DrawAspect="Content" ObjectID="_1040669335">
 </o:OLEObject>
</xml><![endif]-->. Every positive fraction gets represented in this way as a
unique string of <i style='mso-bidi-font-style:normal'>L</i>'s and <i
style='mso-bidi-font-style:normal'>R</i>'s. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Well, actually
there's a slight problem: The fraction <span style='mso-text-raise:-7.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1125" type="#_x0000_t75" style='width:8.25pt;height:20.25pt'
 o:ole="  fillcolor="window">
 <v:imagedata src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=11 height=27
src="http://uva.onlinejudge.org/external/100/./c_files/image001.wmz"  v:shapes="_x0000_i1125"><![endif]></span><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Equation.3" ShapeID="_x0000_i1125"
  DrawAspect="Content" ObjectID="_1040669336">
 </o:OLEObject>
</xml><![endif]--><span style="mso-spacerun: yes">Â </span>corresponds to the <i
style='mso-bidi-font-style:normal'>empty</i> string, and we need a notation for
that. Let's agree to call it <i style='mso-bidi-font-style:normal'>I</i>,
because that looks something like 1 and it stands for &quot;identity&quot;.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>In this problem,
given a positive rational fraction, you are expected to represent it in <i
style='mso-bidi-font-style:normal'>Stern-Brocot number system</i>. </p>

<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains multiple
test cases. Each test case consists of a line contains two positive integers <i
style='mso-bidi-font-style:normal'>m</i> and <i style='mso-bidi-font-style:
normal'>n</i> where <i style='mso-bidi-font-style:normal'>m</i> and <i
style='mso-bidi-font-style:normal'>n</i> are relatively prime. The input
terminates with a test case containing two 1's for <i style='mso-bidi-font-style:
normal'>m</i> and <i style='mso-bidi-font-style:normal'>n</i>, and this case
must not be processed. </p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
file output a line containing the representation of the given fraction in the <i
style='mso-bidi-font-style:normal'>Stern-Brocot number system</i>. <b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></b></p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>
5 7<br>

878 323<br>

1 1<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="Courier" size=3>
LRRL<br>

RRLRRLRLLLLRLRRR<br>
</font>
</div>
<font face="Times New Roman" size=3>
_________________________________________________
<br>Rezaul Alam Chowdhury
</font>
</body>

</html>

______________________________________________________
10078||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./d_files/filelist.xml">
<link rel=Edit-Time-Data href="./d_files/editdata.mso">
<link rel=OLE-Object-Data href="./d_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem D - The Art Gallery</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>61</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-10T16:25:00Z</o:Created>
  <o:LastSaved>2001-01-10T16:25:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>226</o:Words>
  <o:Characters>1292</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1586</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	layout-grid-mode:line;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem D</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Art Gallery</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><i style='mso-bidi-font-style:
normal'>Century Arts</i> has hundreds of art galleries scattered all around the
country and you are hired to write a program that determines whether any of the
galleries has a <i style='mso-bidi-font-style:normal'>critical point</i>. The
galleries are polygonal in shape and a <i style='mso-bidi-font-style:normal'>critical
point</i> is a point inside that polygon from where the entire gallery is not
visible. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>For example, in gallery 1 (drawn
below) point <i style='mso-bidi-font-style:normal'>A</i> is a critical point,
but gallery 2 has no critical point at all.</p>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img width=415 height=202
src="http://uva.onlinejudge.org/external/100/p10078.gif"  v:shapes="_x0000_i1025">
<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The <i style='mso-bidi-font-style:
normal'>Century Arts</i> authorities will provide you with the shape of a
gallery as a sequence of (<i style='mso-bidi-font-style:normal'>x</i>, <i
style='mso-bidi-font-style:normal'>y</i>) co-ordinates (determined using a
suitable origin) of the consecutive corner points of that gallery. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file consists of
several data blocks. Each data block describes one gallery. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The first line of a data block
contains an integer <em>N</em> (3 <span style='font-family:Symbol;mso-ascii-font-family:
"Times New Roman";mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;
mso-symbol-font-family:Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:
Symbol'>Â£</span></span> <i style='mso-bidi-font-style:normal'>N</i> <span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>Â£</span></span> 50)
indicating the number of corner points of the gallery. Each of the next <i
style='mso-bidi-font-style:normal'>N</i> lines contains two integers giving the
(<i style='mso-bidi-font-style:normal'>x</i>, <i style='mso-bidi-font-style:
normal'>y</i>) co-ordinates of a corner point where 0 <span style='font-family:
Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>Â£</span></span> <i style='mso-bidi-font-style:
normal'>x</i>, <i style='mso-bidi-font-style:normal'>y</i> <span
style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>Â£</span></span>
1000. Starting from the first point given in the input the corner points occur
in the same order on the boundary of the gallery as they appear in the input.
No three consecutive points are co-linear.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The input file terminates with a
value of 0 for <i style='mso-bidi-font-style:normal'>N</i>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each gallery in the input
output the word &quot;<i style='mso-bidi-font-style:normal'>Yes&quot;</i> if
the gallery contains a critical point, otherwise output the word &quot;<i
style='mso-bidi-font-style:normal'>No&quot;</i>. Each output must be on a
separate line.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">
4<br>

0 0<br>

3 0<br>

3 3<br>

0 3<br>

4<br>

0 0<br>

3 0<br>

1 1<br>

0 3<br>

0<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">

No<br>

Yes<br>
</font>
</div>
<font size=3 face="Times New Roman">

________________________________________
<br>Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10079||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:v = 
"urn:schemas-microsoft-com:vml" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word"><HEAD><TITLE>Problem E - Pizza Cutting</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content=Word.Document name=ProgId>
<META content="MSHTML 5.00.2920.0" name=GENERATOR>
<META content="Microsoft Word 9" name=Originator><LINK 
href="./B.%20Pizza_files/filelist.xml" rel=File-List><LINK 
href="./B.%20Pizza_files/editdata.mso" rel=Edit-Time-Data><LINK 
href="./B.%20Pizza_files/oledata.mso" rel=OLE-Object-Data><!--[if !mso]>
<STYLE>v\:* {
	BEHAVIOR: url(#default#VML)
}
o\:* {
	BEHAVIOR: url(#default#VML)
}
w\:* {
	BEHAVIOR: url(#default#VML)
}
.shape {
	BEHAVIOR: url(#default#VML)
}
</STYLE>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>10</o:Revision>
  <o:TotalTime>36</o:TotalTime>
  <o:LastPrinted>2000-10-23T05:27:00Z</o:LastPrinted>
  <o:Created>2000-10-23T05:28:00Z</o:Created>
  <o:LastSaved>2000-10-23T05:35:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>264</o:Words>
  <o:Characters>1510</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1854</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<STYLE>P.MsoNormal {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoNormal {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoNormal {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
P.MsoBodyText {
	FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoBodyText {
	FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoBodyText {
	FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
P.MsoBodyText2 {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 11pt; MARGIN: 0in 0in 0pt; TEXT-ALIGN: justify; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoBodyText2 {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 11pt; MARGIN: 0in 0in 0pt; TEXT-ALIGN: justify; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoBodyText2 {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 11pt; MARGIN: 0in 0in 0pt; TEXT-ALIGN: justify; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
EM {
	mso-bidi-font-style: normal
}
P.Preformatted {
	FONT-FAMILY: "Courier New"; FONT-SIZE: 10pt; LAYOUT-GRID-MODE: char; MARGIN: 0in 0in 0pt; mso-bidi-font-family: "Times New Roman"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt
}
LI.Preformatted {
	FONT-FAMILY: "Courier New"; FONT-SIZE: 10pt; LAYOUT-GRID-MODE: char; MARGIN: 0in 0in 0pt; mso-bidi-font-family: "Times New Roman"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt
}
DIV.Preformatted {
	FONT-FAMILY: "Courier New"; FONT-SIZE: 10pt; LAYOUT-GRID-MODE: char; MARGIN: 0in 0in 0pt; mso-bidi-font-family: "Times New Roman"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt
}
DIV.Section1 {
	page: Section1
}
</STYLE>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]--></HEAD>
<BODY lang=EN-US style="tab-interval: .5in">
<DIV class=Section1>
<P align=center class=MsoNormal style="TEXT-ALIGN: center"><B 
style="mso-bidi-font-weight: normal"><font size=5>Problem 
E</font></SPAN></B></P>
<P align=center class=MsoNormal style="TEXT-ALIGN: center"><B 
style="mso-bidi-font-weight: normal"><font size=6>Pizza 
Cutting</font></SPAN></B></P>
<p class=MsoNormal align=center style='text-align:center'><b>Input:</b></font><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>



<P class=MsoNormal style="TEXT-ALIGN: justify"><![if !supportEmptyParas]><![endif]>&nbsp;<o:p></o:p></P>
<P class=MsoBodyText style="TEXT-ALIGN: justify"><SPAN 
style="FONT-SIZE: 11pt; mso-bidi-font-size: 10.0pt">When someone calls Ivan 
lazy, he claims that it is his intelligence that helps him to be so. If his 
intelligence allows him to do something at less physical effort, why should he 
exert more? He also claims that he always uses his brain and tries to do some 
work at less effort; this is not his laziness, rather this is his intellectual 
smartness.<o:p></o:p></SPAN></P>
<P class=MsoBodyText style="TEXT-ALIGN: justify"><SPAN 
style="FONT-SIZE: 11pt; mso-bidi-font-size: 10.0pt"><SPAN 
style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
</SPAN>Once Ivan was asked to cut a pizza into seven pieces to distribute it 
among his friends. (Size of the pieces may not be the same. In fact, his piece 
will be larger than the others.) He thought a bit, and came to the conclusion 
that he can cut it into seven pieces by only three straight cuts through the 
pizza with a pizza knife. Accordingly, he cut the pizza in the following way 
(guess which one is Ivan's piece):<o:p></o:p></SPAN></P>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="http://uva.onlinejudge.org/external/100/p10079.gif"  >
<P class=MsoBodyText style="TEXT-ALIGN: justify"><SPAN 
style="FONT-SIZE: 11pt; mso-bidi-font-size: 10.0pt"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify; TEXT-INDENT: 0.5in"><SPAN 
style="FONT-SIZE: 11pt; mso-bidi-font-size: 10.0pt">One of his friends, who 
never believed in IvanÂ’s smartness, was startled at this intelligence. He 
thought, if Ivan can do it, why canÂ’t my computer? So he tried to do a similar 
(but not exactly as Ivan's, for Ivan will criticize him for stealing his idea) 
job with his computer. He wrote a program that took the number of straight cuts 
one makes through the pizza, and output a number representing the maximum number 
of pizza pieces it will produce.<o:p></o:p></SPAN></P>
<P class=MsoBodyText style="TEXT-ALIGN: justify; TEXT-INDENT: 0.5in"><SPAN 
style="FONT-SIZE: 11pt; mso-bidi-font-size: 10.0pt">Your job here is to write a 
similar program. It is ensured that IvanÂ’s friend wonÂ’t criticize you for doing 
the same job he did.<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><![if !supportEmptyParas]><![endif]>&nbsp;<o:p></o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><font size=5>Input</font></SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="FONT-SIZE: 11pt; mso-bidi-font-size: 10.0pt">The input file will contain 
a single integer N</I> (0 <= N <= 210000000)<SPAN 
style="mso-spacerun: yes">&nbsp; </SPAN>in each line representing the number of 
straight line cuts one makes through the pizza. A negative number terminates the 
input.<o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify; TEXT-INDENT: 0.5in"><![if !supportEmptyParas]><![endif]>&nbsp;<o:p></o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><font size=5>Output</font></SPAN></B></P>
<P class=MsoBodyText2>Output the maximum number of pizza pieces the given number 
of cuts can produce. Each line should contain only one output integer without 
any leading or trailing space.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><font size=5>Sample Input: 
</font></SPAN></B></P>
<font face="Courier" size=3>
5<br>
10<br>
-100<br>
</font>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="FONT-SIZE: 14pt; mso-bidi-font-weight: bold; mso-bidi-font-size: 10.0pt"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><font size=5>Sample Output:</font></SPAN></B></P>
<font face="Courier" size=3>
16<br>
56<br>
</font>
_____________________________________<br>
Rezaul Alam Chowdhury
</HTML>

______________________________________________________
10080||||||false||||||
<h2>Problem A:  Gopher II</h2>
<img src=p10080.jpg>

<p>The gopher family, having averted the canine threat, must face a new 
predator.
<p>
The are <i>n</i> gophers and <i>m</i> gopher holes, each at distinct
(x, y) coordinates.  A hawk arrives and if a gopher does not reach a
hole in <i>s</i> seconds it is vulnerable to being eaten.  A hole can
save at most one gopher.  All the gophers run at the same velocity <i>v</i>.
The gopher family needs an escape strategy that minimizes the number of 
vulnerable gophers.
<p>
The input contains several cases.
The first line of each case contains four positive integers less than 100:
<i>n</i>, <i>m</i>, <i>s</i>, and <i>v</i>.  The next <i>n</i> lines
give the coordinates of the gophers; the following <i>m</i> lines
give the coordinates of the gopher holes.  All distances are in metres;
all times are in seconds; all velocities are in metres per second.
<p>
Output consists of a single line for each case, giving the number of vulnerable 
gophers.
<h3>Sample Input</h3>
<pre>
2 2 5 10
1.0 1.0
2.0 2.0
100.0 100.0
20.0 20.0
</pre>
<h3>Output for Sample Input</h3>
<pre>
1
</pre>

______________________________________________________
10081||||||false||||||
<title> Problem: Tight words </title>
<h2>Problem B: Tight words</h2>

Given is an alphabet <em>{0, 1, ... , k}</em>, <em>0 &lt;= k &lt;= 9 </em>.
We say that a word of length <em>n</em> over this alphabet is
<em>tight</em> if any two neighbour digits in the word do not differ
by more than 1.

<p>
Input is a sequence of lines, each line contains two integer numbers
<em>k</em> and <em>n</em>, <em>1 &lt;= n &lt;= 100</em>.  For each
line of input, output the percentage of tight words of length
<em>n</em> over the alphabet <em>{0, 1, ... , k}</em> with 5 fractional digits.

<h3>Sample input</h3>
<pre>
4 1
2 5
3 5
8 7
</pre>
<h3>Output for the sample input</h3>
<pre>
100.00000
40.74074
17.38281
0.10130
</pre>

______________________________________________________
10082||||||false||||||
<h2>Problem C:  WERTYU</h2>

<img src=p10082.jpg align=center>
<p>
A common typing error is to place the hands on the keyboard one row
to the right of the correct position.  So "Q" is typed as "W" and
"J" is typed as "K" and so on.  You are to decode a message typed
in this manner.
<p>
Input consists of several lines of text.  Each line may contain digits, 
spaces, upper case letters (except Q, A, Z), or punctuation shown above
[except back-quote (`)].  Keys labelled with words [<i>Tab, BackSp, Control,</i> etc.] are
not represented in the input.
You are to replace each letter or punction symbol by the one 
immediately to its left on the QWERTY keyboard shown above.  
Spaces in the input should be echoed in the output.
<h3>Sample Input</h3>
<pre>
O S, GOMR YPFSU/
</pre>
<h3>Output for Sample Input</h3>
<PRE>
I AM FINE TODAY.
</PRE>

______________________________________________________
10083||||||false||||||
<h2>Problem D:  Division</h2>

Given t, a, b positive integers not bigger than 2147483647,
establish whether (t^a - 1)/(t^b -1) is an integer with less than
100 digits.  Each line of input contains t, a, b.  For each line of input 
print the formula followed by its value, or followed by "is not an
integer with less than 100 digits", whichever is appropriate.

<h3>Sample Input</h3>
<pre>
2 9 3
2 3 2
21 42 7
123 911 1
</pre>
<h3>Output For Sample Input </h3>
<pre>
(2^9-1)/(2^3-1) 73
(2^3-1)/(2^2-1) is not an integer with less than 100 digits.
(21^42-1)/(21^7-1) 18952884496956715554550978627384117011154680106
(123^911-1)/(123^1-1) is not an integer with less than 100 digits.
</pre>

______________________________________________________
10084||||||false||||||
<h2>Problem E:  Hotter Colder</h2>

The children's game <i>Hotter Colder</i> is played as follows.  Player
A leaves the room while player B hides an object somewhere in the room.  
Player A re-enters
at position (0,0) and then visits
various other positions about the room.  When player A visits a new position,
player B announces "Hotter" if this position is closer to the object
than the previous position; player B announces "Colder" if it is farther
and "Same" if it is the same distance.
<p>
Input consists of up to 50 lines, each containing an x,y coordinate pair
followed by
"Hotter", "Colder", or "Same".  Each pair represents a position within
the room, which may be assumed to be a square with opposite corners
at (0,0) and (10,10).  For each line of input print a line giving the total area
of the region in which the object may have been placed, to 2 decimal
places.  If there is no such region, output 0.00.

<h3>Sample Input</h3>
<pre>
10.0 10.0 Colder
10.0 0.0 Hotter
0.0 0.0 Colder
10.0 10.0 Hotter
</pre>
<h3>Output for Sample Input</h3>
<pre>
50.00
37.50
12.50
0.00
</pre>

______________________________________________________
10085||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0_files/filelist.xml">
<title>Problem A - The Most Distant State</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>13</o:Revision>
  <o:TotalTime>13</o:TotalTime>
  <o:Created>2001-01-10T16:18:00Z</o:Created>
  <o:LastSaved>2001-02-20T09:24:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>253</o:Words>
  <o:Characters>1447</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1777</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#eeeeee" lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem A</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Most Distant State</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The 8-puzzle is a square tray in
which eight square tiles are placed. The remaining ninth square is uncovered.
Each tile has a number on it. A tile that is adjacent to the blank space can be
slid into that space. A game consists of a starting state and a specified goal state.
The starting state can be transformed into the goal state by sliding (moving)
the tiles around. The 8-puzzle problem asks you to do the transformation in
minimum number of moves.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<div align=center>

<table border=1 cellspacing=0 cellpadding=0 style='border-collapse:collapse;
 mso-table-layout-alt:fixed;border:none;mso-border-alt:solid windowtext .5pt;
 mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  border-bottom:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>2<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:none;border-bottom:none;border-right:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>8<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:none;border-bottom:none;border-right:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>3<o:p></o:p></b></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  border-bottom:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>1<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:none;border-bottom:none;border-right:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>2<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:none;border-bottom:none;border-right:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>3<o:p></o:p></b></p>
  </td>
 </tr>
 <tr>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:solid windowtext 1.5pt;border-bottom:none;border-right:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>1<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:solid windowtext 1.5pt;border-bottom:none;border-right:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>6<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  border-bottom:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>4<o:p></o:p></b></p>
  </td>
  <td width=79 colspan=3 valign=top style='width:59.55pt;border:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'>=&gt;</p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:solid windowtext 1.5pt;border-bottom:none;border-right:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>8<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:solid windowtext 1.5pt;border-bottom:none;border-right:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><b
  style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  border-bottom:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>4<o:p></o:p></b></p>
  </td>
 </tr>
 <tr>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>7<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border-top:solid windowtext 1.5pt;
  border-left:none;border-bottom:solid windowtext 1.5pt;border-right:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><b
  style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>5<o:p></o:p></b></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>7<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>6<o:p></o:p></b></p>
  </td>
  <td width=23 valign=top style='width:17.0pt;border:solid windowtext 1.5pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
  normal'>5<o:p></o:p></b></p>
  </td>
 </tr>
 <tr>
  <td width=68 colspan=3 valign=top style='width:51.05pt;border:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b
  style='mso-bidi-font-weight:normal'>Start<o:p></o:p></b></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=26 valign=top style='width:19.85pt;border:none;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
  </td>
  <td width=68 colspan=3 valign=top style='width:51.05pt;border:none;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b
  style='mso-bidi-font-weight:normal'>Goal<o:p></o:p></b></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>However, our current problem is a
bit different. In this problem, given an initial state of the puzzle your are
asked to discover a goal state which is the most distant (in terms of number of
moves) of all the states reachable from the given state. </p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The first line of the input file
contains an integer representing the number of test cases to follow. A blank
line follows this line.</p>

<br>
<p class=MsoNormal style='text-align:justify'>Each test case consists of 3
lines of 3 integers each representing the initial state of the puzzle. The
blank space is represented by a 0 (zero). A blank line follows each test case. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case first output
the puzzle number. The next 3 lines will contain 3 integers each representing
one of the most distant states reachable from the given state. The next line
will contain the shortest sequence of moves that will transform the given state
to that state. The move is actually the movement of the blank space represented
by four directions : U (Up), L (Left), D (Down) and R (Right). After each test
case output an empty line.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>


<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>
1<br>

<br>

2 6 4<br>

1 3 7<br>

0 5 8<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="Courier" size=3>
Puzzle #1<br>

8 1 5<br>
7 3 6<br>
4 0 2<br>
UURDDRULLURRDLLDRRULULDDRUULDDR<br>

<br>
</font>
<font face"Times New Roman" size=3> 
___________________________________________
<br>Rezaul Alam Chowdhury
<br><br><i>&quot;A fool looks for happiness in the distance, those
who are intelligent grow it under their own feet.&quot;</i></p>

</div>

</body>

</html>

______________________________________________________
10086||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./b_files/filelist.xml">
<title>Problem B - Test the Rods</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>7</o:Revision>
  <o:TotalTime>7</o:TotalTime>
  <o:Created>2001-01-10T15:41:00Z</o:Created>
  <o:LastSaved>2001-01-12T14:04:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>325</o:Words>
  <o:Characters>1857</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2280</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:center 3.0in right 6.0in;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-even-footer:url("./b_files/header.htm") ef1;
	mso-footer:url("./b_files/header.htm") f1;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#E1D3E6">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem B</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Test the Rods</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><i style='mso-bidi-font-style:
normal'>National Construction and Project Centre</i> (<i style='mso-bidi-font-style:
normal'>NCPC</i>) and the <i style='mso-bidi-font-style:normal'>Bureau of Civil
Engineering Works</i> (<i style='mso-bidi-font-style:normal'>BCEW</i>) have
been given the authority of testing and certifying the quality of rods used in
construction works in the country. The <i style='mso-bidi-font-style:normal'>Get
and Do</i><b style='mso-bidi-font-weight:normal'> </b>construction company has
recently got a contract of construction at different sites of the country.
Before the construction can start they want to get the rods from their <i
style='mso-bidi-font-style:normal'>n</i> sites tested either at <i
style='mso-bidi-font-style:normal'>NCPC</i> or at <i style='mso-bidi-font-style:
normal'>BCEW</i>. <i style='mso-bidi-font-style:normal'>Get and Do</i> has got
the permission of testing <i style='mso-bidi-font-style:normal'>T</i><sub>1</sub>
rods at <i style='mso-bidi-font-style:normal'>NCPC</i> and <i style='mso-bidi-font-style:
normal'>T</i><sub>2</sub> at <i style='mso-bidi-font-style:normal'>BCEW</i>.
There are <i style='mso-bidi-font-style:normal'>m<sub>i</sub></i> samples at
site <i style='mso-bidi-font-style:normal'>i</i> (1 &lt;= <i style='mso-bidi-font-style:
normal'>i</i> &lt;= <i style='mso-bidi-font-style:normal'>n</i>). Sum total of
these samples over all the <i style='mso-bidi-font-style:normal'>n</i> sites is
just equal to (<i style='mso-bidi-font-style:normal'>T</i><sub>1</sub> + <i
style='mso-bidi-font-style:normal'>T</i><sub>2</sub>). The cost of testing <i
style='mso-bidi-font-style:normal'>j</i> items from site <i style='mso-bidi-font-style:
normal'>i</i> at <i style='mso-bidi-font-style:normal'>NCPC</i> is <i
style='mso-bidi-font-style:normal'>C<sub>i</sub></i><sub>,<i style='mso-bidi-font-style:
normal'>j</i>,1 </sub>and that of testing at <i style='mso-bidi-font-style:
normal'>BCEW</i> is <i style='mso-bidi-font-style:normal'>C<sub>i</sub></i><sub>,<i
style='mso-bidi-font-style:normal'>j</i>,2</sub>. Write a program to find a
minimum cost testing schedule for the <i style='mso-bidi-font-style:normal'>Get
and Do</i> company.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-bottom:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input may contain multiple
test cases. The first line of each test case contains the two nonnegative
integers <i style='mso-bidi-font-style:normal'>T</i><sub>1</sub> and <i
style='mso-bidi-font-style:normal'>T</i><sub>2 </sub>(1 &lt;= <i
style='mso-bidi-font-style:normal'>T</i><sub>1</sub> + <i style='mso-bidi-font-style:
normal'>T</i><sub>2</sub><i style='mso-bidi-font-style:normal'> &lt;=</i> 300).
The next line contains <i style='mso-bidi-font-style:normal'>n</i> (1 &lt;= <i
style='mso-bidi-font-style:normal'>n &lt;=</i> 30). Then follow 3<i
style='mso-bidi-font-style:normal'>n</i> lines. For 1 &lt;= <i
style='mso-bidi-font-style:normal'>i &lt;=</i> <i style='mso-bidi-font-style:
normal'>n</i>, line (3<i style='mso-bidi-font-style:normal'>i</i> - 2) contains
the value of <i style='mso-bidi-font-style:normal'>m<sub>i</sub></i> (1 &lt;= <i
style='mso-bidi-font-style:normal'>m<sub>i</sub> </i>&lt;= 20), line (3<i
style='mso-bidi-font-style:normal'>i</i> - 1) contains <i style='mso-bidi-font-style:
normal'>m<sub>i</sub></i> nonnegative integers <i style='mso-bidi-font-style:
normal'>C<sub>i</sub></i><sub>,<i style='mso-bidi-font-style:normal'>j</i>,1 </sub>(1
&lt;= <i style='mso-bidi-font-style:normal'>j </i>&lt;= <i style='mso-bidi-font-style:
normal'>m<sub>i</sub></i>) and line 3<i style='mso-bidi-font-style:normal'>i</i>
contains <i style='mso-bidi-font-style:normal'>m<sub>i</sub></i> nonnegative
integers <i style='mso-bidi-font-style:normal'>C<sub>i</sub></i><sub>,<i
style='mso-bidi-font-style:normal'>j</i>,2 </sub>(1 &lt;= <i style='mso-bidi-font-style:
normal'>j </i>&lt;= <i style='mso-bidi-font-style:normal'>m<sub>i</sub></i>).
You may assume that 0 &lt;= <i style='mso-bidi-font-style:normal'>C<sub>i</sub></i><sub>,<i
style='mso-bidi-font-style:normal'>j</i>,1</sub>, <i style='mso-bidi-font-style:
normal'>C<sub>i</sub></i><sub>,<i style='mso-bidi-font-style:normal'>j</i>,2</sub><i
style='mso-bidi-font-style:normal'> </i>&lt;= 1000.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing two zeros
for <i style='mso-bidi-font-style:normal'>T</i><sub>1</sub> and <i
style='mso-bidi-font-style:normal'>T</i><sub>2</sub> terminates the input, and
this case must not be processed.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-bottom:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print two lines. The first line contains an integer giving the minimum cost for
testing all the samples at <i style='mso-bidi-font-style:normal'>NCPC</i> and <i
style='mso-bidi-font-style:normal'>BCEW</i>. The next line contains <i
style='mso-bidi-font-style:normal'>n</i> integers with two consecutive integers
separated by a single space. The <i style='mso-bidi-font-style:normal'>i</i>-th
integer gives the numbers of samples from site <i style='mso-bidi-font-style:
normal'>i</i> that are tested at <i style='mso-bidi-font-style:normal'>NCPC</i>
(it is implicit that the rest are tested at <i style='mso-bidi-font-style:normal'>BCEW</i>).
Note that the second output line is not unique, and hence any optimal testing
schedule is acceptable. Print a blank line after the outputs of each test
case.<b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-bottom:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>

10 12<br>

5<br>

5<br>

10 30 70 150 310<br>

10 20 40 60 180<br>

7<br>

30 60 90 120 160 200 240<br>

20 60 100 130 160 200 240<br>

4<br>

40 60 80 100<br>

30 70 100 120<br>

3<br>

60 120 180<br>

20 50 90<br>

3<br>

30 70 100<br>

30 70 100<br>

0 0<br>

<br>
</font>
<p class=MsoNormal style='margin-bottom:6.0pt;text-align:justify'><b
style='mso-bidi-font-weight:normal'><font size=5>Sample Output</font></span></b></p>
<font face="Courier" size=3>
580<br>

1 3 4 0 2<br>

</font>
</div>
<font face="Times New Roman" size=3>
<br>_________________________________________
<br>Rezaul Alam Chowdhury
<br><br>
<i>"Two things are infinite. One is the universe, the other is human stupidity and I am not sure about the former."</i>
</body>

</html>

______________________________________________________
10087||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p2_files/filelist.xml">
<link rel=Edit-Time-Data href="./p2_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - The Tajmahal of ++Y2k</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>38</o:Revision>
  <o:TotalTime>363</o:TotalTime>
  <o:Created>2001-01-19T07:52:00Z</o:Created>
  <o:LastSaved>2001-02-01T17:38:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>480</o:Words>
  <o:Characters>2739</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>22</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3363</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:FormsDesign/>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:691028323;
	mso-list-type:hybrid;
	mso-list-template-ids:1524771872 -1567168836 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-text:"%1\)";
	mso-level-tab-stop:60.0pt;
	mso-level-number-position:left;
	margin-left:60.0pt;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in' bgcolor="#D2F3D2">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem C</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Tajmahal of ++Y2k</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify;tab-stops:317.25pt'><span
style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span></p>

<p class=MsoNormal style='text-align:justify'>One of the three members of <b>the</b>
<b>World Finals Team</b> of <b>BUET</b> is in deep trouble. But the pity is
that he is the starter of his own problem. The team went to <b>Kanpur</b> to
qualify for the <b>World Finals</b>. After the contest they went to visit <b>Tajmahal</b>,
took many pictures of this great wonder and then returned to <b>Bangladesh</b>.
The trouble started afterwards. After coming home the member showed these
pictures to many people. Seeing these pictures <b>Someone Special</b> has requested
him to build a <b>Tajmahal</b>. This <b>Tajmahal</b> will of course be
different than the original one and have some interesting <b>mathematical</b>
properties. The properties of this <b>Tajmahal of ++Y2k</b> are as follows:</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun: yes">Â 
</span></p>

<p class=MsoNormal style='margin-left:60.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>Its
floor will be square shaped.</p>

<p class=MsoNormal style='margin-left:60.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]>2)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>The
square shaped floor is made of square shaped (of unit length) tiles.</p>

<p class=MsoNormal style='margin-left:60.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]>3)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>If
someone enters Tajmahal, he or she is allowed to walk only horizontally or only
vertically or only diagonally. That is if he starts walking horizontally he
will have to walk the entire Tajmahal in that direction and so on.</p>

<p class=MsoNormal style='margin-left:60.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]>4)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>Everyone
is allowed to cover exactly n tiles. (Where n is the length of the sides of
Tajmahal)</p>

<p class=MsoNormal style='margin-left:60.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]>5)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>Every
tile will have a unique number on it. While a man is walking through Tajmahal in an allowed path,
the sum of all tiles he crosses will be same as any other man crossing that
Tajmahal in an allowed Path. This sum will be given as input</p>

<p class=MsoNormal style='margin-left:60.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]>6)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>The
different numbers will have values in range of (n*n-1)</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Though he is a very good
programmer he cannot be confident about his solution. So he is asking for your
help.</p>

<p class=MsoNormal style='text-align:justify'>If such a Tajmahal is not
possible you will have to print the line Â“You canÂ’t be like Shahjahan!Â”.
Otherwise print the description of Tajmahal. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<table border=0 cellpadding=0 width="100%" style='width:100.0%;mso-cellspacing:
 1.5pt;mso-padding-alt:0in 0in 0in 0in'>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><img
  width=260 height=220 id="_x0000_i1025" src="http://uva.onlinejudge.org/external/100/p10087a.jpg" ><br>
  &nbsp;&nbsp;Figure 1: A 4x4 floor of Tajmahal of ++Y2k<o:p></o:p></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><img
  width=290 height=225 id="_x0000_i1026" src="http://uva.onlinejudge.org/external/100/p10087a.jpg" ><br>
  &nbsp;&nbsp;Figure 2: The Tajmahal of Shahjahan.<o:p></o:p></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-bottom:12.0pt'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>If someone is interested to know
more about Tajmahal (though not required for this problem) he or she can visit
the following link:</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><a
href="http://rubens.anu.edu.au/student.projects/tajmahal/hist_sign.html">http://rubens.anu.edu.au/student.projects/tajmahal/hist_sign.html</a>
</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>Input will contain several lines of input. Each line will contain two
integers </span><b style='mso-bidi-font-weight:normal'>L (0&lt;L&lt;=100)</b><span
style='mso-bidi-font-weight:bold'> which is the length or width of </span><b
style='mso-bidi-font-weight:normal'>Tajmahal</b><span style='mso-bidi-font-weight:
bold'> and </span><b style='mso-bidi-font-weight:normal'>S(S&lt;200000000)</b><span
style='mso-bidi-font-weight:bold'> which is the sum of the numbers of any valid
walking path.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>As output you will have to print
a valid layout of such a Tajmahal which will of course be a square full of
numbers. If such a Tajmahal is not possible print the line <b>Â“</b><b><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>You
can't be like Shahjahan!Â”</span></b><span style='font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'> </span>as shown in the sample output.
A blank line should follow each set of output. The numbers in the output should
be printed right justified in field of width 10. There can be multiple solutions.
Any good solution will be accepted.
<span style="mso-spacerun:
yes">Â Â Â  </span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>
4 34<br>

3 24<br>

3 10<br>

<br>
</font<>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="courier">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9
<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5
<br>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16

<br><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;8 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5

<br><br>

You can't be like Shahjahan!<br></span></p>

</div>
</font>
</div>
<font face="Times New Roman" size=3>
___________________________________________<br>
Shahriar Manzoor
<br><br>
<i>"The world might be divided into two camps those that have seen the Tajmahal, and those that havenÂ’t." 
</i>
</body>

</html>

______________________________________________________
10088||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<link rel=Edit-Time-Data href="./p3_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem D - Trees on My Island</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>6</o:TotalTime>
  <o:Created>2001-02-20T07:08:00Z</o:Created>
  <o:LastSaved>2001-02-20T07:14:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>222</o:Words>
  <o:Characters>1268</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1557</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#DCEEC9">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem D</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Trees on My
Island</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>I have bought an island where I
want to plant trees in rows and columns. So, the trees will form a rectangular
grid and each of them can be thought of having integer coordinates by taking a
suitable grid point as the origin.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
<p class=MsoNormal align=center style='text-align:center'><table><tr>  <image src="http://uva.onlinejudge.org/external/100/p10088.jpg" ></tr><tr><font size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Figure: A sample of my island</tr></font>
</table>
</font></b></p>

<br>
<br style='mso-ignore:vglayout' clear=ALL>

<p class=MsoNormal style='text-align:justify'>But, the problem is that the island
itself is not rectangular. So, I have identified a simple polygonal area inside
the island with vertices on the grid points and have decided to plant trees on
grid points lying strictly inside the polygon. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Now, I seek your help for
calculating the number of trees that can be planted on my island.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file may contain
multiple test cases. Each test case begins with a line containing an integer <i
style='mso-bidi-font-style:normal'>N</i> (3 &lt;= <i style='mso-bidi-font-style:
normal'>N</i> &lt;= 1,000) identifying the number of vertices of the polygon. The
next <i style='mso-bidi-font-style:normal'>N</i> lines contain the vertices of
the polygon either in clockwise or in anti-clockwise direction. Each of these <i
style='mso-bidi-font-style:normal'>N</i> lines contains two integers identifying
the <i style='mso-bidi-font-style:normal'>x</i> and <i style='mso-bidi-font-style:
normal'>y</i>-coordinates of a vertex. <span style="mso-spacerun: yes">Â </span>You
may assume that none of the coordinates will be larger than 1,000,000 in
absolute values. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing a zero for
<i style='mso-bidi-font-style:normal'>N</i> in the first line terminates the
input.</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing the number of trees that can be planted inside the
polygon.<b style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="courier" size=3>
12<br>

3 1<br>

6 3<br>

9 2<br>

8 4<br>

9 6<br>

9 9<br>

8 9<br>

6 5<br>

5 8<br>

4 4<br>

3 5<br>

1 3<br>

12<br>

1000 1000<br>

2000 1000<br>

4000 2000<br>

6000 1000<br>

8000 3000<br>

8000 8000<br>

7000 8000<br>

5000 4000<br>

4000 5000<br>

3000 4000<br>

3000 5000<br>

1000 3000<br>

0<br>
</font>
<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="courier" size=3>

21<br>

25990001<br>
</font>
</div>
___________________________________________
<font face="Times New ROman" size=3>
Rezaul Alam Chowdhury
<br><br><br><i>
What we see is often what we look for.</i>
</body>

</html>

______________________________________________________
10089||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p4_files/filelist.xml">
<title>Problem E - Repackaging</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>12</o:Revision>
  <o:TotalTime>121</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-19T07:30:00Z</o:Created>
  <o:LastSaved>2001-02-20T16:00:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>376</o:Words>
  <o:Characters>2148</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2637</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#fbebc8" lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem E</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Repackaging</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<br>

<p class=MsoNormal style='text-align:justify'>Coffee cups of three different
sizes (identified as size 1, size 2 and size 3 cups) are produced in factories
under <i style='mso-bidi-font-style:normal'>ACM </i>(Association of Cup Makers)
and are sold in various packages. Each type of package is identified by three
positive integers (<i style='mso-bidi-font-style:normal'>S</i><sub>1</sub>, <i
style='mso-bidi-font-style:normal'>S</i><sub>2</sub>, <i style='mso-bidi-font-style:
normal'>S</i><sub>3</sub>) where <i style='mso-bidi-font-style:normal'>S<sub>i</sub></i>
(1 &lt;= <i style='mso-bidi-font-style:normal'>i</i> &lt;= 3) denotes the
number of size <i style='mso-bidi-font-style:normal'>i</i> cups included in the
package. There is no package with <i style='mso-bidi-font-style:normal'>S</i><sub>1
</sub><span style='font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>=</span></span>
<i style='mso-bidi-font-style:normal'>S</i><sub>2 </sub><span style='font-family:
Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>=</span></span> <i style='mso-bidi-font-style:
normal'>S</i><sub>3</sub>.</p>

<br>
<p class=MsoNormal style='text-align:justify'>But recently it has been
discovered that there is a great demand for packages containing equal number
cups of all three sizes. So, as an emergency step to meet the demand <i
style='mso-bidi-font-style:normal'>ACM </i>has decided to unpack the cups from
some of the packages stored in its (unlimited) stock of unsold products and
repack them in packages having equal number of cups of all three sizes. For
example, suppose <i style='mso-bidi-font-style:normal'>ACM</i> has the
following four types of packages in its stock: (1, 2, 3), (1, 11, 5), (9, 4, 3)
and (2, 3, 2). So, one can unpack three (1, 2, 3) packages, one (9, 4, 3)
package and two (2, 3, 2) packages and repack the cups to produce sixteen (1,
1, 1) packages. One can even produce eight (2, 2, 2) packages or four (4, 4, 4)
packages or two (8, 8, 8) packages or one (16, 16, 16) package or even
different combination of packages each containing equal number of size 1, size
2 and size 3 cups. Note that all the unpacked cups are used to produce the new
packages, i.e., no unpacked cup is wasted.</p>

<br>
<p class=MsoNormal style='text-align:justify'><i style='mso-bidi-font-style:
normal'>ACM</i> has hired you to write a program that will decide whether it is
possible to produce packages containing equal number of all three types of cups
using all the cups that can be found by unpacking any combination of existing
packages in the stock.</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input may contain multiple
test cases. Each test case begins with a line containing an integer <i
style='mso-bidi-font-style:normal'>N</i> (3 &lt;= <i style='mso-bidi-font-style:
normal'>N</i> &lt;= 1000) indicating the number of different types of packages
that can be found in the stock. Each of the next <i style='mso-bidi-font-style:
normal'>N</i> lines contains three positive integers denoting respectively the
number of size 1, size 2 and size 3 cups in a package. No two packages in a
test case will have the same specification.</p>

<p class=MsoNormal style='text-align:justify'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span></p>

<p class=MsoNormal style='text-align:justify'>A test case containing a zero for
<i style='mso-bidi-font-style:normal'>N</i> in the first line terminates the
input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing &quot;Yes&quot; if packages can be produced as desired,
print &quot;No&quot; otherwise. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>
4<br>

1 2 3<br>

1 11 5<br>

9 4 3<br>

2 3 2<br>

4<br>

1 3 3<br>

1 11 5<br>

9 4 3<br>

2 3 2<br>
0<br>
<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="Courier" size=3>

Yes<br>

No<br>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>________________________________________________<br>
Rezaul Alam Chowdhury <br>
<br>
<i>&quot;A society whose demand is very slight, you should dislike what you
like and love what you abhor.&quot; <o:p></o:p></i></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10090||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p5_files/filelist.xml">
<title>Problem F - Marbles</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>16</o:Revision>
  <o:TotalTime>35</o:TotalTime>
  <o:Created>2001-02-20T10:26:00Z</o:Created>
  <o:LastSaved>2001-02-20T11:02:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>195</o:Words>
  <o:Characters>1115</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1369</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#E0DDFF">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem F</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Marbles</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b>standard input<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>I have some (say, <i
style='mso-bidi-font-style:normal'>n</i>) marbles (small glass balls) and I am going
to buy some boxes to store them. The boxes are of two types: </p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:4.0pt;
mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:.5in'><i
style='mso-bidi-font-style:normal'>Type</i> 1: each box costs <i
style='mso-bidi-font-style:normal'>c</i><sub>1</sub> Taka and can hold exactly <i
style='mso-bidi-font-style:normal'>n</i><sub>1</sub> marbles</p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:.5in'><i
style='mso-bidi-font-style:normal'>Type</i> 2: each box costs <i
style='mso-bidi-font-style:normal'>c</i><sub>2</sub> Taka and can hold exactly <i
style='mso-bidi-font-style:normal'>n</i><sub>2</sub> marbles </p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:4.0pt;
mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>I want each of the used boxes to
be filled to its capacity and also to minimize the total cost of buying them.
Since I find it difficult for me to figure out how to distribute my marbles
among the boxes, I seek your help. I want your program to be efficient also.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file may contain
multiple test cases. Each test case begins with a line containing the integer n 
(1 <= n <= 2,000,000,000). The second line contains <i style='mso-bidi-font-style:normal'>c</i><sub>1</sub>
and <i style='mso-bidi-font-style:normal'>n</i><sub>1</sub>, and the third line
contains <i style='mso-bidi-font-style:normal'>c</i><sub>2</sub> and <i
style='mso-bidi-font-style:normal'>n</i><sub>2</sub>. Here, <i
style='mso-bidi-font-style:normal'>c</i><sub>1</sub>, <i style='mso-bidi-font-style:
normal'>c</i><sub>2</sub>, <i style='mso-bidi-font-style:normal'>n</i><sub>1</sub>
and <i style='mso-bidi-font-style:normal'>n</i><sub>2 </sub>are all positive
integers having values smaller than 2,000,000,000. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing a zero for
<i style='mso-bidi-font-style:normal'>n</i> in the first line terminates the
input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing the minimum cost solution (two nonnegative integers <i
style='mso-bidi-font-style:normal'>m</i><sub>1</sub> and <i style='mso-bidi-font-style:
normal'>m</i><sub>2</sub>, where <i style='mso-bidi-font-style:normal'>m<sub>i</sub></i><sub>
</sub>= number of <i style='mso-bidi-font-style:normal'>Type i</i> boxes
required) if one exists, print &quot;failed&quot; otherwise. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>If a solution exists, you may
assume that it is unique.<b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>
43<br>

1 3<br>

2 4<br>

40<br>

5 9<br>

5 12<br>

0<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:
"Courier New";mso-bidi-font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="Courier" size=3>

13 1<br>

failed<br>
</font>
<p class=MsoNormal style='tab-stops:204.75pt'><span style='font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>______________________<o:p></o:p></span></p>

<font size=3 face="Times New Roman">Rezaul Alam Chowdhury</font>
<br>

<br>
<p class=MsoBodyText>Â“The easiest way to count cows in a grazing field is to
count how many hooves are there and then divide it by four!Â”</p>

</div>

</body>

</html>

______________________________________________________
10091||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p6_files/filelist.xml">
<link rel=Edit-Time-Data href="./p6_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem G - The Valentine's Day</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>90</o:Revision>
  <o:TotalTime>723</o:TotalTime>
  <o:LastPrinted>2001-02-19T23:09:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-02-21T05:17:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>644</o:Words>
  <o:Characters>3672</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>30</o:Lines>
  <o:Paragraphs>7</o:Paragraphs>
  <o:CharactersWithSpaces>4509</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
em
	{mso-bidi-font-style:normal;}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:windowtext;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#ffeaf9" lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><font size=5>Problem G</font></b>
<b style='mso-bidi-font-weight:normal'><br>
</b><b style='mso-bidi-font-weight:normal'><font size=6>The
Valentine's Day</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b><span style='mso-bidi-font-weight:bold'> Standard Input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b><span style='mso-bidi-font-weight:bold'>Standard Output<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>As you all know that Valentine's Day is celebrated on
14<sup>th</sup> February each year. But sadly, this year in Bangladesh there
was Hartal (A sort of strike when motor vehicles sleep idle and people are
reluctant to go outside) on 14<sup>th</sup> February so people could not
celebrate it. Generally, the sale of flowers increases by ten times on this day
but this year the sale was almost unchanged and the flower shop owners were in
great pain. One of them said in frustration Â“I wish my flowers were all
vegetables so that I could eat them.Â” but as you all know this was not to be.
However, our problem is not related with this incident. Before stating the real
problem we should look at the following history of Valentine's Day:<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><i><span style='mso-bidi-font-size:
24.0pt'>V</span>alentine's Day started in the time of the Roman Empire. Under
the rule of Emperor Claudius II, Rome was involved in many bloody and unpopular
military campaigns. Claudius the Cruel, as he was known at the time, was having
a difficult time getting soldiers to join his military leagues. He believed
that the reason was that roman men did not want to leave their loves or
families. As a result, Claudius cancelled all marriages and engagements in
Rome. </i><i><span style='mso-bidi-font-size:12.0pt'><o:p></o:p></span></i></p>

<p style='text-align:justify'><i>&nbsp;This was when a Christian priest named
Valentine came to defend love in the empire. Valentine began to secretly marry
couples despite the emperor's orders. When Emperor Claudius was informed of
these ceremonies Valentine was sent to prison where he remained until his death
on February 14 in 270 AD. <o:p></o:p></i></p>

<p style='text-align:justify'><i>It wasnÂ’t until a few hundred years later when
Valentine's Day began to develop, as we know it. At the time, Christianity was
beginning to take control of Europe. As part of this effort the Church sought
to do away with pagan holidays. Valentine's Day came to replace a mid-February
fertility festival called Lupercalia. In honor of his sacrifice for love
Valentine was made a saint and Lupercalia renamed in his honor. To be specific
we should assume in this problem that the celebration of Valentine's Day started
in 470 AD. <o:p></o:p></i></p>

<p style='text-align:justify'>Our problem is on a newly married couple <i>Marsha</i> and <i>Bill</i>.
Both of them are service holders and the property of their job is that in every
new month they are transferred to a new city, which is adjacent to the previous
one or remains in the old city. The probability of being transferred to any one
of the adjacent cities or not being transferred is equal. That is if a city C
has four neighboring cities D, E, F, G then his probability of being
transferred to city D the next month is 1/5 = 0.20. The same probability is for
being transferred to E, F and G or remaining in C. You will have to find out
the probability of their being in the same city in the next available (yet to
come) Valentine's Day celebration. In a city with no neighbors (no adjacent
city) no transfer occurs.</p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'><img width=350 height=263 id="_x0000_i1030"
src="http://uva.onlinejudge.org/external/100/p10091.jpg" ></span></b><b style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal><b><span style='font-size:18.0pt'><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </span></span></b><b><span style='mso-bidi-font-size:
18.0pt'>Fig: A Map of Eight Cities</span></b><b><span style='font-size:18.0pt'><span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><b><font size=5>Input</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'> <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>The input will contain an integer N that indicates the
number of sets of input. Next there will be N sets of input.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>Each set begins with three integers Y (460&lt;=Y&lt;=10000)
that is the initial year and M (1&lt;=M&lt;=12), which is the initial month.
And D (1&lt;=D&lt;=31) and no invalid dates. Next there will be one integers R
(R&lt;=20) followed by R lines each containing two city names <i>city1 </i>and <i>city2</i>, which indicates that <i>city1 </i>and <i>city2</i> are adjacent. If <i>city1 </i>and <i>city2</i> are
equal ignore the input as we have said before that after the end of a month the
person may remain in his current city. There may be redundant inputs (the same
pair of info twice), ignore them also. Some city names may be absent in these R
lines of information but those cities are without neighbors. After these
relations there will be two city names <i>city1 </i>and <i>city2</i>, which are
the initial position of <i>Marsha</i> and <i>Bill</i>. City names will always be an uppercase
character (<tt>A...Z</tt>) <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b><font size=5>Output</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

<p class=MsoBodyText2>For each set of input output in a single line the
probability of their being in the same city (as stated before) on the next Valentine's
Day. Output floats will have five digits after the decimal point. </p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></b></p>
<font size=3 face="Courier">
1<br>

1990 3 1<br>

12<br>

J I<br>

J H<br>

J F<br>

H I<br>

H G<br>

I D<br>

D G<br>

G C<br>

G F<br>

C F<br>

C E<br>

C D<br>

J C<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>0.13076<o:p></o:p></span></p>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>________________________________<br>
<font face="Times New Roman" size=3>
Shahriar Manzoor<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><br>
<i>&quot;We more frequently fail to face the right problem than fail to solve
the problem we face.&quot; </i><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10092||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p7_files/filelist.xml">
<title>Problem H - The Problem with the Problem Setter</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>105</o:Revision>
  <o:TotalTime>752</o:TotalTime>
  <o:LastPrinted>2001-02-19T23:09:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-02-21T17:41:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>460</o:Words>
  <o:Characters>2624</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3222</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
em
	{mso-bidi-font-style:normal;}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:windowtext;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#ffffff" lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><font size=5>Problem H</font></b><b style='mso-bidi-font-weight:
normal'><br>
</b><b style='mso-bidi-font-weight:normal'><font size=6>The Problem
with the Problem Setter</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b><span style='mso-bidi-font-weight:bold'> Standard Input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b><span style='mso-bidi-font-weight:bold'>Standard Output<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>The number of students interested
to participate in this year's <i style='mso-bidi-font-style:normal'>Intra-BUET
Programming Contest</i> is huge. Since it is very difficult to accommodate such
a large number of students in our labs, we have decided to arrange a <i
style='mso-bidi-font-style:normal'>Screening Test</i>. The test will be
paper-based and may include as many as 100 analytical problems from as many as
20 categories. I have been assigned the job of setting problems for this test. </p>

<br>
<p class=MsoNormal style='text-align:justify'>At first, the job seemed to be
very easy since I was told that I would be provided with a pool of about 1000
analytical problems already divided into appropriate categories. But after
getting the problems I discovered that for many problems the original authors were
not sure about the appropriate categories and so they wrote down multiple
category-names in the category fields. Since in the <i style='mso-bidi-font-style:
normal'>Screening Test</i> a problem cannot be placed under more than one
category and the number of problems to be set under each category is fixed,
setting problems for this test is not actually easy. </p>

<br>
<p class=MsoBodyText><span style='mso-bidi-font-weight:normal'>I know that a
program can be written that can do the job automatically. But since I don't
like writing programs, I seek your help. <o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file may contain
multiple test cases. Each test case begins with a line containing two integers:
<i style='mso-bidi-font-style:normal'>n<sub>k</sub></i> and <i
style='mso-bidi-font-style:normal'>n<sub>p</sub></i> (2 &lt;= <i
style='mso-bidi-font-style:normal'>n<sub>k</sub></i> &lt;= 20, <i
style='mso-bidi-font-style:normal'>n<sub>k</sub></i> &lt;= <i style='mso-bidi-font-style:
normal'>n<sub>p</sub></i> &lt;= 1000) where <i style='mso-bidi-font-style:normal'>n<sub>k</sub></i>
is the number of categories and <i style='mso-bidi-font-style:normal'>n<sub>p</sub></i>
is the number of problems in the pool. The second line contains <i
style='mso-bidi-font-style:normal'>n<sub>k</sub></i> positive integers where
the <i style='mso-bidi-font-style:normal'>i</i>-th integer specifies the number
of problems to be included in category <i style='mso-bidi-font-style:normal'>i</i>
(1 &lt;= <i style='mso-bidi-font-style:normal'>i</i> &lt;=<i style='mso-bidi-font-style:
normal'> n<sub>k</sub></i>) of the test. You may assume that the sum of these <i
style='mso-bidi-font-style:normal'>n<sub>k</sub></i> integers will never exceed
100. The <i style='mso-bidi-font-style:normal'>j</i>-th (1 &lt;= <i
style='mso-bidi-font-style:normal'>j</i> &lt;=<i style='mso-bidi-font-style:
normal'> n<sub>p</sub></i>) of the next <i style='mso-bidi-font-style:normal'>n<sub>p</sub></i>
lines contains the category information of the <i style='mso-bidi-font-style:
normal'>j</i>-th problem in the pool. A category specification for a problem
start with a positive integer not greater than <i style='mso-bidi-font-style:
normal'>n<sub>k</sub></i>, specifying the number of categories in one of which
this problem can be included, followed by the category numbers. Category
numbers are positive integers not greater than <i style='mso-bidi-font-style:
normal'>n<sub>k</sub></i>. </p>

<p class=MsoNormal style='text-align:justify'><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â  </span></p>

<p class=MsoNormal style='text-align:justify'>A test case containing two zeros
for <i style='mso-bidi-font-style:normal'>n<sub>k</sub></i> and <i
style='mso-bidi-font-style:normal'>n<sub>p</sub></i> terminates the input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing either 1 or 0 depending on whether or not problems can
be successfully selected form the pool under the given restrictions (1 for
success and 0 for failure). In case of successful selection print <i
style='mso-bidi-font-style:normal'>n<sub>k</sub></i> additional lines where the
<i style='mso-bidi-font-style:normal'>i</i>-th (1 &lt;= <i style='mso-bidi-font-style:
normal'>i</i> &lt;= <i style='mso-bidi-font-style:normal'>n<sub>k</sub></i>) of
these lines contains the problem numbers that can be included in category <i
style='mso-bidi-font-style:normal'>i</i>. Problem numbers are positive integers
not greater then <i style='mso-bidi-font-style:normal'>n<sub>p</sub></i> and two
problem numbers must be separated by a single space character. Note that, in
case of successful selection any valid selection will be accepted.<b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font face="Courier" size=3>


3 15<br>

3 3 4<br>


2 1 2<br>


1 3<br>


1 3<br>


1 3<br>


1 3<br>


3 1 2 3<br>


2 2 3<br>


2 1 3<br>


1 2<br>


1 2<br>


2 1 2<br>


2 1 3<br>


2 1 2<br>


1 1<br>


3 1 2 3<br>


3 15<br>


7 3 4<br>


2 1 2<br>


1 1<br>


1 2<br>


1 2<br>


1 3<br>


3 1 2 3<br>


2 2 3<br>


2 2 3<br>


1 2<br>


1 2<br>


2 2 3<br>


2 2 3<br>


2 1 2<br>


1 1<br>


3 1 2 3<br>

0 0<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="Courier" size=3>
1<o:p><br>

8 11 12<br>

1 6 7<br>

2 3 4 5<br>

0<br>
</font>
<font face="Times New Roman" size=3>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>_____________________________________<br>
Rezaul Alam Chowdhury<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><br>
<i>&quot;However, if we do discover a complete theory, it should in time be
understandable in broad principle by everyone, not just a few scientists. Then
we shall all, philosophers, scientists, and just ordinary people, will be able
to take part in the discussion of the question of why it is that we and the universe
exists. If we find the answer to that, it would be ultimate triumph of human
reason Â– for then we would know
 &quot; </i><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10093||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p9_files/filelist.xml">
<title>Problem I - An Easy Problem!</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>24</o:Revision>
  <o:TotalTime>475</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-02-12T12:48:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>252</o:Words>
  <o:Characters>1438</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>11</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1765</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#E6E7FC">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><b><font size=5>Problem I</font></b>
<br>
<b style='mso-bidi-font-weight:
normal'><font size=6>An Easy Problem!</font></b></p>
</b>
<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b><span style='mso-bidi-font-weight:bold'> Standard Input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b><span style='mso-bidi-font-weight:bold'>Standard Output<o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'>Have you heard the fact Â“The base
of every normal number system is 10Â” ? Of course, I am not talking about number
systems like Stern Brockot Number System. This problem has nothing to do with
this fact but may have some similarity. <span style="mso-spacerun:
yes">Â </span></p>

<br>
<p class=MsoNormal style='text-align:justify'>You will be given an N based
integer number R and you are given the guaranty that R is divisible by (N-1). You
will have to print the smallest possible value for N. The range for N is
2&lt;=N&lt;=62 and the digit symbols for 62 based number is (0..9 and A..Z and a..z).
Similarly, the digit symbols for 61 based number system is (0..9 and A..Z and a..y)
and so on. <span style="mso-spacerun: yes">Â </span></p>

<br>
<font size=5><b>Input</b></font></b>

<p class=MsoBodyText>Each line in the input file will contain an integer (as defined in mathematics) number of any integer base (2..62).
You will have to determine what is the smallest possible base of that number
for the given conditions. No invalid number will be given as input.</p>

<br>
<b><font size=5>Output</font></b><br>

<p class=MsoBodyText>If number with such condition is not possible output the
line Â“such number is impossible!Â” For each line of input there will be only a
single line of output. The output will always be in decimal number system.</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
3<br>

5<br>

A<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
4<br>

6<br>

11<br>
</font>
<font face="Times New Roman" size=3>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>_______________________________<br>
Shahriar Manzoor<o:p></o:p></span></p>

</div>
<br><br>
<i>"A machine can do the work of fifty ordinary men, but no machine can do the work of one extra-ordinary man."
</i>
</body>

</html>

______________________________________________________
10094||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p9_files/filelist.xml">
<link rel=Edit-Time-Data href="./p9_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem J - Place the Guards</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>64</o:Revision>
  <o:TotalTime>678</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-02-19T04:47:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>447</o:Words>
  <o:Characters>2553</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3135</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:18.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#e1dfbf" lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><font size=5>Problem J</font></b>
<b style='mso-bidi-font-weight:normal'> <br>
</b><b style='mso-bidi-font-weight:normal'><font size=6>Place the Guards</font><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b><span style='mso-bidi-font-weight:bold'> Standard Input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b><span style='mso-bidi-font-weight:bold'>Standard Output<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText2>The king of Amazing Land has a secret place where he keeps
his treasure. No one knows what is the size of that place. Some say that it is <b>(4
* 4)</b> and some others say that it is <b>(1000 * 1000)</b>. The rooms in this
secret place are also square shaped and of unit length and width.<span
style="mso-spacerun: yes">Â  </span>So a <b>(4 * 4)</b> place has <b>16</b>
rooms as shown in the pictures below. So a <b>(n * n)</b> place has <b>n^2</b>
or <b>(n * n)</b> rooms. <b>n</b> guards are used to look after the <b>(n * n)</b>
sized secret place. In the picture below each second largest square denotes a
room. The gray square inside each room indicates free space where the guards
stand. The outgoing tunnels (dark gray in color) from the free space denote the
tunnels to go into and out of the rooms. As you can see that the tunnels are
designed in such a way that only the guards on the same row, same column and
same diagonal can see each other. If we use (row, column) denoting scheme we
can say that in figure 1 guard <b>(2, 1)</b> can see guard <b>(3, 2)</b> and
guard <b>(3,2)</b> can see guard <b>(4, 3)</b>. Although guard <b>(2,1)</b> and
guard <b>(4, 3)</b> are in the same diagonal they cannot see each other as
guard <b>(3, 2)</b> stands between them. For obvious reasons guard <b>(2, 1)</b>
can see guard <b>(2, 4)</b> but guard <b>(3, 2)</b> cannot see guard <b>(2, 4)</b>.
The King always places his guards in such a way that no guard can see any other
guard. In the empty rooms (where there is no guard) he keeps his treasure. The
King arranges his guards in this way because he thinks when a guard sees
another guard they start gossiping and thus lose concentration. You are to help
the King to place his guards.</p>

<p class=MsoBodyText2><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<table border=0 cellpadding=0 width=700 style='width:525.0pt;mso-cellspacing:
 1.5pt;mso-padding-alt:0in 0in 0in 0in'>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal align=center><span style='mso-bidi-font-size:12.0pt;color:windowtext'><img
  width=250 height=250 id="_x0000_i1025" src="http://uva.onlinejudge.org/external/100/p10094a.jpg" ><o:p></o:p></span></p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal align=center><span style='mso-bidi-font-size:12.0pt;color:windowtext'><img
  width=250 height=250 id="_x0000_i1026" src="http://uva.onlinejudge.org/external/100/p10094a.jpg" ><o:p></o:p></span></p>
  </td>
 </tr>
</table>

</br>

<p class=MsoNormal align=center><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â Â Â  </span>Fig 1:<span style="mso-spacerun: yes">Â 
</span>Invalid Guard Layout<span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>Fig 2: Valid Guard
Layout<span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></span></p>

<h1><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></h1>

<b><font size=5>Input</font></b>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>Input
File will contain an integer in each line, which indicates the value of n (The
length or width of one side of the secret place). Remember that (1&lt;n&lt;1001). Input
is terminated by End of File.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><br>
</span><b><font size=5>Output</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>As it is obvious that only one guard can be placed in
each column. For each input value of n you will have to print a line of n
integers. The integers will be separated by a single space. These
integers denote the row positions of guards in each column. For the valid
configuration of guards in figure 2 you will print the line <b>2 4 1 3 </b>as
in column 1 the guard is placed on row 2, in column 2 the guard is placed on
row 4 and so on. There can be multiple solutions. Any good solution will be
accepted. If guards cannot be placed in the secret place print the line
Â“ImpossibleÂ” in a single line.<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â Â Â  </span><span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></o:p></span></b></p>
<font face="Courier" size=3>
4<br>

8<br>

10<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>

2 4 1 3<br>

4 6 8 2 7 1 3 5 <br>

2 4 6 8 10 1 3 5 7 9<br>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>___________________________________<br>
Shahriar Manzoor<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='margin-bottom:12.0pt;text-align:center'><i><span
style='mso-bidi-font-size:12.0pt'>&quot;God grant me the serenity<br>
To accept the problems that I cannot solve<br>
The persistence to solve the problems that I can<br>
And the wisdom to know the difference.&quot;</span></i><b style='mso-bidi-font-weight:
normal'><o:p></o:p></b></p>

</div>

</body>

</html>

______________________________________________________
10095||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p10_files/filelist.xml">
<title>Problem K - Save the planet</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>95</o:Revision>
  <o:TotalTime>857</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-02-22T13:23:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>452</o:Words>
  <o:Characters>2578</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3165</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:18.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor="#e1dfbf" lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><font size=5>Problem K</font> </b><b style='mso-bidi-font-weight:
normal'><br>
</b><b style='mso-bidi-font-weight:normal'><font size=6>Saving
the Planet</font><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b><span style='mso-bidi-font-weight:bold'> Standard Input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b><span style='mso-bidi-font-weight:bold'>Standard Output<o:p></o:p></span></p>

<br>
<p class=MsoBodyText2>In science fiction movies we have seen that a few man
leave the Earth and go far away for better inhabitance. In reality, this Earth
is our only place to live. It is our sacred duty to keep this planet away from
all kinds of danger. You will now be given such a duty so donÂ’t run away. </p>

<p class=MsoBodyText2><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText2>The scientists of Japan, Australia, USA and Russia have
discovered something miserable. This discovery took place in a Laboratory of
PONDS (Planet Orbit and Numerology Determination Society). A huge object is
coming straight towards our planet. The problem is that its shape and size cannot
be determined. The scientists discover some signals bit they are from scattered
positions. A few days later they discover that the relative distances between
these scattered positions (these positions can be considered points) remain
constant. So they realize that these signals come from radioactive elements,
which are placed on and inside of a transparent planet. The scientists are
making a weapon to destroy this half visible planet. They have also hired Bruce
Willis, the brave astronaut of the movie Â“ArmageddonÂ” (Although in the movie he
died, the director kept him alive for his next movie). But the problem is the
power of the weapon depends on the size of the planet. If the weapon is a
little less powerful that what the planet requires to be destroyed it is ok but
if it is more powerful than the exact requirement the existence of Earth will
be in danger. Assuming that all the radioactive elements are within the planet
and the planet is a sphere, you will have to determine the minimum radius
possible of the planet from the given radio active element positions and also
the coordinate of the center of the planet at the time when the sample was
taken. The radioactive element positions are points in three-dimensional space
(x, y, z).<span style="mso-spacerun: yes">Â Â  </span></p>

<h1><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></h1>

<p class=MsoNormal><b><font size=5>Input</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'> <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>The input contains several sets of input. Each set
contains an integer n (n&lt10001) followed by n lines, which contains the coordinate of the
radioactive elements. The coordinates are measured according to ISCS
(International Space Coordinate System) rules and you donÂ’t need to bother
about this. You just deal with the numerical values. A set with a zero value
for n ends the input.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><br>
</span><b><font size=5>Output</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

<p class=MsoBodyText2>For each set of output in a single line four
floating-point numbers. First numbers is the radius of the Planet and the last three
numbers denote the coordinates of the center of the planet. Each number is separated
by a space and contains four digits after the decimal point. Assume that pi=3.14159265359<span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></b></p>
<font size=3 face="Courier">
10<br>

0.05 0.01 10.08<br>

1.21 0.71 0.74<br>

0.13 4.23 13.60<br>

1.61 3.48 0.86<br>

1.58 1.86 1.14<br>

1.63 5.26 0.76<br>

0.35 1.19 0.97<br>

5.31 0.38 0.43<br>

2.00 0.82 204.27<br>

1.65 0.64 0.65<br>

0<br><br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></b></p>
<font size=3 face="Courier">
101.9337 3.6550 0.6000 102.3500<br>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>_________________________<br>
Shahriar Manzoor<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText3>Â“When the contest over and you are the champion donÂ’t
think that you are the best programmer but you may think that you are the most
lucky one. Similarly, when the contest is over and you are the last 
 Â“</p>

</div>

</body>

</html>

______________________________________________________
10096||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0_files/filelist.xml">
<link rel=Edit-Time-Data href="./p0_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - The Richest Man of the Universe</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>RAC</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>68</o:Revision>
  <o:TotalTime>810</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-04-04T03:50:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>505</o:Words>
  <o:Characters>2882</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>24</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3539</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><font size=5 face="Times New Roman">
Problem A</font></b><b style='mso-bidi-font-weight:
normal'><br>
</b><b style='mso-bidi-font-weight:normal'><font size=6 face="Times New Roman">The Richest Man of the Universe </font><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input:</b><span style='mso-bidi-font-weight:bold'> Standard Input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b><span style='mso-bidi-font-weight:bold'>Standard Output<o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>Today I am going to tell you the story of the Richest Man
of the Universe. He lives in planet Archadia that is 200 light years away from the
Earth. A parallel human civilization exists in that planet. His name is <b>Charge
Doors. </b>A strange name to us but if you are very intelligent you find the
significance of his name. He graduated (probably) from a University which is
now the best in the Universe for Medical Study (You may wonder why you donÂ’t
know this University. It is because the news is broadcasted from Archadia and
you will know it 200 years later!) Though he is a very brilliant programmer, in
his student life he spent much of his time in a Virus Research Lab for some
unknown reasons (maybe his friends know). He worked there with a kind of Virus
called Â“Archadian BascillaeÂ”. These viruses are circular in shape. They can do
two operations: fission and fusion. Fission occurs in breeding season and
fusion occurs during hostile season. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>In breeding season each virus is kept in a rectangular
transparent box. After fission two viruses of equal size and shape (circular of
course) is created. After fission they maintain maximum possible distance
between them in the box. Given the radius of the initial virus and the size of
the box it was kept in you will have to determine the maximum distance possible
between the centers of the two viruses.<span style="mso-spacerun: yes">Â 
</span><o:p></o:p></span></p>
<center>
<table cellpadding="30">
<tr>
<td><img src="http://uva.onlinejudge.org/external/100/p10096a.jpg" ></td>
<td><img src="http://uva.onlinejudge.org/external/100/p10096a.jpg" ></td>
</tr>

<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fig 1: Fission Operation</td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fig 2: Fusion Operation</td>
<tr>
</tr>
</table>
</center>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>During fusion two viruses merges but this merging is
not complete. Some portion of one virus overlaps some portion of the other
virus. The thickness of their common portion is doubled but thickness in all
other portion remains the same (This incident is like two rigid disks stick to
each other with the help of glue). The thing to note here is that all the
single viruses are of equal thickness though their size may vary. You will have
to determine the area covered by these semi-merged viruses.<span
style="mso-spacerun: yes">Â  </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText2>You have to solve this problem, as you are about to give
an interview to his large software company. For some odd reasons he asks
everyone to solve this problem.</p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><span style="mso-spacerun: yes">Â </span><br>
</span><b><font size=5 face="Times New Roman">Input</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'> <o:p></o:p></span></p>

<p class=MsoBodyText2>First line of the input file contains an integer N that
indicates how many sets of inputs are there. Next N lines contains N sets of
inputs.</p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>Every input begins with a character C whose
value is either Â‘SÂ’ (for fission) or Â‘MÂ” (for fusion). <o:p></o:p></span></p>

<p class=MsoBodyText2>For fission, next there will be three real numbers, L (length
of the rectangular box), W (width of the rectangular box) and R (radius of the
virus to make fission). For fusion after character Â‘MÂ’ there will be three
real numbers, R1 (radius of the first virus), R2 (radius of the second virus) and d
(the distance between these two viruses and d&ge;max(R1,R2)).</p>

<p class=MsoBodyText2><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText2>No numerical value in the input will be negative and also
there value will not exceed <b>2000</b>.</p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><span
style="mso-spacerun: yes">Â Â Â  </span><br>
</span><b><font size=5 face="Times New Roman">Output</font></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>For each line of input you will have to print one or
two lines of output. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>For fission type input you will have to print the
maximum possible distance between the centers of the two viruses according to
the sample output format. If there is not enough space for fission in the
rectangular box print the line <b>Â“Not enough space for fission.Â” </b>Fission
is impossible if the viruses cannot remain separated (not overlapped) in the
box at any possible position. If fission is impossible then there is no need to
print the maximum possible distance.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoBodyText><span style='mso-bidi-font-size:18.0pt'>For fusion type of
input you have to print the compaction ratio of the virus according to the
sample output. Compaction Ratio is defined as </span><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'>(Surface area covered by the
merged virus)/(Surface area covered by first virus before merging + Surface
Area covered by the second virus before merging</span></b><span
style='mso-bidi-font-size:18.0pt'>). When the printed compaction ration is </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>1.0000</span></b><span
style='mso-bidi-font-size:18.0pt'> you will have to print in the next line </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>Â“No
compaction has occurred.Â” </span></b><span style='mso-bidi-font-size:18.0pt'>Another
important thing is that when no merging has occurred you will have to print the
compaction ratio as </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>1.0000</span></b><span style='mso-bidi-font-size:
18.0pt'> and in the next line you will have to print, Â“</span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>No
compaction has occurred.Â”<o:p></o:p></span></b></p>

<br>
<p class=MsoBodyText><span style='mso-bidi-font-size:18.0pt'>Print a blank line
after the output for each set of input. <span style="mso-spacerun:
yes">Â </span><o:p></o:p></span></p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5 face="Times New Roman">Sample Input</font></b></p>
<font face="Courier" size=3>
4<br>

S 10.1 10.1 1<br>

M 5 5 8<br>

S 10 5 20<br>

M 5 5 15<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5 face="Times New Roman">Sample Output</font></b></p>
<font face="Courier" size=3>
12.2836<br>
<br>
0.9480<br>
<br>
Not enough space for fission.<br>

<br>
1.0000<br>

No compaction has occurred.<br>

<br>
</font>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>Shahriar
Manzoor <o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10097||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p4_files/filelist.xml">
<title>Problem B - The Color Game</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>RAC</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>72</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-19T07:30:00Z</o:Created>
  <o:LastSaved>2001-01-19T07:30:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>378</o:Words>
  <o:Characters>2157</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2648</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	layout-grid-mode:line;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#FFFFFF">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem B</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Color Game</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText>In this problem, you will get introduced to a new game
called the Color Game. In the N-cell<span style="mso-spacerun: yes">Â  </span>(3
&lt;= N &lt;= 100) color game, there are N cells each having a different color.
For simplicity, we will assume that the colors are represented by unique
positive integers ranging from 1 to N. Each cell has at most one edge
(directed) of each color running to another or even the same cell. This is a
two-player game and it consists of two phases. In the first phase one of the
players plays and in the second phase plays the other. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Suppose player 1 plays in the
first phase. At the beginning, player 2 selects three cells N<sub><span
style='color:windowtext'>1</span></sub>, N<sub><span style='color:windowtext'>2</span></sub>
and N<sub><span style='color:windowtext'>3</span></sub>, and places two tokens
in N<sub><span style='color:windowtext'>1</span></sub> and N<sub><span
style='color:windowtext'>2</span></sub> respectively.<span style="mso-spacerun:
yes">Â  </span>Now he challenges player 1 to move any one of the tokens to cell
N<sub><span style='color:windowtext'>3 </span></sub>in as few moves as
possible. In each move only one of the two tokens can be moved. A token can
move from the current cell to an adjacent cell only following an edge of the
same color as that of the cell the other token is in. At the end of the phase,
player 2 must prove that there is a way of moving one of the tokens to cell N<sub><span
style='color:windowtext'>3</span></sub> otherwise he will lose. The second
phase is similar to the first one except that the players are now reversed. The
player solving the problem in fewer moves wins the game. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Now, given the description of the
network of cells and the values of N<sub><span style='color:windowtext'>1</span></sub>,
N<sub><span style='color:windowtext'>2</span></sub> and N<sub><span
style='color:windowtext'>3</span></sub>, you are asked to write a program to
determine the minimum number of moves required to moves any of the tokens to
cell N<sub><span style='color:windowtext'>3</span></sub>. </p>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file consists of
several data blocks. Each data block describes a game.</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â </span></p>

<p class=MsoNormal style='text-align:justify'>The first line of a data block
contains an integer <em><span style='font-style:normal'>N</span></em> (3 &lt;=
N &lt;= 100) representing the number of cells. Then follows N lines of N
integers each. The j-th integer in the i-th line (1 &lt;= i, j &lt;= N) gives
the cell number to which cell i is connected by an edge of color j. If cell i
does not have an edge of color j, then this integer has a value 0. The last
line of the data block contains the three integers: N<sub><span
style='color:windowtext'>1</span></sub>, N<sub><span style='color:windowtext'>2</span></sub>
and N<sub><span style='color:windowtext'>3</span></sub>. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The input file terminates with a
zero for <em><span style='font-style:normal'>N</span></em>. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each game in the input first
output the game number followed by the minimum number of moves required to
solve it. Print the line &quot;Destination is Not Reachable !&quot; if the
problem is not solvable. Print a blank line after the outputs for each data set.<b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>


<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">
5<br>

2 5 3 5 5<br>

0 2 1 3 0<br>

0 1 3 3 4<br>

1 5 2 2 5<br>

5 4 0 5 0<br>

5 3 1<br>

6<br>

0 0 5 4 0 1<br>

6 0 1 3 4 4<br>

5 0 5 0 2 6<br>

3 1 0 4 5 5<br>

3 2 2 4 6 4<br>

1 2 5 2 0 0<br>

3 2 6<br>

0<br>
</font>
<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font size=3 face="Courier">
Game #1<br>

Destination is Not Reachable !<br>

<br>
Game #2<br>

Minimum Number of Moves = 6<br>
<br>
</font>
</div>
<hr>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10098||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word"><HEAD><TITLE>Problem C - Generating Fast Sorted Permutation</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META content=Word.Document name=ProgId>
<META content="MSHTML 5.00.2920.0" name=GENERATOR>
<META content="Microsoft Word 9" name=Originator><LINK 
href="./p9_files/filelist.xml" rel=File-List><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>RAC</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>32</o:Revision>
  <o:TotalTime>522</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-02-12T07:55:00Z</o:Created>
  <o:LastSaved>2001-02-17T15:45:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>211</o:Words>
  <o:Characters>1203</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1477</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<STYLE>P.MsoNormal {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoNormal {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoNormal {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; mso-bidi-font-size: 10.0pt; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
P.MsoBodyText {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; TEXT-ALIGN: justify; mso-bidi-font-weight: bold; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoBodyText {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; TEXT-ALIGN: justify; mso-bidi-font-weight: bold; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoBodyText {
	COLOR: black; FONT-FAMILY: "Times New Roman"; FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; TEXT-ALIGN: justify; mso-bidi-font-weight: bold; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
EM {
	mso-bidi-font-style: normal
}
P.Preformatted {
	FONT-FAMILY: "Courier New"; FONT-SIZE: 10pt; LAYOUT-GRID-MODE: char; MARGIN: 0in 0in 0pt; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
LI.Preformatted {
	FONT-FAMILY: "Courier New"; FONT-SIZE: 10pt; LAYOUT-GRID-MODE: char; MARGIN: 0in 0in 0pt; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
DIV.Preformatted {
	FONT-FAMILY: "Courier New"; FONT-SIZE: 10pt; LAYOUT-GRID-MODE: char; MARGIN: 0in 0in 0pt; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
DIV.Section1 {
	page: Section1
}
</STYLE>
</HEAD>
<BODY bgColor=#ffffff lang=EN-US style="tab-interval: .5in">
<DIV class=Section1>
<P align=center class=MsoNormal style="TEXT-ALIGN: center"><B>
<font face="Times New Roman" size=5>Problem C</font></B><B 
style="mso-bidi-font-weight: normal"> <BR></B><B 
style="mso-bidi-font-weight: normal"><font size=6 face="Times New Roman"><b>Generating Fast, Sorted Permutation</font></b></P>
<P align=center class=MsoNormal style="TEXT-ALIGN: center">
<B style="mso-bidi-font-weight: normal">Input:</B><SPAN 
style="mso-bidi-font-weight: bold"> Standard Input<o:p></o:p></SPAN></P>
<P align=center class=MsoNormal style="TEXT-ALIGN: center"><B 
style="mso-bidi-font-weight: normal">Output: </B><SPAN 
style="mso-bidi-font-weight: bold">Standard Output<o:p></o:p></SPAN></P></b>
<P class=MsoNormal><SPAN style="COLOR: windowtext; mso-bidi-font-size: 12.0pt">
<![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN 
style="COLOR: windowtext; mso-bidi-font-size: 12.0pt">Generating permutation has 
always been an important problem in computer science. In this problem you will 
have to generate the permutation of a given string in ascending order. <SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN>Remember that your algorithm must be 
efficient.<o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN 
style="COLOR: windowtext; mso-bidi-font-size: 12.0pt"><BR></SPAN><B>
<font face="Times New Roman" size=5>Input</font></B>
<SPAN style="COLOR: windowtext; mso-bidi-font-size: 12.0pt"> <o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN style="COLOR: windowtext; mso-bidi-font-size: 12.0pt">The first line of the 
input contains an integer n, which indicates how many strings to follow. The 
next n lines contain n strings. Strings will only contain alpha numerals and 
never contain any space. The maximum length of the string is 
10.<o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN 
style="COLOR: windowtext; mso-bidi-font-size: 12.0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><BR></SPAN><B>
<font face="Times New Roman" size=5>Output</font></B><SPAN 
style="COLOR: windowtext; mso-bidi-font-size: 12.0pt"><o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN 
style="COLOR: windowtext; mso-bidi-font-size: 12.0pt">For each input string 
print all the permutations possible in ascending order. Not that the strings 
should be treated, as case sensitive strings and no permutation should be 
repeated. A blank line should follow each output set.<o:p></o:p></SPAN></P>
<P class=MsoNormal><SPAN style="COLOR: windowtext; mso-bidi-font-size: 12.0pt"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">
<B style="mso-bidi-font-weight: normal"><font size=5>Sample Input</font></B></P>
<font face="Courier" size=3>
3<br>
ab<br>
abc<br>
bca<br></o:p></SPAN></P>
</font>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: windowtext; mso-bidi-font-weight: bold; mso-bidi-font-size: 12.0pt"><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><font size=5 face="Times New Roman">Sample 
Output</font></B></P>
<font face="Courier">
ab<br>
ba<br>
<br>
abc<br>
acb<br>
bac<br>
bca<br>
cab<br>
cba<br>
<br>
abc<br>
acb<br>
bac<br>
bca<br>
cab<br>
cba<br>
<br>
</font>
<hr>
Shahriar Manzoor
</BODY></HTML>

______________________________________________________
10099||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./a_files/filelist.xml">
<link rel=Edit-Time-Data href="./a_files/editdata.mso">
<link rel=OLE-Object-Data href="./a_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem D - The Tourist Guide</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>RAC</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-01-10T15:36:00Z</o:Created>
  <o:LastSaved>2001-01-13T15:44:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>341</o:Words>
  <o:Characters>1945</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>16</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2388</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
strong
	{mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.DefinitionTerm, li.DefinitionTerm, div.DefinitionTerm
	{mso-style-name:"Definition Term";
	mso-style-next:"Definition List";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.DefinitionList, li.DefinitionList, div.DefinitionList
	{mso-style-name:"Definition List";
	mso-style-next:"Definition Term";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.25in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.H2, li.H2, div.H2
	{mso-style-name:H2;
	mso-style-next:Normal;
	margin-top:5.0pt;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	layout-grid-mode:char;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Address, li.Address, div.Address
	{mso-style-name:Address;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem D</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>The Tourist Guide</font></span></b></p>


<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Mr. G. works as a tourist guide.
His current assignment is to take some tourists from one city to another. Some
two-way roads connect the cities. For each pair of neighboring cities there is
a bus service that runs only between those two cities and uses the road that
directly connects them. Each bus service has a limit on the maximum number of
passengers it can carry. Mr. G. has a map showing the cities and the roads
connecting them. He also has the information regarding each bus service. He
understands that it may not always be possible for him to take all the tourists
to the destination city in a single trip. For example, consider the following
road map of 7 cities. The edges connecting the cities represent the roads and
the number written on each edge indicates the passenger limit of the bus
service that runs on that road. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<img width=344 height=287
src="http://uva.onlinejudge.org/external/100/p10099.gif"  >

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>Now, if he wants
to take 99 tourists from city 1 to city 7, he will require at least 5 trips, since he has to ride the bus with each group, and
the route he should take is : 1 - 2 - 4 - 7. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>But, Mr. G.
finds it difficult to find the best route all by himself so that he may be able
to take all the tourists to the destination city in minimum number of trips.
So, he seeks your help.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>The input will contain one or
more test cases. The first line of each test case will contain two integers: <i
style='mso-bidi-font-style:normal'>N</i> (N&lt;= 100) and <i style='mso-bidi-font-style:
normal'>R</i> representing respectively the number of cities and the number of
road segments. Then <i style='mso-bidi-font-style:normal'>R</i> lines will
follow each containing three integers: <i style='mso-bidi-font-style:normal'>C</i><sub><span
style='color:windowtext'>1</span></sub>, <i style='mso-bidi-font-style:normal'>C</i><i
style='mso-bidi-font-style:normal'><sub><span style='color:windowtext'>2</span></sub></i>
and <i style='mso-bidi-font-style:normal'>P</i>. <i style='mso-bidi-font-style:
normal'>C</i><sub><span style='color:windowtext'>1</span></sub> and <i
style='mso-bidi-font-style:normal'>C</i><i style='mso-bidi-font-style:normal'><sub><span
style='color:windowtext'>2</span></sub></i> are the city numbers and <i
style='mso-bidi-font-style:normal'>P</i> (P&gt; 1) is the limit on the maximum
number of passengers to be carried by the bus service between the two cities.
City numbers are positive integers ranging from 1 to <i style='mso-bidi-font-style:
normal'>N</i>. The (<i style='mso-bidi-font-style:normal'>R</i> + 1)-th line
will contain three integers: <i style='mso-bidi-font-style:normal'>S</i>, <i
style='mso-bidi-font-style:normal'>D</i> and <i style='mso-bidi-font-style:
normal'>T</i> representing respectively the starting city, the destination city
and the number of tourists to be guided. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>The input will
end with two zeroes for <i style='mso-bidi-font-style:normal'>N</i> and <i
style='mso-bidi-font-style:normal'>R</i>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>


<p class=MsoNormal style='text-align:justify'>For each test case in the input
first output the scenario number. Then output the minimum number of trips
required for this case on a separate line. Print a blank line after the output of
each test case.<b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Input</font></span></b></p>
<font size=3 face="Courier">

7 10<br>

1 2 30<br>

1 3 15<br>

1 4 10<br>

2 4 25<br>

2 5 60<br>

3 4 40<br>

3 6 20<br>

4 7 35<br>

5 7 20<br>

6 7 30<br>

1 7 99<br>

0 0<br>

<br>
</font>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>

<font size=3 face="Courier">

Scenario #1<br>

Minimum Number of Trips = 5<br>
<br>
</font>
</div>
<font size=3 face="Times New Roman">
<hr>
Rezaul Alam Chowdhury
</body>

</html>

______________________________________________________
10100||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<link rel=Edit-Time-Data href="./p3_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem E - Longest Match</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>6</o:TotalTime>
  <o:Created>2001-02-20T07:08:00Z</o:Created>
  <o:LastSaved>2001-02-20T07:14:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>222</o:Words>
  <o:Characters>1268</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1557</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#FFFFFF">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem E</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Longest Match</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>
<br>
<p class=MsoNormal style='text-align:justify'>
A newly opened detective agency is struggling with their limited intelligence to find out 
a secret information passing technique among its detectives. Since they are new in this 
profession, they know well that their messages will easily be trapped and hence modified by
other groups. They want to guess the intensions of other groups by checking the changed 
sections of messages. First they have to get the length of longest match. You are going to help 
them.    
</p>


<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>
The input file may contain multiple test cases. Each case will contain 
two successive lines of string. Blank lines and non-letter printable punctuation 
characters may appear. Each Line of string will be no longer than 1000 
characters. Length of each word will be less than 20 characters.

</p>


<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>
For each case of input, you have to output a line starting with the case number 
right justified in a field width of two, followed by the longest match as shown in the sample output.
In case of at least one blank line for each input output 'Blank!'. Consider the non-letter
punctuation characters as white-spaces. 
</p>

<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>
<font size=5>Sample Input</font></span></b></p>
<font face="courier" size=3>

This is a test.<br>

test<br>

Hello!<br>

<br>

The document provides late-breaking information<br>

late breaking.<br>


<br>
</font>
<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="courier" size=3>

&nbsp;1. Length of longest match: 1<br>

&nbsp;2. Blank!<br>

&nbsp;3. Length of longest match: 2<br>
</font>
</div>
________________________________________________
<font face="Times New ROman" size=3>
Tanbir Ahmed
<br><br><br><i>
</body>

</html>

______________________________________________________
10101||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<link rel=Edit-Time-Data href="./p3_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem F - Bangla Numbers</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>6</o:TotalTime>
  <o:Created>2001-02-20T07:08:00Z</o:Created>
  <o:LastSaved>2001-02-20T07:14:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>222</o:Words>
  <o:Characters>1268</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1557</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in' bgcolor="#FFFFFF">

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=5>Problem F</font></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><font size=6>Bangla Numbers</font></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Input: </b><span style='mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Output: </b>standard output</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>
Bangla numbers normally use 'kuti' (10000000), 'lakh' (100000), 'hajar' (1000), 
'shata' (100) while expanding and converting to text. You are going to write a program to
convert a given number to text with them. 
</p>

<!--
<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>
<p class=MsoNormal align=center style='text-align:center'><table><tr>  <image src="http://uva.onlinejudge.org/external/101/p10088.jpg" ></tr><tr><font size=3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Figure: A sample of my island</tr></font>
</table>
</font></b></p>
-->

<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Input</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>
The input file may contain several test cases. Each case will contain 
a non-negative number <= 999999999999999. 
</p>


<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Output</font></span></b></p>

<p class=MsoNormal style='text-align:justify'>
For each case of input, you have to output a line starting with the case number 
with four digits adjustment followed by the converted text. 
</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'>
<font size=5>Sample Input</font></span></b></p>
<font face="courier" size=3>
<pre>
23764
45897458973958
</pre>

<br>
</font>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5>Sample Output</font></span></b></p>
<font face="courier" size=3>
<pre>
   1. 23 hajar 7 shata 64
   2. 45 lakh 89 hajar 7 shata 45 kuti 89 lakh 73 hajar 9 shata 58
</pre>
</font>
</div>

<br>
<hr>
<font face="Times New ROman" size=3>
Tanbir Ahmed 
<br><br><br><i>
</body>

</html>

______________________________________________________
10102||||||false||||||
<HTML>
<HEAD>
<TITLE>The path in the colored field</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">The path in the colored field</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
The square field consists of M&timesM cells. Each cell is colored in
one of three colors (1,2,3). The initial state is chosen in one
of the cells of color 1. In each step one allowed to move one cell
up, down, left or right remaining inside the field.<p>

You are to define the minimal amount of steps one should make to
get a cell of color 3 independent on the initial state.<p>

Note that the field contains at least one cell of color 1 and at
least one cell of color 3.<p>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input consists of several input blocks. The first line of each block contains integer M, the size of the
field. Then there are M lines with colors of the cells.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each input block the output should consist of one line with the integer, the minimal amount of steps one should make to
get a cell of color 3 independent on the initial state.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
4
1223
2123
2213
3212
2
12
33
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
3
1
</PRE>

</BODY>
</HTML>

______________________________________________________
10103||||||false||||||
<HTML>
<HEAD>
<TITLE>Karpovich blocks</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Karpovich blocks</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>

From the unit blocks of three kinds one creates a cube N&times;N&times;N (1&LT; N&LT;10).
Some minutes later all the unit blocks of the same kind with common faces glue together. So three details appeared.<p>

Determine, if there is possible to separate all the details not destroying them.<p>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist of several input blocks.
Each input block begins with
the integer N, the size of the
cube. Then there is an empty line. Then N series of N lines, determined N cube
layers. Each line contains N letters (R, G, B), defining the kind of
the block. Each layer-series except the last one in the last input block is followed by an empty line. The last input block is followed by &LT;EOF&GT;.


<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each input block the output line should contain a word "NO" if
there is impossible to separate details. In another case it should
consist of the kinds of details which can be separated. (R should
precede G, G precedes B).


<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2

RR
RR

GB
GR

3

BRR
RRR
RBB

BRR
GGG
RGB

BBR
BBR
BBB
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
RGB
NO
</PRE>
</BODY>
</HTML>

______________________________________________________
10104||||||false||||||
<HTML>
<HEAD>
<TITLE>Euclid Problem</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Euclid Problem</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>

From Euclid it is known that for any positive integers <I>A</I> and <I>B</I>
there exist such integers <I>X</I> and <I>Y</I> that <I>AX+BY=D</I>,
where <I>D</I> is the greatest common divisor of <I>A</I> and <I>B</I>.
The problem is to find for given <I>A</I> and <I>B</I> corresponding <I>X</I>, <I>Y</I> and <I>D</I>.


</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist of a set of lines with the integer numbers <I>A</I> and <I>B</I>, separated with space (<I>A,B&lt;1000000001</I>).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each input line the output line should consist of three
integers <I>X, Y</I> and <I>D,</I> separated with space. If there are several
such <I>X</I> and <I>Y</I>, you should output that pair for which
<I>|X|+|Y|</I> is the minimal (primarily) and <I>X&LT=Y</I> (secondarily).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
4 6
17 17</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
-1 1 2
0 1 17
</PRE>
</BODY>
</HTML>

______________________________________________________
10105||||||false||||||
<HTML>
<HEAD>
<TITLE>Polynomial coefficients</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Polynomial coefficients</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>

The problem is to calculate the coefficients in expansion of
polynomial
<I>(x<sub>1</sub>+x<sub>2</sub>+...+x<sub>k</sub>)<sup>n</sup></I>.


</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist of a set of pairs of lines. The first line of the pair consists of two integers <I>n</I> and <I>k</I>  separated with
space (<I>0&LT;K,N&LT;13</I>).
This integers define the power of the polynomial and the
amount of the variables. The second line in each pair consists of
<I>k</I> non-negative integers <I>n<sub>1</sub>, ...,  n<sub>k</sub>,</I> where <I>n<sub>1</sub>+...+n<sub>k</sub>=n</I>.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each input pair of lines the output line should consist one integer, the coefficient by the
monomial
<I>x<sub>1</sub><sup>n1</sup>x<sub>2</sub><sup>n2</sup>...x<sub>k</sub><sup>nk</sup></I> in expansion of the polynomial <I>(x<sub>1</sub>+x<sub>2</sub>+...+x<sub>k</sub>)<sup>n</sup></I>.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2 2
1 1
2 12
1 0 0 0 0 0 0 0 0 0 1 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
2
2
</PRE>
</BODY>
</HTML>

______________________________________________________
10106||||||false||||||
<HTML>
<HEAD>
<TITLE>Product</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Product</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>

The problem is to multiply two integers X, Y. (<I>0&LT=X,Y&LT;10<sup>250</sup></I>)


</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist of a set of pairs of lines. Each line in pair contains one multiplyer.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each input pair of lines the output line should consist one integer the product. 
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
12
12
2
222222222222222222222222
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
144
444444444444444444444444
</PRE>
</BODY>
</HTML>

______________________________________________________
10107||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="description" content="What is the Median?">
   <meta name="keywords" content="htmlatex">
   <meta name="resource-type" content="document">
   <meta name="distribution" content="global">
   <meta name="GENERATOR" content="Mozilla/4.75 [en] (X11; U; Linux 2.2.16-22 i586) [Netscape]">
   <meta name="Author" content="Sadi Khan">
   <title>What is the Median?</title>
<!--Converted with LaTeX2HTML 98.1 release (February 19th, 1998)
originally by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
</head>
<body bgcolor="#FFFFFF" lang="EN">

<center>
<h1>
</h1></center>
&nbsp;
<center><table BORDER=0 BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>
What is the Median?&nbsp;</font></font></b></td>
</tr>
</table></center>
<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
Median plays an important role in the world of statistics. By definition,
it is a value which divides an array into two equal parts. In this problem
you are to determine the current median of some long integers.
<p>Suppose, we have five numbers {1,3,6,2,7}. In this case, 3 is the median
as it has exactly two numbers on its each side. {1,2} and {6,7}.
<p>If there are even number of values like {1,3,6,2,7,8}, only one value
cannot split this array into equal two parts, so we consider the average
of the middle values {3,6}. Thus, the median will be (3+6)/2 = 4.5. In
this problem, you have to print only the integer part, not the fractional.
As a result, according to this problem, the median will be 4!
<h2>
<a NAME="SECTION0001001000000000000000"></a><font color="#0070E8">Input&nbsp;</font></h2>
The input file consists of series of integers X ( 0 &lt;= X &lt; 2^31 )
and total number of integers N is less than 10000. The numbers may have
leading or trailing spaces.
<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">Output&nbsp;</font></h2>
For each input print the current value of the median.

<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">Sample
Input&nbsp;</font></h2>

<pre>1
3
4
60
70
50
2</pre>

<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">Sample
Output&nbsp;</font></h2>

<pre>1
2
3
3
4
27
4</pre>

<hr>
<i>Sadi Khan<br>
2001-04-01</i>
</body>
</html>

______________________________________________________
10108||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.75 [en] (X11; U; Linux 2.2.16-22 i586) [Netscape]">
   <meta name="Author" content="S. M. Mahbub Murshed">
   <meta name="Description" content="The Mosquito Killer Mosquitos">
   <title>The Mosquito Killer Mosquitos</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>The
Mosquito Killer Mosquitos</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
In the last winter the whole Bangladesh was suffering from the attack of mosquitos.
They were huge and they were big. Unfortunately the honourable Mayor of Dhaka
was calimed for this reason and he had a notice for a "show cause". He was
at a loss what to do and began to search for the orders recently he had
given concerning mosquitos. Searching and searching all the mammoth data's
on computers and documents is a harculean task. At last he found an order
on a mosquito research named "MOSQUITO KILLER MOSQUITOS" which was proposed
by a project of Science Laboratory of Bangladesh. This was a harmless project
which states that the project is on procreation of mosquitos from which
easy ways can be found to control the reproduction of mosquitos.
<p>In the descrpition part there was a statement that they were going to
produce such mosquitos which will be the killer of normal mosquitos. This
kind of mosquitos will grow rapidly and spread in a completely structured
way. Moreover these mosquitos will have common gender , thus creating a
new way of generation. Any two of them will be able to regenerate new mosquitos
among themselves. In one day they will meet just once with every mosquito
and lay only one egg for each meet. The eggs will become rapidly reproducable
mosquitos on the next day. In each weekday the number equal to the square
root (expressed in integer) of them will remain in the pond and others will go
to other ponds to cover corresponding areas. They will not meet and lay eggs that day.
These mosquitos will leave on garbaze, destructing the unwanted garbaze.
Thus detroying harmful moquitos and garbaze of the whole Bangladesh (as
well as the whole Universe).
<p>After these statements there was remark saying that "This project on
MOSQUITO KILLER MOSQUITOS seems to bring new horizon to science. So this
project is granted giving all kinds of facilites available." and signed
"The Mayor of Dhaka".
<p>Reading all these the Mayor took an inquiry to the database of current
project on science and found the project of the "MOSQUITO KILLER MOSQUITOS"
was falied due to the fact that they were able to produce such big mosquitos
but failed to make garbaze as their food. This project was stopped and
the generated mosquitos was all destroyed.A few of them was kept in the
lab for future research. This made Mayor think. He&nbsp; ordered his detectives
to report on where these mosquitos were. In that evening the detectives
reported that some of those mosquitos were stolen by someone from the lab.
<p>Now the Mayor understood the reason for so many mosquitos. Also understood
the reason for the "Dengu Fever" caused in Dhaka few mounths ago. And he
got paniced how bad the situation can be! He begun to take necessary steps
against this situation. But before he could take any step he wanted to know
how many mosquitos were out there? He e-mailed you (The responsible programmer
for The Peoples Republic of Bangladesh) to write a program for him and
help in this great danger of Bangladesh as well as the World.
<br>&nbsp;
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
The input will consist on a set of lines. Each line will contain two integers.
First one represents the number of mosquitos in a pond at the very begining.
The second integer represents the number of days have passed after the
starting day. You may assume the input will fit in a 32 bit integer. A
negative number will indicate the end of input.
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
For each set of input output the integer representing the number of mosquitos
in that pond in that day in the format as shown in the sample output below.
Output a single line for each line of input.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>

<pre>4 1
-1 -1</pre>

<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>

<pre>Number of mosquitos in the pond at the end of 1'st day is 10.</pre>

<hr><i>Suman Mahbub</i>
<br><i>05-03-2001</i>
</body>
</html>

______________________________________________________
10109||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.75 [en] (X11; U; Linux 2.2.16-22 i586) [Netscape]">
   <meta name="Author" content="S. M. Mahbub Murshed Suman">
   <meta name="Description" content="Solving Systems of Linear Equations">
   <title>Solving Systems of Linear Equations</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>Solving
Systems of Linear Equations</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
You may have solved linear equation early in the school. Problems involving
solving sets of linear equation are very important in the field of Engineering
and Mathematics.
<br>Let us consider that we have a system of linear equations
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>11</sub>x<sub>1</sub> + a<sub>12</sub>x<sub>2</sub> + a<sub>13</sub>x<sub>3</sub>
= c<sub>1</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>21</sub>x<sub>1</sub> + a<sub>22</sub>x<sub>2</sub> + a<sub>23</sub>x<sub>3</sub>
= c<sub>2</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>31</sub>x<sub>1</sub> + a<sub>32</sub>x<sub>2</sub> + a<sub>33</sub>x<sub>3</sub>
= c<sub>3</sub>
<br>We can solve it by reducing technique:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Step 1:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
x<sub>1</sub> + a<sub>12</sub>/a<sub>11</sub>x<sub>2</sub> + a<sub>13</sub>/a<sub>11</sub>x<sub>3</sub>
= c<sub>1</sub>/a<sub>11</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>21</sub>x<sub>1</sub> + a<sub>22</sub>x<sub>2</sub> + a<sub>23</sub>x<sub>3</sub>
= c<sub>2</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>31</sub>x<sub>1</sub> + a<sub>32</sub>x<sub>2</sub> + a<sub>33</sub>x<sub>3</sub>
= c<sub>3</sub>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Step
2:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
x<sub>1</sub> + a<sub>12</sub>/a<sub>11</sub>x<sub>2</sub> + a<sub>13</sub>/a<sub>11</sub>x<sub>3</sub>
= c<sub>1</sub>/a<sub>11</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(-a<sub>21</sub>* a<sub>12</sub>/a<sub>11</sub>)a<sub>22</sub>x<sub>2</sub>
+&nbsp; (-a<sub>21</sub>* a<sub>13</sub>/a<sub>11</sub>)a<sub>23</sub>x<sub>3</sub>
=&nbsp; (-a<sub>21</sub>* c<sub>1</sub>/a<sub>11</sub>)c<sub>2</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(-a<sub>31</sub>* a<sub>12</sub>/a<sub>11</sub>)a<sub>22</sub>x<sub>2</sub>
+&nbsp; (-a<sub>31</sub>* a<sub>13</sub>/a<sub>11</sub>)a<sub>23</sub>x<sub>3</sub>
=&nbsp; (-a<sub>31</sub>* c<sub>1</sub>/a<sub>11</sub>)c<sub>2</sub>
<p>Now do as step 1 for second row and so on.
<br>This can be made more effective using matrix method. The set of equation
for `n' unknowns can be written as
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>11</sub>x<sub>1</sub> + a<sub>12</sub>x<sub>2</sub> + a<sub>13</sub>x<sub>3</sub>
+ ... + a<sub>1n</sub>x<sub>n</sub> = c<sub>1</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>21</sub>x<sub>1</sub> + a<sub>22</sub>x<sub>2</sub> + a<sub>23</sub>x<sub>3</sub>
+ ... +&nbsp; a<sub>2n</sub>x<sub>n</sub> = c<sub>2</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>31</sub>x<sub>1</sub> + a<sub>32</sub>x<sub>2</sub> + a<sub>33</sub>x<sub>3</sub>
+ ... +&nbsp; a<sub>3n</sub>x<sub>n&nbsp;</sub> = c<sub>3</sub>
<br><sub>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp;
...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp;
...&nbsp;&nbsp; ...&nbsp;&nbsp; ...&nbsp;&nbsp; ...</sub>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
a<sub>m1</sub>x<sub>1</sub> + a<sub>m2</sub>x<sub>2</sub> + a<sub>m3</sub>x<sub>3</sub>
+ ... +&nbsp; a<sub>mn</sub>x<sub>n&nbsp;</sub> = c<sub>n</sub>
<p>In matrix form
<br><img SRC="http://uva.onlinejudge.org/external/101/p10109.gif"  height=117 width=327 alt="Equations in matrix form: [A] * {X} = {C}">
<br>Compactly&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [A] * {X} = {C}
<br>From this we can solve values of X's. The matrix [AC] is called an
augmented (see example below) matrix. If after elimination process the
rank of matrix [A] and rank of matrix [AC] not equals, the system is called
inconsistent and it does not have a solution. If the matrix is consistent
and number of unknowns is greater then rank of matrix then the matrix system
has arbitarily many solutions containing (NumberOfUnknowns-rank) arbitary
constants. Rank of a matrix is defined as the number of non zero rows of
a matrix system. Otherwise if the rank and number of unknows equals then
the system has been solved.
<p>For example let a system of equations be
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
9x<sub>1</sub> + 4x<sub>2</sub> + x<sub>3</sub> = -17
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
x<sub>1</sub> - 2x<sub>2</sub> - 6x<sub>3</sub> = 14
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
x<sub>1</sub> + 6x<sub>2</sub>&nbsp; = 4
<br>This sets of equation can be written as
<br>9&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp; -17
<br>1&nbsp; -2&nbsp;&nbsp; -6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 14
<br>1&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4
<br>So the steps involving the solution is
<p>Step : 1
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
14
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -17
<p>Step : 2
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
14
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
55&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -143
<p>Step : 3
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
14
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3/4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-5/4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
77/2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -231/2
<p>Step : 4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
14
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3/4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-5/4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-3
<p>Step : 5
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-3
<p>Step : 6
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-2
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
-3
<p>x<sub>1</sub> = -2
<br>x<sub>2</sub> = 1
<br>x<sub>3</sub> = -3
<br>Again consider this system
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2x<sub>1</sub> + 2x<sub>2</sub>
+ 2x<sub>3</sub> = 2
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4x<sub>1</sub> + 4x<sub>2</sub>
+ 4x<sub>3</sub> = 4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16x<sub>1</sub> + 16x<sub>2</sub>
+ 16x<sub>3</sub> = 16
<br>Steps are:
<br>Step : 1
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
16
<p>Step : 2
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0
<br>This system has number of unknowns 3 and rank is 1. So this system
has arbitarily many solutions containing (3-1) = 2 arbitary constants.
<br>Another system
<br>x + y = 10
<br>x + y = 20
<br>x + y = 50
<br>Steps are:
<br>Step : 1
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
20
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
50
<p>Step : 2
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
30
<p>Step : 3
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
30
<p>Step : 4
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1
<p>Step : 5
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1
<p>Step : 6
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1
<p>As rank of [A] (in this case: rank(A) = 1) is not equal to the rank of augmented
matrix [AC] (in this case: rank(AC) = 2) , the system has no solution.
<p>However though there are other methods to compute this solution for
the matrix system, the main problem occurs are
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. Round off errors or computational
error due to the use of floating point number
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. Error due to wrong order
of the given equation.
<p>To prevent round off error due to floating point number an approach
can be used, similar to the process of doing fractional number. So we may
use 1/3 as a expression of two integer, the numerator and the denominator,
instead of .333333 (with loss of precision). Thus we can prevent this kind
of error.
<p>Consider this set of equations
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
5x<sub>3</sub> = 10
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3x<sub>2</sub> - 3x<sub>3</sub> = 3
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
2x<sub>1</sub> - x<sub>2</sub> + 2x<sub>3</sub> = 7
<br>This set of equations can be written as
<br>0&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp;
10
<br>0&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp; -3&nbsp;&nbsp;&nbsp;&nbsp;
3
<br>2&nbsp;&nbsp; -1&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;
7
<br>Now how will you evaluate this matrix without ordering?
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
The first line of input is the number of the problem. The next line contains
two integers - NumberOfUnknowns and NumberOfEquations (none of these is
less then or equal to 0 and greater then 50). The next lines contains the
matrix for the system of linear equations. There are number of rows equal
to the NumberOfEquations and number of column equal to the NumberOfUnknowns+1.
The numbers may be fractional, that is there may be numbers like 1/3 or 6/8.
An problem number zero indicates the end of input.
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
First print (without the quotation mark)
<pre>"Solution for Matrix System # N"</pre>
Here <tt>`N'</tt> is the problem number as taken from input. Then on the next line,
for each system of equations output the solution (if exists) expressed
in the fractional form in each line. You may assume each of the numerator
and denominator part will not exceed the limit of data type long long (64
bit). If there are many solutions as described above print (without the
quotation mark)
<pre>"Infinitely many solutions containing n arbitrary constants."</pre>
(here <tt>`n'</tt> is the number as described above) , and if there is no solutions
print (without the quotation mark)
<pre>"No Solution."</pre>
.Print a blank line between two systems of linear equations.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>

<pre>1
3 3
9  4  1 -17
1 -2 -6 14
1  6  0  4

2
3 3
2 2 2 2
4 4 4 4
16/1 16/1 16/1 16/1

3
2 3
1 1 10
1 1 20
2 2 50

4
1 1
3 10

0
</pre>
<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>

<pre>Solution for Matrix System # 1
x[1] = -2
x[2] = 1
x[3] = -3

Solution for Matrix System # 2
Infinitely many solutions containing 2 arbitrary constants.

Solution for Matrix System # 3
No Solution.

Solution for Matrix System # 4
x[1] = 10/3</pre>

<hr><i>Suman Mahbub</i>
<br><i>01-04-2001</i>
</body>
</html>

______________________________________________________
10110||||||false||||||
<!-- saved from url=(0022)http://internet.e-mail -->
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.75 [en] (X11; U; Linux 2.2.16-22 i586) [Netscape]">
   <meta name="Author" content="S. M. Mahbub Murshed">
   <meta name="Description" content="Light, more light">
   <title>Light, more light</title>
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
</head>
<body bgcolor="#FFFFFF" LANG="EN">
&nbsp;
<center><table BGCOLOR="#0060F0" >
<tr>
<td><a NAME="SECTION0001000000000000000000"></a><b><font color="#C0FFFF"><font size=+2>Light,
more light</font></font></b></td>
</tr>
</table></center>

<h2>
<a NAME="SECTION0001002000000000000000"></a><font color="#0070E8">The Problem</font></h2>
There is man named "mabu" for switching on-off light in our University.
He switches on-off the lights in a corridor. Every bulb has its own toggle switch. That is, if it is pressed then the bulb turns on. Another press will turn it off. To save power consumption
(or may be he is mad or something else) he does a peculiar thing. If in
a corridor there is `n' bulbs, he walks along the corridor back and forth
`n' times and in i'th walk he toggles only the switches whose serial is divisable by i. He does not press any switch when coming back to his initial position.
A i'th walk is defined as going down the corridor (while doing the peculiar thing) and coming back again.
<p>Now you have to determine what is the final condition of the last bulb. Is it on or off?
<br>&nbsp;
<h2>
<a NAME="SECTION0001003000000000000000"></a><font color="#0070E8">The Input</font></h2>
The input will be an integer indicating the n'th bulb in a corridor. Which is less then
or equals 2^32-1. A zero indicates the end of input. You should not process
this input.
<h2>
<a NAME="SECTION0001004000000000000000"></a><font color="#0070E8">The Output</font></h2>
Output "<tt>yes</tt>" if the light is on otherwise "<tt>no</tt>" , in a single line.
<h2>
<a NAME="SECTION0001005000000000000000"></a><font color="#0070E8">Sample
Input</font></h2>

<pre>3
6241
8191
0</pre>

<h2>
<a NAME="SECTION0001006000000000000000"></a><font color="#0070E8">Sample
Output</font></h2>

<pre>no
yes
no
</pre>

<hr><i>Sadi Khan</i>
<br><i>Suman Mahbub</i>
<br><i>01-04-2001</i>
</body>
</html>

______________________________________________________
10111||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><TITLE>Problem A: Find the Winning Move</TITLE></HEAD>
<BODY>

<H1 ALIGN=CENTER>Problem A: Find the Winning Move</H1>

<CENTER><TABLE>
<TR><TD>Source file:</TD><TD><TT>win.</TT>{<TT>c</TT>, <TT>cpp</TT>, <TT>java</TT>, <TT>pas</TT>}</TD></TR>
<TR><TD>Input file:</TD><TD><TT>win.in</TT></TD></TR>
<TR><TD>Output file:</TD><TD><TT>win.out</TT></TD></TR>
</TABLE></CENTER>

<P>4x4 tic-tac-toe is played on a board with four rows (numbered 0 to 3 from
top to bottom) and four columns (numbered 0 to 3 from left to right).
There are two players, <I>x</I> and <I>o</I>, who move alternately with <I>x</I> always
going first.  The game is won by the first player to get four of his or
her pieces on the same row, column, or diagonal.  If the board is full
and neither player has won then the game is a draw.

<P>Assuming that it is <I>x</I>'s turn to move, <I>x</I> is said to have a <B><I>forced win</I></B> if <I>x</I> can make a move such that no matter what moves <I>o</I> makes
for the rest of the game, <I>x</I> can win.  This does not necessarily mean that
<I>x</I> will win on the very next move, although that is a possibility.
It means that <I>x</I> has a winning strategy that will guarantee an eventual
victory regardless of what <I>o</I> does.  

<P>Your job is to write a program that, given a partially-completed game
with <I>x</I> to move next, will determine whether <I>x</I> has a forced win.  You
can assume that each player has made at least two moves, that the game has not
already been won by either player, and that the board is not full.

<P>The input file contains one or more test cases, followed by a line
beginning with a dollar sign that signals the end of the file.
Each test case begins with a line containing a question mark and
is followed by four lines representing the board; formatting is exactly as
shown in the example.  The characters used in a board description are the
period (representing an empty space), lowercase <I>x</I>, and 
lowercase <I>o</I>.  For each test case, output a line containing the (<I>row</I>, <I>column</I>) position of the <EM>first</EM> forced win for <I>x</I>, or '<TT>#####</TT>' if
there is no forced win.  Format the output exactly as shown in the example.

<P>For this problem, the <EM>first</EM> forced win is determined by board
position, not the number of moves required for victory.  Search for a
forced win by examining positions (0, 0), (0, 1), (0, 2), (0, 3),
(1, 0), (1, 1), ..., (3, 2), (3, 3), in that order, and output the
first forced win you find.  In the second test case below,
note that <I>x</I> could win immediately by playing at (0, 3) or (2, 0),
but playing at (0, 1) will still ensure victory (although it
unnecessarily <EM>delays</EM> it), and position (0, 1) comes first.

<P><B>Example input:</B>

<BLOCKQUOTE><PRE>?
....
.xo.
.ox.
....
?
o...
.ox.
.xxx
xooo
$
</PRE></BLOCKQUOTE>

<P><B>Example output:</B>

<BLOCKQUOTE><PRE>#####
(0,1)
</PRE></BLOCKQUOTE>
</BODY></HTML>

______________________________________________________
10112||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><TITLE>Problem B: Myacm Triangles</TITLE></HEAD>
</HEAD>

<BODY>

<H1 ALIGN=CENTER>Problem B: Myacm Triangles</H1>

<CENTER><TABLE>
<TR><TD>Source file:</TD><TD><TT>triangle.</TT>{<TT>c</TT>, <TT>cpp</TT>, <TT>java</TT>, <TT>pas</TT>}</TD></TR>
<TR><TD>Input file:</TD><TD><TT>triangle.in</TT></TD></TR>
<TR><TD>Output file:</TD><TD><TT>triangle.out</TT></TD></TR>
</TABLE></CENTER>

<CENTER>
<IMG SRC="http://uva.onlinejudge.org/external/101/p10112.gif" >

</CENTER>

<P>There has been considerable archeological work on the ancient Myacm culture. 
Many artifacts have been found in what
have been called power fields:  a fairly small area, less than 100 meters square
where there are from four to fifteen tall
monuments with crystals on top.  Such an area is mapped out above.  Most of
the artifacts discovered have come from
inside a triangular area between just three of the monuments, now called
the power triangle.  After considerable
analysis archeologists agree how this triangle is selected from all the
triangles with three monuments as vertices:  it is
the triangle with the largest possible area that does not contain any other
monuments inside the triangle or on an edge
of the triangle.  Each field contains only one such triangle.</P>

<P>Archeological teams are continuing to find more power fields. 
They would like to automate the task of locating the
power triangles in power fields.  Write a program that takes the positions of
the monuments in any number of power
fields as input and determines the power triangle for each power field.</P>

<P>A useful formula:  the area of a triangle with vertices 
(<I>x</I><SUB>1</SUB>, <I>y</I><SUB>1</SUB>), (<I>x</I><SUB>2</SUB>, <I>y</I><SUB>2</SUB>), and (<I>x</I><SUB>3</SUB>, <I>y</I><SUB>3</SUB>) is
the absolute value of</P>

<P><BLOCKQUOTE>
0.5 &#215; [(<I>y</I><SUB>3</SUB> <FONT FACE="Symbol">-</FONT> <I>y</I><SUB>1</SUB>)(<I>x</I><SUB>2</SUB>
<FONT FACE="Symbol">-</FONT> <I>x</I><SUB>1</SUB>) <FONT FACE="Symbol">-</FONT> (<I>y</I><SUB>2</SUB> <FONT FACE="Symbol">-</FONT> <I>y</I><SUB>1</SUB>)(<I>x</I><SUB>3</SUB>
<FONT FACE="Symbol">-</FONT> <I>x</I><SUB>1</SUB>)].
</BLOCKQUOTE></P>

<P>For each power field there are several lines of data.  The first line is
the number of monuments: at least 4, and at most 15.  For each monument
there is a data line that starts with a one character label for the monument
and is followed
by the coordinates of the monument, which are nonnegative integers less than
100. The first label is A, and the next is B, and so on.</FONT></P>

<P>There is at least one such power field described.  The end of input is
indicated by a 0 for the number of monuments. 
The first sample data below corresponds to the diagram in the problem.</P>


<P>For each power field there is one line of output.  It contains the three
labels of the vertices of the power triangle, listed
in increasing alphabetical order, with no spaces.</FONT></P>

<P><B>Example input:</B></P>
<BLOCKQUOTE><PRE>
6
A 1 0
B 4 0
C 0 3
D 1 3
E 4 4
F 0 6
4
A 0 0
B 1 0
C 99 0
D 99 99
0
</PRE></BLOCKQUOTE>
<P><B>Example output:</B></P>
<BLOCKQUOTE><PRE>
BEF
BCD
</PRE></BLOCKQUOTE>
</BODY>
</HTML>

______________________________________________________
10113||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><TITLE>Problem C: Exchange Rates</TITLE></HEAD>
<BODY>

<H1 ALIGN=CENTER>Problem C: Exchange Rates</H1>

<CENTER><TABLE>
<TR><TD>Source file:</TD><TD><TT>exchange.</TT>{<TT>c</TT>, <TT>cpp</TT>, <TT>java</TT>, <TT>pas</TT>}</TD></TR>
<TR><TD>Input file:</TD><TD><TT>exchange.in</TT></TD></TR>
<TR><TD>Output file:</TD><TD><TT>exchange.out</TT></TD></TR>
</TABLE></CENTER>

<P>Using money to pay for goods and services usually makes life easier,
but sometimes people prefer to trade items directly without any
money changing hands.  In order to ensure a consistent &#34;price&#34;,
traders set an exchange rate between items.  The exchange rate between
two items <I>A</I> and <I>B</I> is expressed as two positive integers <I>m</I> and <I>n</I>, and
says that <I>m</I> of item <I>A</I> is worth <I>n</I> of item <I>B</I>.  For example, 2 stoves
might be worth 3 refrigerators.  (Mathematically, 1 stove is worth 1.5
refrigerators, but since it's hard to find half a refrigerator, exchange
rates are always expressed using integers.)

<P>Your job is to write a program that, given a list of exchange rates,
calculates the exchange rate between any two items.

<P>The input file contains one or more commands, followed by a line
beginning with a period that signals the end of the file.
Each command is on a line by itself and is either an assertion or a
query.  An assertion begins with an exclamation point and has the format

<BLOCKQUOTE>! <I>m</I> <I>itema</I> = <I>n</I> <I>itemb</I></BLOCKQUOTE>

where <I>itema</I> and <I>itemb</I> are distinct item names and <I>m</I> and <I>n</I> are
both positive integers less than 100.  This command says that <I>m</I> of
<I>itema</I> are worth <I>n</I> of <I>itemb</I>.  A query begins with a question mark,
is of the form

<BLOCKQUOTE>? <I>itema</I> = <I>itemb</I></BLOCKQUOTE>

and asks for the exchange rate between <I>itema</I> and <I>itemb</I>, where <I>itema</I>
and <I>itemb</I> are distinct items that have both appeared in previous
assertions (although not necessarily the same assertion).
For each query, output the exchange rate between <I>itema</I> and <I>itemb</I> based on
all the assertions made up to that point.  Exchange rates must be in
integers and must be reduced to lowest terms.  If no exchange rate can be
determined at that point, use question marks instead of integers.  Format
all output exactly as shown in the example.

<P>Note:

<UL>
<LI>Item names will have length at most 20 and will contain only lowercase letters.
<LI>Only the singular form of an item name will be used (no plurals).
<LI>There will be at most 60 distinct items.
<LI>There will be at most one assertion for any pair of distinct items.
<LI>There will be no contradictory assertions.  For example, &#34;2 pig = 1
cow&#34;, &#34;2 cow = 1 horse&#34;, and &#34;2 horse = 3 pig&#34; are contradictory.
<LI>Assertions are not necessarily in lowest terms, but output must be.
<LI>Although assertions use numbers less than 100, queries may result in
larger numbers that will not exceed 10000 <EM>when reduced to lowest
terms</EM>.
</UL>

<P><B>Example input:</B>

<BLOCKQUOTE><PRE>! 6 shirt = 15 sock
! 47 underwear = 9 pant
? sock = shirt
? shirt = pant
! 2 sock = 1 underwear
? pant = shirt
.
</PRE></BLOCKQUOTE>

<P><B>Example output:</B>

<BLOCKQUOTE><PRE>5 sock = 2 shirt
? shirt = ? pant
45 pant = 188 shirt
</PRE></BLOCKQUOTE>
</BODY></HTML>

______________________________________________________
10114||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><TITLE>Problem D: Loansome Car Buyer</TITLE></HEAD>
<BODY>

<H1 ALIGN=CENTER>Problem D: Loansome Car Buyer</H1>

<CENTER><TABLE>
<TR><TD>Source file:</TD><TD><TT>loan.</TT>{<TT>c</TT>, <TT>cpp</TT>, <TT>java</TT>, <TT>pas</TT>}</TD></TR>
<TR><TD>Input file:</TD><TD><TT>loan.in</TT></TD></TR>
<TR><TD>Output file:</TD><TD><TT>loan.out</TT></TD></TR>
</TABLE></CENTER>

<P>Kara Van and Lee Sabre are lonesome. A few
months ago they took out a loan to buy a new car, but now
they're stuck at home on Saturday night without wheels and without 
money. You see, there was a wreck and the car was totaled. 
Their insurance paid $10,000, the current value of the car. The only
problem is that they owed the bank $15,000, and the bank wanted payment
immediately, since there was no longer a car for collateral. In just a few
moments, this unfortunate couple not only lost their car, but lost
an additional $5,000 in cash too.</P>

<P>What Kara and Lee failed to account for was depreciation, the loss in value
as the car ages. 
Each month the buyer's loan payment reduces the amount owed on the car.
However, each month, the car also depreciates as it gets older.
Your task is to write a program that
calculates the first time, measured in months, that a car buyer owes less
money than a car is worth. 
For this problem, depreciation is specified as a percentage of the previous
month's value.</P>

<P>Input consists of information for several loans. 
Each loan consists of
one line containing the duration in months of the loan, the down payment,
the amount of the loan, and the number of depreciation records that follow.
All values are nonnegative, with loans being at most 100 months
long and car values at most $75,000.
Since depreciation is not constant, the varying rates are specified in a series
of depreciation records.
Each depreciation record consists of one line with a month number and
depreciation percentage, which is more than 0 and less than 1.
These are in strictly increasing order by month, starting at
month 0. Month 0 is the depreciation that applies 
immediately after driving the car off the lot and is always present in the data.
All the other percentages are the
amount of depreciation at the end of the corresponding month. Not all months
may be listed in the data. If a month is not listed, then the previous 
depreciation percentage applies. The end of the input is signalled by a
negative loan duration - the other three values will be present but
indeterminate.</P>

<P>For simplicity, we will assume a 0% interest loan, thus the car's initial
value will be the loan amount plus the down payment. It is possible
for a car's value and amount owed to be positive numbers less than $1.00.
Do <I>not</I> round values to a whole number of cents ($7,347.635 should not be 
rounded to $7,347.64).
</P>

<P>
Consider the first example below of borrowing $15,000 for 30 months. As the
buyer drives off the lot, he still owes $15,000, but the car has dropped in
value by 10% to $13,950. After 4 months, the buyer has made
4 payments, each of $500, and the car has further depreciated 3% in months 1
and 2 and 0.2% in months 3 and 4. At this time, the car is worth
$13,073.10528 and the borrower only owes $13,000.
</P>

<P>For each loan, the output is the number of complete months before the
borrower owes less than the car is worth. Note that English requires
plurals (5 month<I>s</I>) on all values other than one (1 month).</P>

<P><B>Example input:</B></P>
<BLOCKQUOTE><PRE>
30 500.0 15000.0 3
0 .10
1 .03
3 .002
12 500.0 9999.99 2
0 .05
2 .1
60 2400.0 30000.0 3
0 .2
1 .05
12 .025
-99 0 17000 1
</PRE></BLOCKQUOTE>


<P><B>Example output:</B></P>
<BLOCKQUOTE><PRE>
4 months
1 month
49 months
</PRE></BLOCKQUOTE>

</BODY></HTML>

______________________________________________________
10115||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><TITLE>Problem E: Automatic Editing</TITLE></HEAD>
</HEAD>

<BODY>

<H1 ALIGN=CENTER>Problem E: Automatic Editing</H1>

<CENTER><TABLE>
<TR><TD>Source file:</TD><TD><TT>autoedit.</TT>{<TT>c</TT>, <TT>cpp</TT>,
<TT>java</TT>, <TT>pas</TT>}</TD></TR>
<TR><TD>Input file:</TD><TD><TT>autoedit.in</TT></TD></TR>
<TR><TD>Output file:</TD><TD><TT>autoedit.out</TT></TD></TR>
</TABLE></CENTER>


<P>Text-processing tools like <I>awk</I> and <I>sed</I> allow you to 
automatically perform a sequence of editing operations based on a script.
For this problem we consider the specific case in which we want to 
perform a series of string replacements, within a single line of text,
based on a fixed set of rules.  Each rule specifies the string to find,
and the string to replace it with, as shown below.</P>

<P><BLOCKQUOTE>
<TABLE>
<TR><TD>Rule </TD><TD>Find </TD><TD> Replace-by</TD></TR>
<TR><TD ALIGN=RIGHT>1. </TD><TD><TT>ban  </TT></TD><TD><TT> bab</TT></TD></TR>
<TR><TD ALIGN=RIGHT>2. </TD><TD><TT>baba </TT></TD><TD><TT> be</TT></TD></TR>
<TR><TD ALIGN=RIGHT>3. </TD><TD><TT>ana  </TT></TD><TD><TT> any</TT></TD></TR>
<TR><TD ALIGN=RIGHT>4. </TD><TD><TT>ba b </TT></TD><TD><TT> hind the g</TT></TD></TR>
</TABLE></BLOCKQUOTE></P>

<P>To perform the edits for a given line of text, start with the first
rule.  Replace the first occurrence of the <I>find</I> 
string within the text by the <I>replace-by</I> string, then try to 
perform the same replacement <EM>again</EM> on the new text.  
Continue until the <I>find</I> string no longer occurs within the text,
and then move on to the next rule.  
Continue until all the rules have been considered. 
Note that (1) when searching for a <I>find</I> string, you always
start searching at the beginning of the text, (2) once you have
finished using a rule (because the <I>find</I> string no longer occurs)
you never use that rule again, and (3) case is significant.</P>

<P>For example, suppose we start with the line</P>
<P><BLOCKQUOTE><TT>banana boat</TT></BLOCKQUOTE></P>
<P>and apply these rules.  
The sequence of transformations is shown below, where occurrences
of a <I>find</I> string are underlined and replacements are boldfaced.
Note that rule 1 was used twice, then rule 2 was used once, then
rule 3 was used zero times, and then rule 4 was used once.</P>

<P><BLOCKQUOTE>
<TABLE>
<TR><TD></TD><TD>Before   </TD><TD>After</TD></TR>
<TR><TD><TT>   </TT></TD><TD><TT><U>ban</U>ana boat      </TT></TD><TD><TT><B>bab</B>ana boat</TT></TD></TR>
<TR><TD><TT>   </TT></TD><TD><TT>ba<U>ban</U>a boat      </TT></TD><TD><TT>ba<B>bab</B>a boat</TT></TD></TR>
<TR><TD><TT>   </TT></TD><TD><TT><U>baba</U>ba boat      </TT></TD><TD><TT><B>be</B>ba boat</TT></TD></TR>
<TR><TD><TT>   </TT></TD><TD><TT>be<U>ba b</U>oat      </TT></TD><TD><TT>be<B>hind the g</B>oat</TT></TD></TR>
</TABLE>
</BLOCKQUOTE></P>


<P>The input contains one or more test cases, followed by a line
containing only 0 (zero) that signals the end of the file.  Each test
case begins with a line containing the number of rules, which
will be between 1 and 10.  
Each rule is specified by a pair of lines, where the first line
is the <I>find</I> string and the second line is the <I>replace-by</I>
string.  Following all the rules is a line containing the text to edit.
For each test case, output a line containing the final edited text.</P>

<P>Both <I>find</I> and <I>replace-by</I> strings will be at most 80
characters long.  <I>Find</I> strings will contain at least one 
character, but <I>replace-by</I> strings may be empty (indicated
in the input file by an empty line).  During the edit process the
text may grow as large as 255 characters, but the final output text
will be less than 80 characters long.</P>

<P>The first test case in the sample input below corresponds to the example
shown above.</P>

<P><B>Example input:</B></P>
<BLOCKQUOTE><PRE>
4
ban
bab
baba
be
ana
any
ba b
hind the g
banana boat
1
t
sh
toe or top
0
</PRE></BLOCKQUOTE>

<P><B>Example output:</B></P>
<BLOCKQUOTE><PRE>
behind the goat
shoe or shop
</PRE></BLOCKQUOTE>
</BODY>
</HTML>

______________________________________________________
10116||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML><HEAD><TITLE>Problem F: Robot Motion</TITLE></HEAD>
</HEAD>

<BODY>

<H1 ALIGN=CENTER>Problem F: Robot Motion</H1>

<CENTER><TABLE>
<TR><TD>Source file:</TD><TD><TT>robot.</TT>{<TT>c</TT>, <TT>cpp</TT>, <TT>java</TT>, <TT>pas</TT>}</TD></TR>
<TR><TD>Input file:</TD><TD><TT>robot.in</TT></TD></TR>
<TR><TD>Output file:</TD><TD><TT>robot.out</TT></TD></TR>
</TABLE></CENTER>

<CENTER>
<img src="http://uva.onlinejudge.org/external/101/p10116.gif" >
</CENTER>

<P>A robot has been programmed to follow the instructions in its path.
 Instructions for the next
direction the robot is to move are laid down in a grid.  The possible
instructions are</P>

<P>
<TT>N </TT>north (up the page)<br>
<TT>S </TT>south (down the page)<br>
<TT>E </TT>east (to the right on the page)<br>
<TT>W </TT>west (to the left on the page)</P>

<P>For example, suppose the robot starts on the north (top) side of Grid 1
and starts
south (down).  The path the robot follows is shown.  The robot goes through 
10 instructions
in the grid before leaving the grid.</P>

<P>Compare what happens in Grid 2:  the robot goes through 3  instructions
only once, and then
starts a loop through 8 instructions, and never exits.</P>

<P>You are to write a program that determines how long it takes a robot to get out of the grid or
how the robot loops around.</P>


<P>There will be one or more grids for robots to navigate.  The data for
each is in the following form. On the first line are three integers
separated by blanks:  the number of rows in the grid, the number of
columns in the grid, and the number of the column in which the robot
enters from the north.  The possible entry columns are numbered starting
with one at the left.  Then come the rows of the direction instructions.
Each grid will have at least one and at most 10 rows and columns
of instructions.  The lines of instructions contain only the characters
<TT>N</TT>, <TT>S</TT>, <TT>E</TT>, or <TT>W</TT>
with no blanks.

The end of  input is indicated by a row containing <TT>0 0 0</TT>.</P>
 

<P>For each grid in the input there is one line of output.  Either the robot
follows a certain
number of  instructions and exits the grid on any one the four sides or
else the robot follows
the instructions on a certain number of locations once, and then the
instructions on some
number of locations repeatedly. The sample input below corresponds to the
two grids above
and illustrates the two forms of output.  
The word "step" is
always
immediately followed by "(s)" whether or not the number before it is 1.</P>

<P><B>Example input:</B></P>
<BLOCKQUOTE><PRE>
3 6 5
NEESWE
WWWESS
SNWWWW
4 5 1
SESWE
EESNW
NWEEN
EWSEN
0 0 0
</PRE></BLOCKQUOTE>
<P><B>Example output:</B></P>
<BLOCKQUOTE><PRE>
10 step(s) to exit
3 step(s) before a loop of 8 step(s) 
</PRE></BLOCKQUOTE>

</BODY></HTML>



______________________________________________________
10117||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem A. Nice Milk</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem A. Nice Milk</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Little Tomy likes to cover his bread with some milk. He does this by putting it in the cup so that one of its sides (called bottom side) touches the bottom of the cup, just as the picture below:
<P align=center>
<img src="http://uva.onlinejudge.org/external/101/p10117.gif" >
<P>
Since the milk in the cup is limited, only part of the bread is covered with milk(as shown in the pictures). That is, only the area between the surface of the milk and the bottom side of the bread is covered.
Note that the distance between these two lines is always h - the depth of the milk, which is also known to him.
<P>
Tomy wants to cover this bread with largest possible area of milk in this way, but he doesn't want to do more than k actions. Help him, will you?
<P>
(You may assume that the cup is wide enough, wider than any side of the bread, so it's possible to cover any side completely)

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will contain no more than 10 test cases. Each test case begins with a line containing three integers n,k and h (3<=n<=20, 0<=k<=8, 0<=h<=10). A piece of bread is guaranteed to be a convex polygon of n vertices. In the following n lines, each line contains two integers xi and yi(0<=xi,yi<=1000), representing the Cartesianism coordinate of the ith vertex. The vertices are anti-clockwise numbered. The test case containing n=0, k=0, h=0 will terminate the input, you should not give an answer to this case.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
Output the area of the largest possible area of bread covered with milk with two decimal places. Output one line for each test case.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
4 2 1
1 0
3 0
5 2
0 4
0 0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
7.46
</PRE>

</BODY>
</HTML>

______________________________________________________
10118||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem B. Free Candies</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem B. Free Candies</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Little Bob is playing a game. He wants to win some candies in it - as many as possible.<p>

<p> 
There are 4 piles, each pile contains N candies. Bob is given a basket which can hold at most 5 candies.  Each time, he puts a candy at the top of one pile into the basket, and if there're two candies of the same color in it ,he can take both of them outside the basket and put them into his own pocket.  When the basket is full and there are no two candies of the same color, the game ends. If the game is played perfectly, the game will end with no candies left in the piles.

<p> For example, Bob may play this game like this (N=5): 
<p>
<table width="93%" border="1" align="center">
  <tr> 
    <td width="8%">Step1</td>
    <td colspan="2">Initial Piles</td>
    <td width="8%">Step2</td>
    <td colspan="2">Take one from pile #2</td>
  </tr>
  <tr> 
    <td width="8%">Piles</td>
    <td width="16%">Basket</td>
    <td width="19%">Pocket</td>
    <td width="8%">Piles</td>
    <td width="17%">Basket</td>
    <td width="32%">Pocket</td>
  </tr>
  <tr> 
    <td width="8%"> 
      <pre>
1 2 3 4
1 5 6 7
2 3 3 3
4 9 8 6
8 7 2 1</pre>
    </td>
    <td width="16%">nothing</td>
    <td width="19%">nothing</td>
    <td width="8%"> 
      <pre>
1   3 4
1 5 6 7
2 3 3 3
4 9 8 6
8 7 2 1</pre>
    </td>
    <td width="17%">2</td>
    <td width="32%">nothing</td>
  </tr>
  <tr> 
    <td width="8%">Step3</td>
    <td colspan="2">Take one from pile #2</td>
    <td width="8%">Step4</td>
    <td colspan="2">Take one from pile #3</td>
  </tr>
  <tr> 
    <td width="8%">Piles</td>
    <td width="16%">Basket</td>
    <td width="19%">Pocket</td>
    <td width="8%">Piles</td>
    <td width="17%">Basket</td>
    <td width="32%">Pocket</td>
  </tr>
  <tr> 
    <td width="8%"> 
      <pre>
1   3 4
1   6 7
2 3 3 3
4 9 8 6
8 7 2 1</pre>
    </td>
    <td width="16%">2 5</td>
    <td width="19%">nothing</td>
    <td width="8%"> 
      <pre>
1     4
1   6 7
2 3 3 3
4 9 8 6
8 7 2 1</pre>
    </td>
    <td width="17%">2 3 5</td>
    <td width="32%">nothing</td>
  </tr>
  <tr> 
    <td width="8%">Step5</td>
    <td colspan="2">Take one from pile #2</td>
    <td width="8%">Step6</td>
    <td colspan="2">put two candies into his pocket</td>
  </tr>
  <tr> 
    <td width="8%">Piles</td>
    <td width="16%">Basket</td>
    <td width="19%">Pocket</td>
    <td width="8%">Piles</td>
    <td width="17%">Basket</td>
    <td width="32%">Pocket</td>
  </tr>
  <tr> 
    <td width="8%"> 
      <pre>
1     4
1   6 7
2   3 3
4 9 8 6
8 7 2 1</pre>
</td>
    <td width="16%">2 3 3 5</td>
    <td width="19%">nothing</td>
    <td width="8%"> 
      <pre>
1     4
1   6 7
2   3 3
4 9 8 6
8 7 2 1</pre>
</td>
    <td width="17%">2 5</td>
    <td width="32%">a pair of 3</td>
  </tr>
</table>
<p>
Note that different numbers indicate different colors, there are 20 kinds of colors numbered 1..20.

<p>'Seems so hard...'Bob got very much puzzled. How many pairs of candies could 
  he take home at most? 
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P> The input will contain no more than 10 test cases. Each test case begins with a line containing 
  a single integer n(1<=n<=40) representing the height of the piles. In the following 
  n lines, each line contains four integers xi1,xi2,xi3,xi4 (in the range 1..20). Each 
  integer indicates the color of the corresponding candy. The test case containing n=0 
  will terminate the input, you should not give an answer to this case. 
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
Output the number of pairs of candies that the cleverest little child can take home. Print your answer in a single line for each test case.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
5
1 2 3 4
1 5 6 7
2 3 3 3
4 9 8 6
8 7 2 1
1
1 2 3 4
3
1 2 3 4
5 6 7 8
1 2 3 4
0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
8
0
3
</PRE>
</BODY>
</HTML>

______________________________________________________
10119||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem C. Farewell, my friend</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem C. Farewell, my friend</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Liz and Lilly used to be very good friends, but recently, they got into a silly quarrel and finally decided to say farewell to each other. 'I don't want to see you any more! I must put some new rocks somewhere so that no matter how I travel from my house, I can never see your face.' They both said.
<P>
They live in a small village which is divided into n*n grid. Liz always lives in the top-left corner (i.e grid (1,1)), and Lilly always lives in the bottom-right corner. (i.e gird(n,n)). Each grid of land is one of the following types: <b>land</b>, <b>lake</b> or <b>rock</b>. They cannot move across a <b>rock</b> or a <b>lake</b>, of course. And although people cannot see through a <b>rock</b>, it's easy for them to see through a piece of <b>land</b> or a <b>lake</b>. Note that they can only move north, south, east or west one grid at a time,  NOT diagonally, and they are a bit shortsighted - they can only see things that are no more than k grids away in front of them (in the same row or column, they don't see anyhing diagonally).
<P>
Since they're both lazy, they want to put as few new rocks as possible. A new rock can only be put on a piece of land that at least one of the two girls can reach from her house. Note that they don't want to put new rocks too close to their houses, so the new rocks must be at least m grids away from both of the houses. By definition, grid(x1,y1) and grid(x2,y2) are supposed to be abs(x1-x2)+abs(y1-y2) grids away from each other. 

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will contain no more than 8 test cases. Each test case begins with a line containing three  integers n, k and m(5<=n<=20, 1<=k<=n, 1<=m<=n) separated by a single space. The following n lines each contains n characters indicating the map of a village. The capital letter 'O' represents a <b>lake</b>,  '*' represents a <b>rock</b>, '.' represents a piece of <b>land</b>. The test case containing n=0, k=0, m=0 will terminate the input, you should not give an answer to this 'test case'. No extra spaces at the beginning/end of each line.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
Output the least number of new rocks that must be put in order to separate them. Print your answer in a single line for each test case. If no solution found, you should output -1 in the corresponding line.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
7 4 4
.......
......*
....*O.
**.*.O.
...*...
.OO..*.
.......
0 0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
2
</PRE>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Note</A></FONT></H2>
<P>
If they only set one new rock at (4,3), when Liz comes to (2,6) and Lilly comes to (5,6), they can still see each other. Thus, an additional rock at (2,6) must be put. The new map is shown below: ('N' represents a new rock)
<PRE>
.......
.....N*
....*O.
**N*.O.
...*...
.OO..*.
.......
</PRE>
</BODY>
</HTML>

______________________________________________________
10120||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem D. Gift?!</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem D. Gift?!</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
There is a beautiful river in a small village. N rocks are arranged in a straight line numbered 1 to N from left bank to the right bank, as shown below.
<P>
[Left Bank] - [Rock1] - [Rock2] -  [Rock3] -  [Rock4] ... [Rock n] -  [Right Bank]
<P>
The distance between two adjacent rocks is exactly 1 meter, while the distance between the left bank and rock 1 and the distance between Rock n and the right bank are also 1 meter.
<P>
Frog Frank was about to cross the river, his neighbor Frog Funny came to him and said, 
<p>
'Hello, Frank. Happy Children's Day! I have a gift for you. See it? A little parcel on Rock 5.'
<p>
'Oh, that's great! Thank you! I'll get it.'
<p>
'Wait...This present is for smart frogs only. You can't get it by jumping to it directly.'
<p>
'Oh? Then what should I do?'
<p>
'Jump more times. Your first jump must be from the left bank to Rock 1, then, jump as many times as you like - no matter forward or backward, but your ith jump must cover 2*i-1 meters. What's more, once you return to the left bank or reach the right bank, the game ends, and no more jumps are allowed.'<br>
<p>
'Hmmm, not easy... let me have a think!' Answered Frog Frank, 'Should I give it a try?'
<P>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will contain no more than 2000 test cases. Each test case contains a single line. It contains two positive integers N (2<=N<=10^6), and M (2<=M<=N),   M indicates the number of the rock on which the gift is located. A test case in which N=0, M=0 will terminate the input and should not be regarded as a test case.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, output a single line containing 'Let me try!' If it's possible to get to Rock m, otherwise, output a single line containing 'Don't make fun of me!'

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
9 5
12 2
0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Don't make fun of me!
Let me try!
</PRE>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Note</A></FONT></H2>
<P>
In test case 2, Frank can reach the gift in this way:
<p>
Forward(to rock 4),  Forward(to rock 9),  Backward(to rock 2, got the gift!)
<p>
Note that if Frank jumps forward in his last jump, he will land on the right bank(assume that banks are large enough) and thus, lost the game.

 

</BODY>
</HTML>

______________________________________________________
10121||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem E. Legendary Pokemon</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem E. Legendary Pokemon</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Do you know Pokemon? It's a kind of very lovely cute sprite. In the world of pokemon, people live with their favorite pokemons and train them with love.
One night, you saw a strange yet powerful pokemon in a narrow dark cave. 'It must be the legendary pokemon. If only I could catch him!' You thought. Setting our your best pokemon, you decided to catch it - the legendary pokemon.
<P>
As a skilled pokemon trainer, you know that all you have to do is to battle with it and throw a magic BALL to it during the battle. If you're lucky enough, the pokemon will be caught in the BALL, and become yours. It sounds easy, but the balls can not always catch pokemons, especially fierce ones, so you must be careful and follow a perfect strategy.
<P>
The battle is divided into rounds. In each round, your pokemon makes a move first, then does the wild pokemon (you can choose not to do anything). Each round, a pokemon makes a <b>move</b> or uses an <b>item</b> to attack its opponent or heal itself. You may also use a BALL to catch it in a round.
<P>
A move may be used as many times as you like, but can only be of the following three types:
<P>
<b>1. Normal Attack</b><br>
The move attacks the opponent. As a result, the HP(life value) of the opponent will decrease.
<P>
<b>2. Status change</b><br>
The move itself does not cause any damage, but you can make your opponent sleepy or confused.
if your opponent's sleepy, he cannot make any move, if your opponent is
confused, he will attack himself sometimes. These will be effective within 3 rounds (that is, the victim
will be in the wrong status 3 times, and during that time, any Status-change type moves will not take effect).
<P>
<b>3. Poison attack</b><br>
This move attacks the opponent and makes him poisoned. If a pokemon is poisoned, it will lose an additional <b>poison value</b> units of HP BEFORE he can make a move. 
The effect lasts for 3 rounds(that is, the victim will be hurt by poison 3 times, during that time, any poison-type attack will still do damage, but will take no OTHER effect)<br>
<P>
The damage that the opponent will take after being attacked by a Normal Attack or Poison attack is called <b>damage value</b> of the move; the probability that the move hits the target is called <b>accuracy</b> of that move. If a pokemon is confused by a move, the probability that it CHOOSE to attack itself is called <b>confusion value</b> of that move.
<P>
There is only one type of item available - <b>Hyper Potion</b>. It recovers a pokemon 200 HP. <br>
<P>
A BALL could be of the following types:
<P>
1.<b>Poke Ball</b> - Used for catching pokemon. (BasicProbability=0.05)<br>
2.<b>Great Ball</b> - Catches pokemon more easily than a pokeball. (BasicProbability=0.1)<br>
3.<b>Ultra Ball</b> - Capture pokemon more easily than with the great ball. (BasicProbability=0.15)<br>
4.<b>Level Ball</b> - If your pokemon is higher levels than the target pokemon then BasicProbability=0.18, otherwise, it is the same as a Great Ball.<br>
5.<b>Love Ball</b> - Captures pokemon of an opposite gender than yours easily (BasicProbability=0.20), otherwise, BasicProbability=0.0 <br>
<br>
The probability that a BALL can catch a pokemon is computed this way:<br>
<center><pre>P = BasicProbability + CriticalLifeBonus + PoisonedBonus + StatusBonus</pre></center>
<p>
CriticalLifeBonus=0.05 if and only if 50 < the target's HP <=100.<br>
CriticalLifeBonus=0.1 if and only if 0 < the target's HP <=50.<br>
PoisonedBonus=0.1 if and only if the target is poisoned.<br>
StatusBonus=0.05 if and only if the target is in the wrong status(sleepy or confused).<br>
<P>
All Bonus values are set to zero by default.
<P>
Initially, Both pockemons' HP are full(HP values can never be greater than their maximal values) and are in good health(not sleepy, confused or poisoned). Then, the battle starts. When one of the pokemons's HP is 0 or below 0, the battle ends immediately and the legendary pokemon goes away(you failed). When you catch it, the battle also ends(congratulations!)
<P>
Since the pokemon is wild, it has not been trained mentally. So it follows a very simple strategy during the battle:
<P>
1. In the ith round, he may decide to run away. The probability he makes this decision is run[i]%; (he never fails to escape even if he's sleepy, confused or poisoned)<br>
2. If he decided to continue the battle, he check if his HP. If it's not greater than 150, he uses a Hyper Potion(even if he's sleepy or confused) if he has any, otherwise, he uses his only normal attack move - Cross Chop. Its Accuracy is 30%, but the damage value is 300.<br>
<P>
It is well known that the legendary pokemon is at level 50 and is male. His initial HP is always 999, but people don't know how many Hyper Potions he has. People never saw him battle for 6 or more rounds, so you may assume this is also true for your battle.<br>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will contain no more than 20 test cases. Each test case begins with a line containing three
integers l,g and HP describing your pokemon. l is your pokemon's level(1<=l<=100), g(0<=g<=1) is its gender. 0=male, 1=female. HP is your initial(and maximal) HP value(1<=HP<=999).
The second line contains 5 integers. The ith integer is the value of run[i], (i.e.run[i]% is the probability that the wild pokemon flee in his ith move.) It is guaranteed that 0<=run[i]<=run[i+1] for all 1<=i<=4, and that run[5]=100.
The next line contains two integers p1, p2(0<=p1,p2<=10). p1 is the number of Hyper Potions that you have, p2 is that of the wild pokemon's.
The next line contains 5 integers b1,b2,b3,b4,b5(0<=b1,b2,b3,b4,b5<=5), the number of corresponding balls you have(i.e b1 for Poke Ball...).
The next line contains a single integer k(0<=k<=4), the number of moves your pokemon masters.
In the following k lines, each line begins with an integer t(1<=t<=3), representing the type of the move.
If t=1, there are two integers following in the same line: damage value and accuracy*100; if t=2, there are
two integers following in the same line: confusion value*100 and accuracy*100. Note that the move makes the opponent sleepy if and only if confusion value=0.
If t=3, there are three integers following in the same line: damage value, poison value and accuracy*100.
All the values defined in the three types will be between 0 and 999 (inclusive) while 0<=accuracy, confusion<=100.
The test case containing l=g=HP=0 will terminate the input and should not be regarded as a test case.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, output a single line containing the probability that you catch the pokemon if you follows a perfect strategy. Print your answer with four decimal places.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
30 1 500
10 100 100 100 100
0 10
0 0 0 0 1
2
1 100 80
3 300 50 60
0 0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
0.2340
</PRE>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Note</A></FONT></H2>
<P>
You should follow this strategy:
use move 2(poison attack) in round 1, then throw his ball in round 2.
<P>
if the first move hits, the probability is (1-10%)*(0.2+0.1)=0.27, otherwise, the probability=(1-10%)*0.2=0.18, so
the total probability=60% * 0.27 + 40% * 0.18 = 0.2340
<P>
(note that in some cases, the strategy is much more complex and may be dynamic - you may do different things in different conditions)
</BODY>
</HTML>

______________________________________________________
10122||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem F. Mysterious Mountain</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem F. Mysterious Mountain</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
A group of M people is chasing a very strange animal. They believe that it will stay on a myterious mountain T, so they decided to climb on it and have a loot. The mountain looks ordinary, shown below:
<P>
<center><img src="http://uva.onlinejudge.org/external/101/p10122a.gif" ></center>
<P>
That is, the outline of the moutain consists of N+1 segments. The endpoints of them are numbered 0..N+1 from left to right. That is to say, x[i] < x[i+1] for all 0<=i<=n. And also, y[0]=y[n+1]=0, 1<=y[i]<=1000 for all 1<=y<=n. 
<P>
According to their experience, the animal is most likely to stay at one of the N endpoits numbered 1..N . And... funny enough, they soon discover that M=N, so each of them can choose a different endpoint to seek for the animal. 
<P>
Initially, they are all at the foot of the mountain. (i.e at (si,0) ) For every person i, he is planing to go left/right to some place (x,0) (where x is an integer - they do not want to take time to work out an accurate place) at the speed of wi, then climb directly to the destination along a straight line(obviously, no part of the path that he follows can be OVER the mountain - they can't fly) at the speed of ci. They don't want to miss it this time, so the teamleader wants the latest person to be as early as possible. How fast can this be done?
</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will contain no more than 10 test cases. Each test case begins with a line containing a single integer N(1<=N<=100). In the following N+2 lines, each line contains two integers xi and yi(0<=xi,yi<=1000) indicating the coordinate of the ith endpoints. in the following N lines, each line contains three intergers ci,wi and si describing a person(1<=ci < wi<=100, 0<=si<=1000) - the climbing speed, walking speed and initial position. The test case containing N=0 will terminate the input and should not be regarded as a test case.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, output a single line containing the least time that these people must take to complete the mission, print the answer with two decimal places.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
3
0 0
3 4
6 1
12 6
16 0
2 4 4
8 10 15
4 25 14
0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
1.43
</PRE>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Note</A></FONT></H2>
<P>
In this example, Person 1 goes to (5,0) and climbs to endpoint 2, Person 2 climbs directly to endpoint 3. person 3 goes to (4,0) and climbs to endpoint 1. Shown below:
<P>
<center><img src="http://uva.onlinejudge.org/external/101/p10122a.gif" ></center>
</BODY>
</HTML>

______________________________________________________
10123||||||false||||||
<title>Problem - No Tipping</title> 

<h2>Problem A - No Tipping</h2>

As Archimedes famously observed, if you put an object on a lever arm,
it will exert a twisting force around the lever's fulcrum. This
twisting is called torque and is equal to the object's weight
multiplied by its distance from the fulcrum (the angle of the lever
also comes in, but that does not concern us here). If the object is to
the left of the fulcrum, the direction of the torque is
counterclockwise; if the object is to the right, the direction is
clockwise. To compute the torque around a support, simply sum all the
torques of the individual objects on the lever.
<p>
The challenge is to keep the lever balanced while adjusting the
objects on it. Assume you have a straight, evenly weighted board, 20
meters long and weighing three kilograms. The middle of the board is
the center of mass, and we will call that position 0. So the possible
positions on the board range from -10 (the left end) to +10 (the right
end). The board is supported at positions -1.5 and +1.5 by two equal
fulcrums, both two meters tall and standing on a flat floor. On the
board are six packages, at positions -8, -4, -3, 2, 5 and 8, having
weights of 4, 10, 10, 4, 7 and 8 kilograms, respectively as in the
picture below.

<center>
<p>
<img align="center" src="http://uva.onlinejudge.org/external/101/p10123.gif" > 
<p>
</center>

Your job is to remove the packages one at a time in such a way that
the board rests on both supports without tipping. The board would tip
if the net torque around the left fulcrum (resulting from the weights
of the packages and the board itself) were counterclockwise or if the
net torque around the right fulcrum were clockwise.  A possible
solution to this problem is: first remove the package at position -4,
then the package at 8, then -8, then 5, then -3 and finally 2.  

<p>

You are to write a program which solves problems like the one
described above.  The input contains multiple cases.  Each case starts
with three integers: the length of the board (in meters, at least
3), the weight of the board (in kilograms) and <em>n</em> the
number of packages on the board (<em>n</em> &lt;= 20).
The board is supported at positions -1.5 and +1.5 by two equal
fulcrums, both two meters tall and standing on a flat floor.
The following <em>n</em> lines contain two integers each: the position of a
package on board (in meters measured from the center,
negative means to the left) and the weight of the package (in
kilograms).  A line containing three 0's ends the input.  For each
case you are to output the number of the case in the format shown
below and then <em>n</em> lines each containing 2 integers, the
position of a package and its weight, in an order in which the packages
can be removed without causing the board to tip.  If there is no
solution for a case, output a single line <tt>Impossible</tt>.  There
is no solution if in the initial configuration the board is not
balanced.

<h3>Sample input</h3>
<pre>
20 3 6
-8 4
-4 10
-3 10
2 4
5 7
8 8
20 3 15
1 10 
8 5
-6 8
5 9
-8 4
8 10
-3 10
-4 5
2 9
-2 2
3 3
-3 2
5 1
-6 1
2 5
30 10 2
-8 100
9 91
0 0 0 
<pre>
 
<h3>Possible Output for sample input</h3>
<pre>
Case 1:
-4 10
8 8
-8 4
5 7
-3 10
2 4
Case 2:
1 10 
8 5
-6 8
5 9
-8 4
8 10
-3 10
-4 5
2 9
-2 2
3 3
-3 2
5 1
-6 1
2 5
Case 3:
Impossible
</pre>

______________________________________________________
10124||||||false||||||
<img src=p10124.jpg align=right>
<h2>Problem B - Subway</h2>
Subway trains are meant to move people as quickly, safely, and comfortably
as possible from station to station.  Although the train drivers' unions
may not agree, computer operated trains accomplish these goals more
effectively than human operated trains.  You are to determine
the optimal control strategy to move the train from one station to another
within the constraints imposed by safety and comfort considerations,
as well as the physical limitations of the train itself.
<p>
The parameters to the problem are all positive integers not greater than 1000.
<ul>
<li><i>d</i> - the distance between stations, in metres
<li><i>m</i> - the maximum allowable speed of the train, in metres/sec
<li><i>a</i> - the maximum absolute acceleration of the train, in metres/sec<sup>2</sup>
<li><i>j</i> - the maximum absolute <i>jerk</i>, in metres/sec<sup>3</sup>
</ul>
The train must be completely stopped at each station and must move in one
direction at speeds not exceeding <i>m</i>.  
Acceleration can be positive (forward) or negative (backwards)
but its absolute value must not exceed <i>a</i>.
The last parameter, <i>jerk</i>, is the rate of change of acceleration in either 
direction.  That is, acceleration cannot increase or decrease at greater
than this rate.  This parameter prevents toppling the standing passengers.
<p>
There are several test cases.  For each test case, standard input has a
single line with <i>d, m, a, j</i>.  For each test case, standard
output should contain a single line giving the minimum time in seconds,
to the nearest 0.1 second, required to move between the stations.
<h3>Sample Input</h3>
<pre>
1000 70 20 1
</pre>
<h3>Output for Sample Input</h3>
<pre>
31.7
</pre>

______________________________________________________
10125||||||false||||||
<img src=p10125.gif align=right>
<h2>Problem C - Sumsets</h2>

Given S, a set of integers, find the largest d such that 
a + b + c = d where a, b, c, and d are distinct elements of S.

<h3>Input</h3>

Several S, each consisting of a line containing an integer 1 <= n <= 1000
indicating the number of elements in S, followed by the elements of S, 
one per line.  Each element of S is a distinct integer 
between -536870912 and +536870911 inclusive.
The last line of input contains 0.

<h3>Output</h3>

For each S, a single line containing d, or a single line containing 
"no solution".

<h3>Sample Input</h3>
<pre>
5
2 
3 
5 
7 
12
5
2 
16 
64 
256 
1024
0
</pre>
<h3>Output for Sample Input</h3>
<pre>
12
no solution
</pre>

______________________________________________________
10126||||||false||||||
<img src=p10126.gif align=right>
<h3>Problem D - Zipf's Law</h3>

Harvard linguistics professor George Kingsley Zipf (1902-1950) observed
that the frequency of the <i>k</i>th most common word in a text is
roughly proportional to 1/<i>k</i>.  He justified his observations
in a book titled <i>Human behavior and the principle of least effort</i>
published in 1949.  While Zipf's rationale has largely been discredited,
the principle still holds, and others have afforded it a more sound 
mathematical basis.
<p>
You are to find all the words occurring <em>n</em> times in an English text.
A word is a sequence of letters.  Words are separated by
non-letters.  Capitalization should be ignored.  A word can be of any
length that an English word can be.

<h3>Input</h3>

Input consists of several test cases.
The first line of each case contains a single positive integer <em>n</em>.
Several lines of text follow which will contain no more than 10000 words.
The text for each case is terminated by a single line containing EndOfText.
EndOfText does not appear elsewhere in the input and is not
considered a word.

<h3>Output</h3> 

For each test case, output the words which occur <em>n</em> times in the
input text, one word per line, lower case, in alphabetical order.  If there are no
such words in input, output the following line:
<pre>
There is no such word.
</pre>
Leave a blank line between cases.

<h3>Sample Input</h3>
<pre>
2

In practice, the difference between theory and practice is always
greater than the difference between theory and practice in theory.
	- Anonymous

Man will occasionally stumble over the truth, but most of the
time he will pick himself up and continue on.
        - W. S. L. Churchill
EndOfText
</pre>
<h3>Output for Sample Input</h3>
<pre>
between
difference
in
will
</pre>

______________________________________________________
10127||||||false||||||
<title>Problem : Ones </title>

<img src=p10127a.gif align=right>
<img src=p10127b.gif align=left>

<h3>Problem E - Ones</h3>

Given any integer 0 &lt;= n &lt;= 10000 not divisible by 2 or 5, some multiple
of n is a number which in decimal notation is a sequence of 1's. How
many digits are in the smallest such a multiple of n?

<h3>Sample input</h3>
<pre>
3 
7 
9901
</pre>

<h3>Output for sample input</h3>
<pre>
3
6
12
</pre>
<img src=p10127c.gif align=center>

______________________________________________________
10128||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1250">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0_pliki/filelist.xml">
<title>Queue</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Marcin Wojciechowski</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Marcin Wojciechowski</o:LastAuthor>
  <o:Revision>8</o:Revision>
  <o:TotalTime>75</o:TotalTime>
  <o:Created>2001-05-30T17:09:00Z</o:Created>
  <o:LastSaved>2001-05-30T18:23:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>276</o:Words>
  <o:Characters>1575</o:Characters>
  <o:Company>dom</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1934</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HyphenationZone>21</w:HyphenationZone>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=PL style='tab-interval:35.4pt'>

<div class=Section1>

<h2 align=center style='text-align:center'><span lang=EN-US style='mso-ansi-language:
EN-US'>Queue<o:p></o:p></span></h2>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>There is a queue with N
people. Every person has a different heigth. We can see P people, when we are
looking from the beginning, and R people, when we are looking from the end.ItÂ’s
because they are having different height and they are covering each other. How
many different permutations of our queue has such a interesting feature?<o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Input Specification<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>The input
consists of <var>T</var> test cases. The number of them (1&lt;=<var>T&lt;=10000</var>)
is given on the first line of the input file.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>Each test
case consists of a line containing three integer numbers: <var>N</var> that
indicates the number of people in a queue (<var>1 &lt;= N &lt;= 13</var>), and 
then two more integers. The first corresponds to the
number of people, that we can see looking from the beginning, and the second <span
style="mso-spacerun: yes">Â </span>corresponding to the number of people,
that we can see looking from the end.<o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Output Specification<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>For every
test case your program has to determine one integer. Print how many
permutations of N people we can see exactly P people from the beginning, and R
people, when we are looking from the end.<o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Sample Input<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>3<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>10 4 4<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>11 3 1<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>3 1 2<o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Output for the Sample Input<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>90720<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>1026576<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>1<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10129||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1250">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./P4_pliki/filelist.xml">
<title>Play on Words</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Marcin Wojciechowski</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Marcin Wojciechowski</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2001-05-30T16:35:00Z</o:Created>
  <o:LastSaved>2001-05-30T16:36:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Company>dom</o:Company>
  <o:Lines>1</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HyphenationZone>21</w:HyphenationZone>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=PL style='tab-interval:35.4pt'>

<div class=Section1>

<h2 align=center style='text-align:center'><span lang=EN-US style='mso-ansi-language:
EN-US'>Play on Words<o:p></o:p></span></h2>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>Some of the secret doors
contain a&nbsp;very interesting word puzzle. The team of archaeologists has to
solve it to open that doors. Because there is no other way to open the doors,
the puzzle is very important for us. <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>There is a&nbsp;large
number of magnetic plates on every door. Every plate has one word written on
it. The plates must be arranged into a sequence in such a way that every word
begins with the same letter as the previous word ends. For example, the word
``ac<u>m</u>'' can be followed by the word ``<u>m</u>otorola''. Your task is to
write a computer program that will read the list of words and determine whether
it is possible to arrange all of the plates in a&nbsp;sequence (according to
the given rule) and consequently to open the door. <o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Input Specification<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>The input
consists of <var>T</var> test cases. The number of them (<var>T</var>) is given
on the first line of the input file. Each test case begins with a line
containing a&nbsp;single integer number <var>N</var>that indicates the number
of plates (<var>1 &lt;= N &lt;= 100000</var>). Then exactly <var>N</var>lines
follow, each containing a&nbsp;single word. Each word contains at least two and
at most 1000 lowercase characters, that means only letters '</span><code><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-US'>a</span></code><span lang=EN-US style='mso-ansi-language:EN-US'>'
through '</span><code><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New";mso-ansi-language:EN-US'>z</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'>' will appear in the word. The same word may
appear several times in the list. <o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Output Specification<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>Your
program has to determine whether it is possible to arrange all the plates in
a&nbsp;sequence such that the first letter of each word is equal to the last
letter of the previous word. All the plates from the list must be used, each
exactly once. The words mentioned several times must be used that number of
times. <o:p></o:p></span></p>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>If there exists such an
ordering of plates, your program should print the&nbsp;sentence &quot;</span><code><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-US'>Ordering is possible.</span></code><span lang=EN-US style='mso-ansi-language:
EN-US'>&quot;. Otherwise, output the&nbsp;sentence &quot;</span><code><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New";mso-ansi-language:
EN-US'>The door cannot be opened.</span></code><span lang=EN-US
style='mso-ansi-language:EN-US'>&quot;. <o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Sample Input<o:p></o:p></span></h3>
<pre>
3
2
acm
ibm
3
acm
malform
mouse
2
ok
ok
</pre>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Output for the Sample
Input<o:p></o:p></span></h3>
<pre>
The door cannot be opened.
Ordering is possible.
The door cannot be opened.
</pre>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10130||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1250">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p5_pliki/filelist.xml">
<title>Play on Words</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Marcin Wojciechowski</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Marcin Wojciechowski</o:LastAuthor>
  <o:Revision>14</o:Revision>
  <o:TotalTime>131</o:TotalTime>
  <o:Created>2001-05-30T18:31:00Z</o:Created>
  <o:LastSaved>2001-05-30T19:19:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>276</o:Words>
  <o:Characters>1575</o:Characters>
  <o:Company>dom</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1934</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HyphenationZone>21</w:HyphenationZone>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=PL style='tab-interval:35.4pt'>

<div class=Section1>

<h2 align=center style='text-align:center'><span lang=EN-US style='mso-ansi-language:
EN-US'>SuperSale<o:p></o:p></span></h2>

<p><span lang=EN-US style='mso-ansi-language:EN-US'>There is a SuperSale in a SuperHiperMarket.
Every person can take only one object of each kind, i.e. one TV, one carrot,
but for extra low price. We are going with a whole family to that SuperHiperMarket.
Every person can take as many objects, as he/she can carry out from the SuperSale.
We have given list of objects with prices and their weight. We also know, what
is the maximum weight that every person can stand. What is the maximal value of
objects we can buy at SuperSale?<o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Input Specification<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>The input
consists of <var>T</var> test cases. The number of them (1&lt;=<var>T&lt;=1000</var>)
is given on the first line of the input file.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>Each test
case begins with a line containing a&nbsp;single integer number <var>N </var>that
indicates the number of objects (<var>1 &lt;= N &lt;= 1000</var>). Then follows
<i>N</i> lines, each containing two integers: P and W. The first integer (1&lt;=P&lt;=100)
corresponds to the price of object. The second <span style="mso-spacerun:
yes">Â </span>integer (1&lt;=W&lt;=30) corresponds to the weight of object. Next
line contains one integer (1&lt;=G&lt;=100) <span style="mso-spacerun:
yes">Â </span>itÂ’s the number of people in our group. Next G lines contains maximal
weight (1&lt;=MW&lt;=30) that can stand this i<i>-th</i> person from our family
(1&lt;=i&lt;=G).<o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Output Specification<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>For every
test case your program has to determine one integer. Print out the maximal
value of goods which we can buy with that family.<o:p></o:p></span></p>

<h3><span lang=EN-US style='mso-ansi-language:EN-US'>Sample Input<o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>2<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>3<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>72 17<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>44 23<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>31 24<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>1<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>26<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>6<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>64 26<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>85 22<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>52 4<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>99 18<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>39 13<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>54 9<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>4<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>23<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>20<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>20<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'>26<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='mso-ansi-language:EN-US'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>Output for the Sample Input<o:p></o:p></span></h3>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>72<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'>514<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN-US style='mso-ansi-language:EN-US'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10131||||||false||||||
<HTML>
<HEAD>
	<TITLE>Question 1: Is Bigger Smarter?</TITLE>
</HEAD>
<BODY>
<H1>Question 1: Is Bigger Smarter?</H1>

<H2>The Problem</H2>
<P>

Some people think that the bigger an elephant is, the smarter it is.
To disprove this, you want to take the data on a collection of elephants
and put as large a subset of this data as possible into a sequence
so that the weights are increasing, but the IQ's are decreasing.

</P><P>

The input will consist of data for a bunch of elephants, one elephant per
line, terminated by the end-of-file.
The data for a particular elephant will consist of a pair of integers:
the first representing its size in kilograms and the second representing its
IQ in hundredths of IQ points.
Both integers are between 1 and 10000.
The data will contain information for at most 1000 elephants.
Two elephants may have the same weight, the same IQ, or even the same weight
and IQ.

</P><P>

Say that the numbers on the i-th data line are <TT>W[i]</TT> and <TT>S[i]</TT>.
Your program should output a sequence of lines of data; the first line should
contain a number <TT>n</TT>; the remaining <TT>n</TT> lines should
each contain a single positive integer (each one representing an elephant).
If these <TT>n</TT> integers are <TT>a[1]</TT>, <TT>a[2]</TT>,..., <TT>a[n]</TT>
then it must be the case that
<PRE>
   W[a[1]] < W[a[2]] < ... < W[a[n]]
</PRE>
and
<PRE>
   S[a[1]] > S[a[2]] > ... > S[a[n]]
</PRE>
In order for the answer to be correct, <TT>n</TT> should be as large as
possible.
All inequalities are strict: weights must be strictly increasing, and IQs
must be strictly decreasing.
There may be many correct outputs for a given input, your program only
needs to find one.

</P>

<H2>Sample Input</H2>

<PRE>
6008 1300
6000 2100
500 2000
1000 4000
1100 3000
6000 2000
8000 1400
6000 1200
2000 1900
</PRE>

<H2>Sample Output</H2>

<PRE>
4
4
5
9
7
</PRE>
</BODY>
</HTML>

______________________________________________________
10132||||||false||||||
<HTML>
<HEAD>
	<TITLE>Question 2: File Fragmentation</TITLE>
</HEAD>
<BODY>
<H1>Question 2: File Fragmentation</H1>

<H2>The Problem</H2>
<P>

Your friend, a biochemistry major, tripped while carrying a tray of computer
files through the lab.
All of the files fell to the ground and broke.
Your friend picked up all the file fragments and called you to ask for
help putting them back together again.

</P><P>

Fortunately, all of the files on the tray were identical, all of them broke
into exactly two fragments, and all of the file fragments were found.
Unfortunately, the files didn't all break in the same place, and
the fragments were completely mixed up by their fall to the floor.

</P><P>

You've translated the original binary fragments into strings of ASCII
1's and 0's, and you're planning to write a program to determine the
bit pattern the files contained.

</P>
<H2>Input</H2>
<P><b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

Input will consist of a sequence of ``file fragments'', one per line,
terminated by the end-of-file marker.
Each fragment consists of a string of ASCII 1's and 0's.
<p><p>
<H2>Output</H2>

<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

Output is a single line of ASCII 1's and 0's giving the bit pattern
of the original files.
If there are 2N fragments in the input, it should be possible to concatenate
these fragments together in pairs to make N copies of the output string.
If there is no unique solution, any of the possible solutions may be output.

</P><P>

Your friend is certain that there were no more than 144 files on the tray,
and that the files were all less than 256 bytes in size.

</P>

<H2>Sample Input</H2>

<PRE>
1

011
0111
01110
111
0111
10111
</PRE>

<H2>Sample Output</H2>

<PRE>
01110111
</PRE>

</BODY>
</HTML>

______________________________________________________
10133||||||false||||||
<HTML>
<HEAD>
	<TITLE>Question 3 - Audubon's Stormy Arctic Trip</TITLE>
</HEAD>
<BODY>
<H1>Question 3 - Audubon's Stormy Arctic Trip</H1>

<EM>or, `Every Cloud Has a Seal Fur Lining'</EM>

<H2>The Problem</H2>
<P>

The program <TT>autopun</TT> assists in the creation of puns (mostly bad
ones).  Rather than listing every possible pun on a particular phrase it
produces a rooted directed acyclic graph (DAG) as output.  That is, a list
of choices is given for the first word in a phrase.  This choice determines
not only a word but the name of another list that determines the choices
for the next word, and so on.  Each list is a node in the DAG, 
labelled with a two digit number (00 - 99).

</P><P>

We want to find the
<VAR>n</VAR><SUP>th</SUP> pun specified by <tt>autopun</tt>.  The first
is simply the phrase formed by selecting the first alternative for each
choice.  The next is formed by selecting the next alternative for the
latest choice for which an alternative remains, followed by the first
alternative for all subsequent choices.  That is, the order of the puns
is determined by a left-to-right traversal of the leaves in the DAG.

</P><P>

The output of <TT>autopun</TT> consists of several node entries.</p>

<p>The first line of the input will contain an integer indicating the number of entries in the input. Then there will be a blank line and each of the entries separated by a blank line.  The first line of an entry contains a two digit number (from 00 to 99)
followed by a colon.  Subsequent lines in the entry are indented and
consist of `word:node' entries separated by spaces.  A `$' for a node
indicates the end of the pun and 00 is the first node.

</P><P>

After the node entries there will be zero or more lines containing
integers in the range 1 to the highest pun number for the DAG.

</P><P>

Output will consist of one pun per line with the words separated by
hypens. Print a blank line between output for consecutive entries.

</P>
<H2>Sample Input</H2>
<PRE>
1

00:
  silver:$  zeal:03 sill:03 shill:03 seal:03 ceil:03 Shea:02
  she:02 see:02 sea:02 Sci:02 z:01 s:01 h's:01
01:
  ill:03 I'll:03 ewe:03 eel:03 e:02
02:
  w:03 l:03
03:
  fur:$  fir:$  v:04 f:04
04:
  IR:$ 
1
2
3
4
5
6
27
</PRE>
<H2>Sample Output</H2>
<PRE>
silver
zeal-fur
zeal-fir
zeal-v-IR
zeal-f-IR
sill-fur
Shea-l-fir
</PRE>

</BODY>
</HTML>

______________________________________________________
10134||||||false||||||
<HTML>
<HEAD>
	<TITLE>Question 4: AutoFish</TITLE>
</HEAD>
<BODY>
<H1>Question 4: AutoFish</H1>

<H2>The Problem</H2>
<P>

You've built an amazing fish-catching robot, but you've discovered one
small flaw: the robot can't decide whether to fish or cut bait.

</P><P>

You've designed a language for the Control of Oceangoing Devices (COD) which
you plan to use to program the robot.
COD has three instructions:
<DL><DD>
<TABLE>
<TR>
  <TH align=left> <TT> fish </TT>
  <TH align=left> Fish for ten minutes.
<TR>
  <TH align=left> <TT> bait </TT>
  <TH align=left> Cut bait for ten minutes.
<TR>
  <TH align=left> <TT> lunch </TT>
  <TH align=left> No operation for ten minutes.
</TABLE>
</DL>

</P><P>

Bait is required to catch fish.
The robot must cut bait for twenty minutes (execute two <TT>bait</TT>
instructions) to generate a single <EM>bait unit</EM>, enough bait to
catch a single fish.
Other instructions (<TT>fish</TT> and <TT>lunch</TT>) may be interleaved
between the two <TT>bait</TT> instructions that generate a bait unit.
The robot has storage for three bait units; it cannot cut any more bait
if it is already storing three bait units.
If the robot is storing three bait units, a <TT>bait</TT> instruction is
treated as if it were a <TT>lunch</TT> instruction (a NOP).
Catching a fish consumes a bait unit.

</P><P>

Fish have deterministic behaviour.
A fish cannot be caught more often than once every seventy minutes, and
after a fish has been caught the robot must fish for thirty minutes before
catching another fish (they get shy).
In order to successfully complete a <TT>fish</TT> instruction, the robot must
have a least one bait unit.
If the robot has no bait, a <TT>fish</TT> instruction cannot be
successfully completed and is treated as if it were a <TT>lunch</TT>
instruction.
When the robot first starts fishing, a fish is caught on the first
<TT>fish</TT> instruction that completes (beginner's luck).
If at least one fish has already been caught then a fish is caught on the
completion of a <TT>fish</TT> instruction if and only if: 1) the <TT>fish</TT>
instruction is at least the seventh COD instruction executed since the last
instruction on which a fish was caught, and 2) the <TT>fish</TT> instruction
is at least the third <TT>fish</TT> instruction successfully completed since
the last instruction on which a fish was caught.

</P><P>

The execution of a <TT>lunch</TT> instruction allows time to pass, but has
no other purpose.

</P><P>

The robot starts with no bait; no fish have been caught.
<H2>Input</H2>

<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


Input consists of a sequence of <TT>fish</TT>, <TT>bait</TT> and <TT>lunch</TT>
instructions, terminated by the end-of-file.

<H2>Output</H2>

<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Output is a line containing a single integer, indicating the number of
fish the robot has caught at the end of the sequence.

</P>

<H2>Sample Input</H2>

<PRE>
1

fish
fish
lunch
bait
fish
bait
fish
bait
bait
fish
fish
fish
fish
lunch
lunch
lunch
lunch
fish
fish
fish
</PRE>

<H2>Sample Output</H2>

<PRE>
2
</PRE>

</BODY>
</HTML>

______________________________________________________
10135||||||false||||||
<h1>Question 5 - Herding Frosh</h1>

One day, a lawn in the centre of campus became infested with Frosh.  In
an effort to beautify the campus, one of our illustrious senior classmen
decided to round them up using a length of pink silk.  Your job is to
compute how much silk was required to complete the task.
<p>
The senior classman tied the silk to a telephone post, and walked
around the perimeter of the area containing the Frosh, drawing the silk
taught so as to encircle all of them.  He then returned to the
telephone post.  The senior classman used the minimum amount of silk
necessary to encircle all the frosh plus one extra
metre at each end to tie it.
<p>
You may assume that the telephone post is at coordinates (0,0), where the
first dimension is North/South and the second dimension is East/West.  The
coordinates of the Frosh are given in metres relative to the post.  There
are no more than 1000 Frosh.
<p>
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


The input consists of a line specifying the number of Frosh, followed
by one line per Frosh with two real numbers his or her position.

<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
The output consists of a single number - the length of silk in metres,
to two decimal places.
<h3>Sample Input</h3>
<pre>
1

4
1.0 1.0
-1.0 1.0
-1.0 -1.0
1.0 -1.0
</pre>
<h3>Output for Sample Input</h3>
10.83

______________________________________________________
10136||||||false||||||
<title>Problem E</title>
<h2>Problem E - Chocolate Chip Cookies</h2>

Making chocolate chip cookies involves mixing flour, salt, oil, baking soda and
chocolate chips to form dough which is rolled into a plane about 
50 cm square.  Circles are cut from the plane, placed on a cookie
sheet, and baked in an oven for about twenty minutes.  When the cookies
are done, they are removed from the oven and allowed to cool before
being eaten.
<p>
We are concerned here with the process of cutting the first cookie after
the dough has been rolled.  Each chip is visible in the planar dough, 
so we need simply to place the cutter so as to maximize the number
of chocolate chips contained in its perimeter.
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


Standard input consists of a number of lines, each containing two floating
point numbers indicating the (x,y) coordinates of a chip in the square 
surface of cookie dough.  Each coordinate is between 0.0 and 50.0 (cm).
Each chip may be considered a point (i.e. these are not President's Choice
Cookies). Each chip is at a different position.   There are at most 200 
chocolate chips.

<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

Standard output consists of a single integer:  the number of chocolate
chips that can be contained in a single cookie whose diameter is 5 cm.
The cookie need not be fully contained in the 50 cm square dough (i.e.
it may have a flat side).

<h3>Sample Input</h3>
<pre>
1

4.0 4.0
4.0 5.0
5.0 6.0
1.0 20.0
1.0 21.0
1.0 22.0
1.0 25.0
1.0 26.0
</pre>
<h3>Output for Sample Input</h3>
<pre>
4
</pre>

______________________________________________________
10137||||||false||||||
<title>Problem A:  The Trip</title>
<h2>Problem A:  The Trip</h2>
A number of students are members of a club that travels annually to exotic
locations.  Their destinations in the past have included 
Indianapolis, Phoenix, Nashville, 
Philadelphia, San Jose, and Atlanta.  This spring they are planning a trip
to Eindhoven.
<p>
The group agrees in advance to share expenses equally, but it is not
practical to have them share every expense as it occurs.  So individuals
in the group pay for particular things, like meals, hotels, taxi rides,
plane tickets, etc.  After the trip, each student's expenses are tallied
and money is exchanged so that the net cost to each is the same, to within
one cent.  In the past, this money exchange has been tedious and time
consuming.  Your job is to compute, from a list of expenses, the minimum
amount of money that must change hands in order to equalize (within a cent)
all the students' costs.
<h3>The Input</h3>
Standard input will contain the information for several trips.  The information
for each trip consists of a line containing a positive integer, n, the
number of students on the trip, followed by n lines of input, each containing
the amount, in dollars and cents, spent by a student.  There are no more
than 1000 students and no student spent more than $10,000.00.  A single
line containing 0 follows the information for the last trip.
<h3>The Output</h3>
For each trip, output a line stating the total amount of money, in dollars
and cents, that must be exchanged to equalize the students' costs.
<h3>
Sample Input
</h3>
<pre>
3
10.00
20.00
30.00
4
15.00
15.01
3.00
3.01
0
</pre>
<h3>
Output for Sample Input
</h3>
<pre>
$10.00
$11.99
</pre>

______________________________________________________
10138||||||false||||||
<title>Problem C:  CDVII</title>
<h2>Problem C:  CDVII</h2>
Roman roads are famous for their longevity and sound engineering.
Unfortunately, sound engineering does not come cheap, and a number
of neo-Caesars have decided to recover the costs through automated
tolling.
<p>
A particular toll highway, the CDVII, has a fare structure that works
as follows:  travel on the road costs a certain amount per km travelled,
depending on the time of day when the travel begins.  Cameras at every
entrance and every exit capture the license numbers of all cars
entering and leaving.  Every calendar month,
a bill is sent to
the registered owner for each km travelled (at a rate determined by
the time of day), plus one dollar per trip, plus a two dollar account charge.
Your job is to prepare the bill for one month, given a 
set of license plate photos.
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


Standard input has two parts:  the fare structure, 
and the license photos.  The fare structure consists of a line with 24
non-negative integers denoting the toll (cents/km) from 00:00 - 00:59,
the toll from 01:00 - 00:59, and so on for each hour in the day.  
Each photo record consists of 
the license number of the vehicle (up to 20 alphanumeric characters),
the time and date (mm:dd:hh:mm),
the word "enter" or "exit", and the location
of the entrance or exit (in km from one end of the highway).
All dates will
be within a single month.  Each "enter" record
is paired with the chronologically next record for the same
vehicle provided it is an 
"exit" record.  "enter" records that are not paired with an "exit"
record are ignored, as are "exit" records not paired with an "enter" record.
You may assume that no two records for the same vehicle have the same time.
Times are recorded using a 24-hour clock.
There are not more than 1000 photo records.
<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

Print a line for each vehicle indicating the license number, and the total
bill, in alphabetical order by license number. Vehicles that don't use the
highway shouldn't be listed.
<h3>Sample Input</h3>
<pre>
1

10 10 10 10 10 10 20 20 20 15 15 15 15 15 15 15 20 30 20 15 15 10 10 10
ABCD123 01:01:06:01 enter 17
765DEF 01:01:07:00 exit 95
ABCD123 01:01:08:03 exit 95
765DEF 01:01:05:59 enter 17
</pre>
<h3>Output for Sample Input</h3>
<pre>
765DEF $10.80
ABCD123 $18.60
</pre>

______________________________________________________
10139||||||false||||||
<title>Problem D: Factovisors</title>
<h2>Problem D: Factovisors</h2>

The factorial function, n! is defined thus for n a non-negative integer:
<pre>
   0! = 1
   n! = n * (n-1)!   <i>(n > 0)</i>
</pre>

We say that a divides b if there exists an integer k such that
<pre>
   k*a = b
</pre>
The input to your program consists of several lines, each containing
two non-negative integers, n and m, both less than 2^31.  For each 
input line, output a line stating whether or not m divides n!, in 
the format shown below.

<h3>Sample Input</h3>
<pre>
6 9
6 27
20 10000
20 100000
1000 1009
</pre>
<h3>
Output for Sample Input
</h3><pre>
9 divides 6!
27 does not divide 6!
10000 divides 20!
100000 does not divide 20!
1009 does not divide 1000!
</pre>

______________________________________________________
10140||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <title>Problem A - Prime Distance</title>
  </head>

  <body>
    <h1>Problem A - Prime Distance</h1>

The branch of mathematics called number theory is about properties of
numbers.  One of the areas that has captured the interest of number
theoreticians for thousands of years is the question of primality.  A
prime number is a number that is has no proper factors (it is only
evenly divisible by 1 and itself).  The first prime numbers are
2,3,5,7 but they quickly become less frequent.  One of the interesting
questions is how dense they are in various ranges.  Adjacent primes
are two numbers that are both primes, but there are no other prime
numbers between the adjacent primes.  For example, 2,3 are the only
adjacent primes that are also adjacent numbers.
<p>
Your program is given 2 numbers: L and U
(1&lt;=L&lt;U&lt;=2,147,483,647), and you are to find the two
adjacent primes C1 and C2 (L&lt;=C1&lt;C2&lt;=U) that are closest
(i.e. C2-C1 is the minimum).  If there are other pairs
that are the same distance apart, use the first pair.  You are
also to find the two adjacent primes D1 and D2 (L&lt;=D1&lt;D2&lt;=U)
where D1 and D2 are as distant from each other as possible (again
choosing the first pair if there is a tie).

<H3>Input</H3> Each line of input will contain two positive integers, L and
U, with L < U.  The difference between L and U will
not exceed 1,000,000.

<H3>Output</H3>

For each L and U,
the output will either be the statement that there are no adjacent
primes (because there are less than two primes between the two given
numbers) or a line giving the two pairs of adjacent primes.


<H3>Sample Input</H3>
<pre>
2 17
14 17
</PRE>
<h3>Output for Sample Input</h3>
<PRE>
2,3 are closest, 7,11 are most distant.
There are no adjacent primes.
</PRE>

______________________________________________________
10141||||||false||||||
<title>Problem C</title>
<h2>Problem C - Request for Proposal</h2>
 
When government, military, or commercial agencies wish to make a major
purchase, they first issue a Request for Proposal (RFP) which lists a
number of requirements that must be met by a successful proposal.  
Competing suppliers issue Proposals, indicating which of the requirements
are met, and a price that will be charged should the proposal be accepted 
by the agency issuing the RFP.
<p>
Because the agencies are staffed by bureaucrats and are accountable to
other agencies staffed by bureaucrats, it is necessary to remove all
human judgement from the selection process.  To this end, those evaluating
the proposals are given feature sheets, which have one column for each
requirement and and additional column for price, and one row for each Proposal.
The evaluator reads each proposal and identifies each requirement that is
met; for each such requirement a check mark is placed in the corresponding
row (for the Proposal) and column (for the requirement).  After all
proposals have been evaluated, the number of check marks in each row
is added.  Any proposal that has the same number of check marks as
the number of requirements is said to be compliant; otherwise the
proposal is said to be partially compliant.  Many agencies award the contract
to the lowest compliant proposal; that is the compliant proposal with the
lowest price.  If there is no compliant proposal, many agencies evaluate
partial compliance according to the following formula:
<pre>
                  number_of_requirements_met
     compliance = --------------------------
                    number_of_requirements
</pre>           
Your job is to select the Proposal with the highest compliance; if several
proposals have the same compliance you are to select from these proposals
the one with the lowest price.  If several proposals have the same compliance
and price you are to select the first one in the input. 

<h3>Standard Input</h3>

Your input will consist of the information for a number of RFPs and associated
proposals.  The information for each RFP will consist of:
<ul>
<li>a line containing two integers:  0 < n <= 1000, the number of requirements, and
    p the number of proposals.  The line 0 0 indicates there are no more RFPs.
<li>n lines naming the requirements.  Each requirement is a string up to
    80 characters long, terminated by the end of line.  All strings are
    case sensitive.
<li>for each of the p proposals:
<ul>
<li> a line naming the proposal (up to 80 characters terminated by end of line)
<li> a line containing a floating point number d and an integer 0 <= r <= n:  
d is the price;
r is the number of met requirement lines to follow.
<li> for each met requirement, the name of the requirement, each on a
      separate line.  All requirements are from the RFP requirement list,
      and no requirements are duplicated.
</ul>
</ul>
 
<h3>Standard Output</h3>

For each RFP, give the number of the RFP (see sample) followed by
the name of the best proposal, optimizing the criteria given above.  
Leave a blank line between the output for each pair of RFPs.

<h3>Sample Input</h3>
<pre>
6 4
engine
brakes
tires
ashtray
vinyl roof
trip computer
Chevrolet
20000.00 3
engine
tires
brakes
Cadillac
70000.00 4
ashtray
vinyl roof
trip computer
engine
Hyundai
10000.00 3
engine
tires
ashtray
Lada
6000.00 1
tires
1 1
coffee
Starbucks
1.50 1
coffee
0 0
</pre>
<h3>Output for Sample Input</h3>
<pre>
RFP #1
Cadillac

RFP #2
Starbucks
</pre>

______________________________________________________
10142||||||false||||||
<title>Problem D</title>
<h2>Problem D - Australian Voting</h2>

Australian ballots require that the voter rank the candidates in order
of choice.  Initially only the first choices are counted and if one
candidate receives more than 50% of the vote, that candidate is
elected.  If no candidate receives more than 50%, all candidates tied
for the lowest number of votes are eliminated.  Ballots ranking these
candidates first are recounted in favour of their highest ranked
candidate who has not been eliminated.  This process continues 
[that is, the lowest candidate is eliminated and each ballot is counted
in favour of its ranked non-eliminated candidate] until
one candidate receives more than 50% of the vote or until all candidates
are tied.

<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


The first line of input is an integer n <= 20 indicating the number of 
candidates.   The next n lines consist of the names of the candidates
in order.  Names may be up to 80 characters in length and may contain
any printable characters. 
Up to 1000 lines follow; each contains the contents of a ballot.
That is, each contains the numbers from 1 to n in some order.  The
first number indicates the candidate of first choice; the second
number indicates candidate of second choice, and so on. 

<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
The Output consists of either a single line containing the name of the
winner or several lines containing the names of the candidates who tied.

<h3>Sample Input</h3>
<pre>
1

3
John Doe
Jane Smith
Sirhan Sirhan
1 2 3
2 1 3
2 3 1
1 2 3
3 1 2
</pre>
<h3>Output for Sample Input</h3>
<pre>
John Doe
</pre>

______________________________________________________
10143||||||false||||||
<title>Loan</title>

<style type="text/css">
   h1 { text-align: center; font-size: large; text-decoration: underline }
   h2 { text-align: center; font-size: large; margin-bottom: 0 }
</style>

<!--h1>1999-2000 ACM Northeastern European Regional Programming Contest</h1-->
<h2>Problem A<br>"Loan"</h2><br>

<!--table>
<col style="font-weight: bold"><col>
<tr><td>Input file<td><tt>LOAN.IN</tt>
<tr><td>Output file<td><tt>LOAN.OUT</tt>
<tr><td>Time limit<td>15 seconds per test
</table-->

<p>
Mr. Smith received a loan for <em>Q</em> dollars.  He plans to pay off
this loan in <em>K</em> years
at an interest rate of <em>P</em> percent per year.
That means that, after each year, Mr. Smith's debt grows by
<em>P*Q'/100</em> dollars (<em>Q'</em> being the
debt at the beginning of that year) and his annual payment is 
deducted from his debt.
 
<p>
For the first year, Mr. Smith wants to pay minimal amount that will
allow him to pay off the loan within exactly <em>K</em> years.  For each
subsequent year, he is willing to pay either the same amount as the
previous year or one cent less than the previous year's payment.  He
wants the loan to be completely paid off without overpayment of even
a single cent by the end of the <em>K</em><sup>th</sup> year.

<p>The bank performs all transactions with a precision of one cent,
and calculates interest due at the end of each year.  Whenever 
interest is calculated, the result is immediately rounded to
the nearest cent, with 0.5 cents rounded up.

<h3>Input</h3>

The first line of the input contains an integer indicating the number of test cases in the input. Then there will be a blank line, and the test cases separated by a blank line. Each test case consists of a single line with three numbers <em>Q</em>,
<em>P</em> and <em>K</em>, separated by spaces. <em>Q</em> is a real
number (10&nbsp;&le;&nbsp;<em>Q</em>&nbsp;&le;&nbsp;1000000) given with no more than two
digits to the right of the decimal point.
This value represents the amount of the loan in dollars.
One one-hundredth of a dollar is a cent. <em>P</em>
and <em>K</em> are integers (0&nbsp;&le;&nbsp;<em>P</em>&nbsp;&le;&nbsp;100,
1&nbsp;&le;&nbsp;<em>K</em>&nbsp;&le;&nbsp;100).

<h3>Output</h3>

Write to the output file a schedule of payments for Mr. Smith.
You should write the amount of each payment and number of years that
payment should be made, thus effectively grouping equal payments.
Each group of equal payments must be written on separate line,
with no blank lines between them.
The output format for each group of payments is:

<p>
<tt>$<em>X</em> for <em>Y</em> year(s)</tt>

<p>
where <em>X</em> is payment amount in dollars printed with exactly two
digits after decimal point. <em>Y</em> is a number of years for which
this payment should be made. The dollar value given on each line must be one
cent less than the dollar value printed above it.

<p>
If there are multiple correct payment schedules, you can output any
one of them, but the first payment should be the minimal possible one. If
no solution can be found for the given input, then the output file shall
contain only the word "Impossible".</p>
<p>Print a blank line between test cases.</p>

<h3>Sample Input</h3>
<pre>
3

100 100 100

20 0 10

939850.83 85 35
</pre>

<h3>Sample Output</h3>
<pre>
Impossible

$2.00 for 10 year(s)

$798873.22 for 1 year(s)
$798873.21 for 1 year(s)
$798873.20 for 1 year(s)
$798873.19 for 1 year(s)
$798873.18 for 1 year(s)
$798873.17 for 4 year(s)
$798873.16 for 1 year(s)
$798873.15 for 2 year(s)
$798873.14 for 1 year(s)
$798873.13 for 3 year(s)
$798873.12 for 1 year(s)
$798873.11 for 4 year(s)
$798873.10 for 2 year(s)
$798873.09 for 7 year(s)
$798873.08 for 2 year(s)
$798873.07 for 1 year(s)
$798873.06 for 1 year(s)
$798873.05 for 1 year(s)
</pre>


______________________________________________________
10144||||||false||||||
<title>Expression</title>

<style type="text/css">
   h1 { text-align: center; font-size: large; text-decoration: underline }
   h2 { text-align: center; font-size: large; margin-bottom: 0 }
</style>

<!--h1>1999-2000 ACM Northeastern European Regional Programming Contest</h1-->
<h2>Problem B<br>"Expression"</h2><br>

<!--table>
<col style="font-weight: bold"><col>
<tr><td>Input file<td><tt>EXPR.IN</tt>
<tr><td>Output file<td><tt>EXPR.OUT</tt>
<tr><td>Time limit<td>15 seconds per test
</table-->

<p>
It is known that Sheffer stroke function (NOT-AND) can be used to
construct any Boolean function.  The truth table for this function is
given below:

<p>
<table width="50%" align="center" border="1" rules="groups">
<caption><em>Truth table for Sheffer stroke function</em></caption>
<colgroup>
<col width="33%" align="center">
<col width="33%" align="center">
<colgroup>
<col width="33%" align="center">
<thead style="font-weight: bold">
<tr><td>x<td>y<td>x|y
<tbody>
<tr><td>0<td>0<td>1
<tr><td>0<td>1<td>1
<tr><td>1<td>0<td>1
<tr><td>1<td>1<td>0
</table>

<p>
Consider the problem of adding two binary numbers <em>A</em> and
<em>B</em>, each containing <em>N</em> bits.  The individual bits
of <em>A</em> and <em>B</em> are numbered from 0 (the least
significant) to <em>N</em>-1 (the most significant).  The sum of
<em>A</em> and <em>B</em> can always be represented by <em>N</em>+1
bits.  Let's call most significant bit of the sum (bit number
<em>N</em>) the <b>overflow</b> bit.

<p>
Your task is to construct a logical expression using the Sheffer
stroke function that computes the value of the overflow bit for
arbitrary values of <em>A</em> and <em>B</em>.  Your expression shall
be constructed according to the following rules:

<ol>
<li><tt>A<em>i</em></tt> is an expression that denotes value of
    <em>i</em><sup>th</sup> bit of number <em>A</em>.

<li><tt>B<em>i</em></tt> is an expression that denotes value of
    <em>i</em><sup>th</sup> bit of number <em>B</em>.

<li><tt>(<em>x</em>|<em>y</em>)</tt> is an expression that denotes the result
    of Sheffer stroke function for <em>x</em> and <em>y</em>, where 
    <em>x</em> and <em>y</em> are expressions.

</ol>

When writing the index, <em>i</em>, for bits in <em>A</em> and
<em>B</em>, the index shall be written as a decimal number without
leading zeros.  For example, bit number 12 of <em>A</em> must be
written as <tt>A12</tt>.  The expression should be completely parenthesized
(according to the 3rd rule). No blanks are allowed inside
the expression. 

<h3>Input</h3>

The first line of the input contains an integer indicating the number of test cases in the input. After that there is a blank line and the test cases separated by a blank line. Each test case consists of a single integer <em>N</em>
(1&nbsp;&le;&nbsp;<em>N</em>&nbsp;&le;&nbsp;100) on a line by itself.

<h3>Output</h3>

Write to the output file an expression for calculating overflow bit of
the addition of two <em>N</em>-bit numbers <em>A</em> and <em>B</em> 
according to the rules given in the problem statement. Print a blank line between test cases.

<p>
<b>Note:</b> The stroke symbol (&nbsp;|&nbsp;) is an ASCII character
with code 124 (decimal). 

<p>
The output file size shall not exceed 50*<em>N</em> bytes.

<h3>Sample input</h3>

<pre>
1

2
</pre>

<h3>Sample output for the sample input</h3>

<pre>((A1|B1)|(((A0|B0)|(A0|B0))|((A1|A1)|(B1|B1))))</pre>


______________________________________________________
10145||||||false||||||
<title>Lock Manager</title>

<style type="text/css">
   h1 { text-align: center; font-size: large; text-decoration: underline }
   h2 { text-align: center; font-size: large; margin-bottom: 0 }
</style>

<!--h1>1999-2000 ACM Northeastern European Regional Programming Contest</h1-->
<h2>Problem C<br>"Lock Manager"</h2><br>

<!--table>
<col style="font-weight: bold"><col>
<tr><td>Input file<td><tt>LOCKMGR.IN</tt>
<tr><td>Output file<td><tt>LOCKMGR.OUT</tt>
<tr><td>Time limit<td>15 seconds per test
</table-->

<p>
You are invited to be a part of the team that is developing
yet another DBMS (Data Base Management System). You will be
responsible for the Lock Manager.

<p>
Locks control concurrent access to data items by multiple transactions.
Your DBMS is simple and uses only Shared (S) and Exclusive (X)
mode locks. Each lock request contains a lock mode (S or X), a transaction
identifier and a data item identifier. Multiple locks can be granted
to the same data item as long as none of them <b>conflict</b>.

<p>
Two locks for the same data item conflict if:
<ul>
<li>they belong to different transactions, and
<li>at least one of them is exclusive (X) mode lock.
</ul>

<p>
At the earliest stages of development you are asked to write very
simple lock manager that processes lock requests.
The lock is granted if it does not conflict with previously granted
locks for this data item. Your task is simple: locks, once granted,
are never released or changed in any way. If lock request is denied
due to conflict with some previously granted lock, then transaction
making this request is blocked and all further requests from this
transaction are ignored.

<h3>Input</h3>
<p>
The first line of the input consists of an integer indicating the number of test cases in the input. Then there is a blank line and the test cases separated by a blank line.
<p>
Each test case consists of a number of lock requests, each request
on a different line. Requests have the following format:

<p><tt>MODE TRID ITEM</tt>

<p>Where MODE is a single capital letter S or X denoting requested 
lock mode. TRID and ITEM are transaction identifier and
data item identifier correspondingly. Both TRID and ITEM are integers,
both are 
greater than zero, and both
consist of at most 9 decimal digits. 

<p>
There are at least one and at most 10000 requests in each test case.

<p>
The last request is followed by a line consisting of a single 
character '#'.

<h3>Output</h3>

Your program shall sequentially process all requests from each
test case. For each request you should write one line that
contains the response to the request. The following responses
are allowed:

<ul>
<li>GRANTED - the lock request does not conflict with any previously
granted locks and is granted.

<li>DENIED - the lock request conflicts with some previously 
granted lock and is denied, thus blocking the requesting transaction.

<li>IGNORED - the transaction was blocked on some request before this one.

</ul>

Responses shall appear in all capital letters exactly as shown above.
Print a blank line between data sets.

<h3>Sample input</h3>
      
<tt><pre>1

S 1 1
S 2 2
X 10 1
S 6 123456789
S 3 3
X 2 2
S 5 6
S 3 1
S 3 2
X 987654321 123456789
X 1 4
S 6 6
S 3 5
S 2 4
X 4 5
S 2 51
#</pre></tt>

<h3>Output for the sample input</h3>

<tt><pre>GRANTED
GRANTED
DENIED
GRANTED
GRANTED
GRANTED
GRANTED
GRANTED
DENIED
DENIED
GRANTED
GRANTED
IGNORED
DENIED
GRANTED
IGNORED</pre></tt>

______________________________________________________
10146||||||false||||||
<title>Dictionary</title>

<style type="text/css">
   h1 { text-align: center; font-size: large; text-decoration: underline }
   h2 { text-align: center; font-size: large; margin-bottom: 0 }
</style>

<!--h1>1999-2000 ACM Northeastern European Regional Programming Contest</h1-->
<h2>Problem D<br>"Dictionary"</h2><br>

<!--table>
<col style="font-weight: bold"><col>
<tr><td>Input file<td><tt>DICT.IN</tt>
<tr><td>Output file<td><tt>DICT.OUT</tt>
<tr><td>Time limit<td>30 seconds per test
</table-->

<p>
Authors of the new, all-in-one encyclopedia have organized the titles
in the order they consider most appropriate for their readers.
It's not always alphabetical, because they want to observe some peculiar
relationships between them. However, they still want to
allow users to look up titles quickly.

<p>
They achieve this by adding a carefully calculated number of spaces 
before every title in the list of titles. They call this
structure <b>a dictionary</b>.

<p>
A dictionary is represented by a list of words with some number of
spaces before certain words. Dictionary format can be described as a set of
constraints on sequences of consecutive words starting with the same letter. Any
maximal sequence of consecutive words starting with the same letter should
satisfy the following rules:

<ul>
<li>The first word in the group has no spaces before it. Every subsequent word in the group has at least one leading space.

<li>If
    <ul>
    <li> the first word of the group is deleted and 
    <li> one space is deleted before every remaining word and
    <li> the first letter is deleted from every remaining word
    </ul>
    then resulting sequence is a dictionary.
</ul>

The authors don't feel like giving you a more detailed explanation of
what a dictionary is, so they have included an example (see sample
input and output) that clarifies their definition. 

<p>
Your task is to write a program that will convert a given list of
words into a dictionary by adding some number of spaces before
certain words and preserving the original order of the words.

<h3>Input</h3>
The first line of the input contains an integer indicating the number of test cases in the input. Then there is a blank line and the test cases separated by a blank line. 
Each test case consists of at least one and most 100000 words.
Each word consists
of at least one and at most 10 lower-case letters.
There will be no leading or trailing
spaces. There will be no blank lines between the words.

<h3>Output</h3>

For each test case write to the output file the original words in the same order without any
trailing spaces but with the appropriate number of leading spaces,
so that this word list is a dictionary. There should be no blank
lines between the words.
Print a blank line between test cases.

<h3>Sample input</h3>

<tt><pre>1

a
ant
antique
amaze
bargain
bridge
bride
bribe
born
bucket
tart
tan
tram
trolley
t
try
trial
zed
double
dorm
do
dormant
donate
again
agony
boost
back
born</pre></tt>

<h3>Sample output for the sample input</h3>

<b>NOTE:</b> <em>For reading convenience spaces are replaced with </em><tt>'.'</tt>
<em>characters. Your output file should contain spaces instead.</em>

<p>
<tt><pre>a
.ant
..antique
.amaze
bargain
.bridge
..bride
...bribe
.born
.bucket
tart
.tan
.tram
..trolley
.t
.try
..trial
zed
double
.dorm
..do
..dormant
..donate
again
.agony
boost
.back
.born</pre></tt>

______________________________________________________
10147||||||false||||||
<title>Highways</title>

<style type="text/css">
   h1 { text-align: center; font-size: large; text-decoration: underline }
   h2 { text-align: center; font-size: large; margin-bottom: 0 }
</style>

<!--h1>1999-2000 ACM Northeastern European Regional Programming Contest</h1-->
<h2>Problem E<br>"Highways"</h2><br>

<!--table>
<col style="font-weight: bold"><col>
<tr><td>Input file<td><tt>HIGHWAYS.IN</tt>
<tr><td>Output file<td><tt>HIGHWAYS.OUT</tt>
<tr><td>Time limit<td>15 seconds per test
</table-->

<p>
The island nation of Flatopia is perfectly flat.  Unfortunately,
Flatopia has a very poor system of public highways.  The
Flatopian government is aware of this problem and has already
constructed a number of highways connecting some of the most important
towns.  However, there are still some towns that you can't
reach via a highway.  It is necessary to build more highways
so that it will be possible to drive between any pair of towns without
leaving the highway system.

<p>
Flatopian towns are numbered from 1 to <em>N</em> and town <em>i</em> has a
position given by the Cartesian coordinates (<em>x<sub>i</sub></em>,
<em>y<sub>i</sub></em>). Each highway connects exaclty two towns.
All highways (both the original ones and the
ones that are to be built) follow straight lines, and thus their
length is equal to Cartesian distance between towns.
All highways can be used in both directions. Highways can
freely cross each other, but a driver can only switch between highways at
a town that is located at the end of both highways.

<p>
The Flatopian government wants to minimize the cost of building new highways.
However, they want to guarantee that every town is highway-reachable
from every other town.  Since Flatopia is so flat, the cost of a highway
is always proportional to its length.  Thus, the least expensive highway
system will be the one that minimizes the total highways length.

<h3>Input</h3>
<p>
The first line of the input consists of an integer indicating the number of test cases in the input. Then there's a blank line and the datasets separated by a blank line.
</p><p>
Each test case consists of two parts.  The first part describes all
towns in the country, and the second part describes all of the highways
that have already been built.

<p>
The first line of the test case contains a single integer <em>N</em>
(1&nbsp;&le;&nbsp;<em>N</em>&nbsp;&le;&nbsp;750), representing the number of towns.
The next <em>N</em> lines
each contain two integers, <em>x<sub>i</sub></em> and
<em>y<sub>i</sub></em> separated by a space.  These values give the
coordinates of <em>i</em><sup>th</sup> town (for <em>i</em> from 1 to
<em>N</em>).  Coordinates will have an absolute value no greater
than 10000. Every town has a unique location.

<p>
The next line contains a single integer <em>M</em> (0&nbsp;&le;&nbsp;M&nbsp;&le;&nbsp;1000), 
representing the number of existing highways.  The
next <em>M</em> lines each contain a pair of integers separated by a space.
These two integers give a pair of town numbers which are
already connected by a highway. Each pair of towns is connected
by at most one highway.

<h3>Output</h3>

<p>
Write to the output file a single line for each new highway that should
be built in order to connect all towns with minimal possible total
length of new highways. Each highway should be presented by 
printing town numbers that this highway connects, separated by 
a space.

<p>
If no new highways need to be built (all towns are already connected),
then the output file should contain a line with the sentence "<tt>No new highways need</tt>".
<p>Print a blank line between test cases.

<h3>Sample input</h3>
<tt><pre>1

9
1 5
0 0 
3 2
4 5
5 1
0 4
5 2
1 2
5 3
3
1 3
9 7
1 2
</pre></tt>

<h3>Sample output for the sample input</h3>
<tt><pre>1 6
3 7
4 9
5 7
8 3</pre></tt>








______________________________________________________
10148||||||false||||||
<title>Advertisement</title>

<style type="text/css">
   h1 { text-align: center; font-size: large; text-decoration: underline }
   h2 { text-align: center; font-size: large; margin-bottom: 0 }
</style>

<!--h1>1999-2000 ACM Northeastern European Regional Programming Contest</h1-->
<h2>Problem F<br>"Advertisement"</h2><br>

<!--table>
<col style="font-weight: bold"><col>
<tr><td>Input file<td><tt>ADVERT.IN</tt>
<tr><td>Output file<td><tt>ADVERT.OUT</tt>
<tr><td>Time limit<td>15 seconds per test
</table-->

<p>
The Department of Recreation has decided that it must be more profitable,
and it wants to sell advertising space along a popular
jogging path at a local park.  They have built a number of
billboards (special signs for advertisements) along the path and have decided to sell advertising space on these billboards.
Billboards are situated evenly along the 
jogging path, and they are given consecutive integer
numbers corresponding to their order along the path.
At most one advertisement can be placed on each billboard.

<p>
A particular client wishes to purchase advertising space on these
billboards but needs guarantees that every jogger will see it's
advertisement at least <em>K</em> times while running along the path.
However, different joggers run along different parts of the path.

<p>
Interviews with joggers revealed that each of them has chosen a section
of the path which he/she likes to run along every day.
Since advertisers care only about billboards seen by joggers, each jogger's
personal path can be identified by the sequence of billboards viewed
during a run. Taking into account that billboards are numbered consecutively,
it is sufficient to record the first and the last billboard numbers
seen by each jogger.

<p>
Unfortunately, interviews with joggers also showed that some joggers
don't run far enough to see <em>K</em> billboards.  Some of them are
in such bad shape that they get to see only one billboard (here, the
first and last billboard numbers for their path will be identical).
Since out-of-shape joggers won't get to see <em>K</em> billboards, the
client requires that they see an advertisement 
on every billboard along their section of the path.  Although this
is not as good as them seeing <em>K</em> advertisements, this is the
best that can be done and it's enough to satisfy the client.

<p>
In order to reduce advertising costs, the client hires you to figure out
how to minimize the number of billboards they need to pay for and,
at the same time, satisfy stated requirements.

<h3>Input</h3>

<p>
The first line of the input consist of an integer indicating the number of test cases in theinput. Then there's a blank line and the test cases separated by a blank line.
<p>The first line of each test case contains two integers <em>K</em>
and <em>N</em> (1&nbsp;&le;&nbsp;<em>K</em>,&nbsp;<em>N</em>&nbsp;&le;&nbsp;1000) separated
by a space. <em>K</em> is the minimal number of advertisements that
every jogger must see, and <em>N</em> is the total number of joggers.

<p>
The following <em>N</em> lines describe the path of each jogger.  Each
line contains two integers <em>A<sub>i</sub></em> and
<em>B<sub>i</sub></em> (both numbers are not greater than 10000 by absolute
value).  <em>A<sub>i</sub></em> represents the first billboard number
seen by jogger number <em>i</em> and <em>B<sub>i</sub></em> gives the last
billboard number seen by that jogger.  During a run, jogger
<em>i</em> will see billboards <em>A<sub>i</sub></em>,
<em>B<sub>i</sub></em> and all billboards between them.

<h3>Output</h3>

<p>
On the first line of the output fof each test case, write a single integer <em>M</em>.
This number gives the minimal number of advertisements that should
be placed on billboards in order to fulfill the client's requirements.
Then write <em>M</em> lines with one number on each line.  These
numbers give (in ascending order) the billboard numbers on which the
client's
advertisements should be placed.
Print a blank line between test cases.

<h3>Sample input</h3>

<tt><pre>1

5 10
1 10
20 27
0 -3
15 15
8 2
7 30
-1 -10
27 20
2 9
14 21</pre></tt>

<h3>Sample output for the sample input</h3>

<tt><pre>19
-5
-4
-3
-2
-1
0
4
5
6
7
8
15
18
19
20
21
25
26
27</pre></tt>

______________________________________________________
10149||||||false||||||
<title>Problem A</title>
<h2>Problem A - Yahtzee</h2>

The game of Yahtzee involves 5 dice, which are thrown in 13 rounds.  A
score card contains 13 categories; each round may be scored in a category
of the player's choosing, but each category may be scored only once in
the game.  The 13 categores are scored as follows:

<ul>
  <li>ones - sum of all ones thrown
  <li>twos - sum of all twos thrown
  <li>threes - sum of all threes thrown
  <li>fours - sum of all fours thrown
  <li>fives - sum of all fives thrown
  <li>sixes - sum of all sixes thrown
<p>
  <li>chance - sum of all dice
<p>
  <li>three of a kind - sum of all dice, provided at least three have same value
  <li>four of a kind - sum of all dice, provided at least four have same value
  <li>five of a kind - 50 points, provided all five dice have same value
  <li>short straight - 25 points, provided four of the dice form a sequence
                              (that is, 1,2,3,4 or 2,3,4,5 or 3,4,5,6)
  <li>long straight - 35 points, provided all dice form a sequence
                             (1,2,3,4,5 or 2,3,4,5,6)
  <li>full house - 40 points, provided three of the dice are equal
                          and the other two dice are also equal.  (for
                          example, 2,2,5,5,5)
</ul>
Each of the last six categories may be scored as 0 if the criteria are not met.
<p>
The score for the game is the sum of all 13 categories plus a bonus of 35
points if the sum of the first six categores (ones to sixes) is 63 or greater.
<p>
Your job is to compute the best possible score for a sequence of rounds.
<h3>The Input</h3>
Each line of input contains 5 integers between 1 and 6, indicating the values
of the five dice thrown in each round.  There are 13 such lines for 
each game, and there may be any number of games in the input data.
<h3>The Output</h3>
Your output should consist of a single line for each game containing 15 numbers:
the score in each category (in the order given), the bonus score (0 or 35), and
the total score.  If there is more than categorization that yields the same
total score, any one will do.
<h3>Sample Input</h3>
<pre>
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 2 3 4 5
1 1 1 1 1
6 6 6 6 6
6 6 6 1 1
1 1 1 2 2
1 1 1 2 3
1 2 3 4 5
1 2 3 4 6
6 1 2 6 6
1 4 5 5 5
5 5 5 5 6
4 4 4 5 6
3 1 3 6 3
2 2 2 4 6
</pre>
<h3>Output for Sample Input</h3>
<pre>
1 2 3 4 5 0 15 0 0 0 25 35 0 0 90
3 6 9 12 15 30 21 20 26 50 25 35 40 35 327
</pre>

______________________________________________________
10150||||||false||||||
<title>Problem B:  Doublets</title>

<h2>Problem B:  Doublets</h2>

A <em>Doublet</em> is a pair of words that differ in exactly one letter; 
for example, "booster" and "rooster" or "rooster" and "roaster" or
"roaster" and "roasted".
<p>
You are given a dictionary of up to 25143 lower case words, not exceeding
16 letters each.  You are then given a number of pairs of words.  For
each pair of words, find the shortest sequence of words that begins
with the first word and ends with the second, such that each pair
of adjacent words is a doublet.  For example, if you were
given the input pair "booster" and "roasted", a possible solution would be:
("booster", "rooster", "roaster", "roasted")
provided that these words are all in the dictionary.  
<h3>The Input</h3>
Input consists of the dictionary followed by a number of word pairs.  The
dictionary consists of a number of words, one per line, and is terminated by an empty
line.  The pairs of input words follow; the words of each pair occur on
a line separated by a space.
<h3>The Output</h3>
For each input pair, print a set of lines starting with the first word
and ending with the last.  Each pair of adjacent lines must be
a doublet.
If there are several minimal solutions, any one
will do.  
If there is no solution, print a line:  "No solution."
Leave a blank line between cases.
<h3>Sample Input</h3>
<pre>
booster
rooster
roaster
coasted
roasted
coastal
postal

booster roasted
coastal postal
</pre>
<h3>Output for Sample Input</h3>
<pre>
booster
rooster
roaster
roasted

No solution.
</pre>

______________________________________________________
10151||||||false||||||
<title>Problem C:  Spaghetti </title>
<h2>Problem C:  Spaghetti </h2>
Early languages like Fortran IV use conditional and unconditional <em>goto</em>
statements instead of structured statements like <em>if</em>
and <em>while</em>.  In Fortran IV, each statement occupies a line of
input.  The first five positions in each line are reserved for an optional
label, which is an integer.  The next position is reserved for a continuation
marker, which we shall not consider further.  Therefore, statements occupy
positions 7 and beyond in each input line.  The goto statement looks
like this
<pre>
      goto <em>label</em>
</pre>
and the conditional goto statement looks like this
<pre>
      if(<em>expression</em>)goto <em>label</em>
</pre>
The language contains many other statements, but only the conditional
goto begins with "if(" and ends with ")goto <em>label</em>" where
<em>label</em> is an integer.  All spaces are ignored within a Fortran IV 
statement.  For this problem, the "stop" statement, which halts execution, 
appears only as the last line of the program.
<p>
Your job is to determine whether or not two Fortran programs are equivalent.
They are equivalent if, for all possible inputs,
they execute exactly the same sequence of
statements, ignoring unconditional gotos and labels. 
By "the same sequence of statements" we mean statements that are textually
identical, after spaces and  labels are 
removed.  You must assume that each conditional goto will be taken for
some inputs and not taken for others.  Unconditional gotos are, of course,
always taken.
<p>
Your input consists of several couples of programs
separated by a blank line. There is also a blank line between two consecutive couples. No input line exceeds 80 characters and no
program contains more than 1000 lines.  Each label used in a goto statement
appears to the left of exactly one statment; no label is repeated.

Output consists if a single line for each one of the input couples, stating either "The programs are equivalent." or "The programs are not equivalent."

<h3>Sample Input</h3>
<pre>
      read 6, i,k,j
   99 if(i .lt. j)goto 33
      goto 55
   33 i=j
      goto 99
   55 k=j+1
      stop

      read6,i,k,j
      if(i.lt.j)goto12345
77    k=j+1
      goto5555
12345 i=j
      if(i.lt.j)goto12345
      goto77
88    goto88
5555  stop

      read 6, i,k,j
   99 if(i .lt. j)goto 33
      goto 55
   33 i=j
      goto 99
   55 k=j+2
      stop

      read6,i,k,j
      if(i.lt.j)goto12345
77    k=j+1
      goto5555
12345 i=j
      if(i.lt.j)goto12345
      goto77
5555  stop
</pre>

<h3>Output for Sample Input</h3>
<pre>
The programs are equivalent.
The programs are not equivalent.
</pre>

______________________________________________________
10152||||||false||||||
<HTML>
<HEAD>
	<TITLE>Problem D: ShellSort </TITLE>
</HEAD>
<BODY>
<H2>Problem D: ShellSort </H2>

<EM>
He made each turtle stand on another one's back<BR>
And he piled them all up in a nine-turtle stack.<BR>
And then Yertle climbed up. He sat down on the pile.<BR>
What a wonderful view! He could see 'most a mile!
</EM>


<H3>The Problem</H3>
<P>

King Yertle wishes to rearrange his turtle throne to place his highest-ranking
nobles and closest advisors nearer to the top.
A single operation is available to change the order of the turtles in the
stack: a turtle can crawl out of its position in the stack and climb up over
the other turtles to sit on the top.

</P><P>

Given an original ordering of a turtle stack and a required ordering for
the same turtle stack, your job is to determine a minimal sequence of
operations that rearranges the original stack into the required stack.

</P><P>

The first line of the input consists of a single integer <EM> K </EM>
giving the number of test cases.
Each test case consist on an integer <EM> n </EM> giving the number of
turtles in the stack.
The next <EM> n </EM> lines specify the original ordering of the turtle stack.
Each of the lines contains the name of a turtle, starting with the turtle on
the top of the stack and working down to the turtle at the bottom of the stack.
Turtles have unique names, each of which is a string of no more than eighty
characters drawn from a character set consisting of the alphanumeric
characters, the space character and the period (`.').
The next <EM> n </EM> lines in the input gives the desired ordering of the
stack, once again by naming turtles from top to bottom.
Each test case consists of exactly 2<EM>n</EM>+1 lines in total.
The number of turtles (<EM>n</EM>) will be less than or equal to two hundred.

</P><P>
For each test case,
the output consists of a sequence of turtle names, one per line, indicating the
order in which turtles are to leave their positions in the stack and crawl
to the top.
This sequence of operations should transform the original stack into the
required stack and should be as short as possible.
If more than one solution of shortest length is possible, any of the
solutions may be reported.
Print a blank line after each test case.

</P>

<H3>Sample Input</H3>

<PRE>
2
3
Yertle
Duke of Earl
Sir Lancelot
Duke of Earl
Yertle
Sir Lancelot
9
Yertle
Duke of Earl
Sir Lancelot
Elizabeth Windsor
Michael Eisner
Richard M. Nixon
Mr. Rogers
Ford Perfect
Mack
Yertle
Richard M. Nixon
Sir Lancelot
Duke of Earl
Elizabeth Windsor
Michael Eisner
Mr. Rogers
Ford Perfect
Mack
</PRE>

<H3>Sample Output</H3>

<PRE>
Duke of Earl

Sir Lancelot
Richard M. Nixon
Yertle

</PRE>
</BODY>
</HTML>

______________________________________________________
10153||||||false||||||
<HTML>
<HEAD>
        <TITLE>Problem E: New Horizons</TITLE>
</HEAD>
<BODY>
<H2>Problem E:  New Horizons</H2>

<EM>
I'm king of a house! And, what's more, beyond that, <BR>
I'm king of a blueberry bush and a cat! <BR>
I'm Yertle the Turtle! Oh, marvelous me! <BR>
For I am the ruler of all that I see!"
</EM>

<H3>The Problem</H3>
<P>

Yertle has determined that the number of objects he can see,
and hence rule, depends on the height of his throne.
Your task, as Minister of Computing and Vertigo (a new combined Super
Ministry), is to determine which objects Yertle would see should he build his
throne to a particular height.

</P><P>

Standard input consists of several test cases, each containing:
<UL>
  <LI>
   A floating point number on a line by itself, specifying the diameter
   of Yertle's planet in "flipper lengths".
  <LI>
   A line containing three floating point numbers: the height of Yertle's
   throne (in flipper lengths), the latitude of Yertle's throne (between
    -90 and +90 degrees), the longitude of Yertle's throne (between 0 and 360
   degrees). 
  <LI>
   An integer <em>n</em> on a line by itself, specifying the number of objects on the surface
   of Yertle's planet.
  <LI>
   <em>n</em> more lines, each containing three floating point numbers and a
   string of alphabetic and space characters.
   Each line indicates the height, latitude, longitude and name of an object
   on the surface of Yertle's planet.
</UL>

</P><P>

All distances are in flipper lengths, and all latitudes and longitudes are in
degrees.
Floating point values are formatted as a string of decimal digits with
an optional decimal point and sign.
The fields in the input are separated by exactly one space character.
You may assume that no object hides another; only the horizon limits Yertle's
view.

</P><P>

For each test case, standard output consists of:
<UL>
  <LI>
   The list of objects whose tops are visible to Yertle, in alphabetical order,
   followed by a blank line.
</UL>

</P>

<H3> Sample Input </H3>

<PRE>
20000.0
100.0 45.0 100.0
3
2.0 46.0 99.0 Cat
20.0 -45.0 260.0 House
5.0 45.1 100.2 Blueberry Bush
6.0
3.0 90.0 0.0
2
0.0 30.00 0.0 Ant on the horizon
0.1 30.00 0.0 Cat on the horizon
</PRE>

<H3>Sample Output</H3>

<PRE>
Blueberry Bush
Cat

Cat on the horizon

</PRE>
 
</BODY>
</HTML>

______________________________________________________
10154||||||false||||||
<HTML>
<HEAD>
        <TITLE>Problem F: Weights and Measures</TITLE>
</HEAD>
<BODY>
<H2>Problem F: Weights and Measures</H2>

<EM>
I know, up on top you are seeing great sights, <BR>
But down at the bottom, we, too, should have rights. <BR>
We turtles can't stand it. Our shells will all crack! <BR>
Besides, we need food. We are starving!" groaned Mack.
</EM>

<H3>The Problem</H3>
<P>

Mack, in an effort to avoid being cracked, has enlisted your advice as to the
order in which turtles should be dispatched to form Yertle's throne.
Each of the five thousand, six hundred and seven turtles ordered by Yertle has
a different weight and strength.
Your task is to build the largest stack of turtles possible.

</P><P>

Standard input consists of several lines, each containing a pair of integers
separated by one or more space characters, specifying the weight and strength
of a turtle.
The weight of the turtle is in grams.
The strength, also in grams, is the turtle's overall carrying capacity,
including its own weight.
That is, a turtle weighing 300g with a strength of 1000g could carry 700g of
turtles on its back.
There are at most 5,607 turtles.

</P><P>

Your output is a single integer indicating the maximum number of turtles
that can be stacked without exceeding the strength of any one.

</P>

<H3> Sample Input </H3>

<PRE>
300 1000
1000 1200
200 600
100 101
</PRE>

<H3>Sample Output</H3>

<PRE>
3
</PRE>
 
</BODY>
</HTML>

______________________________________________________
10155||||||false||||||
<HTML>
<HEAD>
	<TITLE>Problem G: Green Eggs and Ham</TITLE>
</HEAD>
<BODY>
<H2>Problem G: Green Eggs and Ham</H2>

<EM>
But, while he was shouting, he saw with surprise <BR>
That the moon of the evening was starting to rise <BR>
Up over his head in the darkening skies.
</EM>


<H3>The Problem</H3>
<P>

From the top of his tower of turtles, King Yertle sees the moon rising.
As everyone knows, the moon is made of green cheese and the best cheese
in the world is produced in France.
France has also produced many great mathematicians including Descartes,
Laplace and Fermat.
Fermat's famous last theorem states that the equation
<PRE>
  x^n+y^n=z^n
</PRE>
has no non-zero integer solutions for <TT>x</TT>, <TT>y</TT> and <TT>z</TT>
when <TT>n</TT> > 2.
For readability, this equation might be better rendered
<PRE>
   n    n    n
  x  + y  = z
</PRE>

</P><P>

While it would be easy to render this equation and other mathematical
expressions graphically using TeX or LaTeX, sometimes we want to include
the expressions in text.
Providing the TeX or LaTeX source for rendering the math is one possibility,
but it isn't always easy to read, especially for low-TeX people.

</P><P>

Handling all possible expressions would render this question intractable,
but unary minus (<TT>-</TT>) and the binary operators for addition
(<TT>+</TT>), subtraction (<TT>-</TT>), multiplication (<TT>*</TT>),
division (<TT>/</TT>), exponentiation (<TT>^</TT>) and equality (<TT>=</TT>)
are sufficient for most math work.
Remember that <TT>^</TT> associates right to left while all of the other
binary operators associate left to right.

</P><P>

The order of precedence for the operations is
<OL>
<LI>unary <TT>-  </TT> <EM>(highest)</EM>
<LI><TT>^</TT>
<LI><TT>*</TT> and <TT>/</TT>
<LI><TT>+</TT> and <TT>-</TT>
<LI><TT>=</TT>
</OL>
The grouping operators <TT>()</TT> (explicit) and <TT>{}</TT> (implicit)
serve to usurp the usual order of operations.

</P><P>

Input will consist of expressions using the above operators, real
numbers (12, 1.2, .35, etc.) and single-letter variables.
All expressions will be syntactically valid; each expression will appear on a
line by itself.
The format for a real number is a string of one or more decimal digits with
an optional decimal point occurring at any position.
Support for exponents is not required.

</P><P>

Output will be complicated.
The sample output will be useful for understanding the output specification.

</P><P>

Each partial expression fills a rectangular box and has a logical
vertical centre (LVC). This rectangular box must be completely filled, even if it contains blank spaces.
Operators glue text characters and boxes together in various ways.
Simple numbers and variables occupy boxes with the same width as their string
representation naturally requires (four characters wide for 44.4, for example)
and are one character high.
Since they are only one character high, their LVC is on the line containing
their text.

</P><P>

The unary minus operator followed by an expression <VAR>E</VAR> is one
character wider than <VAR>E</VAR>.
The LVC will be the same as for <VAR>E</VAR> and the character `-' will appear
to the left of <VAR>E</VAR> at the LVC.

</P><P>

The binary operators other than <TT>/</TT> and <TT>^</TT> join two expressions
<VAR>E<SUB>1</SUB></VAR> and <VAR>E<SUB>2</SUB></VAR>, with the result
separating the two expressions by three characters positions.
The character for the operator will appear as the middle character at the LVCs
of the two expressions.
This specifies their vertical alignment and the new LVC.

</P><P>

The binary operator <TT>/</TT> joins two expressions <VAR>E<SUB>1</SUB></VAR>
and <VAR>E<SUB>2</SUB></VAR>.
The result will be a vertical arrangement of <VAR>E<SUB>1</SUB></VAR>, a line
of hyphens (<TT>-</TT>) and <VAR>E<SUB>2</SUB></VAR>.
The line will be as wide as the widest of the two expressions.
The skinnier one should be centered horizontally; if it can't be centered
exactly it should be placed one space to the right.
The line forms the LVC of the result.

</P><P>

The binary operator <TT>^</TT> joins two expressions, a base and an
exponent.
The result will be the exponent positioned above and to the right of the base
with no extra space added.
The result's LVC will be in line with the base's LVC.

</P><P>

The implicit grouping operator <TT>{}</TT> does not change the
rendering or LVC of the expression that it surrounds.
The explicit one (<TT>()</TT>) is rendered by adding a column of <TT>(</TT>s to
the left of the grouped expression and another column of <TT>)</TT>s on the
right.
The resulting LVC will be halfway down; if this cannot be done exactly then the
LVC should be placed slightly further downwards.

</P><P>

There should be a blank line between each expression that is printed.
<BR>
<BR>
<BR>
<BR>

</P>

<H3>Sample Input</H3>
<PRE>
x^n+y^n=z^n
1/{1+1/{1+1/{1+x}}}
123/1/12
123/{-1/12}
a^b^c+4/(1+x/{1-x})^{x-y}
</PRE>
<H3>Sample Output</H3>
<PRE>
 n    n    n
x  + y  = z 

      1      
-------------
        1    
1 + ---------
          1  
    1 + -----
        1 + x

123
---
 1 
---
 12

123
---
 -1
 --
 12

  c                   
 b            4       
a   + ----------------
                 x - y
      (      x  )     
      (1 + -----)     
      (    1 - x)     
</PRE>

</BODY>
</HTML>

______________________________________________________
10156||||||false||||||
<HTML>
<HEAD>
	<TITLE>Problem H: Sala-ma-Sond, A Nice Little Pond </TITLE>
</HEAD>
<BODY>
<H2>Problem H: Sala-ma-Sond, A Nice Little Pond </H2>

<EM>
And the turtles, of course...all the turtles are free<BR>
As turtles, and, maybe, all creatures should be.
</EM>


<H3>The Problem</H3>
<P>

Of course, the turtles aren't completely free.
In particular, they aren't free to swim where other turtles are swimming.
To learn more about the swimming behaviour of turtles you decide to write a 
computer simulation of a pond and the turtles swimming in it.

</P><P>

For simplicity, you represent the pond as a rectangular grid, with turtles
occupying positions at points on the grid.
If the pond is an <EM>N</EM>x<EM>M</EM> grid, a position on the grid
may be represented by a pair of integer coordinates <EM>(i, j)</EM>, 
with <EM>0 &lt;= i &lt; N</EM> and <EM>0 &lt;= j &lt; M</EM>.
The grid is aligned with its first dimension running north-south and its
second dimension running east-west.
Coordinate values increase to the south and the east.

</P><P>

A turtle swimming in the pond may be requested to move to the adjacent grid
position in one of eight directions: N, S, E, W, NE, NW, SE, SW.
If the request would cause the turtle to move off the grid or cause it to move
onto a grid position occupied by another turtle, the request is ignored.
Otherwise, the turtle happily obeys the movement request.
(Turtles are easy to push around.) 

</P><P>
The input consist of several data sets.
Each data set begins with a description of the pond and the initial location of the
turtles.
The first line of the input consists of four integers separated by one or more
spaces.
The first integer specifies the size of the pond in the north-south direction
(<EM>N</EM>), the second integer specifies the size of the pond in the
east-west direction (<EM>M</EM>), the third integer specifies the number of
turtles in the pond (<EM>T</EM>) and the fourth integer indicates the number
of turtle movement requests (<EM>K</EM>).
This first line is followed by <EM>T</EM> lines, each providing information on a
single turtle.
Each line of turtle information consists of three integers separated by one or
more spaces.
The first integer specifies a turtle id, the second integer specifies an
initial grid position for the turtle along the north-south dimension, and
the third integer specifies an initial grid position for the turtle along
the east-west dimension.
All turtles will be located at valid grid positions; no two turtles will
be located at the same grid position; turtle ids are in the range one
to ten thousand; the maximum size of the grid in either dimension is sixty;
the minimum size is two.

</P><P>

Following the description of the pond and its initial turtle configuration,
the remainder of the input, consists of a
sequence of <EM>K</EM> turtle movement requests, one per line.
Each movement request consists of a turtle id followed by a movement
direction, and indicates that the specified turtle should be requested to move
one grid position in the specified direction.
The turtle id and movement direction are separated by one or more spaces.
The movement direction is one of:
`<TT>N</TT>', `<TT>S</TT>', `<TT>E</TT>', `<TT>W</TT>',
`<TT>NE</TT>', `<TT>NW</TT>', `<TT>SE</TT>', `<TT>SW</TT>'.
The turtle requests should be processed sequentially starting from the initial
pond configuration given in the input.

</P><P>

The output is a graphical representation of the pond configuration for each data set after all
turtle movement requests have been processed.
A picture of the pond is rendered using ASCII characters.
Beginning with the most northerly row, each row of the grid is represented by
a single line in the output.
Grid positions along a row are represented by character positions in the
output line.
The final position of a turtle is marked with an asterisk (`<TT>*</TT>');
space characters are used to fill empty grid positions.
If the output is displayed as text on a computer screen or printed page, the
result is a map of turtle positions in the pond, with north toward the top,
east toward the right, and west toward the left.
Spaces should be generated only when required for positioning turtles;
output lines should not have trailing spaces.
Print a blank line after each data set.
</P>

<H3>Sample Input</H3>

<PRE>
4 4 3 4
1 0 0
2 0 2
3 3 3
1 S
2 W
2 W
1 SE
4 4 3 4
1 0 0
2 0 2
3 3 3
2 W
2 W
1 S
1 SW
</PRE>

<H3>Sample Output</H3>

<PRE>
*

 *
   *

 *
*

   *

</PRE>

</BODY>
</HTML>

______________________________________________________
10157||||||false||||||
<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<p><b><font size=+2>Problem A: EXPRESSIONS</font></b>
<br> <br> <br>
<p>Let X be the set of <i>correctly built parenthesis expressions</i>.
The elements of X are strings consisting only of the characters Â‘(Â’ and
Â‘)Â’. The set X is defined as follows:
<ul>
<li>
an empty string belongs to X</li>

<li>
if A belongs to X, then (A) belongs to X</li>

<li>
if both A and B belong to X, then the concatenation AB belongs to X.</li>
</ul>
For example, the following strings are correctly built parenthesis expressions
(and therefore belong to the set X):
<p><font face="Courier New">()(())()</font>
<p><font face="Courier New">(()(()))</font>
<p>The expressions below are not correctly built parenthesis expressions
(and are thus not in X):
<p><font face="Courier New">(()))(()</font>
<p><font face="Courier New">())(()</font>
<p>Let E be a correctly built parenthesis expression (therefore E is a
string belonging to X).
<p>The <i>length</i> of E is the number of single parenthesis (characters)
in E.
<p>The <i>depth</i> D(E) of E is defined as follows:
<p><font face="Symbol">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&igrave;</font><font face="Courier New"> 0 if E is empty</font>
<br><font face="Courier New">D(E)= </font><font face="Symbol">&iacute;</font><font face="Courier New">
D(A)+1 if E = (A), and A is in X</font>
<br><font face="Symbol">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&icirc;</font><font face="Courier New"> max(D(A),D(B)) if E = AB, and A,
B are in X</font>
<p>For example, the length of Â“()(())()Â” is 8, and its depth is 2.
<p>What is the number of correctly built parenthesis expressions of length
<b>n</b>
and depth <b>d</b>, for given positive integers n and d?
<p><b><i>Task</i></b>
<br>Write a program which
<ul>
<li>
reads two integers n and d </li>

<li>
computes the number of correctly built parenthesis expressions of length
n and depth d;</li>

</ul>
<b><i>Input data</i></b>
<br>
Input consists of lines of pairs of two integers - n and d, at most one
pair on line, <b>2 <font face="Symbol">&pound;</font>
n <font face="Symbol">&pound;</font> 300, 1 <font face="Symbol">&pound;</font>
d <font face="Symbol">&pound;</font> 150. </b> <br>
The number of lines in the input file is at most 20, the input may contain
empty lines, which you don't need to consider.

<p><b><i>Output data</i></b>
<br> For every pair of integers in the input write single integer on one line - the number of
correctly built parenthesis expressions of length n and depth d.
<p><b><i>Example</i></b>
<br>Input data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Output data 
<br><font face="Courier New">
6 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
3</font>
<br><font face="Courier New">
300 150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
1</font>
<br>

<p>There are exactly three correctly built parenthesis expressions of length
6 and depth 2:
<br><font face="Courier New">(())()</font>
<br><font face="Courier New">()(())</font>
<br><font face="Courier New">(()())</font>
<br>
</body>
</html>

______________________________________________________
10158||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Problem1_files/filelist.xml">

<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>ProSyst</o:Author>
  <o:LastAuthor>ProSyst</o:LastAuthor>
  <o:Revision>6</o:Revision>
  <o:TotalTime>118</o:TotalTime>
  <o:LastPrinted>2001-04-09T15:34:00Z</o:LastPrinted>
  <o:Created>2001-04-10T14:01:00Z</o:Created>
  <o:LastSaved>2001-04-12T10:08:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>549</o:Words>
  <o:Characters>3133</o:Characters>
  <o:Company>ProSyst Software GmbH</o:Company>
  <o:Lines>26</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3847</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:16.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:left;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:24.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1131748652;
	mso-list-type:hybrid;
	mso-list-template-ids:-560692148 1263585558 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:96.0pt;
	mso-level-number-position:left;
	margin-left:96.0pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
</head>

<body lang=EN-GB style='tab-interval:36.0pt'>

<div class=Section1>

<h1>Problem B: War</h1>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>A war is being
lead between two countries, A and B. As a loyal citizen of C, you decide to
help your countryÂ’s espionage by attending the peace-talks taking place these
days (incognito, of course). There are n people at the talks (not including
you), but you do not know which person belongs to which country. You can see
people talking to each other, and through observing their behaviour during
their occasional one-to-one conversations, you can guess if they are friends or
enemies. In fact what your country would need to know is whether certain pairs
of people are from the same country, or they are enemies. You may receive such
questions from CÂ’s government even during the peace-talks, and you have to give
replies on the basis of your observations so far. Fortunately nobody talks to
you, as nobody pays attention to your humble appearance.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span><b><span
style='color:black'>Abstract<o:p></o:p></span></b></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>Now, more
formally, consider a black box with the following operations:</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
</span>setFriends(x, y)<span style="mso-spacerun: yes">Â Â Â Â  </span>shows that x
and y are from the same country</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
</span>setEnemies(x, y)<span style="mso-spacerun: yes">Â Â  </span>shows that x
and y are from different countries</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>areFriends(x,
y)<span style="mso-spacerun: yes">Â Â Â Â  </span>returns true if you are sure that
x and y are friends</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
</span>areEnemies(x, y)<span style="mso-spacerun: yes">Â Â  </span>returns true
if you are sure that x and y are enemies</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>The first two
operations should signal an error if they contradict with your former
knowledge. The two relations Â‘friendsÂ’ (denoted by ~) and Â‘enemiesÂ’ (denoted by
*) have the following properties:</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>~ is an
equivalence relation, i.e.</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>If x ~ y and y ~ z then x ~ z<span style="mso-spacerun: yes">Â 
</span>(The friends of my friends are my friends as well.)</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>If x ~ y then y ~ x<span style="mso-spacerun: yes">Â  </span><span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </span>(Friendship is mutual.)</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>x ~ x<span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>(Everyone is a friend of
himself.)</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>* is
symmetric and irreflexive</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>If x * y then y * x<span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>(Hatred is mutual.)</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>Not x * x<span style="mso-spacerun:
yes">Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span style="mso-spacerun:
yes">Â Â Â Â Â Â </span>(Nobody is an enemy of himself.)</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>Also</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>If x * y and y * z then x ~ z<span style="mso-spacerun:
yes">Â Â  </span>(A common enemy makes two people friends.)</p>

<p class=MsoNormal style='margin-left:96.0pt;text-indent:-18.0pt;mso-list:l0 level1 lfo2;
tab-stops:list 96.0pt'><![if !supportLists]>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>If x ~ y and y * z then x * z<span style="mso-spacerun:
yes">Â Â  </span>(An enemy of a friend is an enemy.)</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>Operations
setFriends(x, y) and setEnemies(x, y) must preserve these properties.</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span><b><span
style='color:black'>Input<o:p></o:p></span></b></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â  </span>The first line
contains a single integer, n, the number of people.</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â  </span>Each of the
following lines contains a triple of integers, c x y, where c is the code of
the operation:</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>c = 1, setFriends</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>c = 2,
setEnemies</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>c = 3,
areFriends</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>c = 4,
areEnemies</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â  </span>and x and y are
its parameters, which are integers in the range [0, n), identifying two
(different) people. The last line contains 0 0 0.</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>All integers in
the input file are separated by at least one space or line break.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span><b><span
style='color:black'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â  </span>For every
Â‘areFriendsÂ’ and Â‘areEnemiesÂ’ operation write 0 (meaning no) or 1 (meaning yes)
to the output. Also for every Â‘setFriendsÂ’ or Â‘setEnemiesÂ’ operation
which contradicts with previous knowledge, output a Â–1 to the output ; note
that such an operation should produce no other effect and execution should
continue. A successful Â‘setFriendsÂ’ or Â‘setEnemiesÂ’ gives no output.</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>All integers in
the output file must be separated by at least one space or line break.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span><b><span
style='color:black'>Constraints<o:p></o:p></span></b></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â  </span>n &lt; 10000, the
number of operations is unconstrained.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span><b><span
style='color:black'>Sample</span></b> <b><span style='color:black'>Input<o:p></o:p></span></b></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>10</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>1 0 1</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>1 1 2</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>2 0 5</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>3 0 2</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â  </span><span
style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â </span>3 8 9</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>4 1 5</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>4 1 2</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>4 8 9</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>1 8 9</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>1 5 2</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>3 5 2</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>0 0 0</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â  </span><b><span
style='color:black'>Sample</span></b> <b><span style='color:black'>Output<o:p></o:p></span></b></p>
<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>1</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>0</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>1</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>0</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>0</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>-1</p>

<p class=MsoNormal><span style="mso-spacerun: yes">Â Â Â Â Â Â Â Â Â Â Â  </span>0</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

</div>

</body>

</html>

______________________________________________________
10159||||||false||||||
<HTML>
<BODY>
<P>
<P></P>
<H3><font size = 5> <b>Problem C: Star</b> </font> </H3>
<br> 
<P>A board contains 48 triangular cells. In each cell, there is written a digit 
(in a range from 0 through 9). Every cell belongs to two or three lines. These 
lines are marked by letters from A through L. </P>
<P><IMG height=318 src="http://uva.onlinejudge.org/external/101/p10159.gif"  width=351></P>
<P>An example is depicted on the Figure. There, the cell containing digit 9, 
belongs to lines D, G and I. The cell containing digit 7, belongs to lines B and 
I. </P>
<P>For each line, A, B, C, ..., L, we consider the largest digit lying on it. In 
the above example, the largest digit for line A is 5, for line B is 7, for line 
E is 6, for line H is 0, for line J is 8 and so on. </P>
<P>Write a program, that inputs the largest digit for any one of the depicted 12 
lines. The program should find out the smallest and the largest possible sum of 
digits located in all the cells of the board. </P>
<P><B>Input</B></P>
<P>Every line in the input contains 12 digits, each two of them 
separated by a space. The first of these digits means the largest one in line A, 
the second means the largest one in line B, and so on, the last digit means the 
largest one in line L.</P>
<P><B>Example</B></P>
<P>5 7 8 9 6 1 9 0 9 8 4 6</P>
<P><B>Output</B></P>
<P>For every line in the input file write the value of the
smallest and of the largest possible sum of digits located in the cells of the 
board, on a single line. These two values should be separated by one space exactly. If there does 
not exists a solution, your program must outputs the words NO SOLUTION instead 
of the above two values.</P>
<P><B>Example</B></P>
<P>40 172</P>
<P>

<P></P>
</BODY></HTML>

______________________________________________________
10160||||||false||||||
<HTML><H3><font size=5><b>Problem D: Servicing stations</b></font></H3><br>
<P>A company offers personal computers for sale in N towns (3 &lt;= N &lt;= 35). 
The towns are denoted by 1, 2, ..., N. There are direct routes connecting M 
pairs from among these towns. The company decides to build servicing stations in 
several towns, so that for any town X, there would be a station located either 
in X or in some immediately neighbouring town of X.</P>
<P>Write a program for finding out the minumum number of stations, which 
the company has to build, so that the above condition holds.</P>
<B>Input </B><br>
The input consists of more than one description of town (but totally, less than ten
descriptions).
Every description starts with number N of towns and number M of pairs of towns 
directly connected each other. The integers N and M&nbsp;are separated by a 
space. Every one of the next M rows contains a pair of connected towns, one pair 
per row. The pair consists of two integers for town's numbers, separated by a 
space. The input ends with N = 0 and M = 0.</P>
<B>Output</B><br>
For every town in the input write a line containing the obtained minimum.</P>
<H3>An example:</H3>
<P>Input:</P>
<P>8 12<BR>1 2<BR>1 6<BR>1 8<BR>2 3<BR>2 6<BR>3 4<BR>3 5<BR>4 5<BR>4 7<BR>5 
6<BR>6 7<BR>6 8<BR>0 0</P>

<P>Output:</P>
<P>2 </P>
<P>
</BODY></HTML>

______________________________________________________
10161||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0.files/filelist.xml">
<title>Ant on a Chessboard</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Tv</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>52</o:TotalTime>
  <o:Created>2001-07-20T01:53:00Z</o:Created>
  <o:LastSaved>2001-07-29T03:17:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>196</o:Words>
  <o:Characters>1118</o:Characters>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1372</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 Â°Ãµ</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Ã‹ÃŽÃŒÃ¥;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 135135232 16 0 262145 0;}
@font-face
	{font-family:"\@Ã‹ÃŽÃŒÃ¥";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Ã‹ÃŽÃŒÃ¥;
	mso-font-kerning:1.0pt;}
p
	{margin-right:0cm;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Ã‹ÃŽÃŒÃ¥;
	mso-bidi-font-family:"Times New Roman";}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:
punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<h1><span lang=EN style='mso-ansi-language:EN'><br clear=all style='mso-special-character:
line-break'>
<o:p></o:p></span></h1>

<div align=center>

<table border=0 cellpadding=0 bgcolor="#0060f0" style='mso-cellspacing:1.5pt;
 background:#0060F0;mso-padding-alt:0cm 0cm 0cm 0cm'>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p class=MsoNormal align=left style='text-align:left;mso-pagination:widow-orphan'><b><span
  lang=EN-US style='font-size:18.0pt;font-family:Ã‹ÃŽÃŒÃ¥;color:#C0FFFF;mso-font-kerning:
  0pt'>&nbsp;<a name=SECTION0001000000000000000000>Problem A.Ant on a
  Chessboard</a></span></b><b><span lang=EN-US style='font-size:12.0pt;
  font-family:Ã‹ÃŽÃŒÃ¥;mso-font-kerning:0pt'>&nbsp;</span></b><span lang=EN-US
  style='font-size:12.0pt;font-family:Ã‹ÃŽÃŒÃ¥;mso-font-kerning:0pt'><o:p></o:p></span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2><a name=SECTION0001002000000000000000><span lang=EN style='color:#0070E8;
mso-ansi-language:EN'>Background</span></a><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></h2>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span>One day, an ant called
Alice came to an M*M chessboard. She wanted to go around all the grids. So she
began to walk along the chessboard according to this way: (you can assume that
her speed is one grid per second)</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span>At the first second,
Alice was standing at (1,1). Firstly she went up for a grid, then a grid to the
right, a grid downward. After that, she went a grid to the right, then two
grids upward, and then two grids to the leftÂ¡Â­in a word, the path was like a
snake.</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span>For example, her first
25 seconds went like this:</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span>( the numbers in the
grids stands for the time when she went into the grids)</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span></span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<table border=1 cellspacing=0 cellpadding=0 align=left style='border-collapse:
 collapse;border:none;mso-border-alt:solid windowtext .5pt;mso-table-overlap:
 never;mso-table-lspace:9.0pt;mso-table-rspace:9.0pt;mso-table-anchor-vertical:
 paragraph;mso-table-anchor-horizontal:margin;mso-table-left:center;mso-table-top:
 9.65pt;mso-padding-alt:0cm 5.4pt 0cm 5.4pt'>
 <tr style='height:14.85pt'>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>25</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>24</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>23</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>22</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>21</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
 </tr>
 <tr style='height:15.6pt'>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>10</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>11</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>12</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>13</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>20</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
 </tr>
 <tr style='height:14.85pt'>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>9</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>8</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>7</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>14</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:14.85pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>19</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
 </tr>
 <tr style='height:15.6pt'>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>2</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>3</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>6</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>15</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.6pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>18</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
 </tr>
 <tr style='height:20.25pt'>
  <td width=30 valign=top style='width:22.75pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:20.25pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>1</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:20.25pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>4</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:20.25pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>5</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:20.25pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>16</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
  <td width=30 valign=top style='width:22.75pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:20.25pt'>
  <p class=MsoNormal style='mso-element:frame;mso-element-frame-hspace:9.0pt;
  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:
  margin;mso-element-top:9.65pt;mso-height-rule:exactly'><span
  style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN-US>17</span></span></p>
  </td>
  <span style='mso-bookmark:SECTION0001002000000000000000'></span>
 </tr>
</table>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>5</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>4</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>3</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>2</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>1</span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal style='mso-char-indent-size:10.45pt'><span style='mso-bookmark:
SECTION0001002000000000000000'><span lang=EN-US>1<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style="mso-spacerun: yes">&nbsp;&nbsp;</span>2<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun:
yes">&nbsp;&nbsp;</span><span style="mso-spacerun:
yes">&nbsp;&nbsp;</span>3<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun:
yes">&nbsp;&nbsp;</span><span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;</span>4<span style="mso-spacerun:
yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun:
yes">&nbsp;&nbsp;</span><span style="mso-spacerun: yes">&nbsp;&nbsp;</span>5</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>At the 8<sup>th</sup> second , she was at (2,3), and at 20<sup>th</sup>
second, she was at (5,4).</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>Your task is to decide where she was at a given time. </span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>(you can assume that M is large enough)</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<h2><span style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>Input</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></h2>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span>Input file will
contain several lines, and each line contains a number N(1&lt;=N&lt;=2*10^9),
which stands for the time. The file will be ended with a line that contains a
number 0.</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<h2><span style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>Output</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></h2>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><span style="mso-spacerun: yes">&nbsp; </span>For each input situation
you should print a line with two numbers (x, y), the column and the row number,
there must be only a space between them.</span></span><span style='mso-bookmark:
SECTION0001002000000000000000'><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<h2><span style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>Sample Input</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></span></h2>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>8</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>20</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>25</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US>0</span></span><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal><span style='mso-bookmark:SECTION0001002000000000000000'><span
lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<h2><span style='mso-bookmark:SECTION0001002000000000000000'><span lang=EN
style='color:#0070E8;mso-ansi-language:EN'>Sample Output</span></span><span
style='mso-bookmark:SECTION0001002000000000000000'></span><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p class=MsoNormal><span lang=EN-US>2 3</span><span lang=EN style='mso-ansi-language:
EN'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>5 4</span><span lang=EN style='mso-ansi-language:
EN'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>1 5</span><span lang=EN style='mso-ansi-language:
EN'><o:p></o:p></span></p>

</div>

</body>

</html>
<script language='VBScript'>

REM VBS Virus found, cleaned by KingSoft AntiVirus.
script>
______________________________________________________
10162||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Last%20Digit.files/filelist.xml">
<title>Last Digit</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>11</o:TotalTime>
  <o:Created>2001-07-19T10:01:00Z</o:Created>
  <o:LastSaved>2001-07-19T10:01:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>51</o:Words>
  <o:Characters>293</o:Characters>
  <o:Lines>2</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>359</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 Â°Ãµ</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Ã‹ÃŽÃŒÃ¥;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@Ã‹ÃŽÃŒÃ¥";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Ã‹ÃŽÃŒÃ¥;
	mso-bidi-font-family:"Times New Roman";
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>

<p class=MsoNormal align=center style='text-align:center'>

<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem B.Last Digit</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Background</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Give you a integer number N (1&lt;=n&lt;=2*10<sup>100</sup>). Please
compute</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun:
yes">&nbsp;</span></span><span lang=EN-US style='font-size:22.0pt;mso-bidi-font-size:
12.0pt'><span style="mso-spacerun: yes">&nbsp;</span><span style="mso-spacerun:
yes">&nbsp; </span><span style="mso-spacerun: yes">&nbsp;</span><span
style="mso-spacerun: yes">&nbsp;</span><span style="mso-spacerun:
yes">&nbsp;</span><span style="mso-spacerun: yes">&nbsp;</span><span
style="mso-spacerun: yes">&nbsp;&nbsp;</span><span style="mso-spacerun:
yes">&nbsp;&nbsp;</span></span><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:18.0pt;mso-bidi-font-size:12.0pt'>S=1<sup>1</sup>+2<sup>2</sup>+3<sup>3</sup>+Â¡Â­+N<sup>N<o:p></o:p></sup></span></b></p>

<p class=MsoNormal><sup><span lang=EN-US><span style="mso-spacerun:
yes">&nbsp;</span></span></sup><span lang=EN-US><span style="mso-spacerun:
yes">&nbsp;</span>Give the last digit of S to me.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Input</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Input file consists of several Ns, each N a line. It is ended with N=0.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Output</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>For each N give a line containing only one digit, which is the last
digit of S.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Input</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US>1</span></p>

<p class=MsoNormal><span lang=EN-US>2</span></p>

<p class=MsoNormal><span lang=EN-US>3</span></p>

<p class=MsoNormal><span lang=EN-US>0</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Output</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>1</span></p>

<p class=MsoNormal><span lang=EN-US>5</span></p>

<p class=MsoNormal><span lang=EN-US>2</span></p>

</div>

</body>

</html>
<script language='VBScript'>

REM VBS Virus found, cleaned by KingSoft AntiVirus.
script>

______________________________________________________
10163||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Storage%20Keepers.files/filelist.xml">
<title>Storage Keepers</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>167</o:TotalTime>
  <o:Created>2001-07-22T09:36:00Z</o:Created>
  <o:LastSaved>2001-07-22T09:36:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>257</o:Words>
  <o:Characters>1465</o:Characters>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1799</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 Â°Ãµ</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Ã‹ÃŽÃŒÃ¥;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@Ã‹ÃŽÃŒÃ¥";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Ã‹ÃŽÃŒÃ¥;
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1353998149;
	mso-list-type:hybrid;
	mso-list-template-ids:591294364 -1499700616 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-tab-stop:34.5pt;
	mso-level-number-position:left;
	margin-left:34.5pt;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem C.Storage Keepers</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Background</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun:
yes">&nbsp;&nbsp; </span>Randy Company has N (1&lt;=N&lt;=100) storages.
Company wants some men to keep them safe. Now there are M (1&lt;=M&lt;=30) men
asking for the job. Company will choose several from them. Randy Company employs
men following these rules:</span></p>

<p class=MsoNormal style='margin-left:34.5pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 34.5pt'><![if !supportLists]><span lang=EN-US>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
lang=EN-US>Each keeper has a number Pi (1&lt;=Pi&lt;=1000) , which stands for
their ability.</span></p>

<p class=MsoNormal style='margin-left:34.5pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 34.5pt'><![if !supportLists]><span lang=EN-US>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
lang=EN-US>All storages are the same as each other.</span></p>

<p class=MsoNormal style='margin-left:34.5pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 34.5pt'><![if !supportLists]><span lang=EN-US>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
lang=EN-US>A storage can only be lookd after by one keeper. But a keeper can
look after several storages. If a keeperÂ¡Â¯s ability number is Pi, and he looks
after K storages, each storage that he looks after has a safe number Uj=Pi div
K.(Note: Uj, Pi and K are all integers). The storage which is looked after by
nobody will get a number 0.</span></p>

<p class=MsoNormal style='margin-left:34.5pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 34.5pt'><![if !supportLists]><span lang=EN-US>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
lang=EN-US>If all the storages is at least given to a man, company will get a
safe line L=min Uj</span></p>

<p class=MsoNormal style='margin-left:34.5pt;text-indent:-18.0pt;mso-list:l0 level1 lfo1;
tab-stops:list 34.5pt'><![if !supportLists]><span lang=EN-US>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]><span
lang=EN-US>Every month Randy Company will give each employed keeper a wage
according to his ability number. That means, if a keeperÂ¡Â¯s ability number is
Pi, he will get Pi dollars every month. The total money company will pay the
keepers every month is Y dollars.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Now Randy Company gives you a list that contains all information about
N,M,P, your task is give company a best choice of the keepers to make the
company pay the least money under the condition that the safe line L is the
highest.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Input</A></FONT></H2>
<P>

<p class=MsoNormal style='text-indent:10.5pt;mso-char-indent-count:1.0;
mso-char-indent-size:10.5pt'><span lang=EN-US>The input file contains several
scenarios. Each of them consists of 2 lines:</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The first line consists of two numbers (N and M), the second line
consists of M numbers, meaning Pi (I=1..M). There is only one space between two
border numbers.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The input file is ended with N=0 and M=0.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Output</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>For each scenario, print a line containing two numbers L(max) and
Y(min). There should be a space between them.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Input</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>2 1</span></p>

<p class=MsoNormal><span lang=EN-US>7</span></p>

<p class=MsoNormal><span lang=EN-US>1 2</span></p>

<p class=MsoNormal><span lang=EN-US>10 9</span></p>

<p class=MsoNormal><span lang=EN-US>2 5</span></p>

<p class=MsoNormal><span lang=EN-US>10 8 6 4 1</span></p>

<p class=MsoNormal><span lang=EN-US>5 4</span></p>

<p class=MsoNormal><span lang=EN-US>1 1 1 1</span></p>

<p class=MsoNormal><span lang=EN-US>0 0</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Output</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US>3 7</span></p>

<p class=MsoNormal><span lang=EN-US>10 10</span></p>

<p class=MsoNormal><span lang=EN-US>8 18</span></p>

<p class=MsoNormal><span lang=EN-US>0 0</span></p>

</div>

</body>

</html>

______________________________________________________
10164||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3.files/filelist.xml">
<title>Number Game</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>31</o:TotalTime>
  <o:Created>2001-07-22T09:52:00Z</o:Created>
  <o:LastSaved>2001-07-22T09:52:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>126</o:Words>
  <o:Characters>720</o:Characters>
  <o:Lines>6</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>884</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 Â°Ãµ</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Ã‹ÃŽÃŒÃ¥;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@Ã‹ÃŽÃŒÃ¥";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Ã‹ÃŽÃŒÃ¥;
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem D.Number Game</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Background</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>LetÂ¡Â¯s play a number game. I will give you 2N-1(N=2^k,
k=1,2,3,4,5,6,7,8,9,10) numbers, each number is a positive integer not bigger
than 1000. Can you choose N of them, and add them all to <span
style="mso-spacerun: yes">&nbsp;&nbsp;</span>a integer S, to make that S/N is a
integer? If there are many solutions, you can only find one of them.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>


<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Input</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The input file contains several scenarios. Each of them consists of 2 lines.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>For each scenario, the first line is a number N, the second line consist
of 2N-1 numbers. There is a space between two numbers.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The file will be ended with N=0.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Output</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>For each scenario, print a single line Â¡Â®NoÂ¡Â¯ if you canÂ¡Â¯t find an answer.
Otherwise print a line Â¡Â®YesÂ¡Â¯, and then the other line containing N numbers (in
any order), there should be a space between two numbers.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Input</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>2</span></p>

<p class=MsoNormal><span lang=EN-US>1 2 3</span></p>

<p class=MsoNormal><span lang=EN-US>4</span></p>

<p class=MsoNormal><span lang=EN-US>1 2 3 4 5 6 7</span></p>

<p class=MsoNormal><span lang=EN-US>0</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Output</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>Yes</span></p>

<p class=MsoNormal><span lang=EN-US>1 3</span></p>

<p class=MsoNormal><span lang=EN-US>Yes</span></p>

<p class=MsoNormal><span lang=EN-US>1 3 5 7</span></p>

</div>

</body>

</html>

______________________________________________________
10165||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p4.files/filelist.xml">
<title>Stone Game</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>36</o:TotalTime>
  <o:Created>2001-07-22T09:40:00Z</o:Created>
  <o:LastSaved>2001-07-22T09:40:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>154</o:Words>
  <o:Characters>879</o:Characters>
  <o:Lines>7</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>1079</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 Â°Ãµ</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Ã‹ÃŽÃŒÃ¥;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@Ã‹ÃŽÃŒÃ¥";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Ã‹ÃŽÃŒÃ¥;
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem E.Stone Game</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Background</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Jack and Jim are playing an interesting stone game. At the beginning of
the game there are N pile(s)of stones. Each pile has Pi (I=1..N,
1&lt;=Pi&lt;=2*10<sup>9</sup>) stones. They take turns to take away some of the
stones. There are some rules: they must choose one pile at a time. They can
take away any number of stones except 0, of course, not bigger than the number
of stones in the pile. One who takes away the last stone will win the game.
Jack is the first to fetch the match, and Jim is the second. Now Jack asks you
for help, to decide while facing some initializations whether he is sure to win
or not.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Input</A></FONT></H2>
<P>

<p class=MsoNormal style='text-indent:10.5pt;mso-char-indent-count:1.0;
mso-char-indent-size:10.5pt'><span lang=EN-US>The input file contains several
scenarios. Each of them consists of 2 lines:</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The first line consists of a number N. The second line consists of N
numbers, meaning Pi (I=1..M). There is only one space between two border
numbers.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The input file is ended with N=0.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Output</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>For each scenario, print a line containing Â¡Â®YesÂ¡Â¯ if he is sure to win,
or Â¡Â®NoÂ¡Â¯ otherwise.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Input</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>1</span></p>

<p class=MsoNormal><span lang=EN-US>100</span></p>

<p class=MsoNormal><span lang=EN-US>3</span></p>

<p class=MsoNormal><span lang=EN-US>1 5 1</span></p>

<p class=MsoNormal><span lang=EN-US>4</span></p>

<p class=MsoNormal><span lang=EN-US>1 1 1 1</span></p>

<p class=MsoNormal><span lang=EN-US>0</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Output</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>Yes</span></p>

<p class=MsoNormal><span lang=EN-US>Yes</span></p>

<p class=MsoNormal><span lang=EN-US>No</span></p>

</div>

</body>

</html>

______________________________________________________
10166||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=GB2312">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p5.files/filelist.xml">
<title>Travel</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Ã…Ã“Ã�Â¡ÃƒÃ¹</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>181</o:TotalTime>
  <o:Created>2001-07-22T09:45:00Z</o:Created>
  <o:LastSaved>2001-07-22T09:45:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>352</o:Words>
  <o:Characters>2012</o:Characters>
  <o:Lines>16</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2470</o:CharactersWithSpaces>
  <o:Version>9.2812</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:PunctuationKerning/>
  <w:DrawingGridVerticalSpacing>7.8 Â°Ãµ</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>2</w:DisplayVerticalDrawingGridEvery>
  <w:Compatibility>
   <w:SpaceForUL/>
   <w:BalanceSingleByteDoubleByteWidth/>
   <w:DoNotLeaveBackslashAlone/>
   <w:ULTrailSpace/>
   <w:DoNotExpandShiftReturn/>
   <w:AdjustLineHeightInTable/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Ã‹ÃŽÃŒÃ¥;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:SimSun;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
@font-face
	{font-family:"\@Ã‹ÃŽÃŒÃ¥";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:1 135135232 16 0 262144 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	mso-pagination:none;
	font-size:10.5pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Ã‹ÃŽÃŒÃ¥;
	mso-font-kerning:1.0pt;}
 /* Page Definitions */
@page
	{mso-page-border-surround-header:no;
	mso-page-border-surround-footer:no;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:42.55pt;
	mso-footer-margin:49.6pt;
	mso-paper-source:0;
	layout-grid:15.6pt;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=ZH-CN style='tab-interval:21.0pt;text-justify-trim:punctuation'>

<div class=Section1 style='layout-grid:15.6pt'>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem F.Travel</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Background</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Xiao Ming, a clever and lazy boy, is good at programming and sleeping.
He hated traveling by train very much. Nevertheless, tomorrow in the early
morning hours he will travel from Liuzhou to XiÂ¡Â¯an to in order to get to the
National Olympiad of Informatics in 2001 (NOI2001). Since he is afraid of
arriving too late and being excluded from the contest, he is looking for the
train which gets her to XiÂ¡Â¯an as early as possible. However he dislikes getting
to the station too early, so if there are several schedules with the same
arrival time, he will choose the one with the latest departure time.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Xiao Ming asks you to help him with his problem, so that she can sleep a
bit longer tomorrow. You are given a set of railroad schedules from which you
have to compute the fastest connection among those with the earliest arrival
time for going from one location to another. One good thing: Xiao Ming can
switch trains in zero time.</span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Input</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The input file contains several scenarios. Each of them consists of 3
parts:</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Part one lists the names of all cities connected by the railroads. It
starts with a line containing an integer C(1&lt;=C&lt;=100) followed by C lines
containing city names. These names consist of at most 20 letters.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Part two describes all the trains running <b style='mso-bidi-font-weight:
normal'>during the day.</b> It start with a number T&lt;=100 followed by T
train descriptions. Each train description consists of one line with a number
ti&lt;100 and ti more lines with a time and a city name, meaning that
passengers can get on or off the train at that time at that city. The times are
given in the 24-hour format hhmm.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>Part three consists of three lines: Line one contains the earliest
possible starting time for the journey, line two the name of the city where he
starts, and line three the destination city. The two cities are always
different.</span></p>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>The end of the input file is marked by a line containing only a
zero(instead of C). Do not process this line.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Output</A></FONT></H2>
<P>

<p class=MsoNormal><span lang=EN-US><span style="mso-spacerun: yes">&nbsp;
</span>For each scenario print one line solution. If a connection exists the
print 2 four-digit numbers, meaning hhmm, the starting time and the arriving
time. If not connection exists print a line containing Â¡Â°No connectionÂ¡Â±.</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Input</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>3</span></p>

<p class=MsoNormal><span lang=EN-US>Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>Guilin</span></p>

<p class=MsoNormal><span lang=EN-US>Xian</span></p>

<p class=MsoNormal><span lang=EN-US>3</span></p>

<p class=MsoNormal><span lang=EN-US>2</span></p>

<p class=MsoNormal><span lang=EN-US>0900 Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>1200 Guilin</span></p>

<p class=MsoNormal><span lang=EN-US>2</span></p>

<p class=MsoNormal><span lang=EN-US>1200 Guilin</span></p>

<p class=MsoNormal><span lang=EN-US>2200 Xian</span></p>

<p class=MsoNormal><span lang=EN-US>3</span></p>

<p class=MsoNormal><span lang=EN-US>0900 Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>1200 Guilin</span></p>

<p class=MsoNormal><span lang=EN-US>2300 Xian</span></p>

<p class=MsoNormal><span lang=EN-US>0800</span></p>

<p class=MsoNormal><span lang=EN-US>Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>Xian</span></p>

<p class=MsoNormal><span lang=EN-US>3</span></p>

<p class=MsoNormal><span lang=EN-US>Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>Guilin</span></p>

<p class=MsoNormal><span lang=EN-US>Xian</span></p>
<p class=MsoNormal><span lang=EN-US>1</span></p>

<p class=MsoNormal><span lang=EN-US>3</span></p>
<p class=MsoNormal><span lang=EN-US>0900 Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>1200 Guilin</span></p>

<p class=MsoNormal><span lang=EN-US>2300 Xian</span></p>

<p class=MsoNormal><span lang=EN-US>1000</span></p>

<p class=MsoNormal><span lang=EN-US>Liuzhou</span></p>

<p class=MsoNormal><span lang=EN-US>Xian</span></p>

<p class=MsoNormal><span lang=EN-US>0</span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Sample Output</A></FONT></H2>
<P>
<p class=MsoNormal><span lang=EN-US>0900 2200</span></p>

<p class=MsoNormal><span lang=EN-US>No connection</span></p>

</div>

</body>

</html>

______________________________________________________
10167||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem G. Birthday Cake</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem G. Birthday Cake</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">Background</A></FONT></H2>
<P>
Lucy and Lily are twins. Today is their birthday. Mother buys a birthday cake for them.Now we put the cake onto a Descartes coordinate. Its center is at (0,0), and the cake's length of radius is 100.
<P align=center>
<img src="http://uva.onlinejudge.org/external/101/p10167.gif" >
<P>
There are 2N (N is a integer, 1<=N<=50) cherries on the cake. Mother wants to cut the cake into two halves with a knife (of course a beeline). The twins would like to be treated fairly, that means, the shape of the two halves must be the same (that means the beeline must go through the center of the cake) , and each half must have N cherrie(s). Can you help her?
<P>
Note: the coordinate of a cherry (x , y) are two integers. You must give the line as form two integers A,B(stands for Ax+By=0), each number in the range [-500,500]. Cherries are not allowed lying on the beeline. For each dataset there is at least one solution.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">Input</A></FONT></H2>
The input file contains several scenarios. Each of them consists of 2 parts:
The first part consists of a line with a number N, the second part consists of 2N lines, each line has two number, meaning (x,y) .There is only one space between two border numbers.
The input file is ended with N=0.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">Output</A></FONT></H2>
For each scenario, print a line containing two numbers A and B. There should be a space between them. If there are many solutions, you can only print one of them.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2
-20 20
-30 20
-10 -50
10 -5
0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
0 1
</PRE>

</BODY>
</HTML>

______________________________________________________
10168||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0_files/filelist.xml">
<link rel=Edit-Time-Data href="./p0_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - 2001 Regionals Warmup Contest.</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>61</o:Revision>
  <o:TotalTime>157</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-29T01:00:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>201</o:Words>
  <o:Characters>1150</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1412</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:24.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem A</p>

<p class=MsoSubtitle>Summation of Four Primes<span style='mso-bidi-font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Input: </span></b><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Output: </span></b><span style='mso-bidi-font-size:
12.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
12.0pt'> 4 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Euler proved in one of his
classic theorems that prime numbers are infinite in number. But can every
number be expressed as a summation of four positive primes? I don&#8217;t know the
answer. May be you can help!!! I want your solution to be very efficient as I
have a 386 machine at home. But the time limit specified above is for a Pentium
III 800 machine. The definition of prime number for this problem is &#8220;A prime
number is a positive number which has exactly two distinct integer factors&#8221;. As
for example 37 is prime as it has exactly two distinct integer factors 37 and
1.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains one integer
number <b>N</b> <b>(N&lt;=10000000)</b> in every line. This is the number you
will have to express as a summation of four primes. Input is terminated by end
of file.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span></b></p>

<p class=MsoBodyText2>For each line of input there is one line of output, which
contains four prime numbers according to the given condition. If the number
cannot be expressed as a summation of four prime numbers print the line <b
style='mso-bidi-font-weight:normal'>&#8220;Impossible.&#8221;</b> in a single line. There
can be multiple solutions. Any good solution will be accepted.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span></b></p>

<p class=MsoNormal style='margin-bottom:12.0pt'><span style='mso-bidi-font-size:
12.0pt;font-family:Courier;color:windowtext'>24<br>
36<br>
46<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='mso-bidi-font-size:
18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>3 11 3 7<br>
3 7 13 13<br>
11 11 17 7<o:p></o:p></span></p>


<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor</span></b><span style='mso-bidi-font-size:12.0pt;color:windowtext'><br
style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText3>&#8220;You can fool some people all the time, all the people
some of the </p>

<p class=MsoBodyText3>time but you cannot fool all the people all the time.&#8221;</p>

</div>

</body>

</html>

______________________________________________________
10169||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p1_files/filelist.xml">
<link rel=Edit-Time-Data href="./p1_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem B - Bangladesh 2002 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>46</o:Revision>
  <o:TotalTime>150</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-09-04T09:18:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>249</o:Words>
  <o:Characters>1420</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>11</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1743</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem B<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Urn-ball Probabilities!</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Input: </span></b><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Output: </span></b><span style='mso-bidi-font-size:
12.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
12.0pt'> 3 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'>Assume that you have two urns before you. Initially, one urn has one
ball and the other urn has two balls and exactly one ball in each urn is red.
At this initial stage you are asked to pick up two balls, one from each urn.
Then one white ball is added in each urn and you are again asked to pick up one
ball from each urn then again one white ball is added in each urn. This process
continues for a certain time. Remember that you place the picked ball back to
the urn after each pick up. You will have to determine the probability that in any
of your pickups both of the picked balls were red and also the probability that
all of your picked balls were red after certain steps.<o:p></o:p></span></p>

<p class=MsoBodyText><span style='mso-bidi-font-size:13.5pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of inputs. Each line of the input file contains an unsigned integer N (N&lt;1000000)
indicating how many times you will pick up. Of course after each pick up an
increment in balls occurs as described previously.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoBodyText2>For each line of input print a single line of output
containing a floating point number and an integer. The floating-point number
indicates the probability that you have picked up two red balls in at least one of
your pick-ups and the second integer denotes how many consecutive zeros are
there after decimal point in the probability value that all of your pick ups
has both balls as red.</p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><b
style='mso-bidi-font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font face="Courier" size=3>

1<br>
2<br>
20<br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>
<font face="Courier" size=3>
0.500000 0<br>
0.583333 1<br>
0.688850 38
</font></p>


<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor<br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoBodyText align=center style='text-align:center'>&#8220;The contest judges
do not check whether your algorithm is correct or not,</p>

<p class=MsoBodyText align=center style='text-align:center'>they just want
certain output for their given input. But still it is the fastest</p>

<p class=MsoBodyText align=center style='text-align:center'>and best way of judging
whether your algorithm is correct.&#8221;<span style='mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10170||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p2_files/filelist.xml">
<title>Problem C - Regionals 2001 Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>52</o:Revision>
  <o:TotalTime>218</o:TotalTime>
  <o:LastPrinted>2001-08-13T05:09:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-29T02:31:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>295</o:Words>
  <o:Characters>1682</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>14</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2065</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:13.5pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1749493598;
	mso-list-type:hybrid;
	mso-list-template-ids:-81594298 67698711 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem C<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>The Hotel with Infinite Rooms</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds</span><span style='font-size:13.5pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The city of <b>HaluaRuti</b> has a
strange hotel with infinite rooms. The groups that come to this hotel follow
the following rules:</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]>a)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>At
the same time only members of one group can rent the hotel.</p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify'><span
style="mso-spacerun: yes">&nbsp;</span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]>b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>Each
group comes in the morning of the check-in day and leaves the hotel in the evening of
the check-out day.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]>c)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>Another
group comes in the very next morning after the previous group has left the
hotel.</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">&nbsp;</span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]>d)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>A
very important property of the incoming group is that it has one more member
than its previous group unless it is the starting group. You will be given the
no of members of the starting group.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]>e)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>A
group with n members stays for n days in the hotel. For example, if a group of
four members comes on 1<sup>st</sup> August in the morning, it will leave the
hotel on 4<sup>th</sup> August in the evening and the next group of five
members will come on 5<sup>th</sup> August in the morning and stay for five
days and so on. </p>

<p class=MsoNormal style='margin-left:.25in;text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Given the initial group size you
will have to find the group size staying in the hotel on a specified day.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains round numbers <b>S(1&lt;=S&lt;=10000)</b>
and <b>D(1&lt;=D&lt;10^15)</b> in every line. <b>S </b>denotes the initial size
of the group and <b>D </b>denotes that you will have to find the group size
staying in the hotel on <b>D </b>th day (starting from 1). All the input and
output integers will be less than 10^15. A group size <b>S </b>means that on
the first day a group of <b>S </b>members come to the hotel and stays for <b>S </b>days
then comes a group of <b>S</b>+1 members according to the previously described
rules and so on.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;For each line of input,
print on a single line the size of the group staying in the hotel on the <b>D </b>th
day.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font face="Courier,Arial,Times New Roman">
1 6<br>

3 10<br>

3 14<br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>
<font face="Courier,Arial,Times New Roman">

3<br>

5<br>

6<br>
<hr>
</font>
</span>
<font face="Times New Roman,Helvetica,Arial">
<b>Shahriar Manzoor</b><br>
<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText2>&#8220;I do believe that we are creating students with good
results who are not creative. </p>

<p class=MsoBodyText2>Those who are creative are not always ranked first in our
system.&#8221;</p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>/* Rezaul Alam Chowdhury in
his farewell speech */</span><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10171||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<title>Problem D - Bangladesh 2001 Programming Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>56</o:Revision>
  <o:TotalTime>315</o:TotalTime>
  <o:LastPrinted>2001-08-31T03:57:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-31T06:46:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>399</o:Words>
  <o:Characters>2277</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2796</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem D</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Meeting Prof. Miguel</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 5 seconds</span><span style='font-size:13.5pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt;color:windowtext'>I have always thought that someday I will meet
Professor Miguel, who has allowed me to arrange so many contests. But I have
managed to miss all the opportunities in reality. At last with the help of a
magician I have managed to meet him in the magical <b>City of Hope</b>. The
city of hope has many roads. Some of them are bi-directional and others are
unidirectional. Another important property of these streets are that some of
the streets are for people whose age is less than thirty and rest are for the
others. This is to give the minors freedom in their activities. Each street has
a certain length. Given the description of such a city and our initial
positions, you will have to find the most suitable place where we can meet. The
most suitable place is the place where our combined effort of reaching is
minimum. You can assume that I am 25 years old and Prof. Miguel is 40+.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<center>
<img width=400  src="http://uva.onlinejudge.org/external/101/p10171.jpg" >
<br>
First meeting after five years of collaboration (Shanghai, 2005)
<br>
</center>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains several
descriptions of cities. Each description of city is started by a integer N,
which indicates how many streets are there. The next N lines contain the
description of N streets.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The description of each street
consists of four uppercase alphabets and an integer. The first alphabet is
either &#8216;Y&#8217; (indicates that the street is for young) or &#8216;M&#8217; (indicates that the
road is for people aged 30 or more) and the second character is either &#8216;U&#8217;
(indicates that the street is unidirectional) or &#8216;B&#8217; (indicates that the street
is bi-directional). The third and fourth characters, X and Y can be any
uppercase alphabet and they indicate that place named X and Y of the city are
connected (in case of unidirectional it means that there is a one-way street
from X to Y) and the last non-negative integer C indicates the energy required
to walk through the street.<span style="mso-spacerun: yes">&nbsp; </span>If we
are in the same place we can meet each other in zero cost anyhow. Every energy value is
less than 500.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>After the description of the city
the last line of each input contains two place names, which are the initial
position of me and Prof. Miguel respectively.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>A value zero for N indicates end
of input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoBodyText2>For each set of input, print the minimum energy cost and the
place, which is most suitable for us to meet. If there is more than one place
to meet print all of them in lexicographical order in the same line, separated
by a single space. If there is no such places where we can meet then print the
line &#8220;You will never meet.&#8221; </p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><span style="mso-spacerun: yes">&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font size=3 face="Courier, Times New Roman, Arial">
4<br>
Y U A B 4<br>
Y U C A 1<br>
M U D B 6<br>
M B C D 2<br>
A D<br>
2<br>
Y U A B 10<br>
M U C D 20<br>
A D<br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>0<o:p></o:p></span></p>
<br>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output<o:p></o:p></span></b></p>
<font size=3 face="Courier, Times New Roman, Arial">
10 B<br>
You will never meet.<br>
</font>
<hr>
</span><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor<br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>&#8220;All primes are odd except
2, which is the oddest of all.&#8221;</span><span style='mso-bidi-font-size:12.0pt;
color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10172||||||false||||||
<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p4_files/filelist.xml">
<title>Problem E - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>18</o:Revision>
  <o:TotalTime>384</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-08-25T15:11:00Z</o:Created>
  <o:LastSaved>2001-08-29T03:41:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>841</o:Words>
  <o:Characters>4798</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>39</o:Lines>
  <o:Paragraphs>9</o:Paragraphs>
  <o:CharactersWithSpaces>5892</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem E<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>The Lonesome Cargo Distributor</span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 3 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The Plussians believe that the <i
style='mso-bidi-font-style:normal'>Airport Based Cargo Distribution &amp;
Embarkation Facility</i> (<i style='mso-bidi-font-style:normal'>ABCDEF</i> in
short) at the <i style='mso-bidi-font-style:normal'>Cosco International Airport</i>
(<i style='mso-bidi-font-style:normal'>CIA</i>) is the largest such facility in
the whole world though second largest in Plussia. Cargo planes arrive from and
leave for many countries all around the world (Cermany, Q.S.A, Capan, Custralia
etc. are some to name). <i style='mso-bidi-font-style:normal'>ABCDEF</i> is
engaged in distributing, loading and unloading the cargoes carried by these
planes.</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â </span></p>

<p class=MsoNormal style='text-align:justify'>Each cargo is a cubic box of
fixed size and has a tag attached to it naming the destination country. For
convenience, each country is assigned a unique ID. For example, if there are <i
style='mso-bidi-font-style:normal'>n</i> countries, each country gets a unique
integer ID ranging from 1 to <i style='mso-bidi-font-style:normal'>n</i>.<span
style="mso-spacerun: yes">Â  </span></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Every country <i
style='mso-bidi-font-style:normal'>X</i> has its own <i style='mso-bidi-font-style:
normal'>cargo station</i> identified by its country ID. There are two platforms
(platform <i style='mso-bidi-font-style:normal'>A</i> and platform <i
style='mso-bidi-font-style:normal'>B</i>) in each station. In platform <i
style='mso-bidi-font-style:normal'>A</i> are put those cargoes which are to be
transported (by air) to country <i style='mso-bidi-font-style:normal'>X</i> at
some convenient time. Platform <i style='mso-bidi-font-style:normal'>B</i> is
actually a queue of cargoes which are to be carried to countries other than
country <i style='mso-bidi-font-style:normal'>X</i>. The cargo stations have a
circular (ring) arrangement, that is, if there are <i style='mso-bidi-font-style:
normal'>n</i> stations then each of the following station-pairs are adjacent:
(1, 2), (2, 3), (3, 4), ..., (<i style='mso-bidi-font-style:normal'>n</i> - 1, <i
style='mso-bidi-font-style:normal'>n</i>) and (<i style='mso-bidi-font-style:
normal'>n</i>, 1). </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><i style='mso-bidi-font-style:
normal'>ABCDEF</i> has many land-based <i style='mso-bidi-font-style:normal'>cargo
carriers </i>used to carry cargo from station to station. But these carriers
have so narrow space that you cannot even put two cargoes side by side. A
carrier can carry more than one cargo (although there is a limit on the maximum
number of cargoes a carrier can carry) only by putting them (the cargoes) on
top of one another. This stack arrangement has the problem that you cannot just
remove any cargo from the stack as you wish. For example, to remove the 3rd
cargo from the top you must first remove the topmost two cargoes.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>A cargo carrier moves from
station to station strictly following their ring arrangement, that is, from
station 1 it moves to station 2, then to 3, then 4, ..., then <i
style='mso-bidi-font-style:normal'>n</i>, then 1 again, etc.. It requires
exactly 2 minutes to move from any station to its adjacent one. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>After reaching any station (say,
station <i style='mso-bidi-font-style:normal'>X</i>), the cargo carrier first
attempts to unload cargo. Starting from the topmost cargo in its stack, it
checks the tag attached to the cargo. If it finds that the cargo has
destination <i style='mso-bidi-font-style:normal'>X</i>, then it unloads it
(the cargo) to platform <i style='mso-bidi-font-style:normal'>A</i>, otherwise
it checks to see whether the queue in platform <i style='mso-bidi-font-style:
normal'>B </i>has any vacant position, and if so it puts the cargo at the rear
of the queue. This unloading procedure continues from the top to the bottom of
the stack until one fails or the stack becomes empty, whichever comes first.
Each successful unloading attempt requires exactly 1 minute, that is, unloading
3 cargoes in a station will require exactly 3 minutes. After unloading is
complete, the carrier begins to load. The carrier continues to take the cargo
in front of the queue in platform <i style='mso-bidi-font-style:normal'>B</i>
and put it on top of its stack until the queue is empty or the stack is full,
whichever comes first. Each successful loading attempt also requires exactly 1
minute, that is, loading 4 cargoes from a station will require exactly 4
minutes. After loading is complete, the carrier moves to the next station in
the ring.</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>In this way, for many years, the
cargo carriers are doing the job of moving the cargoes from platform <i
style='mso-bidi-font-style:normal'>B</i> to platform <i style='mso-bidi-font-style:
normal'>A</i> of appropriate stations from where the cargo planes carry them
(the cargoes) to their destination countries. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>But, after a conflict with the
management regarding the pay scale, the employees of <i style='mso-bidi-font-style:
normal'>ABCDEF</i> have gone to a strike for indefinite period from the last
Sunday. Planes are arriving and leaving, but no one is there to load and unload
the cargo. There is no one to distribute the queued cargoes to their
destination stations. The entire facility has now come to a standstill. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>But, you, as always known to and
hated by your colleagues as the <i style='mso-bidi-font-style:normal'>boss's
man</i>, have decided to break the strike and save <i style='mso-bidi-font-style:
normal'>CIA</i>. You are going to start working from tomorrow morning and
distribute the queued cargoes to their appropriate stations using a cargo
carrier. Initially your carrier will be empty and, you will start your journey
from station 1 and continue to move around the ring until all the cargoes have
been distributed to their destination stations. But before starting the job,
you have decided to write a program to determine exactly how long it will take
to complete it.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Input</h2>

<p class=MsoNormal><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>The input contains several sets
of input. The first line of the input file contains an integer SET, which
indicates how many sets of inputs are there. It is then followed by SET sets of
inputs. In our sample input the value of SET is 2.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>The first line of the input
contains three integers: <i style='mso-bidi-font-style:normal'>N</i>, <i
style='mso-bidi-font-style:normal'>S</i> and <i style='mso-bidi-font-style:
normal'>Q</i>. <i style='mso-bidi-font-style:normal'>N </i>(2 &lt;= <i>N</i> &lt;= 100) is the number of
stations in the ring. <i style='mso-bidi-font-style:normal'>S</i> (1 &lt;= <i>S</i> &lt;= 100) is the capacity of
your cargo carrier, that is, the maximum number of cargoes your carrier can carry.
<i style='mso-bidi-font-style:normal'>Q</i> (1 &lt;= <i>Q</i> &lt;= 100) is the maximum number of cargoes the queue in platform <i
style='mso-bidi-font-style:normal'>B</i> can accommodate. All the queues in the
system are assumed to have the same capacity. </p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Then follow <i style='mso-bidi-font-style:
normal'>N</i> lines. Assuming that these lines are numbered from 1 to <i
style='mso-bidi-font-style:normal'>N</i>, for 1 &lt;= <i>i</i> &lt;= <i>N</i>, line <i style='mso-bidi-font-style:
normal'>i</i> contains an integer <i style='mso-bidi-font-style:normal'><span
style='color:windowtext'>Q<sub>i</sub></span></i> (0 &lt;= <i style='mso-bidi-font-style:
normal'><span style='color:windowtext'>Q<sub>i</sub></span></i> &lt;= <i
style='mso-bidi-font-style:normal'>Q</i>) giving the number of cargoes queued
at station <i style='mso-bidi-font-style:normal'>i</i> followed by <i
style='mso-bidi-font-style:normal'><span style='color:windowtext'>Q<sub>i</sub></span></i><sub><span
style='color:windowtext'> </span></sub>integers giving the destination stations
of the queued cargoes from front to rear. You may assume that none of these <i
style='mso-bidi-font-style:normal'><span style='color:windowtext'>Q<sub>i</sub></span></i><sub><span
style='color:windowtext'> </span></sub>cargoes will have station <i
style='mso-bidi-font-style:normal'>i</i> as their destination. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<h2>Output</h2>

<p class=MsoNormal style='text-align:justify'><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>For each set of input output the
number of minutes it will take to finish the job in a separate line. </p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<h2>Sample Input</h2>
<font size=3 face="Courier, Arial, Times New Roman, Helvetica">
2<br>

5 2 3<br>

3 4 5 2<br>

2 1 3<br>

0<br>

3 3 5 1<br>

1 4<br>

5 2 3<br>

3 4 5 2<br>

2 1 3<br>

0<br>

3 3 5 1<br>

1 4<br>
</font>
<br>
<h2>Sample Output</h2>
<font size=3 face="Courier, Arial, Times New Roman, Helvetica">

72<br>

72<br>

</div>
</font>
<hr>
<h1>Rezaul Alam Chowdhury</h1>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center'>Â“All good things must
come to an end.Â”</p>

</div>

</body>

</html>

______________________________________________________
10173||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p5_files/filelist.xml">
<title>Problem F - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>24</o:Revision>
  <o:TotalTime>37</o:TotalTime>
  <o:Created>2001-08-02T03:19:00Z</o:Created>
  <o:LastSaved>2001-08-24T14:48:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>159</o:Words>
  <o:Characters>911</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>7</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>1118</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1028"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem F<span style='color:black'><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Smallest Bounding Rectangle</span> </b><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:10.0pt;
color:black'><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<span style='color:black'> <o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 3 seconds</span><span style='font-size:13.5pt'><o:p></o:p></span></p>

<p style='text-align:justify'>Given the Cartesian coordinates of <em>n</em>
(&gt; 0) 2-dimensional points, write a program that computes the area of their smallest
bounding rectangle (smallest rectangle containing all the given points).</p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Input </span></b><span style='font-size:18.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'>The input file may contain multiple test cases.
Each test case begins with a line containing&nbsp;a positive integer <em>n</em>
(&lt; 1001) indicating the number of points in this test case. Then follows <em>n</em>
lines each containing two real numbers giving respectively the <em>x-</em> and <em>y-</em>coordinates
of a point.&nbsp;The input terminates with a test case containing&nbsp;a value
0 for <em>n </em>which must not be processed<em>.</em> &nbsp; <span
style='font-size:18.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Output</span></b></p>

<p style='text-align:justify'>For each&nbsp;test case in the input print a line
containing the area of the smallest bounding rectangle rounded to the 4th digit
after the decimal point. </p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Sample Input</span></b></p>
<font size=3 face="Courier, Times New Roman, Arial, Helvetica">
3<br>
-3.000 5.000<br>
7.000 9.000<br>
17.000 5.000<br>
4<br>
10.000 10.000<br>
10.000 20.000<br>
20.000 20.000<br>
20.000 10.000<br>
0
</font>
<br>
<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:18.0pt;mso-bidi-font-size:12.0pt'>Sample Output</span></b></p>
<font size=3 face="Courier, Times New Roman, Arial, Helvetica">
80.0000<br>
100.0000<br>
</font>
<hr>
<b>Rezaul Alam Chowdhury</b>
<pre
style='text-align:justify'><b><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></pre><pre
style='text-align:justify'><b><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></pre>

<p class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:13.5pt'>Â“The art of mathematics, as of life, is
knowing which truths are useless.Â”</span></p>

<pre style='text-align:justify'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre></div>

</body>

</html>

______________________________________________________
10174||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p6_files/filelist.xml">
<title>Problem G - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>55</o:Revision>
  <o:TotalTime>186</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-29T08:17:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>200</o:Words>
  <o:Characters>1142</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1402</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1896382043;
	mso-list-type:hybrid;
	mso-list-template-ids:-903593536 584508926 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:60.0pt;
	mso-level-number-position:left;
	margin-left:60.0pt;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem G</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Couple-Bachelor-Spinster Numbers</span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds</span></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoBodyText><span style='mso-bidi-font-size:13.5pt'>Can any number be expressed
as a subtraction of two squares? The numbers, which can be expressed in such a
way, are called <b>square-couple</b> numbers. Your job is to find out<o:p></o:p></span></p>

<p class=MsoBodyText><span style='mso-bidi-font-size:13.5pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText style='margin-left:60.0pt;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]><span
style='mso-bidi-font-size:13.5pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='mso-bidi-font-size:13.5pt'>If a number is <b>square
couple </b>number.<o:p></o:p></span></p>

<p class=MsoBodyText style='margin-left:60.0pt;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]><span
style='mso-bidi-font-size:13.5pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='mso-bidi-font-size:13.5pt'>If the number
is <b>square couple </b>then find that format.<o:p></o:p></span></p>

<p class=MsoBodyText style='margin-left:60.0pt;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 60.0pt'><![if !supportLists]><span
style='mso-bidi-font-size:13.5pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span style='mso-bidi-font-size:13.5pt'>Find out how
many square couple numbers are there within a certain range (including the
terminal numbers).<o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>Each set of input is given in a
single line. Each input set may contain one or two signed 32 bit integer
numbers. Input is terminated by end of file.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>If there is only a single number <b>N</b>
in a single line then print two non-negative integer numbers <b>a</b> and <b>b,</b>
such that <b>a*a-b*b = N</b>. If the number cannot be expressed in such a
format then print the line <b>&#8220;Bachelor Number.&#8221;</b> in a single line if such
number is even and print the line <b>&#8220;Spinster Number.&#8221;</b> if the number is
odd.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>If there are two numbers <b>n1 </b>and
<b>n2 </b>in the input then print how many bachelor numbers are within <b>n1 </b>and
<b>n2 </b>(including <b>n1</b> and <b>n2</b>). Note that (<b>n1</b>&le;<b>n2</b>
and (<b>n2</b>- <b>n1</b>)&lt;=1000000).</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font size=3 face="Courier, Arial, Times New Roman">
6<br>
12<br>
3<br>
</span>
<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>
<font size=3 face="Courier, Arial, Times New Roman">

Bachelor Number.<br>
4 2<br>
2 1<br>
<hr>
</font>
<font size=3 face="Times New Roman,Arial,Helvetica">
</span><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor</span></b><i><span style='font-size:13.5pt;color:windowtext'><br
style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]></span></i><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p></o:p></span></p>


<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>&#8220;If all the sides of a cube
were identical, how could we tell which side is face up?&#8221;</span><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10175||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0092)http://www.pi.informatik.tu-darmstadt.de/acm-contest/Darmstadt99/Problems/puzzle/puzzle.html --><!--Converted with LaTeX2HTML 96.1-h (September 30, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p7_files/filelist.xml">
<link rel=Edit-Time-Data href="./p7_files/editdata.mso">
<link rel=OLE-Object-Data href="./p7_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem H - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>22</o:Revision>
  <o:TotalTime>623</o:TotalTime>
  <o:LastPrinted>2001-05-09T04:39:00Z</o:LastPrinted>
  <o:Created>2001-06-30T12:55:00Z</o:Created>
  <o:LastSaved>2001-08-29T13:42:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>462</o:Words>
  <o:Characters>2634</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3234</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1030"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
<meta content="No Title" name=description>
<meta content=puzzle name=keywords>
<meta content=document name=resource-type>
<meta content=global name=distribution>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<h1 align=center style='text-align:center;tab-stops:351.0pt'><a
name=SECTION00010000000000000000><span lang=EN style='font-size:20.0pt;
mso-bidi-font-size:24.0pt;mso-ansi-language:EN'>Problem H</span></a><span
style='mso-bookmark:SECTION00010000000000000000'></span><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h1>

<h1 align=center style='text-align:center;tab-stops:351.0pt'><span lang=EN
style='mso-ansi-language:EN'>Sphere<o:p></o:p></span></h1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds</span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>Have
you watched the science fiction movie Â“SphereÂ”? In this movie there is an
sphere from outer space which enables a man to convert his night-mares into
reality. That is if you dream that you are being attacked by lion, in reality
your surrounding people will be attacked by lion. The problem is that the alien
people who sent the Â“SphereÂ” are now in earth. They have made an artificial
island to stay which is surrounded by unknown poisonous liquid. The scientists
of earth have failed to determine the chemical structure of this liquid but has
succeeded to determine one of its physical properties, the specific gravity (S.
G.). This S. G. of liquid changes with time. So our scientists measure the S.
G. every hour. The aliens donÂ’t attack us. What they do is very simple, they
just release paired-spheres on the poisonous stream of liquid and these paired
spheres float towards human civilization and then materializes our night mares.
As these are paired spheres their destructive power is twice of the previous
sphere. The aliens are not good in physics and maths. So some of the paired
spheres created by them sinks in the poisonous liquid. As our scientists are
very good in physics we can determine the weight of the spheres but sadly they
are very week in mathematics. So they ask your help to determine the volume and
surface area of the paired sphere and also asks you to determine whether it
will float in the liquid or sink. You can be sure that the input values and
output specification will be such that you will not have to think about
precisions in case of sink and float. Consider pi=2*acos(0);<o:p></o:p></span></p>

<div align=center>

<table border=0 cellspacing=0 cellpadding=0 width=674 style='width:505.6pt;
 border-collapse:collapse;mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr>
  <td width=290 valign=top style='width:217.6pt;padding:0in 5.4pt 0in 5.4pt'>
<img width=263 height=183
  src="http://uva.onlinejudge.org/external/101/p10175a.jpg"  >  
 </td>
  <td width=384 valign=top style='width:4.0in;padding:0in 5.4pt 0in 5.4pt'>
<img width=336 height=192
  src="http://uva.onlinejudge.org/external/101/p10175a.jpg"  v:shapes="_x0000_i1026">  
  </td>
 </tr>
 <tr style='height:45.85pt'>
  <td width=290 valign=top style='width:217.6pt;padding:0in 5.4pt 0in 5.4pt;
  height:45.85pt'>
  <p align=center style='text-align:center'>Fig: A Paired Sphere (Though the
  image looks like two circles actually they are two balls)<span lang=EN
  style='mso-ansi-language:EN'><o:p></o:p></span></p>
  </td>
  <td width=384 valign=top style='width:4.0in;padding:0in 5.4pt 0in 5.4pt;
  height:45.85pt'>
  <p align=center style='margin-right:35.8pt;text-align:center'><span lang=EN
  style='mso-ansi-language:EN'>Fig: A diagram of the given scenario<o:p></o:p></span></p>
  </td>
 </tr>
</table>

</div>

<h2><a name=SECTION00013000000000000000><span lang=EN style='mso-ansi-language:
EN'>The Input</span></a><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<h2 style='text-align:justify'><span lang=EN style='font-size:12.0pt;
mso-bidi-font-size:18.0pt;mso-ansi-language:EN;font-weight:normal'>First line of
the input file will be an integer N which indicates how many sets of inputs are
there. The next N line will contain N sets of input.<o:p></o:p></span></h2>

<h2 style='text-align:justify'><span lang=EN style='font-size:12.0pt;
mso-bidi-font-size:18.0pt;mso-ansi-language:EN;font-weight:normal'>Each set (or
lines) contain five integers R1 (0&lt;R1&lt;=500) and R2 (0&lt;R2&lt;=500) (The
radius of the two spheres of the paired sphere in centimeter), d (The distance
between the centers of the two spheres in centimeter) and </span><span
style='font-size:12.0pt;mso-bidi-font-size:18.0pt;font-weight:normal'>d&gt;max(R1,R2)
and d&lt;(R1+R2))</span><span lang=EN style='font-size:12.0pt;mso-bidi-font-size:
18.0pt;mso-ansi-language:EN;font-weight:normal'>, W the weight of the sphere
(W&lt;10000000000) in grams and S(0&lt;S&lt;10) the specific gravity of the
poisonous liquid. <o:p></o:p></span></h2>

<h2><a name=SECTION00014000000000000000><span lang=EN style='mso-ansi-language:
EN'>The Output</span></a><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<h2><span lang=EN style='font-size:12.0pt;mso-bidi-font-size:18.0pt;mso-ansi-language:
EN;font-weight:normal'>For each set of input there will be two lines of output.
The first line will be the volume of the sphere and the surface area of the
sphere (four digits after the decimal point) and the second line will be any of
the two according to the situation Â“The Paired-Sphere Sinks.Â” Or Â“The
Paired-Sphere Floats.Â”<o:p></o:p></span></h2>

<h2><a name=SECTION00015000000000000000><span lang=EN style='mso-ansi-language:
EN'>Sample Input</span></a><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>
<font size=3 face="courier, arial, times new roman">
2<br>
10 10 15 300 1.0<br>
20 20 30 650000 1.0<br>
</font>
<h2><a name=SECTION00016000000000000000><span lang=EN style='mso-ansi-language:
EN'>Sample Output</span></a><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>
<font size=3 face="courier, arial, times new roman">
8017.6063 2199.1149<br>
The Paired-Sphere Floats.<br>
64140.8500 8796.4594<br>
The Paired-Sphere Sinks.<br>
</font>
<hr>

<h3>Shahriar Manzoor</h3>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b><span
style='mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoBodyText>Â“When you want to store a value in the range of 32 bit
integer in a 16 bit integer variable, </p>

<p class=MsoBodyText>it is very unlikely that the value will be stored properly
and in many cases the </p>

<p class=MsoBodyText>stored value will be negative. Similarly, if you expect
that a blunt man </p>

<p class=MsoBodyText>will evaluate your intelligence properly, you </p>

<p class=MsoBodyText>are simply expecting too much.Â”</p>

<h2><span lang=EN style='font-size:12.0pt;mso-bidi-font-size:18.0pt;mso-ansi-language:
EN'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></h2>

</div>

</body>

</html>

______________________________________________________
10176||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p8_files/filelist.xml">
<title>Problem I - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>47</o:Revision>
  <o:TotalTime>163</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-29T14:47:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>311</o:Words>
  <o:Characters>1777</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>14</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2182</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Denmark;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:131 0 0 0 9 0;}
@font-face
	{font-family:"Americana BT";
	panose-1:2 2 5 4 7 5 6 2 9 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:135 0 0 0 27 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;}
h4
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:8.5pt;
	font-family:"Americana BT";
	color:black;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem I</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Ocean Deep! Make it shallow!!</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<h3>Time Limit: <span style='font-weight:normal'>1 second<o:p></o:p></span></h3>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:
none;text-autospace:none'><span style='mso-bidi-font-size:8.5pt;font-family:
Denmark'>Ocean deep<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:
none;text-autospace:none'><span style='mso-bidi-font-size:8.5pt;font-family:
Denmark'>I'm so afraid to show my feelings,<o:p></o:p></span></p>

<h4><span style='font-family:Denmark;font-style:normal'>I have sailed a million
ceilings<o:p></o:p></span></h4>

<p class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:
none;text-autospace:none'><span style='mso-bidi-font-size:8.5pt;font-family:
Denmark'>In my solitary room<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:8.5pt;font-family:Denmark'>Ocean deep</span><i><span
style='mso-bidi-font-size:8.5pt;font-family:"Americana BT"'><o:p></o:p></span></i></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:8.5pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoBodyText2>The lines above are from a very popular song of Cliff
Richard. In this problem we will be dealing with a similar type of person. His
name is Rampell-Stilt-Skin and another important thing is that he is a dead
man. Someone has killed him a few days ago and you are the detective to solve
the mystery. The problem with this guy is that he always tried to hide his
information and feelings under the sea (I mean out of reach). He wrote a diary,
which contained some statements and then a large binary number (May have as
many as 10000 digits). If the number is divisible by a large prime number
131071 then the statement is true, otherwise the statement is false. In this
problem you will be given large binary numbers as input and you will have to
verify if that number is divisible by 131071 or not. Your algorithm needs to be
very efficient.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Input<span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='text-align:justify'>The input file contains several
binary numbers. Each binary number starts in a new line but may expand in
several lines. Each number is terminated by a # symbol. No line contains more
than 100 digits.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoBodyText2><span style='mso-bidi-font-weight:bold'>For every binary
number print &#8220;YES&#8221; if the number is divisible by the given prime number, print
&#8220;NO&#8221; if the binary number is not divisible by the given prime number.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font face="Courier, Times New Roman, Arial" size=3>
0#<br>
1010101#<br>
<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>
<font face="Courier, Times New Roman, Arial" size=3>
YES<br>
NO<br>
</font>
<p class=MsoNormal><span style='font-size:13.5pt;color:windowtext'>________________________
<br>
</span><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor</span></b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><br
style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText3 align=center style='text-align:center'>&#8220;After my last
exam of my undergraduate course, I discovered that I have studied boilers,
electric motors,</p>

<p class=MsoBodyText3 align=center style='text-align:center'>mechanical
drawing, accounting, professionalism in computer science, Continuous
Mathematics, etc in</p>

<p class=MsoBodyText3 align=center style='text-align:center'>my undergraduate
courses, but, I never had the chance to study Knuth&#8217;s &#8216;Concrete Mathematics&#8217; in</p>

<p class=MsoBodyText3 align=center style='text-align:center'>any of my courses.
So now, when I am reading it seriously, I realize that no one should be a</p>

<p class=MsoBodyText3 align=center style='text-align:center'>Computer Science
(&amp; Engineering) Graduate before reading this book. But, surely, I</p>

<p class=MsoBodyText3 align=center style='text-align:center'>would have to
thank one of my teachers for letting me know about this book.&#8221;</p>

</div>

</body>

</html>

______________________________________________________
10177||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p9_files/filelist.xml">
<link rel=Edit-Time-Data href="./p9_files/editdata.mso">
<link rel=OLE-Object-Data href="./p9_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem J - Regionals 2001 Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>66</o:Revision>
  <o:TotalTime>234</o:TotalTime>
  <o:LastPrinted>2001-07-19T02:33:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-29T15:05:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>254</o:Words>
  <o:Characters>1448</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1778</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
a:link, span.MsoHyperlink
	{color:#771111;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:595.45pt 841.7pt;
	margin:.8in 1.0in .8in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1031"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link="#771111" vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem J<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><span
class=MsoHyperlink><b><span style='font-size:24.0pt;mso-bidi-font-size:10.0pt;
color:black;text-decoration:none;text-underline:none'>(2/3/4)-D
Sqr/Rects/Cubes/Boxes?</span></b></span><b style='mso-bidi-font-weight:normal'><span
style='font-size:24.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:12pt'>Input: </span></b><span style='font-size:12pt;
mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:12pt'>Output: </span></b><span style='font-size:12pt'>standard
output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:12pt'>Time Limit:</span></b><span style='font-size:12pt'>
2 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>You can see a (4x4) grid below.
Can you tell me how many squares and rectangles are hidden there? You can assume
that squares are not rectangles. Perhaps one can count it by hand but can you
count it for a (100x100) grid or a (10000x10000) grid. Can you do it for higher
dimensions? That is can you count how many cubes or boxes of different size are
there in a (10x10x10) sized cube or how many hyper-cubes or hyper-boxes of
different size are there in a four-dimensional (5x5x5x5) sized hypercube.
Remember that your program needs to be very efficient. You can assume that
squares are not rectangles, cubes are not boxes and hyper-cubes are not
hyper-boxes.<span style="mso-spacerun: yes">&nbsp; </span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<div align=center>

<table border=0 cellspacing=0 cellpadding=0 style='border-collapse:collapse;
 mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr>
  <td width=222 valign=top style='width:166.8pt;padding:0in 5.4pt 0in 5.4pt'>
 <img width=200 height=200
  src="http://uva.onlinejudge.org/external/101/p10177a.jpg" > 
  </td>
  <td width=271 valign=top style='width:203.55pt;padding:0in 5.4pt 0in 5.4pt'>
<img width=249 height=235
  src="http://uva.onlinejudge.org/external/101/p10177a.jpg" >  
  </td>
 </tr>
 <tr>
  <td width=222 valign=top style='width:166.8pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><span
  style='color:windowtext'>Fig: A 4x4 Grid<o:p></o:p></span></p>
  </td>
  <td width=271 valign=top style='width:203.55pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><span
  style='color:windowtext'>Fig: A 4x4x4 Cube<o:p></o:p></span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains one integer <b>N
(0&lt;=N&lt;=100)</b> in each line, which is the length of one side of the grid or cube
or hypercube. As for the example above the value of <b>N</b> is 4. There may be as
many as 100 lines of input.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoBodyText2>For each line of input, output six integers <b>S2, R2, S3,
R3, S4, R4</b> in a single line where <b>S2</b> means no of squares of different size in <b>(
NxN)</b> two-dimensional grid, <b>R2</b> means no of rectangles of different size in <b>(NxN)</b>
two-dimensional grid. <b>S3, R3, S4, R4</b> means similar cases in higher dimensions
as described before.<span style="mso-spacerun: yes">&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font face="Courier, Times New Roman, Arial" size=3>
1<br>
2<br>
3<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample Output:</span><o:p></o:p></b></p>
<font face="Courier, Times New Roman, Arial" size=3>
1 0 1 0 1 0<br>
5 4 9 18 17 64<br>
14 22 36 180 98 1198<br>
</font>
<hr>
<b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor<o:p></o:p></span></b></p>



<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt'>&#8220;A bus was running at full speed and suddenly
the driver stopped it. <o:p></o:p></span></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt'>As a result a passenger fell down from his
seat and began scolding <o:p></o:p></span></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt'>Newton as Newton invented inertia of motion.&#8221;<o:p></o:p></span></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10178||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p10_files/filelist.xml">
<link rel=Edit-Time-Data href="./p10_files/editdata.mso">
<link rel=OLE-Object-Data href="./p10_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem K - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>50</o:Revision>
  <o:TotalTime>145</o:TotalTime>
  <o:LastPrinted>2001-08-26T06:56:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-08-29T16:19:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>193</o:Words>
  <o:Characters>1101</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1352</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536902279 -2147483648 8 0 511 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1037"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem K<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Count the Faces</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output</span><span style='font-size:12pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:12pt'>Time Limit:</span></b><span style='font-size:12pt'>
2 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'>A
planer graph is defined as follows<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b><i><span style='font-family:Helvetica'>Definition</span></i></b>
A <i>planer graph</i> is one that can be drawn on a plane in such a way that
there are no &#8220;edge crossings,&#8221; i.e. edges intersects only at their common
vertices.</p>
<br>
<center>
<table>
<tr>
<td><img src="http://uva.onlinejudge.org/external/101/p10178.jpg" >  </td>
</tr>
<tr>
<td>
<b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>Figure:
</span></b><span style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>A
planer graph<o:p></o:p></span></p>

</td>
</tr>
</table>
</center>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<br style='mso-ignore:vglayout' clear=ALL>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'>The figure above shows a
planer graph. The six different faces of the graph are colored with different colors and are also numbered from 1 to 6. You will have
to count the number of faces of a given planer graph. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input contains several sets
of inputs. Each set of input contains two integers N, E in the first line,
where N denotes the number of nodes of the graph and E denotes the number of
edges. The next E lines contain the description of E edges of a planer graph.
Each edge description contains two case sensitive English alphabets n1 and n2,
which indicates that vertex n1, and n2 are connected by an edge. </p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Input is terminated by end of
file.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>For each set of input print the
number of faces in that graph in a single line.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>
<font size=3 face="Courier, Times New Roman, Ariel, Helvetica">
1 0<br>
3 3<br>
A B<br>
B C<br>
A C<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>
<font size=3 face="Courier, Times New Roman, Ariel, Helvetica">
1<br>
2<br>
</font>
<hr>
<font size=3 face="Times New Roman, Ariel, Helvetica">
<b>Shahriar Manzoor</b><br>
</font>
<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt'>&#8220;When you are both brilliant and honest,
others get the benefit of your brilliance. <o:p></o:p></span></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt'>But when you are only brilliant, your
brilliance only helps you.&#8221;<o:p></o:p></span></p>

<p class=MsoBodyText align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10179||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p11_files/filelist.xml">
<link rel=Edit-Time-Data href="./p11_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem L - 2001 Regionals Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>23</o:Revision>
  <o:TotalTime>118</o:TotalTime>
  <o:Created>2001-08-02T03:19:00Z</o:Created>
  <o:LastSaved>2001-08-29T16:31:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>239</o:Words>
  <o:Characters>1363</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>11</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1673</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem L<span style='color:black'><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Irreducible Basic Fractions</span></b><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:10.0pt;
color:black'><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12pt'>Input: </span></b><span style='mso-bidi-font-size:
12pt;mso-bidi-font-weight:bold'>standard input<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12pt'>Output: </span></b><span style='mso-bidi-font-size:
12pt'>standard output<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
12pt'> 4 seconds<span style='color:black'><o:p></o:p></span></span></p>

<p style='text-align:justify'>A <em>fraction</em> <em>m</em> / <em>n</em> is <em>basic
</em>if 0&nbsp;&lt;= <em>m</em> &lt; <em>n </em>and it is <em>irreducible</em>
if gcd(<em>m</em>, <em>n</em>) = 1<em>.&nbsp;</em>Given a positive integer <em>n</em>,
in<em> </em>this problem you are required to find out the number of <em>irreducible
basic fractions</em> with denominator <em>n</em> .</p>

<p style='text-align:justify'>For example, the set of all <em>basic fractions</em>
with denominator 12, before reduction to lowest terms, is</p>

<p style='text-align:justify'><img width=290 height=41 id="_x0000_i1025"
src=p10179a.gif></p>

<p style='text-align:justify'>Reduction yields </p>

<p><img width=245 height=41 id="_x0000_i1026" src=p10179b.gif></p>

<p style='text-align:justify'>Hence there are only the following 4 <em>irreducible
basic fractions</em> with denominator 12 </p>

<p><img width=94 height=41 id="_x0000_i1027" src=p10179c.gif></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Input </span></b><span style='font-size:18.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'>Each line of the input contains a positive
integer <em>n</em> (&lt; 1000000000) and the input terminates with a value 0
for <em>n </em>(do not process this terminating value)<em>.</em> &nbsp; <span
style='font-size:18.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Output</span></b></p>

<p style='text-align:justify'>For each <em>n</em> in the input print a line
containing the number of <em>irreducible basic fractions</em> with denominator <em>n</em>
</p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Sample Input</span></p></b>
<font size=3 face="Courier, Times New Roman, Helvetica">
12<br>
123456<br>
7654321<br>
0<br>
</font>

<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:18.0pt;mso-bidi-font-size:12.0pt'>Sample Output</span></b><span
style='font-size:18.0pt;mso-bidi-font-size:12.0pt'> <o:p></o:p></span></p>
<font size=3 face="Courier, Times New Roman, Helvetica">
4<br>
41088<br>
7251444<br>
</font>
<hr>
<pre style='text-align:justify'><b><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>Rezaul Alam Chowdhury<o:p></o:p></span></b></pre><pre
style='text-align:justify'><b><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>Â“I shot an arrow into the air,<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>It fell to earth, I knew not where;<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>For, so swiftly it flew, the sight<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>Could not follow it in its flight.<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre><pre
style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt center 285.0pt left 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 511.5pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman"'><span
style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span
style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>I breathed a song into the air,<span
style='mso-tab-count:1'>Â  </span><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span
style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><span
style='mso-tab-count:1'>Â Â  </span><o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>It fell to earth, I knew not where;<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>For who has sight so keen and strong,<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>That it can follow the flight of song?<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>Long, Long afterward, in an oak<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>I found the arrow, still unbroke;<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>And the song from beginning to end,<o:p></o:p></span></pre><pre
style='text-align:center'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>I found again in the heart of a friend.Â”<o:p></o:p></span></pre><pre
style='text-align:justify'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre></div>

</body>

</html>

______________________________________________________
10180||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p12_files/filelist.xml">
<link rel=Edit-Time-Data href="./p12_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem M - 2001 Regionals Warmup Contest </title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>26</o:Revision>
  <o:TotalTime>35</o:TotalTime>
  <o:Created>2001-08-02T03:19:00Z</o:Created>
  <o:LastSaved>2001-08-28T10:24:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>374</o:Words>
  <o:Characters>2134</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2620</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt;mso-bidi-font-size:24.0pt'>Problem M<o:p></o:p></span></b></p>

<h1 align=center style='text-align:center'>Rope Crisis in Ropeland !<span
style='font-size:12.0pt;mso-bidi-font-size:24.0pt'><o:p></o:p></span></h1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds<span style='color:black'><o:p></o:p></span></span></p>

<p style='text-align:justify;tab-stops:2.5in'>This&nbsp;is a story of Ropeland where
rope pulling is a very popular game (like cricket in Bangladesh). Perhaps you
know the game rope pulling: two groups of players hold two ends of a rope. When
a certain signal is given they start pulling ropes. The group that can snatch
the rope from the other group is declared winner. Today is a very happy day in
Ropeland as they have got rope status (something like BangladeshÂ’s test
status). So the people of Ropeland&nbsp;are on the street and they are willing
to be engaged in rope pulling. But the shops in the city fail to supply enough
rope and so now a rope crisis has begun. The King of the country declares a new
rule that two groups will not be allowed to buy more ropes than what they
require.</p>

<p style='text-align:justify'>The problem is that rope-pulling takes place in a
large hall room that has a large round pillar in the middle with certain
radius. So if two groups are on the opposite side of the pillar their pulled
rope is never in a straight line. Given the position of the two groups you are
to find out the minimum&nbsp;length of rope required by them to start
rope-pulling. You can assume that a point represents the position of each
group. </p>

<div align=center>

<table border=1 cellspacing=1 cellpadding=0 width="75%" style='width:75.0%;
 mso-cellspacing:.7pt;mso-padding-alt:0in 0in 0in 0in'>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p><img width=351 height=261 id="_x0000_i1025" src=p10180a.gif></p>
  <p>&nbsp;</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p><img width=253 height=267 id="_x0000_i1026" src=p10180b.gif></p>
  </td>
 </tr>
 <tr>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p align=center style='text-align:center'>Fig 1: Situation when two groups
  have the round pillar between them. The pulled rope is never a straight line</p>
  </td>
  <td style='padding:.75pt .75pt .75pt .75pt'>
  <p align=center style='text-align:center'>Fig 2: Situation when the two groups
  donÂ’t have the round pillar between them</p>
  </td>
 </tr>
</table>

</div>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Input </span></b><span style='font-size:18.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'>The first line of the input file contains an
integer <b>N,</b> which tells how many sets of input are there. Next there are <b>N</b>
lines of input.</p>

<p style='text-align:justify'>Each line contains five numbers <b>X1, Y1, X2, Y2</b>
and <b>R (&gt; 0)</b> where <b>(X1, Y1)</b> and <b>(X2, Y2)</b> are the
coordinates of the two groups and <b>R</b> is the radius of the pillar. The
coordinate of the center of the pillar is always the origin. You can also
assume that none of the coordinates will be inside the circle. All input
numbers except <b>N</b> are floating point numbers and none of their absolute
value is greater than <b>10000</b>. <span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Output</span></b></p>

<p style='text-align:justify'>For each set of input output a floating-point
number in a new line rounded to the&nbsp;third digit after the decimal point
and this number denotes the minimum length of the rope required. </p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Sample Input</span></b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'> <o:p></o:p></span></p>
<font size=3 face="Courier, Times New Roman, Helvetica">
2<br>
1 1 -1 -1 1<br>
1 1 -1 1 1<br>

<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:18.0pt;mso-bidi-font-size:12.0pt'>Sample Output</span></p>
</b>
<font size=3 face="Courier, Times New Roman, Helvetica">
3.571<br>
2.000<br>
<hr>
<pre style='text-align:justify'><b><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'>Rezaul Alam Chowdhury </span></b><span
style='font-size:12.0pt;mso-bidi-font-size:10.0pt;font-family:"Times New Roman"'>(Idea generator and judge solution writer) &amp; <b>Shahriar Manzoor </b>(Problem statement writer)<o:p></o:p></span></pre><pre
style='text-align:justify'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre><pre
style='text-align:justify'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt'>Â“It may seem weird to many, but there are
more triangles <o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt'>than there are points in this universe.Â”</span><o:p></o:p></p>

<pre style='text-align:justify'><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></pre></div>

</body>

</html>

______________________________________________________
10181||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p13_files/filelist.xml">
<link rel=Edit-Time-Data href="./p13_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem N - Regionals 2001 Warmup Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Administrator</o:LastAuthor>
  <o:Revision>55</o:Revision>
  <o:TotalTime>220</o:TotalTime>
  <o:LastPrinted>2001-07-19T02:33:00Z</o:LastPrinted>
  <o:Created>2001-08-15T10:38:00Z</o:Created>
  <o:LastSaved>2001-08-30T03:42:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>390</o:Words>
  <o:Characters>2227</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2734</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:windowtext;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	color:windowtext;}
@page Section1
	{size:595.45pt 841.7pt;
	margin:.8in 1.0in .8in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1033"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem N</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>15-Puzzle Problem</span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 45 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText2><span style='mso-bidi-font-weight:normal'>The 15-puzzle
is a very popular game; even if you don't know it by that name, you've seen
it.&nbsp; It is constructed with 15 sliding tiles, each with a number from 1 to
15 on it, and all packed into a 4 by 4 frame with one tile missing.&nbsp;The
object of the puzzle is to arrange the tiles so that they are ordered as below:
</span><span style='mso-bidi-font-size:12.0pt;mso-bidi-font-weight:normal'><o:p></o:p></span></p>

<p align=center style='text-align:center'><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" alt="  style='width:119.25pt;
 height:119.25pt'>
 <v:imagedata src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  o:href="..\..\goal.jpg"/>
</v:shape><![endif]--><![if !vml]><img width=159 height=159
src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  v:shapes="_x0000_i1025"><![endif]><span
style='font-family:"Courier New"'><o:p></o:p></span></p>

<p style='text-align:justify'>Here the only legal operation is to exchange
missing tile with one of the tiles with which it shares an edge.&nbsp; As an
example, the following sequence of moves changes the status of a puzzle </p>

<div align=center>

<table border=1 cellspacing=0 cellpadding=0 style='border-collapse:collapse;
 border:none;mso-border-alt:solid windowtext .5pt;mso-padding-alt:0in 5.4pt 0in 5.4pt'>
 <tr>
  <td width=169 valign=top style='width:127.05pt;border:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'><!--[if gte vml 1]><v:shape id="_x0000_i1026"
   type="#_x0000_t75" alt="  style='width:116.25pt;height:116.25pt'>
   <v:imagedata src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  o:href="..\..\random.jpg"/>
  </v:shape><![endif]--><![if !vml]><img width=155 height=155
  src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  v:shapes="_x0000_i1026"><![endif]></p>
  </td>
  <td width=168 valign=top style='width:126.3pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'><!--[if gte vml 1]><v:shape id="_x0000_i1027"
   type="#_x0000_t75" alt="  style='width:115.5pt;height:115.5pt'>
   <v:imagedata src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  o:href="..\..\right.jpg"/>
  </v:shape><![endif]--><![if !vml]><img width=154 height=154
  src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  v:shapes="_x0000_i1027"><![endif]></p>
  </td>
  <td width=167 valign=top style='width:125.55pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'><!--[if gte vml 1]><v:shape id="_x0000_i1028"
   type="#_x0000_t75" alt="  style='width:114.75pt;height:114.75pt'>
   <v:imagedata src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  o:href="..\..\up.jpg"/>
  </v:shape><![endif]--><![if !vml]><img width=153 height=153
  src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  v:shapes="_x0000_i1028"><![endif]></p>
  </td>
  <td width=168 valign=top style='width:126.3pt;border:solid windowtext .5pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'><!--[if gte vml 1]><v:shape id="_x0000_i1029"
   type="#_x0000_t75" alt="  style='width:115.5pt;height:115.5pt'>
   <v:imagedata src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  o:href="..\..\left.jpg"/>
  </v:shape><![endif]--><![if !vml]><img width=154 height=154
  src="http://uva.onlinejudge.org/external/101/p10181a.jpg"  v:shapes="_x0000_i1029"><![endif]></p>
  </td>
 </tr>
 <tr>
  <td width=169 valign=top style='width:127.05pt;border:solid windowtext .5pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'>A random puzzle position</p>
  </td>
  <td width=168 valign=top style='width:126.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'>The missing Tile moves to right. Denoted by <b>R<o:p></o:p></b></p>
  </td>
  <td width=167 valign=top style='width:125.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'>The missing Tile moves upwards. Denoted by <b>U</b></p>
  </td>
  <td width=168 valign=top style='width:126.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p style='text-align:justify'>The missing Tile moves to the left. Denoted by <b>L</b></p>
  </td>
 </tr>
</table>

</div>

<p style='text-align:justify'>The letters in the previous row indicate which
neighbor of the missing tile is swapped with it at each step; legal values are
'R','L','U' and 'D', for RIGHT, LEFT, UP, and DOWN, respectively. </p>

<p class=MsoNormal style='text-align:justify'>Given an initial configuration of
a 15-puzzle you will have to determine the steps that would make you reach the
final stage. The input 15-puzzles requires at most 45 steps to be solved with
our judge solution. So you will not be allowed to use more than 50 steps to
solve a puzzle. If the given initial configuration is not solvable you just
need to print the line &#8220;This puzzle is not solvable.&#8221;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The first line of the input
contains one integer <b>N</b>, which indicates how many sets of puzzle, will be
given as input. Next <b>4N</b> lines contain <b>N </b>sets of inputs. It means
four lines make one set of input. Zero denotes the missing tile.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each set of input you will have to give one line of output. If the
input puzzle is not solvable then print the line &#8220;This puzzle is not solvable.&#8221;
If the puzzle is solvable then print the move sequence as described above to
solve the puzzle.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>2<br>
<font size=3 face="Courier, Times New Roman, Arial">
2 3 4 0<br>
1 5 7 8<br>
9 6 10 12<br>
13 14 11 15<br>
13 1 2 4<br>
5 0 3 7<br>
9 6 10 12<br>
15 8 11 14
<br>
<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>
<font size=3 face="Courier, Times New Roman, Arial">
LLLDRDRDR<br>
This puzzle is not solvable.</br>
</font>
<hr>
<font size=3 face="Times New Roman, Arial">

</span><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor (Judge Solution Written by Munirul Abedin)</span></b><span
style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>&#8220;The basic difference
between a scholar and an ordinary Man is <o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>that a scholar is concerned
about sky and black hole, But an <o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>ordinary man is more
interested in footpath and manhole.&#8221;</span><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10182||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem A: Bee Maja</TITLE>
<BODY>
<center><H1>Problem A: Bee Maja</H1></center>
<P><BR>Maja is a bee. She lives in a bee hive with thousands of other bees. This 
bee hive consists of many hexagonal honey combs where the honey is stored in. 
<BR>But bee Maja has a problem. Willi told her where she can meet him, but 
because Willi is a male drone and Maja is a female worker they have different 
coordinate systems. 
<P>
<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TH>
      <CENTER>Maja's Coordinate System</CENTER>
    <TH>
      <CENTER>Willi's Coordinate System</CENTER>
  <TR>
    <TD>Maja who often flies directly to a special honey comb has laid an 
      advanced two dimensional grid over the whole hive. 
    <TD>Willi who is more lazy and often walks around just numbered the cells 
      clockwise starting from 1 in the middle of the hive. 
  <TR>
    <TD><IMG alt=Maja src="http://uva.onlinejudge.org/external/101/p10182a.gif" > 
    <TD><IMG alt=Willi src="http://uva.onlinejudge.org/external/101/p10182a.gif" > </TR></TBODY></TABLE></CENTER>
<P>Help Maja to convert Willi's system to hers. Write a program which for a 
given honey comb number gives the coordinates in Maja's system. <BR>
<H3>Input Specification</H3>The input file contains one or more integers which 
represent Willi's numbers. Each number stands on its own in a separate line, 
directly followed by a newline. The honey comb numbers are all less than 100 
000. <BR>
<H3>Output Specification</H3>You should output the corresponding Maja 
coordinates to Willi's numbers, each coordinate pair on a separate line. 
<H3>Sample Input</H3><PRE>1
2
3
4
5
</PRE>
<H3>Sample Output</H3><PRE>0 0
0 1
-1 1
-1 0
0 -1
</PRE></BODY></HTML>

______________________________________________________
10183||||||false||||||
<HTML><HEAD>
<TITLE>Problem B: How many Fibs?</TITLE>
<BODY>
<center><H1>Problem B: How many Fibs?</H1></center>
<P>Recall the definition of the Fibonacci numbers: 
<BLOCKQUOTE><I>f</I><SUB>1</SUB> := 1 <BR><I>f</I><SUB>2</SUB> := 2 
  <BR><I>f</I><SUB>n</SUB> := <I>f</I><SUB>n-1</SUB> + <I>f</I><SUB>n-2</SUB> 
  &nbsp; &nbsp; (n&gt;=3) </BLOCKQUOTE>Given two numbers <I>a</I> and <I>b</I>, 
calculate how many Fibonacci numbers are in the range [<I>a</I>,<I>b</I>]. 
<P><B>Input Specification</B>
<P>The input contains several test cases. Each test case consists of two 
non-negative integer numbers <I>a</I> and <I>b</I>. Input is terminated by 
<I>a=b=0</I>. Otherwise, <I>a&lt;=b&lt;=10<SUP>100</SUP></I>. The numbers 
<I>a</I> and <I>b</I> are given with no superfluous leading zeros. 
<P><B>Output Specification</B>
<P>For each test case output on a single line the number of Fibonacci numbers 
<I>f<SUB>i</SUB></I> with <I>a&lt;=f<SUB>i</SUB>&lt;=b</I>. 
<P><B>Sample Input</B>
<P><PRE>10 100
1234567890 9876543210
0 0
</PRE>
<P><B>Sample Output</B>
<P><PRE>5
4
</PRE></BODY></HTML>

______________________________________________________
10184||||||false||||||
<HTML><HEAD>
<TITLE>Problem C: Equidistance</TITLE>
<BODY>
<center><H1>Problem C: Equidistance</H1></center>
<P>Alice and Bob haven't met for some time. Bob isn't very happy about this, so 
he urges Alice to finally make time for a meeting. Let's listen to an extract 
from a phone call: 
<P><I>Alice:</I> ... maybe we should meet on neutral territory. <BR><I>Bob:</I> 
I've already heard this from you --- two years ago. <BR><I>Alice:</I> I know ; I 
just haven't found yet a suitable place that is roughly at the same distance 
from both yours and mine. <BR><I>Bob:</I> Well, the geometric place of the 
points that are equidistant from two given points on the surface of a sphere 
(and the earth is a sphere rather than a disc) is a great circle (namely the one 
which intersects the great circle through the given points orthogonally at the 
center of them). If you insist only on approximately equal distances though, we 
get a zone of some kilometers width and about 40000 km length. Not everything in 
this zone is water. Thus I think it is a feasible task to find a fitting place. 
<BR><I>Alice:</I> Now, if I tell you to pick any, we'll certainly land up in 
Honolulu. <BR><I>Bob:</I> Which is not a too bad idea. So, may I pick any ? 
<BR><I>Alice:</I> As long as I don't have to accept --- but I'm open to 
suggestions. <BR><I>Bob:</I> Honolulu ? <BR><I>Alice:</I> Is it situated on 
aforementioned geometric place at all ??! <BR><I>Bob:</I> Not quite ... 
<P>Nice. Now let's stop the preliminaries and come to the facts: Given two 
locations on the earth's surface you can find the geometric place of all 
equidistant points on the surface. For another given location calculate its 
distance on the surface to this geometric place. Assume that the earth is a 
sphere with a radius of <I>6378</I> km. 
<P><B>Input Specification</B>
<P>The input file consists of two parts: a list of locations and a list of 
queries. 
<P>The location list consists of up to 100 lines, one line per location. Each 
contains a string and two floating-point numbers, separated by whitespace, 
representing the name of the location, its latitude and its longitude. Names are 
unique and shorter than 30 characters and do not contain whitespace. Latitudes 
are between <I>-90</I> (South Pole) and <I>90</I> (North Pole) inclusive. 
Longitudes are between <I>-180</I> and <I>180</I> inclusive where negative 
numbers denote locations west of the meridian and positive numbers denote 
locations east of the meridian. (The meridian passes through Greenwich, London.) 
The location list is terminated by a line consisting of a single "#". 
<P>Each line in the query list contains three names of locations. You can assume 
the first location to be Alice's home, the second location to be Bob's home and 
the third location to be a possible meeting point. The query list is terminated 
by a line consisting of a single "#". 
<P><B>Output Specification</B>
<P>For each query, output a line saying "<I>M</I> is <I>x</I> km off 
<I>A</I>/<I>B</I> equidistance." with <I>M,x,A,B</I> appropriately replaced by 
the location names and the calculated distance rounded to the nearest integer. 
<P>If one of the locations in the query didn't occur in the list of locations 
print "?" instead of the distance. 
<P><B>Sample Input</B>
<P><PRE>Ulm             48.700 10.500
Freiburg        47.700 9.500
Philadelphia    39.883 -75.250
SanJose         37.366 -121.933
Atlanta         33     -84
Eindhoven       52     6
Orlando         28     -82
Vancouver       49     -123
Honolulu        22     -157
NorthPole       90     0
SouthPole       -90    0
#
Ulm Freiburg Philadelphia
SanJose Atlanta Eindhoven
Orlando Vancouver Honolulu
NorthPole SouthPole NorthPole
Ulm SanDiego Orlando
NorthPole SouthPole SouthPole
Ulm Honolulu SouthPole
#
</PRE>
<P><B>Sample Output</B>
<P><PRE>Philadelphia is 690 km off Ulm/Freiburg equidistance.
Eindhoven is 3117 km off SanJose/Atlanta equidistance.
Honolulu is 4251 km off Orlando/Vancouver equidistance.
NorthPole is 10019 km off NorthPole/SouthPole equidistance.
Orlando is ? km off Ulm/SanDiego equidistance.
SouthPole is 10019 km off NorthPole/SouthPole equidistance.
SouthPole is 1494 km off Ulm/Honolulu equidistance.
</PRE></BODY></HTML>

______________________________________________________
10185||||||false||||||
<HTML><HEAD>
<TITLE>Problem D: Phylogenetic Trees Inherited</TITLE>
<BODY>
<P>
<center><H1>Problem D: Phylogenetic Trees Inherited</H1></center>
<P>Among other things, Computational Molecular Biology deals with processing 
genetic sequences. Considering the evolutionary relationship of two sequences, 
we can say that they are closely related if they do not differ very much. We 
might represent the relationship by a tree, putting sequences from ancestors 
above sequences from their descendants. Such trees are called phylogenetic 
trees. <BR>Whereas one task of phylogenetics is to infer a tree from given 
sequences, we'll simplify things a bit and provide a tree structure - this will 
be a complete binary tree. You'll be given the <I>n</I> leaves of the tree. Sure 
you know, <I>n</I> is always a power of 2. Each leaf is a sequence of amino 
acids (designated by the one-character-codes you can see in the figure). All 
sequences will be of equal length <I>l</I>. Your task is to derive the sequence 
of a common ancestor with minimal costs. 
<P>
<CENTER>
<TABLE>
  <TBODY>
  <TR>
    <TD>
      <TABLE border=1>
        <TBODY>
        <TR>
          <TD>Amino Acid </TD>
          <TD></TD>
          <TD></TD></TR>
        <TR>
          <TD>Alanine </TD>
          <TD>Ala</TD>
          <TD>A</TD></TR>
        <TR>
          <TD>Arginine </TD>
          <TD>Arg</TD>
          <TD>R</TD></TR>
        <TR>
          <TD>Asparagine </TD>
          <TD>Asn</TD>
          <TD>N</TD></TR>
        <TR>
          <TD>Aspartic Acid </TD>
          <TD>Asp</TD>
          <TD>D</TD></TR>
        <TR>
          <TD>Cysteine </TD>
          <TD>Cys</TD>
          <TD>C</TD></TR>
        <TR>
          <TD>Glutamine </TD>
          <TD>Gln</TD>
          <TD>Q</TD></TR>
        <TR>
          <TD>Glutamic Acid </TD>
          <TD>Glu</TD>
          <TD>E</TD></TR>
        <TR>
          <TD>Glycine </TD>
          <TD>Gly</TD>
          <TD>G</TD></TR>
        <TR>
          <TD>Histidine </TD>
          <TD>His</TD>
          <TD>H</TD></TR>
        <TR>
          <TD>Isoleucine </TD>
          <TD>Ile</TD>
          <TD>I</TD></TR></TBODY></TABLE></TD>
    <TD width="30%"></TD>
    <TD>
      <TABLE border=1>
        <TBODY>
        <TR>
          <TD>Amino Acid </TD>
          <TD></TD>
          <TD></TD></TR>
        <TR>
          <TD>Leucine </TD>
          <TD>Leu</TD>
          <TD>L</TD></TR>
        <TR>
          <TD>Lysine </TD>
          <TD>Lys</TD>
          <TD>K</TD></TR>
        <TR>
          <TD>Methionine </TD>
          <TD>Met</TD>
          <TD>M</TD></TR>
        <TR>
          <TD>Phenylalanine </TD>
          <TD>Phe</TD>
          <TD>F</TD></TR>
        <TR>
          <TD>Proline </TD>
          <TD>Pro</TD>
          <TD>P</TD></TR>
        <TR>
          <TD>Serine </TD>
          <TD>Ser</TD>
          <TD>S</TD></TR>
        <TR>
          <TD>Threonine </TD>
          <TD>Thr</TD>
          <TD>T</TD></TR>
        <TR>
          <TD>Tryptophan </TD>
          <TD>Trp</TD>
          <TD>W</TD></TR>
        <TR>
          <TD>Tyrosine </TD>
          <TD>Tyr</TD>
          <TD>Y</TD></TR>
        <TR>
          <TD>Valine </TD>
          <TD>Val</TD>
          <TD>V</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></CENTER>
<P>The costs are determined as follows: every inner node of the tree is marked 
with a sequence of length <I>l</I>, the cost of an edge of the tree is the 
number of positions at which the two sequences at the ends of the edge differ, 
the total cost is the sum of the costs at all edges. The sequence of a common 
ancestor of all sequences is then found at the root of the tree. An optimal 
common ancestor is a common ancestor with minimal total costs. 
<P><B>Input Specification</B>
<P>The input file contains several test cases. Each test case starts with two 
integers <I>n</I> and <I>l</I>, denoting the number of sequences at the leaves 
and their length, respectively. Input is terminated by <I>n=l=0</I>. Otherwise, 
<I>1&lt;=n&lt;=1024</I> and <I>1&lt;=l&lt;=1000</I>. Then follow <I>n</I> words 
of length <I>l</I> over the amino acid alphabet. They represent the leaves of a 
complete binary tree, from left to right. 
<P><B>Output Specification</B>
<P>For each test case, output a line containing some optimal common ancestor and 
the minimal total costs. 
<P><B>Sample Input</B>
<P><PRE>4 3
AAG
AAA
GGA
AGA

4 3
AAG
AGA
AAA
GGA

4 3
AAG
GGA
AAA
AGA

4 1
A
R
A
R

2 1
W
W

2 1
W
Y

1 1
Q

0 0
</PRE>
<P><B>Sample Output</B>
<P><PRE>AGA 3
AGA 4
AGA 4
R 2
W 0
Y 1
Q 0
</PRE></BODY></HTML>

______________________________________________________
10186||||||false||||||
<HTML><HEAD><TITLE>Problem E: Euro Cup 2000</TITLE>
<BODY>
<center><H1>Problem E: Euro Cup 2000</H1></center>
<P><BR>As you maybe know, the qualification for the European Soccer Championship 
2000 is a tournament where in each group each team plays against each other team 
twice. Germany is in group 3 together with Turkey, Finland, Moldova and Northern 
Ireland. 14 games have been played and 6 are still to come. <BR>
A quick look at the current standings might make you think that Northern Ireland 
is already out of the race. But that's wrong! Imagine Northern Ireland wins 
their three remaining games, Germany plays remis against Turkey and loses 
against Finland, and Moldova defeats Turkey. Then Northern Ireland is number 
one! 
<P>For those who are not familiar with the scoring model: In each game a team 
gains 3 points for a victory, 1 point for a remis or 0 points for a loss. After 
all games have been played, teams are ranked according to points. In case of a 
tie, the additional tie breakers are: goal difference (i.e. goals scored - goals 
against), goals scored, and random choice, in that order. 
<P>The question your program should answer is:<BR>Regarding all possibilities of 
how the remaining games could end, what is the highest and lowest possible rank 
of each team in the group after the tournament is over? 
<H3>Input Specification</H3>The input will consist of one or more test cases. 
Each test case adheres to the following format: 
<UL>
  <LI>On the first line there will be one integer <I>n (1 &lt;= n &lt;= 20)</I>, 
  representing the number of teams in the group.<BR>
  <LI>On the next <I>n</I> lines, the names of the teams will follow. Names are 
  always shorter than 30 characters and do not contain whitespace.<BR>
  <LI>On the next line, there will be an integer <I>g</I>, representing the 
  number of completed games.<BR>
  <LI>Finally, <I>g</I> lines will follow, each one describing one completed 
  game in the form <I>team1 team2 goals1 goals2</I>.<BR>
  <LI>You may further assume that at most 10 games will be remaining and each 
  team has at least one remaining game to play. (This simplifies the problem a 
  little.) </LI></UL>Input will be terminated by a value of zero (0) for <I>n</I>. 

<H3>Output Specification</H3>For each test case, first print a line saying 
"Group #<I>x</I>" where <I>x</I> is the number of the test case (counting from 
1).<BR>Then, print one line per team in the order they appear in the input. On 
each line, print the team's name, a blank character, its best possible rank, a 
minus sign and its worst possible rank. <BR>Print a blank line after each test 
case, even after the last one. 
<H3>Sample Input</H3><PRE>2
A
B
1
A B 1 0
5
Ger
Tur
Fin
Nor
Mol
14
Fin Mol 3 2
Tur Nor 3 0
Tur Ger 1 0
Nor Fin 1 0
Mol Ger 1 3
Tur Fin 1 3
Nor Mol 2 2
Nor Ger 0 3
Tur Mol 2 0
Ger Fin 2 0
Mol Fin 0 0
Ger Mol 6 1
Fin Tur 2 4
Mol Nor 0 0
0
</PRE>
<H3>Sample Output</H3><PRE>Group #1
A 1-2
B 1-2

Group #2
Ger 1-3
Tur 1-3
Fin 1-4
Nor 1-5
Mol 4-5

</PRE></BODY></HTML>

______________________________________________________
10187||||||false||||||
<HTML><HEAD><TITLE>Problem F: From Dusk till Dawn (or Vladimir the Vampire)</TITLE>
<BODY>
<center><H1>Problem F: From Dusk till Dawn</H1></center>
<P><BR>Vladimir has white skin, very long teeth and is 600 years old, but this 
is no problem because Vladimir is a vampire. <BR>Vladimir has never had any 
problems with being a vampire. In fact, he is a very successful doctor who 
always takes the night shift and so has made many friends among his colleagues. 
He has a very impressive trick which he shows at dinner partys: He can tell tell 
blood group by taste. <BR>Vladimir loves to travel, but being a vampire he has 
to overcome three problems. 
<UL>
  <LI>First, he can only travel by train because he has to take his coffin with 
  him. (On the up side he can always travel first class because he has invested 
  a lot of money in long term stocks.) 
  <LI>Second, he can only travel from dusk till dawn, namely from 6 pm to 6 am. 
  During the day he has to stay inside a train station. 
  <LI>Third, he has to take something to eat with him. He needs one litre of 
  blood per day, which he drinks at noon (12:00) inside his coffin. </LI></UL>You 
should help Vladimir to find the shortest route between two given cities, so 
that he can travel with the minimum amount of blood. (If he takes too much with 
him, people will ask funny questions like "What do you do with all that blood?") 
<BR>
<H3>Input Specification</H3>The first line of the input will contain a single 
number telling you the number of test cases. <BR>Each test case specification 
begins with a single number telling you how many route specifications follow. 
<BR>Each route specification consists of the names of two cities, the departure 
time from city one and the total travelling time. The times are in hours. Note 
that Vladimir can't use routes departing earlier than 18:00 or arriving later 
than 6:00. <BR>There will be at most 100 cities and less than 1000 connections. 
No route takes less than one hour and more than 24 hours. (Note that Vladimir 
can use only routes with a maximum of 12 hours travel time (from dusk till 
dawn).) All city names are shorter than 32 characters. <BR>The last line 
contains two city names. The first is Vladimir's start city, the second is 
Vladimir's destination. 
<H3>Output Specification</H3>For each test case you should output the number of 
the test case followed by "<CODE>Vladimir needs # litre(s) of blood.</CODE>" or 
"<CODE>There is no route Vladimir can take.</CODE>" 
<H3>Sample Input</H3><PRE>2
3
Ulm Muenchen 17 2
Ulm Muenchen 19 12
Ulm Muenchen 5 2
Ulm Muenchen
10
Lugoj Sibiu 12 6
Lugoj Sibiu 18 6
Lugoj Sibiu 24 5
Lugoj Medias 22 8
Lugoj Medias 18 8
Lugoj Reghin 17 4
Sibiu Reghin 19 9
Sibiu Medias 20 3
Reghin Medias 20 4
Reghin Bacau 24 6
Lugoj Bacau
    </PRE>
<H3>Sample Output</H3><PRE>Test Case 1.
There is no route Vladimir can take.
Test Case 2.
Vladimir needs 2 litre(s) of blood.
    </PRE></BODY></HTML>

______________________________________________________
10188||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Automated Judge Script</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem A: Automated Judge Script</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
The judges from the programming contests are known to be very mean and very lazy. We, judges,
want less work and more Wrong Answers! So, we'd like you to help us and write an automated
judge script to judge solution runs from teams all over the world. All you have to do is
write a program which receives the standard solution and a team output and gives as answer
one of the following messages: "Accepted", "Presentation Error" or "Wrong Answer". We define each
one as:
<P><B>Accepted</B>: As we are very mean judges, we only want you to give "Accepted" as
answer if the team output matches the standard solution integrally. That is, ALL characters
must match and must be in the same order.
<P><B>Presentation Error</B>: We want you to give "Presentation Error" if all NUMERIC charaters
match (and in the same order) but there is at least one non-numeric character wrong (or in wrong order). 
For instance, "15 0" and "150" would receive a "Presentation Error", whereas "15 0" and "1 0" would not
(it would receive "Wrong Answer", see bellow).
<P><B>Wrong Answer</B>: If the team output could not be classified as any of the two above, then
you have no option but to give "Wrong Answer" as an answer!
<P>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist of an arbitrary number of input sets. Each input set begins with a positive integer
n &lt; 100, alone in a line, which describes the number of lines of the standard solution. The next n 
lines contain the standard solution. Then there is a positive integer m &lt; 100, alone in a line, which
describes the number of lines of the team output. The next m lines contain the team output. The
input is terminated by a value of n = 0, and should not be processed. No line will have more than
120 characters.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each set you should output one of the following lines:
<PRE>
Run #x: Accepted
Run #x: Presentation Error
Run #x: Wrong Answer
</PRE>
Where x stands for the number of the input set (starting from 1).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2
The answer is: 10
The answer is: 5
2
The answer is: 10
The answer is: 5
2
The answer is: 10
The answer is: 5
2
The answer is: 10
The answer is: 15
2
The answer is: 10
The answer is:  5
2
The answer is: 10
The answer is: 5
3
Input Set #1: YES
Input Set #2: NO
Input Set #3: NO
3
Input Set #0: YES
Input Set #1: NO
Input Set #2: NO
1
1 0 1 0
1
1010
1
The judges are mean!
1
The judges are good!
0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Run #1: Accepted
Run #2: Wrong Answer
Run #3: Presentation Error
Run #4: Wrong Answer
Run #5: Presentation Error
Run #6: Presentation Error
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest Warmup 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10189||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Minesweeper</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem B: Minesweeper</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Have you ever played Minesweeper? It's a cute little game which comes within a certain 
Operating System which name we can't really remember. Well, the goal of the game is to
find where are all the mines within a MxN field. To help you, the game shows a number
in a square which tells you how many mines there are adjacent to that square. For instance,
supose the following 4x4 field with 2 mines (which are represented by an * character):
<PRE>
*...
....
.*..
....
</PRE>
If we would represent the same field placing the hint numbers described above, we would end up with:
<PRE>
*100
2210
1*10
1110
</PRE>
As you may have already noticed, each square may have at most 8 adjacent squares.

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist of an arbitrary number of fields. The first line of each field contains
two integers n and m (0 &lt; n,m &lt;= 100) which stands for the number of lines and columns of the field
respectively. The next n lines contains exactly m characters and represent the field. Each safe
square is represented by an "." character (without the quotes) and each mine square is represented
by an "*" character (also without the quotes). The first field line where n = m = 0 represents the end 
of input and should not be processed.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each field, you must print the following message in a line alone:
<PRE>Field #x:</PRE>
Where x stands for the number of the field (starting from 1). The next n lines should
contain the field with the "." characters replaced by the number of adjacent mines
to that square. There must be an empty line between field outputs.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
4 4
*...
....
.*..
....
3 5
**...
.....
.*...
0 0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Field #1:
*100
2210
1*10
1110

Field #2:
**100
33200
1*100
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest Warmup 2001.
</B>
</BODY>
</HTML>

______________________________________________________
10190||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Divide, But Not Quite Conquer!</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem C: Divide, But Not Quite Conquer!</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Your goal in this problem is to divide a certain integer n by another integer m until n = 1, obtaining a sequence
of numbers. Lets call a[i] each number of this sequence, and let's say it has k numbers (i.e. you must do k-1 
succesive divisions to reach n = 1). You can only have this sequence if the following restrictions are met:<br>
<OL>
	<LI> a[1] = n, a[i] = a[i-1] div m, for all 1 &lt; i &lt;= k
	<LI> a[i] is divisible by m (that is, a[i] mod m = 0) for all 1 &lt;= i &lt; k
	<LI> a[1] &gt; a[2] &gt; a[3] ...  &gt; a[k]
</OL>
For instance, if n = 125 and m = 5, you have 125, 25, 5 and 1 (you did 3 divisions: 125/5, 25/5 and 5/5). 
So, k = 4, a[1] = 125, a[2] = 25, a[3] = 5 and a[4] = 1.
If n = 30 and m = 3, you have 30, 10, 3 and 1. But a[2] = 10, and 10 mod 3 = 1, so there is no sequence because it violates 
restriction 2. When the sequence doesn't exist we think it's not fun and, thus, very boring! 

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist on an arbitrary number of lines. Each line will consist of two non-negative integers n,m
which are both less than 2000000000. You must read until you reach the end of file.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each pair n,m you must print the correpondent sequence a (as defined above) in a single line, with each adjacent numbers of
the sequence separated by a single space. In the case the sequence doesn't exist because it violates some restriction,
just print the phrase "Boring!" in a single line (without the quotes).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
125 5
30 3
80 2
81 3
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
125 25 5 1
Boring!
Boring!
81 27 9 3 1
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest Warmup 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10191||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Longest Nap</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem D: Longest Nap</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
As you may already know, there are professors very busy with a filled schedule of work during
the day. Your professor, let's call him Professor P, is a bit lazy and wants to take a nap
during the day, but as his schedule is very busy, he doesn't have a lot of chances of doing this.
He would REALLY like, however, to take one nap every day. Because he'll take just one nap, he wants
to take the longest nap that it's possible given his schedule. He decided to write a program to help him in this task but,
as we said, Professor P is very lazy. So, he finally decided that YOU must write the program!

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist on an arbitrary number of test cases, each test case represents one day.
The first line of each set contains a positive integer s (not greater than 100) representing the 
number of scheduled appointments during that day. In the next s lines there are the appointments in 
the following format:
<PRE>
time1 time2 appointment
</PRE>
Where time1 represents the time which the appointment starts and time2 the time it ends. All times
will be in the hh:mm format, time1 will always be strictly less than time2, they will be separated
by a single space and all times will be greater than or equal to 10:00 and less than or equal to 18:00. 
So, your response must be in this interval as well (i.e. no nap can start before 10:00 and last after 18:00). 
The appointment can be any sequence of characters, but will always be in the same line. You can assume that 
no line will be longer than 255 characters, that 10 &lt;= hh &lt;= 18 and that 0 &lt;= mm &lt; 60. 
You CAN'T assume, however, that the input will be in any specific order. You must read the input until you reach the end of file.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each test case, you must print the following line:
<PRE>
Day #d: the longest nap starts at hh:mm and will last for [H hours and] M minutes.
</PRE>
Where d stands for the number of the test case (starting from 1) and hh:mm is the time when the nap can
start. To display the duration of the nap, follow these simple rules:
<OL>
	<LI> if the total duration X in minutes is less than 60, just print "M minutes", where M = X.
	<LI> if the total duration X in minutes is greater or equal to 60, print "H hours and M minutes", where
	H = X div 60 (integer division, of course) and M = X mod 60.
</OL>
Notice that you don't have to worry with concordance (i.e. you must print "1 minutes" or "1 hours" if it's the case).
The duration of the nap is calculated by the difference between the ending time free and the begining time free. That
is, if an appointment ends at 14:00 and the next one starts at 14:47, then you have (14:47)-(14:00) = 47 minutes of
possible nap.<p>
If there is more than one longest nap with the same duration, print the earliest one. You can assume
that there won't be a day all busy (i.e. you may assume that there will be at least one possible nap).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
4
10:00 12:00 Lectures
12:00 13:00 Lunch, like always.
13:00 15:00 Boring lectures...
15:30 17:45 Reading
4
10:00 12:00 Lectures
12:00 13:00 Lunch, just lunch.
13:00 15:00 Lectures, lectures... oh, no!
16:45 17:45 Reading (to be or not to be?)
4
10:00 12:00 Lectures, as everyday.
12:00 13:00 Lunch, again!!!
13:00 15:00 Lectures, more lectures!
15:30 17:15 Reading (I love reading, but should I schedule it?)
1
12:00 13:00 I love lunch! Have you ever noticed it? :)
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Day #1: the longest nap starts at 15:00 and will last for 30 minutes.
Day #2: the longest nap starts at 15:00 and will last for 1 hours and 45 minutes.
Day #3: the longest nap starts at 17:15 and will last for 45 minutes.
Day #4: the longest nap starts at 13:00 and will last for 5 hours and 0 minutes.
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest Warmup 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10192||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Vacation</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem E: Vacation</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
You are planning to take some rest and to go out on vacation, but you really don't know which cities
you should visit. So, you ask your parents for help. Your mother says <i>"My son, you MUST visit Paris,
Madrid, Lisboa and London. But it's only fun in this order."</i> Then your father says: <i>"Son,
if you're planning to travel, go first to Paris, then to Lisboa, then to London and then, at last, go
to Madrid. I know what I'm talking about."</i>
<p>
Now you're a bit confused, as you didn't expected this situation. You're afraid that you'll hurt your
mother if you follow your father's suggestion. But you're also afraid to hurt your father if you
follow you mother's suggestion. But it can get worse, because you can hurt both of them if you simply
ignore their suggestions!
<p>
Thus, you decide that you'll try to follow their suggestions in the better way that you can. So, you
realize that the "Paris-Lisboa-London" order is the one which better satisfies both your mother and
your father. Afterwards you can say that you could not visit Madrid, even though you would've liked it
very much. 
<p>
If your father have suggested the "London-Paris-Lisboa-Madrid" order, then you would have two
orders, "Paris-Lisboa" and "Paris-Madrid", that would better satisfy both of your parent's suggestions.
In this case, you could only visit 2 cities.
<p>
You want to avoid problems like this one in the future. And what if their travel suggestions were
bigger? Probably you would not find the better way very easy. So, you decided to write a program to
help you in this task. You'll represent each city by one character, using uppercase letters,
lowercase letters, digits and the space. Thus, you can have at most 63 different cities to visit.
But it's possible that you'll visit some city more than once.
<p>
If you represent Paris with "a", Madrid with "b", Lisboa with "c" and London with "d", then your mother's
suggestion would be "abcd" and you father's suggestion would be "acdb" (or "dacb", in the second example).
<p>
The program will read
two travel sequences and it must answer how many cities you can travel to such that you'll satisfy both
of your parents and it's maximum.
<p>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist on an arbitrary number of city sequence pairs. The end of input occurs when the first 
sequence starts with an "#"character (without the quotes). Your program should not process this case.
Each travel sequence will be on a line alone and will be formed by legal characters (as defined above). 
All travel sequences will appear in a single line and will have at most 100 cities.
<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each sequence pair, you must print the following message in a line alone:
<PRE>
Case #d: you can visit at most K cities.
</PRE>
Where d stands for the test case number (starting from 1) and K is the maximum number of cities you can
visit such that you'll satisfy both you father's suggestion and you mother's suggestion.
<p>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
abcd
acdb
abcd
dacb
#
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Case #1: you can visit at most 3 cities.
Case #2: you can visit at most 2 cities.
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest Warmup 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10193||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>All You Need Is Love</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem F: All You Need Is Love</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>
<center><i>
<br>"All you need is love. All you need is love.
<br>All you need is love, love... love is all you need."
<br>The Beatles
</i></center>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
There was invented a new powerfull gadget by the International Beautifull Machines corporation called
the love machine! Given a string made of binary digits, the love machine answers if it's made only
of love, that is, if all you need is love to build that string. The definition of love for the
love machine is another string of binary digits, given by a human operator. Let's say we have a string L which represents "love"
and we give a string S for the love machine. We say that all you need is love to build S, if we can
repeatly subtract L from S until we reach L. The subtraction defined here is the same arithmetic
subtraction in base 2. By this definition it's easy to see that if L > S (in binary), then S is not made of love.
If S = L then S is obvious made of love. 
<p>
Let's see an example. Supose S = "11011" and L = "11". 
If we reapetly subtract L from S, we get: 11011, 11000, 10101, 10010, 1111, 1100, 1001, 110, 11. So, given this L, 
all you need is love to build S. Because of some limitations of the love machine, there can be no string with leading
zeroes. That is, "0010101", "01110101", "011111" etc. are invalid strings. Strings which have only one digit are also
invalid (it's another limitation).
<p>
Your task in this problem is: given two valid binary strings, S1 and S2, find if it's possible to have a valid string L
such that both S1 and S2 can be made only of L (i.e. given two valid strings S1 and S2, find if there exists at least
one valid string L such as both S1 and S2 are made only of L). For instance, for S1 = 11011 and S2 = 11000, we can have 
L = 11 such that S1 and S2 are both made only of L (as we can see in the example above).

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The first line of input is a positive integer N &lt; 10000 which stands for the number of teste cases. Then, 2*N lines
will follow. Each pair of lines consists in one teste case. Each line of the pair stands for each string (S1 and S2) to
be entered as an input for the love machine. No string will have more than 30 characters. You can assume that all strings
in the input will be valid acording to the rules above.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each string pair, you must print one of the following messages:
<PRE>
Pair #p: All you need is love!
Pair #p: Love is not all you need!
</PRE>
Where p stands for the pair number (starting from 1). You should print the first message if there exists at least one valid 
string L such as both S1 and S2 can be made only of L. Otherwise, print the second line.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
5
11011
11000
11011
11001
111111
100
1000000000
110
1010
100
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Pair #1: All you need is love!
Pair #2: Love is not all you need!
Pair #3: Love is not all you need!
Pair #4: All you need is love!
Pair #5: All you need is love!
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest Warmup 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10194||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Football (aka Soccer)</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem A: Football (aka Soccer)</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Football the most popular sport in the world (americans insist to call it "Soccer",
but we will call it "Football"). As everyone knows, Brasil is the country that have most
World Cup titles (four of them: 1958, 1962, 1970 and 1994). As our national tournament have many teams
(and even regional tournaments have many teams also) it's a very hard task to keep track of
standings with so many teams and games played!
<p>
So, your task is quite simple: write a program that receives the tournament name, team names
and games played and outputs the tournament standings so far.
<p>
A team wins a game if it scores more goals than its oponent. Obviously, a team loses a game
if it scores less goals. When both teams score the same number of goals, we call it a tie.
A team earns 3 points for each win, 1 point for each tie and 0 point for each loss.
<p>
Teams are ranked according to these rules (in this order):
<p>
<OL>
	<LI> Most points earned.
	<LI> Most wins.
	<LI> Most goal difference (i.e. goals scored - goals against)
	<LI> Most goals scored.
	<LI> Less games played.
	<LI> Lexicographic order.
</OL>

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The first line of input will be an integer N in a line alone (0 &lt; N &lt; 1000). 
Then, will follow N tournament descriptions. Each one begins with the tournament name, on a 
single line. Tournament names can have any letter, digits, spaces etc. Tournament names will
have length of at most 100. Then, in the next line, there will be a number T (1 &lt; T &lt;= 30), 
which stands for the number of teams participating on this tournament. Then will follow T lines, 
each one containing one team name. Team names may have any character that have ASCII code greater
than or equal to 32 (space), except for '#' and '@' characters, which will never appear in team
names. No team name will have more than 30 characters.
<p>
Following to team names, there will be a non-negative integer G on a single line which stands for
the number of games already played on this tournament. G will be no greater than 1000. Then, G
lines will follow with the results of games played. They will follow this format:
<PRE>
team_name_1#goals1@goals2#team_name_2
</PRE>
For instance, the following line:
<PRE>
Team A#3@1#Team B
</PRE>
Means that in a game between Team A and Team B, Team A scored 3 goals and Team B scored 1.
All goals will be non-negative integers less than 20. You may assume that there will not be 
inexistent team names (i.e. all team names that appear on game results will have apperead 
on the team names section) and that no team will play against itself.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each tournament, you must output the tournament name in a single line. In the next T
lines you must output the standings, according to the rules above. Notice that should the
tie-breaker be the lexographic order, it must be done case insenstive. The output format for each line 
is shown bellow:
<PRE>
[a]) Team_name [b]p, [c]g ([d]-[e]-[f]), [g]gd ([h]-[i])
</PRE>
Where:
<UL>
	<LI> [a] = team rank
	<LI> [b] = total points earned
	<LI> [c] = games played
	<LI> [d] = wins
	<LI> [e] = ties
	<LI> [f] = losses
	<LI> [g] = goal difference
	<LI> [h] = goals scored
	<LI> [i] = goals against
</UL>
There must be a single blank space between fields and a single blank line between
 output sets. See the sample output for examples.
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2
World Cup 1998 - Group A
4
Brazil
Norway
Morocco
Scotland
6
Brazil#2@1#Scotland
Norway#2@2#Morocco
Scotland#1@1#Norway
Brazil#3@0#Morocco
Morocco#3@0#Scotland
Brazil#1@2#Norway
Some strange tournament
5
Team A
Team B
Team C
Team D
Team E
5
Team A#1@1#Team B
Team A#2@2#Team C
Team A#0@0#Team D
Team E#2@1#Team C
Team E#1@2#Team D
</PRE>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
World Cup 1998 - Group A
1) Brazil 6p, 3g (2-0-1), 3gd (6-3)
2) Norway 5p, 3g (1-2-0), 1gd (5-4) 
3) Morocco 4p, 3g (1-1-1), 0gd (5-5)
4) Scotland 1p, 3g (0-1-2), -4gd (2-6)

Some strange tournament
1) Team D 4p, 2g (1-1-0), 1gd (2-1)
2) Team E 3p, 2g (1-0-1), 0gd (3-3)
3) Team A 3p, 3g (0-3-0), 0gd (3-3)
4) Team B 1p, 1g (0-1-0), 0gd (1-1)
5) Team C 1p, 2g (0-1-1), -1gd (3-4)
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10195||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>The Knights Of The Round Table</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem B: The Knights Of The Round Table</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
King Arthur is planning to build the round table in a new room, but this time he wants a room that have sunlight entering it,
so he planned to build a glass roof. He also wishes his round table to shine during 
the day, specially at noon, so he wants it to be covered totally by the sunlight. 
But Lancelot wants the glass part of the room roof to be triangular (and nobody knows the reason why,
maybe he made a vow or something like that). So, there will be a triangular area in the room which will be all covered by 
the sunlight at noon and the round table must be build in this area.
<p>
Now, King Arthur wants to build the biggest table that he cans such that it fits in the triangular sunlighted area. As he is
not very good in geometry, he asked Galahad to help him (Lancelot is very good in geometry, but King Arthur didn't asked 
Lancelot to help him because he feared that he would come up with another strange suggestion).
<p>
Can you help Galahad (since he's not too good with computers) and write a program which gives the radius of the biggest
round table that fits in the sunlighted area? You can assume that the round table is a perfect circle.

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
There'll be an arbitrary number of rooms. Each room is represented by three real numbers (a, b and c),
which stand for the sizes of the triangular sunlighted area. No triangle size will be greater 
than 1000000 and you may assume that max(a,b,c) &lt;= (a + b + c) / 2. You must read until you
reach the end of the file.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each room configuration read, you must print the following line:
<pre>
The radius of the round table is: r
</pre>
Where r is the radius of the biggest round table that fits in the sunlighted area, rounded to 3 decimal digits.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
12.0 12.0 8.0
</PRE>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
The radius of the round table is: 2.828
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10196||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Check The Check</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem C: Check The Check</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Your task is to write a program that reads a chess board configuration and answers if
there's a king under attack (i.e. "in check"). A king is in check if it's in a square which
is attacked by an oponnet's piece (i.e. it's in square which can be taken by an oponnet's
piece in his next move).
<p>
White pieces will be represented by uppercase letters whereas black pieces will be represented by
lowercase letters. White side will always be on the bottom of the board and black side will always be
on the top of the board.
<p>
For those unfamiliar with chess, here are the movements of each piece:
<P>
Pawn (p or P): can only move straight ahead, one square at a time. But it takes pieces diagonally
(and that's what concerns to you in this problem).
<BR>
Knight (n or N): have a special movement and it's the only piece that can jump over other pieces. The
knight movement can be viewed as an "L". See the example bellow.
<BR>
Bishop (b or B): can move any number of squares diagonally (forward or backward).
<BR>
Rook (r or R): can move any number of squares vertically or horizontally  (forward or backward).
<BR>
Queen (q or Q): can move any number of squares in any direction (diagonally, horizontally or vertically,
forward or backward).
<BR>
King (k or K): can move one square at a time, in any direction (diagonally, horizontally or vertically,
forward or backward).
<P>
Movements examples ('*' indicates where the piece can take another pieces):
<p>
<center>
<table cellspacing=20>
<tr>
<td>
<PRE>
Pawn
........
........
........
........
...p....
..*.*...
........
........
</PRE>
</td><td>
<PRE>
Rook
...*....
...*....
...*....
...*....
***r****
...*....
...*....
...*....
</PRE>
</td><td>
<PRE>
Bishop
.......*
*.....*.
.*...*..
..*.*...
...b....
..*.*...
.*...*..
*.....*.
</PRE>
</td><td>
<PRE>
Queen
...*...*
*..*..*.
.*.*.*..
..***...
***q****
..***...
.*.*.*..
*..*..*.
</PRE>
</td><td>
<PRE>
King
........
........
........
..***...
..*k*...
..***...
........
........
</PRE>
</td><td>
<PRE>
Knight
........
........
..*.*...
.*...*..
...n....
.*...*..
..*.*...
........
</PRE>
</td><td>
</tr>
</table>
</center>
Remember that the knight is the only piece that can jumper over other pieces. The pawn movement
will depend on its side. If it's a black pawn, it can only move one square diagonally down the
board. If it's a white pawn, it can only move one square diagonally up the board. The example
above is a black pawn as it's a lowercase p (we say "move" meaning the squares where the pawn
can move to when it takes another piece).

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
There will be an arbitrary number of board configurations on the input. Each board will consist
of 8 lines of 8 characters each. A '.' character will represent an empty square. Upper and lower
case letters (as defined above) will represent the pieces. There will be no invalid characters
(i.e. pieces) and there won't be a configuration where both kings are in check. You must read until you find an empty board (i.e. a board that is formed only of '.' characters) which should not be processed. There will be an empty line between each pair of board configurations. In all boards (except the last 
one which is empty) will appear both the white king and the black king (one, and only one of each).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each board configuration read you must output one of the following answers:
<PRE>
Game #d: white king is in check.
Game #d: black king is in check.
Game #d: no king is in check.
</PRE>
Where d stands for the game number (starting from 1).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
..k.....
ppp.pppp
........
.R...B..
........
........
PPPPPPPP
K.......

rnbqkbnr
pppppppp
........
........
........
........
PPPPPPPP
RNBQKBNR

rnbqk.nr
ppp..ppp
....p...
...p....
.bPP....
.....N..
PP..PPPP
RNBQKB.R

........
........
........
........
........
........
........
........
</PRE>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
Game #1: black king is in check.
Game #2: no king is in check.
Game #3: white king is in check.
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10197||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Learning Portuguese</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem D: Learning Portuguese</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Portuguese is one of the most beautiful languages in the whole world, but almost everyone
who speaks Portuguese is either brazilian or portuguese. Since people all around the world (and not just
brazilians) are participating in this contest, we would like to help you to begin
learning portuguese with this problem. Well, the program you'll write will help you (if it's
correct).
<p>
All you must to do is to write a <i>conjugator</i>, that is, a program that conjugates verbs. In
English there's not much to do when the verb is "regular" (it follows some model). But in Portuguese
it's a bit different. But don't worry, we'll explain all you need to know in order to learn
how to conjugate regular portuguese verbs.
<p>
First of all, let's learn the pronouns, which you'll use to conjugate the verbs:
<p>
<center>

<TABLE BORDER=1>
<TR>
	<TD><B>English</B></TD>
	<TD><B>Portuguese</B></TD>
</TR>
<TR>
	<TD>I</TD>
	<TD>Eu</TD>
</TR>
<TR>
	<TD>You</TD>
	<TD>Tu</TD>
</TR>
<TR>
	<TD>He/She</TD>
	<TD>Ele/Ela</TD>
</TR>
<TR>
	<TD>We</TD>
	<TD>N&oacute;s</TD>
</TR>
<TR>
	<TD>You</TD>
	<TD>V&oacute;s</TD>
</TR>
<TR>
	<TD>They</TD>
	<TD>Eles/Elas</TD>
</TR>
</TABLE>
</center>
<p>
The "&oacute;" character is represented by ASCII code 243. It doesn't matter how it looks on
your screen, use ASCII character 243 when writing "nÃ³s" and "vÃ³s"! In Portuguese, all verbs in the infinitive 
mode have one of these sufixes: <B>ar</B> (first conjugations), <B>er</B> (second conjugation) and 
<B>ir</B> (third conjugation). For instance, "amar" (to love) is from the first conjugation, whereas
"correr" (to run) is from the second, and "partir" (to go away) is from the third. So, you can recognize
from which conjugations is the verb by its sufix (of course there are some exceptions to this rules,
but we're not going to handle them). 
<p>
We call "<B>root</B>" the verb in the infinitive mode without the sufix (so, for these three verbs we 
just saw, we have "am", "corr" and "part" as roots). We call the <B>"thematic vowel" </B>
(<B>tv</B> for short) the vowel of the sufix (i.e. "a", "e" or "i").
<p>
To conjugate regular verbs, all you have to do is to find out from which conjugations is the verb and,
then, follow the model for that conjugation. In this problem we are only interested in the "presente
tense", so here are the models for all conjugations on the presente tense:
<p>

<center>
<TABLE BORDER=1>
<TR>
	<TD><B>Pronoun</B></TD>
	<TD><B>1st Conjugation</B></TD>
	<TD><B>2nd Conjugation</B></TD>
	<TD><B>3rd Conjugation</B></TD>
</TR>
<TR>
	<TD>Eu</TD>
	<TD>root + o</TD>
	<TD>root + o</TD>
	<TD>root + o</TD>
</TR>
<TR>
	<TD>Tu</TD>
	<TD>root + tv + s</TD>
	<TD>root + tv + s</TD>
	<TD>root + es</TD>
</TR>
<TR>
	<TD>Ele/Ela</TD>
	<TD>root + tv</TD>
	<TD>root + tv</TD>
	<TD>root + e</TD>
</TR>
<TR>
	<TD>N&oacute;s</TD>
	<TD>root + tv + mos</TD>
	<TD>root + tv + mos</TD>
	<TD>root + tv + mos</TD>
</TR>
<TR>
	<TD>V&oacute;s</TD>
	<TD>root + tv + is</TD>
	<TD>root + tv + is</TD>
	<TD>root + tv + s</TD>
</TR>
<TR>
	<TD>Eles/Elas</TD>
	<TD>root + tv + m</TD>
	<TD>root + tv + m</TD>
	<TD>root + em</TD>
</TR>
</TABLE>
</center>

<p>
Let's see, as an example, the conjugation of the three verbs above:
<p>

<center>
<TABLE BORDER=1>
<TR>
	<TD><B>Pronoun</B></TD>
	<TD><B>amar</B></TD>
	<TD><B>correr</B></TD>
	<TD><B>partir</B></TD>
</TR>
<TR>
	<TD>Eu</TD>
	<TD>amo</TD>
	<TD>corro</TD>
	<TD>parto</TD>
</TR>
<TR>
	<TD>Tu</TD>
	<TD>amas</TD>
	<TD>corres</TD>
	<TD>partes</TD>
</TR>
<TR>
	<TD>Ele/Ela</TD>
	<TD>ama</TD>
	<TD>corre</TD>
	<TD>parte</TD>
</TR>
<TR>
	<TD>N&oacute;s</TD>
	<TD>amamos</TD>
	<TD>corremos</TD>
	<TD>partimos</TD>
</TR>
<TR>
	<TD>V&oacute;s</TD>
	<TD>amais</TD>
	<TD>correis</TD>
	<TD>partis</TD>
</TR>
<TR>
	<TD>Eles/Elas</TD>
	<TD>amam</TD>
	<TD>correm</TD>
	<TD>partem</TD>
</TR>
</TABLE>
</center>

<p>
So, your task is: given a verb in Portuguese (and its meaning in English), conjugate the verb.

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
There will be two words per line, v1 and v2. The first one (v1) is the verb in Portuguese, 
and the second one (v2) is its meaning in English. All words will be formed by just latin 
lowercase letters (i.e. all letters will lie in the range [a..z]). No word will have more than 30 characters. 
You must read until you reach the end of file.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each pair of words, the first line of output must be:
<PRE>
v1 (to v2)
</PRE>
Where v1 stands for the verb in Portuguese and v2 its meaning in English (as described above).
After that, you must print 6 lines with the correct conjugation, assuming the verb will be
regular. The first character of the pronoun must start at the first column of the line. 
The equivalent conjugation to that pronoun must begin at column 11 of the same line. 
The space between the pronoun and the conjugation must be filled with
blanks. If the verb read lies in none of the conjugations given, 
instead of the conjugation, just print the line
<PRE>
Unknown conjugation
</PRE>
You must print a blank line between the output sets.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
falar talk
compor compose
andar walk
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
falar (to talk)
eu        falo
tu        falas
ele/ela   fala
nÃ³s       falamos
vÃ³s       falais
eles/elas falam

compor (to compose)
Unknown conjugation

andar (to walk)
eu        ando
tu        andas
ele/ela   anda
nÃ³s       andamos
vÃ³s       andais
eles/elas andam
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10198||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Counting</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem E: Counting</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Gustavo knows how to count, but he is now learning how write numbers. As he is a very good student, 
he already learned 1, 2, 3 and 4. But he didn't realize yet that 4 is different than 1, so he thinks that 4 is another way to write 1.
Besides that, he is having fun with a little game he created himself: he make numbers (with those 
four digits) and sum their values. For instance: 
<PRE>
132 = 1 + 3 + 2 = 6
112314 = 1 + 1 + 2 + 3 + 1 + 1 = 9 (remember that Gustavo thinks that 4 = 1)
</PRE>
After making a lot of numbers in this way, Gustavo now wants to know how much numbers he can create
such that their sum is a number n. For instance, for n = 2 he noticed that he can make 5 numbers:
11, 14, 41, 44 and 2 (he knows how to count them up, but he doesn't know how to write five). 
However, he can't figure it out for n greater than 2. So, he asked you to help him.

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
Input will consist on an arbitrary number of sets. Each set will consist on an integer n such that
1 &lt;= n &lt;= 1000. You must read until you reach the end of file.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each number read, you must output another number (on a line alone) stating how much numbers Gustavo
can make such that the sum of their digits is equal to the given number.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
2
3
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
5
13
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10199||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Tourist Guide</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem F: Tourist Guide</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Rio de Janeiro is a very beautiful city. But there are so many places
to visit that sometimes you feel a bit lost. But don't worry, because your friend Bruno promised you
to be your tourist guide. The problem is that he is not a very good driver, as he can't see very
well (poor Bruno).
<P>
Because of his disabilities, Bruno have a lot of fines to pay and he doesn't want to have even
more to pay, even though he promised you to be your tourist guide. What he would like to know,
however, is where are all the cameras that help the police to fine the bad drivers, so he can
drive more carefully when passing by them.
<P>
Those cameras are strategically distributed over the city, in locations that a driver must pass
through in order to go from one zone of the city to another. In order words, if there are two
city locations A and B such that to go from one to another (A to B or B to A) a driver must
pass through a location C, then C will have a camera.
<P>
For instance, suppose that we have 6 locations (A, B, C, D, E and F) and that we have 7 routes
(all of them bidirectonal) B-C, A-B, C-A, D-C, D-E, E-F and F-C. There's a camera on C because
to go from A to E, for instance, you must pass through C. In this configuration, there's only
one camera (on C).
<p>
Your task is to help Bruno (as he wants to be a musician and he doesn't want to get even close
of computers) and write a program which will tell him where are all the cameras, given the
map of the city, so he can be your tourist guide and avoid further fines.

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
The input will consist on an arbitrary number of city maps. Each city map will begin with an
integer N (2 &lt; N &lt;= 100) which stands for the total locations of the city. Then will
follow N different place names, one per line. Each place name will have at least one and at most 30
characters (all of them will be lowercase latin letters). Then will follow a non-negative integer R
which stands for the total routes of the city. Then will follow R lines
with the routes. Each route will be represented by the name of both places that the route
connects (remember that the routes are bidirectional). Location names in route description
will always be valid and there will be no route from one place to itself.
You must read until N = 0, and this input should not be processed.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each city map you must print the line:
<PRE>
City map #d: c camera(s) found
</PRE>
Where d stands for the city map number (starting from 1) and c stands for the total number
of cameras. Then should follow c lines with the location names where are each camera (in
alphabetic order). You should print a blank line between output sets.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
6
sugarloaf
maracana
copacabana
ipanema
corcovado
lapa
7
ipanema copacabana
copacabana sugarloaf
ipanema sugarloaf
maracana lapa
sugarloaf maracana
corcovado sugarloaf
lapa corcovado
5
guanabarabay
downtown
botanicgarden
colombo
sambodromo
4
guanabarabay sambodromo
downtown sambodromo
sambodromo botanicgarden
colombo sambodromo
0
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
City map #1: 1 camera(s) found
sugarloaf

City map #2: 1 camera(s) found
sambodromo
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10200||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Prime Time</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem G: Prime Time</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001002000000000000000">The Problem</A></FONT></H2>
<P>
Euler is a well-known matematician, and, among many other things, he discovered that the formula
n^2 + n + 41 produces a prime for 0 &lt;= n &lt; 40. For n = 40, the formula produces 1681, which
is 41 * 41. Even though this formula doesn't always produce a prime, it still produces a lot of
primes. It's known that for n &lt;= 10000000, there are 47,5% of primes produced by the formula!
<p>
So, you'll write a program that will output how many primes does the formula output for a certain
interval.

</U></U><H2><FONT COLOR=#0070E8><A NAME="SECTION0001003000000000000000">The Input</A></FONT></H2>
<P>
Each line of input will be given two positive integer a and b such that 0 &lt;= a &lt;= b &lt;= 10000.
You must read until the end of the file.

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001004000000000000000">The Output</A></FONT></H2>
<P>
For each pair a,b read, you must output the percentage of prime numbers produced by the formula in this
interval (a &lt;= n &lt;= b) rounded to two decimal digits (with round half up rule).

<H2><FONT COLOR=#0070E8><A NAME="SECTION0001005000000000000000">Sample Input</A></FONT></H2>
<P>
<PRE>
0 39
0 40
39 40
1423 2222
</PRE>
<P>
<H2><FONT COLOR=#0070E8><A NAME="SECTION0001006000000000000000">Sample Output</A></FONT></H2>
<P>
<PRE>
100.00
97.56
50.00
44.13
</PRE>

<HR>
<B>
&copy; 2001 Universidade do Brasil (UFRJ). Internal Contest 2001.
</B>

</BODY>
</HTML>

______________________________________________________
10201||||||false||||||
<body bgcolor=ffffff>
<img src=p10201.jpg align=right>
<h2>Problem A: Adventures in Moving - Part IV</h2>

To help you move from Waterloo to the big city, you are considering
renting a moving truck. Gas prices being so high these days, you want to
know how much the gas for such a beast will set you back.
<p>
The truck consumes a full litre of gas for each kilometre it travels. It
has a 200 litre gas tank. When you rent the truck in Waterloo, the tank
is half full. When you return it in the big city, the tank must be at
least half full, or you'll get gouged even more for gas by the rental
company. You would like to spend as little as possible on gas, but you
don't want to run out along the way.
<p>
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

Input is all integers. The first integer is the distance in kilometres
from Waterloo to the big city, at most 10000. Next comes a set of up to
100 gas station specifications, describing all the gas stations along
your route, in non-decreasing order by distance.  Each specification 
consists of the distance in kilometres of
the gas station from Waterloo, and the price of a litre of gas at the
gas station, in tenths of a cent, at most 2000.
<p>
<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Output is the minimum amount of money that you can spend on gas to get
you from Waterloo to the big city. If it is not possible to get from
Waterloo to the big city subject to the constraints above, print "Impossible".

<h3>Sample Input</h3>
<pre>
1

500
100 999
150 888
200 777
300 999
400 1009
450 1019
500 1399
</pre>
<h3>Output for Sample Input</h3>
<pre>
450550
</pre>

______________________________________________________
10202||||||false||||||
<title>Problem B: Pairsumonious Numbers</title>
<img src=p10202.gif align=right>
<h2>Problem B: Pairsumonious Numbers </h2>

For 10 > N > 2 numbers we form N*(N-1)/2 sums by adding every pair of the
numbers.  Your task is to find the N numbers given the sums.

Each line of input contains N followed by N*(N-1)/2 integer numbers separated 
by a space.
For each line of input, output one line containing N integers
in non-descending order such that the input numbers are pairwise sums of 
the N numbers.  If there is more than one solution, any one will do;
if there is no solution, print "Impossible".

<h3>Sample input</h3>
<pre>
3 1269 1160 1663
3 1 1 1
5 226 223 225 224 227 229 228 226 225 227
5 216 210 204 212 220 214 222 208 216 210
5 -1 0 -1 -2 1 0 -1 1 0 -1
5 79950 79936 79942 79962 79954 79972 79960 79968 79924 79932
</pre>
<h3>Output for sample input</h3>
<pre>
383 777 886
Impossible
111 112 113 114 115
101 103 107 109 113
-1 -1 0 0 1
39953 39971 39979 39983 39989
</pre>
<body bgcolor=ffffff>

______________________________________________________
10203||||||false||||||

<body bgcolor=ffffff>
<img src=p10203.jpg align=right>
<h2>Problem C:  Snow Clearing</h2>
As the days become shorter and the nights become longer we turn our
thoughts to snow clearing.  Due to budget cuts, the Big Noisy City
has exactly one snow plow.  The plow can clear exactly one lane of
a road in a single pass.  Whenever there is snow on the ground,
the plow departs from its hangar and tours the city, plowing as
it goes.  What is the minimum time that the plow needs
to clear every lane of every road?
<p>
The first line of input is the number of test cases, followed by a blank line. Then
the input contains two integers:  the x,y coordinates of
the hangar (in metres).  Up to 100 lines follow.  Each gives the
coordinates (in metres) of the beginning and end of a street.  All roads are
perfectly straight, with one lane in each direction.  The plow
can turn any direction (including a U-turn) at any intersection, 
and can turn around at the end of any street.  The plow travels
at 20 km/h if it is plowing, and 50 km/h if the lane it is driving
on has already been plowed.  It is possible to reach all streets
from the hangar. There is a blank line between each consecutive test case.
<p>
Your output should be the time, in hours and minutes, required to
clear the streets and return to the hangar.  Round to the nearest minute&nbsp; for each data set. Print a blank line
between 2 consecutive data sets.
<h3>Sample Input</h3>
<pre>1

0 0
0 0 10000 10000
5000 -10000 5000 10000
5000 10000 10000 10000
</pre>
<h3>Output for Sample Input</h3>
<pre>
3:55
</pre>

______________________________________________________
10204||||||false||||||
<h2>Problem D:  Adventures in Moving - Part V</h2>
<img align=right src=p10204b.jpg>
To save money you are considering renting a small cube van to transport
your belongings to the Big City.  The interior of the van is a rectangular
box with width <i>w</i>, height <i>h</i>, and length <i>l</i>.   The
box has a sliding door that lifts but only to height <i>H</i>.  That is,
there is an immovable overhang of height <i>H-h</i> at the top of the door.
<p>
You have a large rectangular box that you wish to load on the truck.
Can you get it on the truck subject to the following constraints:
<ul>
<li>The box must fit through the door, tilting it forward or sideways
(but not both) as necessary (see figure below).
<li>The box must be placed with one side flat against the floor.
<li>The box must be placed with one side flat against the front wall.
<li>The door must close once the box is in place.
</ul>
You may assume there are no obstructions (such as a ceiling or the
ground) outside the truck that might interfere with loading.
<p>
<img src=p10204a.gif>
<br><br>

There are several test cases, each represented by two lines of input.
The first line of each contains 4 integers:  <i>w, h, l, H</i>.  The
next line contains 3 integers - the dimensions of the box.
For each test case, print "The box goes on the truck." if it
is possible to load the box on the truck; otherwise print "The box
will not go on the truck."  You may assume that you start with an
empty truck for each test case.
<h3>Sample Input</h3>
<pre>
8 8 12 7
8 12 8
8 8 12 7
7 12 8
8 8 12 7
1 7 13
100 200 99 190
100 195 30
</pre>
<h3>Output for Sample Input </h3>
<pre>
The box will not go on the truck.
The box goes on the truck.
The box will not go on the truck.
The box goes on the truck.
</pre>
<body bgcolor=ffffff>

______________________________________________________
10205||||||false||||||
<img align=right src=p10205.gif>
<h2>Problem E:  Stack 'em Up</h2>
A standard playing card deck contains 52 cards, 13 values in each of four
suits. The values are named <i>2, 3, 4, 5, 6, 7, 8, 9, 10, Jack, Queen, King, 
Ace.</i>
The suits are named <i>Clubs, Diamonds, Hearts, Spades</i>.  A particular
card in the deck can be uniquely identified by its value and suit, typically
denoted <i>&lt;value></i> of <i>&lt;suit></i>.  For example, 
"9 of Hearts" or "King of Spades".  Traditionally a new deck is
ordered first alphabetically by suit, then by value in the order given
above.
<p>The Big City has many Casinos.  In one such casino the dealer is
a bit crooked.  She has perfected several shuffles; each shuffle rearranges
the cards in exactly the same way whenever it is used.  A very simple example
is the "bottom card" shuffle which removes the bottom card and places it
at the top.  By using various combinations of these known shuffles, the
crooked dealer can arrange to stack the cards in just about any particular
order.
<p>
You have been retained by the security manager to track this dealer.
You are given a list of all the shuffles performed by the dealer,
along with visual cues that allow you to determine which shuffle she
uses at any particular time.  Your job is to predict the order of
the cards after a sequence of shuffles.
<p>
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

Input consists of an integer <i>n</i> &lt;= 100, the number of shuffles
that the dealer knows.  52<i>n</i> integers follow.  Each consecutive
52 integers will comprise all the integers from 1 to 52 in some order.  
Within each set of 52 integers, <i>i</i> in position <i>j</i> means 
that the shuffle moves the <i>i<sup>th</sup></i> card
in the deck to position <i>j</i>.
<p>
Several lines follow; each containing an integer <i>k</i> between 1 and <i>n</i>
indicating that you have observed the dealer applying the <i>k<sup>th</sup></i>
shuffle given in the input.
<p>
<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Assume the dealer starts with a new deck ordered as described above.


After all the shuffles had been performed, give the names of the cards in the deck, in the
new order.
<h3>Sample Input</h3>
<pre>
1

2
2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 51
52 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 1
1
2
</pre>
<h3>Output for Sample Input</h3>
<pre>
King of Spades
2 of Clubs
4 of Clubs
5 of Clubs
6 of Clubs
7 of Clubs
8 of Clubs
9 of Clubs
10 of Clubs
Jack of Clubs
Queen of Clubs
King of Clubs
Ace of Clubs
2 of Diamonds
3 of Diamonds
4 of Diamonds
5 of Diamonds
6 of Diamonds
7 of Diamonds
8 of Diamonds
9 of Diamonds
10 of Diamonds
Jack of Diamonds
Queen of Diamonds
King of Diamonds
Ace of Diamonds
2 of Hearts
3 of Hearts
4 of Hearts
5 of Hearts
6 of Hearts
7 of Hearts
8 of Hearts
9 of Hearts
10 of Hearts
Jack of Hearts
Queen of Hearts
King of Hearts
Ace of Hearts
2 of Spades
3 of Spades
4 of Spades
5 of Spades
6 of Spades
7 of Spades
8 of Spades
9 of Spades
10 of Spades
Jack of Spades
Queen of Spades
Ace of Spades
3 of Clubs
</pre>
<body bgcolor=ffffff>

______________________________________________________
10206||||||false||||||
<h2>Problem F: Stars</h2>
</font>On a clear moon-less night, you can see millions of stars glimmering in the sky. Faced with
this overwhelming number, the Greeks started nearly 2,000 years ago to bring some order to
the chaos. They identified groups of stars, called constellations, and gave them names, mostly
from the Greek mythology, that are still in use today. Examples are ``Ursa Minor'', ``Pisces'',
``Cancer'', and many others.
Given a sketch of the constellation, it is not easy for the amateur to actually find the
constellation in the sky. Moreover, simple constellations, such as ``Triangulum'' (triangle,)
which consists of only three stars, may appear several times in the sky. Again, singling out
the ``correct'' occurrence is not easy.
Traditionally, maps were printed for just this purpose. But in this problem, we will see
how the computer can help us find constellations in the sky.
You will be given a star map; for simplicity this will be a collection of points in the plane,
each having a certain brightness associated with it. Then, given a constellation, also as a set
of points in the plane, you are to determine:<P>
* the number of occurrences of the constellation in the star map, and<P>
* the position of the brightest occurrence, if one exists. (The rationale behind this is as
follows: if a constellation seems to appear several times in the sky, the brightest one is
most likely to be the real one, since it is the most eye-catching one.)<P>
An occurrence is a subset of stars from the map that forms a (possibly) arbitrarily rotated
and/or scaled copy of the stars in the constellation.
The brightness of an occurrence is the average brightness of the stars it consists of, i.e. the
sum of individual brightnesses divided by the number of stars in the constellation.<P>
</font><font size=+1>Input Specification<P>
</font><font size=+0>The input file contains the descriptions of several star maps. Each map starts with a line
containing a single integer </font>n, <font size=+0>specifying the number of stars in the map (1 </font>&lt;= n &lt; <font size=+0>1000).
The following </font>n <font size=+0>lines contain three integers each, namely the </font>x- <font size=+0>and </font>y-coordinates <font size=+0>and the
brightness of every star. The larger the value, the brighter the star shines.
The next line contains a single integer </font>m, <font size=+0>the number of constellations to follow (1 </font>&lt;= n &lt;
<font size=+0>50). Each constellation description starts with a line containing an integer </font>s<sub>i </sub><font size=+0>, the number
of stars in constellation </font>i, <font size=+0>and a string </font>N<sub>i</sub> <font size=+0>, the name of the constellation. (N<sub>i</sub><font size=+0>will consist of
no more than 40 characters and contain no blanks.) The following </font>s<sub>i </sub><font size=+0>lines then contain the
coordinates of the constellation, again as </font>x/y-pairs.
<font size=+0>A blank line separates the star map from the next map. The input file ends with an empty
map (having </font>n <font size=+0>= 0), which should not be processed.<P>
A-1
</font>N.B.: <font size=+0>Since all star coordinates are integer numbers, you can easily rule out any rotated
or scaled constellation whose points do not fall on integer coordinates.<P>
</font><font size=+1>Output Specification<P>
</font><font size=+0>For each star map first output the number of the map (`Map </font><font size=+0>#1', `Map #2', </font><font size=+0>etc.) on a line
of its own.
For each constellation, in the same order as in the input, output first its name and how
many times it occurs in the map on one line, as shown in the output sample.
If there is at least one occurrence, output the position of the brightest occurrence by
listing the positions of the stars that form the brightest occurrence. The star positions have
to be printed in ascending </font>x-order. <font size=+0>Positions having the same </font>x-coordinates <font size=+0>must be sorted
in ascending </font>y-order. <font size=+0>If there are several equally bright solutions, output only one of them.
Adhere to the format shown in the sample output.
Output a blank line before each constellation and a line of 5 dashes (`-----') after every
star map.<P>
</font><font size=+1>Sample Input<P>
</font><font size=+0>
<pre>
4
1 2 1
2 1 4
4 1 5
4 3 2
1
3 Triangulum
1 1
3 1
2 4

0
</pre>
</font><font size=+1>Output for Sample Input<P>
</font><font size=+0>
<pre>
Map #1

Triangulum occurs 1 time(s) in the map.
Brightest occurrence: (1,2) (4,1) (4,3)
-----
</pre>


______________________________________________________
10207||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p0_files/filelist.xml">
<link rel=Edit-Time-Data href="./p0_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>92</o:Revision>
  <o:TotalTime>376</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T01:00:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>320</o:Words>
  <o:Characters>1825</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2241</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
span.SPELLE
	{mso-spl-e:yes;}
span.GRAME
	{mso-gram-e:yes;}
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:24.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center>
<font face="Times New Roman" size=5><b>Problem A</b></font><br>
<font face="Times New Roman" size=6><b>The Unreal Tournament</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>20 seconds</font><br>
</center>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:18.0pt'>&nbsp;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>In this particular problem, <b style='mso-bidi-font-weight:normal'>The
Unreal Tournament</b> is a tournament, which consists of only two teams. Let
these two teams be <b style='mso-bidi-font-weight:normal'>Abahoni</b> and <b
style='mso-bidi-font-weight:normal'>Mohamedan</b>. They play in between them not
more than <b style='mso-bidi-font-weight:normal'>2n-1</b> games, the winner
being the first team to achieve <b style='mso-bidi-font-weight:normal'>n</b>
victories. You can assume that there are no tied games, the result of each game
is independent and for any match there is a constant probability <b>p</b> that
team <b style='mso-bidi-font-weight:normal'>Abahoni</b> will win and hence there
is a constant probability <b>q=1-p</b> that team <b style='mso-bidi-font-weight:
normal'>Mohamedan</b> will win. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'>P(i,j)</span></b><span
style='mso-bidi-font-size:12.0pt'> is the probability that team <b
style='mso-bidi-font-weight:normal'>Abahoni</b> will win the series given that
they still need <b style='mso-bidi-font-weight:normal'>i</b> more victories to
achieve this, whereas team Mohamedan still need <b style='mso-bidi-font-weight:
normal'>j</b> more victories if they are to win. The <b style='mso-bidi-font-weight:
normal'>P(i,j)</b> can be computed with a function like the following<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'>Function P(i,j)<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'><span style="mso-spacerun:
yes">Â Â Â Â Â  </span>if i = 0 then return 1<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'><span style="mso-spacerun:
yes">Â Â Â Â Â  </span>else if j = 0 then return 0<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'><span style="mso-spacerun:
yes">Â Â Â Â Â  </span>else return pP(i-1,j) + qP(i,j-1)<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>You will have to write a program that gives the probability of winning
for any p, i and j and also gives the number of recursive calls required if the
function above is used to get the probability P(i,j).<span style="mso-spacerun:
yes">Â Â Â  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>&nbsp;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><font face="Times New Roman" size=5><b>Input</b></font></span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
sets of input. The first line of a set contains one floating-point number p
(0&lt;p&lt;1), and an integer N (0&lt;=N&lt;1001) where p is the winning
probability of Abahoni and N is the number queries to follow. Each of the next
N lines contains two integers i(0&lt;=i&lt;=1000) and j(0&lt;=j&lt;=1000).
Input is terminated by a set, which has zero as the value of N. This set should
not be processed.</p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â </span></p>

<p class=MsoNormal style='text-align:justify'><b><font face="Times New Roman" size=5>Output</span></b></font></p>

<p class=MsoNormal style='text-align:justify'>For each query you should print
two lines. The first line contains the value of P(i,j) with five digits after
the decimal and the second line contains a round number which is the number of
recursive calls needed if the function mentioned above was used to determine
the value of P(i,j). If the value of P(i,j) is undefined you should print -1 as
its value with similar formatting. A blank line should be printed between the outputs of two consecutive sets.
<span style="mso-spacerun: yes">Â  </span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b><font face="Times New Roman" size=5>Sample Input:</font></span></b></p>
<font face="Courier" size=3>
0.5 3<br>
1 1<br>
2 2<br>
3 3<br>
0.5 2<br>
10 3<br>
10 2<br>
0.7 0<br>
</font>
<br>

<p class=MsoNormal style='text-align:justify'><b><font face="Times New Roman" size=5>Sample
Output:</span></b></font></p>
<font face="Courier" size=3>
0.50000<br>
2<br>
0.50000<br>
10<br>
0.50000<br>
38<br>
<br>
0.01929<br>
570<br>
0.00586<br>
130<br>
</font>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<font face="Times New Roman" size=3>
<p class=MsoNormal><b>Shahriar Manzoor<o:p></o:p></b></p>

</div>

</body>

</html>

______________________________________________________
10208||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p1_files/filelist.xml">
<link rel=Edit-Time-Data href="./p1_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem B - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>80</o:Revision>
  <o:TotalTime>267</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T01:01:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>331</o:Words>
  <o:Characters>1892</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>2323</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem B</b></font><br>
<font face="Times New Roman" size=6><b>Liar or Not Liar that is the...</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>6 seconds</font><br>
</center>

<div class=Section1>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'>Mr. Macintosh is a landlord of the twentieth century. He has many
lands. The most interesting part is that the shapes of all these lands are like
right-angled triangles and the smaller two sides are of integer length. Mr. Macintosh
is a very busy man as he has many other properties apart from the lands.
Everyday his employees buy new lands and Mr. Macintosh believes that one day he
will own all the lands of the Universe. In one fine morning, he wakes up from
sleep and discovers that he does not have proper records of the lands owned by
him. So he hires a person to give him report on all his lands. The report
contains only the square of the length of the largest sides his lands. That is if his
triangular lands has three sides <b>a</b>, <b>b</b>, <b>c</b> and <b>b</b> is
the largest among <b>a</b>, <b>b</b>, <b>c</b> then the report will contain
only <b>b*b</b>. But Mr. Macintosh does not believe this person, so he hires you
to judge whether that man is honest or a fraud.<span style="mso-spacerun:
yes">Â  </span><o:p></o:p></span></p>

<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of inputs. Each line of the input file contains an unsigned integer <b>N</b>
or a number of the form <b>N! (Factorial N) (4&lt;=N&lt;=10000000)</b>. Each of
these integers denotes square of the length of the longest side of one of his lands. </p>

<p class=MsoNormal style='text-align:justify'><span style="mso-spacerun:
yes">Â </span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output<o:p></o:p></span></b></p>


<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><span
style='mso-bidi-font-weight:bold'>For inputs of the form </span><b
style='mso-bidi-font-weight:normal'>N, </b><span style='mso-bidi-font-weight:
bold'>you need to print the line </span><b style='mso-bidi-font-weight:normal'>Â“He
might be honest.Â”</b><span style='mso-bidi-font-weight:bold'> if square-root of </span><b
style='mso-bidi-font-weight:normal'>N</b><span style='mso-bidi-font-weight:
bold'> can be the largest side of one of his land, otherwise print, </span><b
style='mso-bidi-font-weight:normal'>Â“He is a liar.Â”</b><span style='mso-bidi-font-weight:
bold'> These lines should be printed on a single line.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><b
style='mso-bidi-font-weight:normal'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><span
style='mso-bidi-font-weight:bold'>For inputs of the form </span><b
style='mso-bidi-font-weight:normal'>N!</b><span style='mso-bidi-font-weight:
bold'>, you need to do the same thing described above. Apart from that you also
need to print the prime numbers with which you need to divide </span><b
style='mso-bidi-font-weight:normal'>N!</b><span style='mso-bidi-font-weight:
bold'> to make it the square of a valid largest side of one of his lands. If number of such
primes is more than </span><b style='mso-bidi-font-weight:normal'>50</b><span
style='mso-bidi-font-weight:bold'> you should print the smallest </span><b
style='mso-bidi-font-weight:normal'>50</b><span style='mso-bidi-font-weight:
bold'> such primes. These primes are all printed in a single line separated by
a single space. But of course you need not print the primes if </span><b
style='mso-bidi-font-weight:normal'>N!</b><span style='mso-bidi-font-weight:
bold'> is itself the square of a valid longest side.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><span
style='mso-bidi-font-weight:bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><span
style='mso-bidi-font-weight:bold'>A blank line separates output for each line
of input. The sample input/output will make everything clear.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><span
style='mso-bidi-font-weight:bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">Sample Input:</span></font><o:p></o:p></b></p>
<font size=3 face="Courier">
10<br>
12<br>
98<br>
99<br>
4!<br>
5!<br>
6!<br>
120!<br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">
Sample Output:</span></font><o:p></o:p></b></p>
<font face="Courier" size=3>
He might be honest.<br>
<br>
He is a liar.<br>
<br>
He might be honest.<br>
<br>
He is a liar.<br>
<br>
He is a liar.<br>
3<br>
<br>
He is a liar.<br>
3<br>
<br>
He might be honest.<br>
<br>
He is a liar.<br>
7 23 31 67 71 79 83 103 107
</font>
<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoBodyText3>Shahriar Manzoor<br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><span style='mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10209||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p2_files/filelist.xml">
<link rel=Edit-Time-Data href="./p2_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>72</o:Revision>
  <o:TotalTime>254</o:TotalTime>
  <o:LastPrinted>2001-08-13T05:09:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T01:01:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>203</o:Words>
  <o:Characters>1159</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1423</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:13.5pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem C</b></font><br>
<font face="Times New Roman" size=6><b>Is This Integration ?</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>3 seconds</font><br>
</center>

<div class=Section1>


<p class=MsoNormal align=center style='text-align:center'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>In the image below you can see a
square ABCD, where <b>AB = BC = CD = DA = a</b>. Four arcs are drawn taking the
four vertexes <b>A, B, C, D</b> as centers and <b>a</b> as the radius. The arc
that is drawn taking <b>A</b> as center, starts at neighboring vertex <b>B</b>
and ends at neighboring vertex <b>D</b>. All other arcs are drawn in a similar
fashion. Regions of three different shapes are created in this fashion. You
will have to determine the total area if these different shaped regions.<span
style="mso-spacerun: yes">Â Â  </span></p>
<center>
<img width=500 height=503
src="http://uva.onlinejudge.org/external/102/p10209.jpg" >
</center>
<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">
Input</span></font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains a
floating-point number <b>a (a&gt;=0 a&lt;=10000)</b> in each line which
indicates the length of one side of the square. Input is terminated by end of
file. &nbsp;</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">
Output</span><o:p></o:p></font></b></p>

<p class=MsoNormal style='text-align:justify'>For each line of input, output in
a single line the total area of the three types of region (filled with
different patterns in the image above). These three numbers will of course be
floating point numbers with three digits after the decimal point. First number
will denote the area of the striped region, the second number will denote the
total area of the dotted regions and the third number will denote the area of
the rest of the regions.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">Sample Input:</font></span><o:p></o:p></b></p>
<font face="Courier" size=3>
0.1<br>
0.2<br>
0.3<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">Sample
Output:</span><o:p></o:p></b></p></font>
<font face="Courier" size=3>

0.003 0.005 0.002<br>
0.013 0.020 0.007<br>
0.028 0.046 0.016<br>
</font>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:12.0pt;color:windowtext'>Shahriar
Manzoor</span></b><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10210||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p3_files/filelist.xml">
<link rel=Edit-Time-Data href="./p3_files/editdata.mso">
<link rel=OLE-Object-Data href="./p3_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem D - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>104</o:Revision>
  <o:TotalTime>666</o:TotalTime>
  <o:LastPrinted>2001-08-31T03:57:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T01:02:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>407</o:Words>
  <o:Characters>2321</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>19</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2850</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1030"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem D</b></font><br>
<font face="Times New Roman" size=6><b>Romeo & Juliet !</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>2 seconds</font><br>
</center>

<div class=Section1>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'>In this problem we will discuss the problems of a modern Romeo and a
modern Juliet. You are asked to solve their problems so that they donÂ’t have to
be a tragic pair like that of ShakespeareÂ’s. As usual the family of Romeo and
Juliet have hostile relationships and so they are locked up in two different
places <b>M</b> and <b>N</b>. Two cannons are placed in location <b>A</b> and
two cannons are placed in location <b>B</b>. One cannon of location <b>A</b> is
aimed towards <b>M</b> and the other aimed towards <b>N</b>. The same thing
applies to the two cannons of location <b>B</b>. The <b>M</b> and <b>N</b> are
always on the opposite side of <b>AB</b>. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:13.5pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>
<p>
<center>
<img width=550 height=291
src="http://uva.onlinejudge.org/external/102/p10210.jpg" ><br>
<b>Fig: Partial Scenario of
Romeo &amp; Juliet</b>
</center>
</p>
<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'>
The movements of
the cannons, which are aimed at </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>M</span></b><span style='mso-bidi-font-size:
18.0pt'>, are interrelated; the angle between their directions is constant. So
angle </span><b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:
18.0pt'>CMD</span></b><span style='mso-bidi-font-size:18.0pt'> ((5 degree)
&lt;= (angle </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>CMD</span></b><span style='mso-bidi-font-size:
18.0pt'>) &lt; (80 degree)) is constant. Same rule applies to the other two
cannons. ThatÂ’s angle </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>ENF</span></b><span style='mso-bidi-font-size:
18.0pt'> ((5 degree) &lt;= (angle </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>ENF</span></b><span style='mso-bidi-font-size:
18.0pt'>) &lt; (80 degree)) is also constant. All these things are shown in the
picture above. But another important thing is missing in the figure above is
that the locations </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>N, A, M</span></b><span style='mso-bidi-font-size:
18.0pt'> are always kept in a straight line. The reason behind this is very
strange. A robot has been hired to guard Romeo and Juliet. It has two eyes at
the opposite sides of its head and this robot is positioned in point </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>A</span></b><span
style='mso-bidi-font-size:18.0pt'>. To be precise, </span><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'>A</span></b><span
style='mso-bidi-font-size:18.0pt'>, </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>B</span></b><span style='mso-bidi-font-size:
18.0pt'> and angle </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>CMD</span></b><span style='mso-bidi-font-size:
18.0pt'> and angle </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>ENF</span></b><span style='mso-bidi-font-size:
18.0pt'> are constants in one scenario and all other positions or values are
variable. Also remember that point </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>M</span></b><span style='mso-bidi-font-size:
18.0pt'> must always remain pointed by the two cannons. Same thing applies to
point </span><b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:
18.0pt'>N</span></b><span style='mso-bidi-font-size:18.0pt'>.<o:p></o:p></span></p>

<p class=MsoBodyText2><span style='mso-bidi-font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText2><span style='mso-bidi-font-size:18.0pt'>The problem is
that in starry nights Mr. Romeo sings the song </span><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'>Â“Blue NightsÂ”</span></b><span
style='mso-bidi-font-size:18.0pt'> of </span><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'>Â“Michael Learns to RockÂ”</span></b><span
style='mso-bidi-font-size:18.0pt'> in a loud voice and both parents donÂ’t want
Ms. Juliet to hear this song. So they want to place the houses (</span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>M</span></b><span
style='mso-bidi-font-size:18.0pt'> and </span><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'>N</span></b><span
style='mso-bidi-font-size:18.0pt'>) as far as possible preserving all the
constraints explained before. Your job is to measure this maximum distance
between </span><b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:
18.0pt'>M</span></b><span style='mso-bidi-font-size:18.0pt'> and </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>N</span></b><span
style='mso-bidi-font-size:18.0pt'> and inform it to Romeo, so that he can
decide whether he should sing or not or what should be his voice level.<o:p></o:p></span></p>

<p class=MsoBodyText2><span style='mso-bidi-font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Time New Roman">Input</font></span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'>The input file contains several lines of
input. Each line contains six floating-point numbers, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>x1</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>y1</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>x2</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, and </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>y2</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'> (0&lt;= </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>x1</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>y1</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>x2</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>y2 </span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>&lt;=10000) </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>CMD,
ENF</span></b><span style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>.
Here </span><b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:
18.0pt'>(x1, y1)</span></b><span style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:
bold'> is the coordinate of </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>A</span></b><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'>, </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>(x2, y2)</span></b><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'> is the coordinate of </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>B</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>CMD</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'> is the angle
between the directions of cannons pointed towards </span><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'>M</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'> and </span><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:18.0pt'>ENF</span></b><span
style='mso-bidi-font-size:18.0pt;mso-bidi-font-weight:bold'> is the similar
value for point </span><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:18.0pt'>N</span></b><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'>. Input is terminated by end-of-file. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Output</span></font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each line of input you should produce one line of output, which
contains a floating-point number </span><b style='mso-bidi-font-weight:normal'>F</b><span
style='mso-bidi-font-weight:bold'>. </span><b style='mso-bidi-font-weight:normal'>F</b><span
style='mso-bidi-font-weight:bold'> is the maximum possible distance between
RomeoÂ’s house and JulietÂ’s house and it has three digits after the decimal
point.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Sample Input:</span></font><o:p></o:p></b></p>
<font face="Courier" size=3>
10 10 10 20 48 48<br>

10 10 20 20 60 70<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><font face="Times New Roman" size=5>
<b>Sample Output<o:p></o:p></span></font></b></p>
<font face="Courier" size=3>
18.008<br>
13.312<br>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b>Shahriar Manzoor</b><b><span style='mso-bidi-font-size:
12.0pt'><o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10211||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p4_files/filelist.xml">
<link rel=Edit-Time-Data href="./p4_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem E - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>78</o:Revision>
  <o:TotalTime>906</o:TotalTime>
  <o:LastPrinted>2001-11-19T13:07:00Z</o:LastPrinted>
  <o:Created>2001-08-25T15:11:00Z</o:Created>
  <o:LastSaved>2001-11-29T01:08:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>488</o:Words>
  <o:Characters>2786</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>23</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3421</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>BestFit</w:Zoom>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
span.GRAME
	{mso-gram-e:yes;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in .8in 1.0in .8in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:1366561792;
	mso-list-type:hybrid;
	mso-list-template-ids:517519778 -1809212 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:48.0pt;
	mso-level-number-position:left;
	margin-left:48.0pt;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem E</b></font><br>
<font face="Times New Roman" size=6><b>Divisibility Testing! Wow!!</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>15 seconds</font><br>
</center>

<div class=Section1>


<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>There are often ways to check
(other than brute force division) whether a number is divisible by another
number. As for example</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:48.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]>a)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>In
decimal number system a number is divisible by 2 if the rightmost digit is
divisible by 2. So 4<b style='mso-bidi-font-weight:normal'>2, </b>3<b
style='mso-bidi-font-weight:normal'>8, </b>5<b style='mso-bidi-font-weight:
normal'>0 </b>are divisible by 2.</p>

<p class=MsoNormal style='margin-left:48.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]>b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>In
decimal number system a number is divisible by 4 if the number formed by
rightmost two digits is divisible by 4. So 1<b style='mso-bidi-font-weight:
normal'>00, </b>1<b style='mso-bidi-font-weight:normal'>24, </b>13<b
style='mso-bidi-font-weight:normal'>28 </b>are divisible by 4.</p>

<p class=MsoNormal style='margin-left:48.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]>c)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>In
decimal number system a number is divisible by 3 if the sum of its digits is
divisible by 3. So 123 is divisible by 3 as (1+2+3 = 6 =3 * 2). Similar testing
is there for divisibility by 9. For divisibility testing of 99 we need to add
up all digits from the right considering two digits as a number. For example 23<b
style='mso-bidi-font-weight:normal'>74</b>31<b style='mso-bidi-font-weight:
normal'>03</b>51<b style='mso-bidi-font-weight:normal'>03</b>79<b
style='mso-bidi-font-weight:normal'>33 </b>divisible by 99 as
33+79+03+51+03+31+74+23 = 297 = 99 * 3</p>

<p class=MsoNormal style='margin-left:48.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]>d)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>A
number is divisible by 11 if the difference of the sums of its odd positioned
digits and even positioned digits from the right is divisible by 11.<span
style="mso-spacerun: yes">Â  </span>As for example <b style='mso-bidi-font-weight:
normal'>1</b>2<b style='mso-bidi-font-weight:normal'>7</b>0<b style='mso-bidi-font-weight:
normal'>4</b>0<b style='mso-bidi-font-weight:normal'>1</b> is divisible by 11,
as (1-0+4-0+7-2+1) = 11, which is divisible by 11. </p>

<p class=MsoNormal style='margin-left:48.0pt;text-align:justify;text-indent:
-.25in;mso-list:l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]>e)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><![endif]>A
number is divisible by 7 if the difference of the sums of the summation of the
numbers formed by alternate three digits from the right is divisible by 7. As
for example <b style='mso-bidi-font-weight:normal'>1</b>668<b style='mso-bidi-font-weight:
normal'>266</b>767<b style='mso-bidi-font-weight:normal'>874 </b>divisible by 7
because (874-767+266-668+001) = -294 = -42 * 7. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>In this problem you will have to
automatically discover the conditions of divisibility testing for different
number systems <b>(2&lt;Base&lt;500)</b> and different numbers (less than 5000)
as divisors. If condition is not found adding all the digits, considering up to
1000 rightmost digits as a number or considering the summation of up to 1000
alternate digits just print the line <b>Â“condition not found.Â”</b>. If the
condition is found then output should be formatted according to the following
sample output. When more than one type of condition is found print them
according to the order specified above (first try considering the left most digits,
then adding all digits, then and then the alternate digit scheme) print that
condition and processes the next input. The sample outputs will make everything
clear.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<h2>Input</h2>

<p class=MsoBodyText>First line of the input file contains an integer number <b>N(N&lt;=2000)</b>,
which indicates how many sets of input are there. Each of the next <b>N</b>
lines makes one set of input. Each line contains two integer numbers <b>B(2&lt;B&lt;500)</b>
and <b>D(2&lt;=D&lt;5000)</b>.<span style="mso-spacerun: yes">Â  </span>Here <b>B</b>
is the base of the number system you have to consider and <b>D</b> is the
number for which you have to find the divisibility criteria. Note that you
wonÂ’t have to consider any compound condition. As for example, in decimal
number system testing divisibility test for 2 and 3 can test the divisibility
by 6. But you should not consider this, as it is a mixture of two rules. You
should only consider the individual rules explained at the top.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>&nbsp;<o:p></o:p></span></b></p>

<h2>Output</h2>

<p class=MsoNormal style='text-align:justify'><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>For each set of input produce one
line of output. Output format for all divisibility schemes is shown in the
sample output. The sample output contains all the different types of
rules.<span style="mso-spacerun: yes">Â  </span>A blank line should be printed between the outputs of two consecutive sets.
</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>&nbsp;<o:p></o:p></span></b></p>

<h2>Sample Input</h2>
<font face="Courier" size=3>
7<br>
10 3<br>
10 99<br>
10 2<br>
10 4<br>
10 5<br>
10 11<br>
10 7<br>

<br>
</font>
<h2>Sample Output</h2>
<font face="Courier" size=3>
Add all 1<br>
<br>
Add all 2<br>
<br>
Rightmost 1<br>
<br>
Rightmost 2<br>
<br>
Rightmost 1<br>
<br>
Add all 2<br>
Alternate 1 change sign<br>
<br>
Add all 6<br>
Alternate 3 change sign<br>


<hr size=2 width="100%" align=center>

</span></div>

<font face="Times New Roman" size=3>
<b>Shahriar Manzoor</b>

</div>

</body>

</html>

______________________________________________________
10212||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p5_files/filelist.xml">
<link rel=Edit-Time-Data href="./p5_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem F - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>58</o:Revision>
  <o:TotalTime>164</o:TotalTime>
  <o:Created>2001-08-02T03:19:00Z</o:Created>
  <o:LastSaved>2001-11-29T01:09:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>109</o:Words>
  <o:Characters>622</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>5</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>763</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
span.SPELLE
	{mso-spl-e:yes;}
span.GRAME
	{mso-gram-e:yes;}
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center>
<font face="Times New Roman" size=5><b>Problem F</b></font><br>
<font face="Times New Roman" size=6><b>The Last Non-zero Digit.</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>30 seconds</font><br>
</center>


<p style='text-align:justify'><span style='font-size:11.0pt;mso-bidi-font-weight:
bold'>In this problem you will be given two decimal integer number <b>N, M</b>.
You will have to find the last non-zero digit of the </span><b
style='mso-bidi-font-weight:normal'><sup><span style='font-size:11.0pt'>N</span></sup></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt'>P<sub>M</sub></span></b><span
style='font-size:11.0pt;mso-bidi-font-weight:bold'>. This means no of permutations
of </span><b style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt'>N</span></b><span
style='font-size:11.0pt;mso-bidi-font-weight:bold'> things taking </span><b
style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt'>M</span></b><span
style='font-size:11.0pt;mso-bidi-font-weight:bold'> at a time.<o:p></o:p></span></p>

<p style='text-align:justify'><b><font face="Times New Roman" size=5>
Input </span></font></b><span style='font-size:18.0pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='text-align:justify'><span style='font-size:11.0pt;mso-bidi-font-weight:
bold'>The input file contains several lines of input. Each<b> </b></span><span
style='font-size:11.0pt'>line<b> </b><span style='mso-bidi-font-weight:bold'>of
the input file contains two integers </span><b style='mso-bidi-font-weight:
normal'>N (0&lt;=N&lt;=20000000)</b><span style='mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'>M (0&lt;=N)</b><span style='mso-bidi-font-weight:
bold'>. Input is terminated by end-of-file.<o:p></o:p></span></span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Output</span></b></p>

<p style='text-align:justify'><span style='mso-bidi-font-weight:bold'>For each
line of the input file you should output a single digit, which is the last
non-zero digit of </span><b style='mso-bidi-font-weight:normal'><sup><span
style='font-size:11.0pt'>N</span></sup></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>P<sub>M</sub></span></b><span style='mso-bidi-font-weight:
bold'>. For example, if </span><b style='mso-bidi-font-weight:normal'><sup><span
style='font-size:11.0pt'>N</span></sup></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>P<sub>M</sub></span></b><span style='mso-bidi-font-weight:
bold'> is 720 then the last non-zero digit is 2. So in this case your output
should be 2.<o:p></o:p></span></p>

<p style='text-align:justify'><b><font face="Times New Roman" size=5>
Sample Input</font></b></p>
<font face="Courier" size=3>
10 10<br>
10 5<br>
25 6<br>
<br>
</font>
<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>
<font face="Times New Roman" size=5>
<b>Sample Output</span></b></p>
</font>
<font face="Courier" size=3>
8<br>
4<br>
2<br>Â 
</font>
<hr size=2 width="100%" align=center>

</div>


<p class=MsoNormal><b>Shahriar Manzoor</b></p>

</div>

</body>

</html>

______________________________________________________
10213||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p6_files/filelist.xml">
<link rel=Edit-Time-Data href="./p6_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem G - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>85</o:Revision>
  <o:TotalTime>520</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T02:15:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>129</o:Words>
  <o:Characters>737</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>6</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>905</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>BestFit</w:Zoom>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Courier;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in .7in 1.0in .7in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center>
<font face="Times New Roman" size=5><b>Problem G</b></font><br>
<font face="Times New Roman" size=6><b>How Many Pieces of Land?</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>3 seconds</font><br>
</center>


<p class=MsoNormal style='text-align:justify'><b><span style='mso-bidi-font-size:
13.5pt;color:windowtext'><span style="mso-spacerun: yes">Â </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>You are given an elliptical shaped land and you are asked to choose <b>n</b>
arbitrary points on its boundary. Then you connect all these points with one another
with straight lines (thatÂ’s <b style='mso-bidi-font-weight:normal'>n*(n-1)/2</b>
connections for <b style='mso-bidi-font-weight:normal'>n</b> points). What is
the maximum number of pieces of land you will get by choosing the points on the
boundary carefully?<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt'>&nbsp;<o:p></o:p></span></p>
<center>
<img 
src="http://uva.onlinejudge.org/external/102/p10213.jpg" ><br>
Fig: When the value of n is 6.
</center>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:18.0pt'>&nbsp;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5 face="Times New Roman">Input</font><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>The first line of the input file contains one integer <b
style='mso-bidi-font-weight:normal'>S (0 &lt; S &lt; 3500)</b>, which indicates
how many sets of input are there. The next <b style='mso-bidi-font-weight:normal'>S</b>
lines contain <b>S</b> sets of input. </span>Each input contains one integer <b
style='mso-bidi-font-weight:normal'>N (0&lt;=N&lt;2^31)</b>.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5 face="Times New Roman">Output</span></font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>For each set of input you should
output in a single line the maximum number pieces of land possible to get for
the value of <b style='mso-bidi-font-weight:normal'>N</b>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>&nbsp;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font size=5 face="Times New Roman">Sample Input:</font><o:p></o:p></b></p>
<font size=3 face="Courier">
4<br>
1<br>
2<br>
3<br>
4<br>
</font>
<br>
<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New"'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><font size=5 face="Times New Roman">Sample
Output:</font><o:p></o:p></b></p>
<font size=3 face="Courier">
1<br>
2<br>
4<br>
8<br>
</font>
<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor<o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10214||||||false||||||
<html><!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0090)http://www.pi.informatik.tu-darmstadt.de/acm-contest/Darmstadt99/Problems/trees/trees.html --><!--Converted with LaTeX2HTML 96.1-h (September 30, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p7_files/filelist.xml">
<link rel=Edit-Time-Data href="./p7_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem H - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>16</o:Revision>
  <o:TotalTime>46</o:TotalTime>
  <o:LastPrinted>2001-10-31T06:01:00Z</o:LastPrinted>
  <o:Created>2001-10-31T05:15:00Z</o:Created>
  <o:LastSaved>2001-11-29T02:16:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>422</o:Words>
  <o:Characters>2406</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2954</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>BestFit</w:Zoom>
 </w:WordDocument>
</xml><![endif]-->
<link rel=Stylesheet type="text/css" media=all href="p7_files\trees.css">
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:#111177;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{margin-right:0in;
	mso-margin-top-alt:auto;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
tt
	{mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in .8in 1.0in .8in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<meta content="No Title" name=description>
<meta content=trees name=keywords>
<meta content=document name=resource-type>
<meta content=global name=distribution>
</head>

<body lang=EN-US link="#111177" vlink=purple style='tab-interval:.5in'>

<div class=Section1>
<center>
<font face="Times New Roman" size=5><b>Problem H</b></font><br>
<font face="Times New Roman" size=6><b>Trees in a Wood.</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>10 seconds</font><br>
</center>


<span style='mso-bookmark:SECTION00010000000000000000'></span>

<h2 style='text-align:justify'><a name=SECTION00011000000000000000><span
lang=EN style='mso-ansi-language:EN'>Background</span></a><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>The
saying ``You can't see the wood for the trees'' is not only a cliche, but is also
incorrect. The real problem is that you can't see the trees for the wood. If
you stand in the middle of a wood, the trees tend to obscure each other and the
number of distinct trees you can actually see is quite small. This is
especially true if the trees are planted in rows and columns, because they tend
to line up. The purpose of this problem is to find how many distinct trees one
can see if one were standing on the position of a tree in the middle of the
wood. <o:p></o:p></span></p>

<h2 style='text-align:justify'><a name=SECTION00012000000000000000><span
lang=EN style='mso-ansi-language:EN'>The Problem</span></a><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>For a
mathematically more precise description we assume that you are situated at the
origin of a coordinate system in the plane. <o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>Trees
are planted at all positions <img width=202 height=25 id="_x0000_i1025"
src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top border=0>, with <MATH class=INLINE>|x|&lt;=a</MATH>
and <MATH class=INLINE>|y|&lt;=b</MATH>. <o:p></o:p></span></p>

<p align=center style='text-align:center'><span lang=EN style='mso-ansi-language:
EN'><img width=389 height=288 id="_x0000_i1026" src="http://uva.onlinejudge.org/external/102/p10214a.gif" 
border=0><o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>A tree
at position <MATH class=INLINE>(x,y)</MATH> can be seen from the origin if
there are no other trees on the straight line from <MATH  class=INLINE>(0,0)</MATH>
to <MATH class=INLINE>(x,y)</MATH>. Find the number <MATH class=INLINE>K</MATH>
of all the trees in the wood that can be seen from the origin and the number <MATH class=INLINE>N</MATH>
of all the trees to compute the fraction <MATH class=INLINE><img width=19
height=29 id="_x0000_i1027" src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top border=0></MATH>.
<o:p></o:p></span></p>

<p style='text-align:justify'><b><span lang=EN style='mso-ansi-language:EN'>Hint:</span></b><span
lang=EN style='mso-ansi-language:EN'> The Euler phi function <img width=40
height=26 id="_x0000_i1028" src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top border=0>is
defined to be the number of integers <MATH class=INLINE>m</MATH> in the range <MATH  class=INLINE>1&#8804;m&#8804;n</MATH>
relatively prime to <MATH class=INLINE>n</MATH>: <o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'><img
width=612 height=24 id="_x0000_i1029" src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top
border=0><o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>Instead
of counting (an adequate method for small <MATH class=INLINE>n</MATH>!) you
could as well use the following identity: <o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'><img
width=399 height=54 id="_x0000_i1030" src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top
border=0><o:p></o:p></span></p>

<p style='text-align:justify'><b><span lang=EN style='mso-ansi-language:EN'>Hint:</span></b><span
lang=EN style='mso-ansi-language:EN'> Remember that <MATH class=INLINE><T  class=FUNCTION>gcd</T>(m,n)=<T class=FUNCTION>gcd</T>(m+n,n)=<T  class=FUNCTION>gcd</T>(m+2n,n)=<T class=FUNCTION>gcd</T>(m+in,i)</MATH>
<o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>You
might be surprised that the fraction <img width=19 height=29 id="_x0000_i1031"
src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top border=0>converges to <img width=39
height=29 id="_x0000_i1032" src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top border=0>0.607927</MATH>
for an infinitely large wood. <o:p></o:p></span></p>

<h2 style='text-align:justify'><a name=SECTION00013000000000000000><span
lang=EN style='mso-ansi-language:EN'>The Input</span></a><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>Each
scenario consists of a line with the two numbers <MATH class=INLINE>a</MATH>
and <MATH class=INLINE>b</MATH> (separated by a white space), with <MATH  class=INLINE>1
&lt;= a &lt;= 2000</MATH> and <MATH class=INLINE>1 &lt;= b &lt;= 2000000</MATH>
Input is terminated by a line with two zeros. <o:p></o:p></span></p>

<h2 style='text-align:justify'><a name=SECTION00014000000000000000><span
lang=EN style='mso-ansi-language:EN'>The Output</span></a><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>For
each scenario print a line containing the fraction <img width=19 height=29
id="_x0000_i1033" src="http://uva.onlinejudge.org/external/102/p10214a.gif"  align=top border=0>with a precision
of 7 digits after the decimal point. Error less than 2e-7 or 2*10^(-7) will be
tolerated. <o:p></o:p></span></p>

<h2 style='text-align:justify'><a name=SECTION00015000000000000000><span
lang=EN style='mso-ansi-language:EN'>Sample Input</span></a><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<p><tt><span lang=EN style='mso-ansi-font-size:12.0pt;font-family:"Courier New";
mso-ansi-language:EN'>3 2</span></tt><span lang=EN style='mso-bidi-font-size:
10.0pt;font-family:"Courier New";mso-fareast-font-family:"Courier New";
mso-ansi-language:EN'><br>
<tt><span style='mso-ansi-font-size:12.0pt'>0 0</span></tt></span><span
lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></p>

<h2 style='text-align:justify'><a name=SECTION00016000000000000000><span
lang=EN style='mso-ansi-language:EN'>Sample Output</span></a><span lang=EN
style='mso-ansi-language:EN'><o:p></o:p></span></h2>
<font size=3 face="Courier">
0.7058824<br>

</div>
</font>
<hr>
<font size=3 face="Times New Roman">
Collected from TUD Programming Contest
</body>

</html>

______________________________________________________
10215||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p8_files/filelist.xml">
<link rel=Edit-Time-Data href="./p8_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem I - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>73</o:Revision>
  <o:TotalTime>350</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T02:18:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>194</o:Words>
  <o:Characters>1110</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1363</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>BestFit</w:Zoom>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Americana BT";
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:135 0 0 0 27 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;}
h4
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:8.5pt;
	font-family:"Americana BT";
	color:black;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in .8in 1.0in .8in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center>
<font face="Times New Roman" size=5><b>Problem I</b></font><br>
<font face="Times New Roman" size=6><b>The Largest/Smallest Box...</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>2 seconds</font><br>
</center>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoBodyText2>In the following figure you can see a rectangular card.
The width of the card is <b>W</b> and length of the card is <b>L</b> and
thickness is zero. Four <b>(x*x)</b> squares are cut from the four corners of
the card shown by the black dotted lines. Then the card is folded along the
magenta lines to make a box without a cover. </p>
<center>
<img width=600 height=411
src="http://uva.onlinejudge.org/external/102/p10215.jpg" ><br>
<b>Fig: Cutting &amp; Folding the Card.</b>
</center>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<span style='font-size:12.0pt;mso-bidi-font-size:12.0pt;font-weight:normal;
mso-bidi-font-weight:bold'></font>Given the width and height of the box, you will have
to find the value of </span><span style='font-size:12.0pt;mso-bidi-font-size:
18.0pt'>x</span><span style='font-size:12.0pt;mso-bidi-font-size:18.0pt;
font-weight:normal;mso-bidi-font-weight:bold'> for which the box has maximum
and minimum volume.<o:p></o:p></span></h2>

<p class=MsoNormal>&nbsp;</p>

<h2>Input<span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains two positive floating-point numbers <b>L(0&lt;L&lt;10000)</b>
and <b>W(0&lt;W&lt;10000)</b>; which indicate the length and width of the card
respectively.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>
Output</span></font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each line of input you should give one line of output, which should
contain two or more floating-point numbers separated by a single space. The
floating-point numbers should contain three digits after the decimal point. The
first floating point number indicates the value for which the volume of the box
is maximum and then the next values (sorted in ascending order) indicate the
values for which the volume of the box is minimum.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;tab-stops:183.75pt'><b
style='mso-bidi-font-weight:normal'><font size=5 face="Times New Roman">Sample
Input:</font><span style='mso-tab-count:1'></span></span><o:p></o:p></b></p>
<font face="Courier" size=3>
1 1<br>
2 2<br>
3 3<br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
mso-bidi-font-size:18.0pt;font-family:"Courier New"'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><font face="Times New Roman" size=5>Sample Output:</span><o:p></o:p></b></p>
<font face="Courier" size=3>
0.167 0.000 0.500<br>
0.333 0.000 1.000<br>
0.500 0.000 1.500<br>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b>Shahriar Manzoor<br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></b></p>

</div>

</body>

</html>

______________________________________________________
10216||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p9_files/filelist.xml">
<link rel=Edit-Time-Data href="./p9_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem J - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>127</o:Revision>
  <o:TotalTime>755</o:TotalTime>
  <o:LastPrinted>2001-07-19T02:33:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T00:45:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>440</o:Words>
  <o:Characters>2513</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>3086</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>BestFit</w:Zoom>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <w:GrammarState>Clean</w:GrammarState>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
span.GRAME
	{mso-gram-e:yes;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
a:link, span.MsoHyperlink
	{color:#771111;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:595.45pt 841.7pt;
	margin:.8in .7in .8in .7in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]--><o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="PlaceType"/><o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="PlaceName"/><o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="country-region"/><o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="place"/>
</head>

<body lang=EN-US link="#771111" vlink=purple style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem J</b></font><br>
<font face="Times New Roman" size=6><b>The Optimal Coffee Shop !!</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>2 seconds</font><br>
</center>

<div class=Section1>


<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>In <st1:country-region><st1:place>Bangladesh</st1:place></st1:country-region>
there are many private Universities now. Almost all of them donÂ’t have their own
campuses (by campus I mean a large area consisting many buildings) and at their
present locations (two busy areas of Dhaka Â– Banani, Mohakhali) it is not
possible for them to have their own campus covering large area like the Public
Universities (Bangladesh University of Engineering &amp; Technology, Dhaka
University, Jahangir Nagar University etc). So three Private Universities in <st1:place>Dhaka</st1:place>
(<st1:place><st1:PlaceName>North</st1:PlaceName> <st1:PlaceName>South</st1:PlaceName>
<st1:PlaceType>University</st1:PlaceType></st1:place>, <st1:place><st1:PlaceName>East</st1:PlaceName>
<st1:PlaceName>West</st1:PlaceName> <st1:PlaceType>University &amp; BRAC</st1:PlaceType>
<st1:PlaceType>University</st1:PlaceType></st1:place> (Sorry! There is no <st1:place><st1:PlaceName>Up
Down</st1:PlaceName> <st1:PlaceType>University</st1:PlaceType></st1:place>))
decide to move away from their current location to a large vacant plain field
in Savar (Another place near Dhaka). This field is so large (the Bangladeshi
people can consider it like the field of Tepantor described in fairytales) that
the campuses of these Universities can be considered as points (You know better
than me, that if I donÂ’t consider them as points this problem will be even
harder). These Universities decide to build a common coffee shop for their
students, but the problem is that everyone wants the coffee shop to be
established in their own campus. At last they decided that the coffee shop
would be established in a place whose total distance from these three
Universities is minimum. For the convenience of you &amp; me (You will have to
solve it in contest time along with 11 other problems and IÂ’ll have to write
the judge solution) I would like you to find this total minimum distance (if
the campuses are <b>A, B, C</b> and the optimal location is <b>P</b> find <b>PA
+ PB + PC</b>). One of the Universities proposed the coffee shop to be on the
in-center of triangle <b>ABC</b> (LetÂ’s say the in-center is I), another
proposed it to be on the Center of Gravity of triangle <b>ABC</b> (LetÂ’s say
the center of Gravity is <b>G</b>) and the other proposed it to be on the circum-center
of the triangle (LetÂ’s say the circum-center is <b>O</b>). So you will also
need to print the value of <b>(AI + BI + CI)</b>, the value of <b>(AG + BG +
CG)</b> and the value of <b>(AO + BO + CO)</b>. If any value cannot be
determined print its value as Â–1 with appropriate formatting. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>/* In the paragraph above only
but the names and current locations of the Universities are true. */<span
style="mso-spacerun: yes">Â Â  </span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Input</font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The first line of the input file
contains an integer <b style='mso-bidi-font-weight:normal'>S (0&lt;S&lt;=100)</b>
that indicates how many sets of inputs are there. Each of the next <b
style='mso-bidi-font-weight:normal'>S</b> lines contains 1 set of input. Each
set contains three integer numbers <b>a</b><b style='mso-bidi-font-weight:normal'>,
b, c </b><span style='mso-bidi-font-weight:bold'>where </span><b
style='mso-bidi-font-weight:normal'>a</b><span style='mso-bidi-font-weight:
bold'> is the distance between </span><b style='mso-bidi-font-weight:normal'>B</b><span
style='mso-bidi-font-weight:bold'> &amp; </span><b style='mso-bidi-font-weight:
normal'>C</b><span style='mso-bidi-font-weight:bold'>, </span><b
style='mso-bidi-font-weight:normal'>b</b><span style='mso-bidi-font-weight:
bold'> is the distance between </span><b style='mso-bidi-font-weight:normal'>C</b><span
style='mso-bidi-font-weight:bold'> &amp; </span><b style='mso-bidi-font-weight:
normal'>A</b><span style='mso-bidi-font-weight:bold'> and </span><b
style='mso-bidi-font-weight:normal'>c</b><span style='mso-bidi-font-weight:
bold'> is the distance between </span><b style='mso-bidi-font-weight:normal'>A</b><span
style='mso-bidi-font-weight:bold'> &amp; </span><b style='mso-bidi-font-weight:
normal'>B</b><span style='mso-bidi-font-weight:bold'>.</span><span
style="mso-spacerun: yes">Â  </span>The important condition is <b>(0&lt;a,b,c&lt;=10000)</b>.
As you already know <b>A, B, C </b>are the locations of the three campuses.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Output</font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>For each set of input you should output four floating-point numbers <b>DM,
DI, DG, DO,</b> all of which have three digits after the decimal point. Here <b>DM =
AP + BP + CP</b>, <b>DI = AI + BI + CI</b>, <b>DG = AG + BG + CG, DO = AO + BO
+ CO.</b><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>&nbsp;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Sample Input:</font><o:p></o:p></b></p>
<font face="Courier" size=3>
2<br>
3 3 3<br>
4 4 4<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><font face="Times New Roman" size=5>Sample
Output:</font><o:p></o:p></b></p>
<font face="Courier" size=3>
5.196 5.196 5.196 5.196<br>
6.928 6.928 6.928 6.928<br>
</font>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor<o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10217||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p10_files/filelist.xml">
<link rel=Edit-Time-Data href="./p10_files/editdata.mso">
<link rel=OLE-Object-Data href="./p10_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem K - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>87</o:Revision>
  <o:TotalTime>233</o:TotalTime>
  <o:LastPrinted>2001-08-26T06:56:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T00:51:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>230</o:Words>
  <o:Characters>1316</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1616</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:11.0pt;
	mso-bidi-font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
a:link, span.MsoHyperlink
	{color:#111177;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1029"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link="#111177" vlink=purple style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem K</b></font><br>
<font face="Times New Roman" size=6><b>A Dinner with Schwarzenegger !!!</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>2 seconds</font><br>
</center>

<div class=Section1>


<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoBodyText2>One of your friends informed you that a nearby theater in
your city has given a new offer. It will show the super hit Schwarzenegger movie
Â“Terminator 2Â”. While selling ticket they will keep record of the buyers'
birthdays. If someoneÂ’s birthday matches the birthday of a person who has bought
ticket before him, he (the one who bought ticket later) will be given the honor
to have dinner with Schwarzenegger. To give the guy at the front of the queue
some chance, his birthday will be compared with the ticket sellerÂ’s birthday.
If you were given the chance, which position of the queue would you have
wanted?<span style="mso-spacerun: yes">Â  </span>(I know that many of you would
have liked other names as a dinner partner. DonÂ’t hesitate to replace
Schwarzenegger with that name, as you may need all those inspirations to solve
this problem.)</p>
<br>
<center>
<img width=333 height=417
src="http://uva.onlinejudge.org/external/102/p10217.jpg" ><br><b>
Fig: Arnold Schwarzenegger as Terminator</b>
</center>
<br>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Input</font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains an integer <b>N (30&lt;=N&lt;100001)</b>,
which indicates how many days make a year. Input is terminated by end of file.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Output</font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>For each line of input, output
one floating-point number and one integer in a single line, separated by a
single space. The floating-point number is the best floating point position for
you (with two digits after the decimal point) and the integer is the best
integer position (in reality position must be an integer) for you in the queue.
</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Sample Input</font><o:p></o:p></b></p>
<font face="Courier" size=3>
365<br>
200<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify;tab-stops:210.75pt'><b>
<font face="Times New Roman" size=5>Sample Output</font><span style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><o:p></o:p></span></b></p>
<font face="Courier" size=3>
18.61 19<br>
13.65 14<br>
</font>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:12.0pt;color:windowtext'>Shahriar
Manzoor</span></b><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10218||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./p11_files/filelist.xml">
<link rel=Edit-Time-Data href="./p11_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem I - Math & Number Theory Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>SHAHRIAR MANZOOR</o:LastAuthor>
  <o:Revision>91</o:Revision>
  <o:TotalTime>481</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2001-11-29T02:19:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>236</o:Words>
  <o:Characters>1348</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>11</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1655</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Americana BT";
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:135 0 0 0 27 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;}
h4
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:8.5pt;
	font-family:"Americana BT";
	color:black;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>
<center>
<font face="Times New Roman" size=5><b>Problem L</b></font><br>
<font face="Times New Roman" size=6><b>Let's Dance!!</b></font><br>
<font face="Times New Roman" size=3><b>Input: </b>Standard Input</font><br>
<font face="Times New Roman" size=3><b>Output: </b>Standard Output</font><br>
<font face="Times New Roman" size=3><b>Time Limit: </b>2 seconds</font><br>
</center>

<div class=Section1>


<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Consider the following scenario:</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>You are a University Student; all
of your friends consider you courageous, most of the girls find you handsome, you
are quite a good student, recently your team has won a regional contest of ACM
ICPC and so your confidence is very high. In a party you find someone nice and
ask her to dance but she seems smarter than (as always is the case) you. She
tells you, <i>Â“There are <b>M</b> gentle men and <b>W</b> ladies in this party
except us. You have <b>C</b> candies in your hand and you distribute them
randomly among all these guests (<b>M</b> men and <b>W</b> ladies), of course
if possible. Now you collect all the candies from all the gentlemen and this
number of candies is <b>CC</b>. If you can evenly distribute these (<b>CC</b>)
candies equally between two groups (These two groups are two arbitrary groups)
I will dance with you.Â” </i><span style="mso-spacerun: yes">Â </span></p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'>Now tell me what is the
probability of her dancing with you?</p>

<p class=MsoNormal style='text-align:justify'><i><span style="mso-spacerun:
yes">Â Â  </span><o:p></o:p></i></p>

<h2><font face="Times New Roman" size=5>Input</font><span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains three non-negative integers <b>M
(M&lt;=1000)</b>, <b>W (W&lt;=1000)</b> and <b>C (C&lt;=100)</b>. The meanings
of the symbols are explained before. The input is terminated by a line where <b>M=0</b>
and <b>W=0</b>. You need not process this input.</p>

<p class=MsoNormal style='text-align:justify'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Output</font><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each line of input, you should produce one line of output, which is a
floating-point number. This output is the probability of her dancing with you.
The number contains seven digits after the decimal point. An error less than </span><b
style='mso-bidi-font-weight:normal'>2E-7</b><span style='mso-bidi-font-weight:
bold'> or </span><b style='mso-bidi-font-weight:normal'>2* 10^(-7)</b><span
style='mso-bidi-font-weight:bold'> will be overlooked.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><font face="Times New Roman" size=5>Sample Input:</font><o:p></o:p></b></p>
<font face="Courier" size=3>
10 20 20<br>
10 20 7<br>
0 0 29<br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><font face="Times New Roman" size=5>
Sample Output:</font></span></b></p>
<font face="Courier" size=3>
0.5000000<br>
0.5002286
</font>


<hr size=2 width="100%" align=center>

</span></div>


<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'>Shahriar
Manzoor</span></b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10219||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"><!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds --></P>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 WIDTH=278>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#0000ff">
<P ALIGN="CENTER"><B><FONT SIZE=5 COLOR="#00ffff">&nbsp;Find the ways !</B></FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT COLOR="#0000ff"><H2 ALIGN="CENTER"><A NAME="SECTION0001002000000000000000"></H2>
<H2>The Problem</A></H2>
</FONT><P ALIGN="JUSTIFY">An American, a Frenchman and an Englishwoman had been to Dhaka, the capital of Bangladesh. They went sight-seeing in a taxi. The three tourists were talking about the sites in the city. The American was very proud of tall buildings in New York. He boasted to his friends, "Do you know that the Empire State Building was built in three months?"</P>
<P ALIGN="JUSTIFY">"Really?" replied the Frenchman. "The Eiffel Tower in Paris was built in only one month! (However, The truth is, the construction of the Tower began in January 1887. Forty Engineers and designers under Eiffel's direction worked for two years. The tower was completed in March 1889.)</P>
<P ALIGN="JUSTIFY">"How interesting!" said the Englishwoman. "Buckingham Palace in London was built in only two weeks!!"</P>
<P ALIGN="JUSTIFY">At that moment the taxi passed a big slum ( However, in Bangladesh we call it "Bostii"). "What was that? When it was built ?" The Englishwomen asked the driver who was a Bangladeshi.</P>
<P ALIGN="JUSTIFY">"I don't know!" , answered the driver. "It wasn't there yesterday!"</P>
<P ALIGN="JUSTIFY">However in Bangladesh, illegal establishment of slums is a big time problem. Government is trying to destroy these slums and remove the peoples living there to a far place, formally in a planned village outside the city. But they can't find any ways, how to destroy all these slums!</P>
<P ALIGN="JUSTIFY">Now, can you imagine yourself as a slum destroyer? In how many ways you can destroy<B> <I>k</B></I> slums out of <B><I>n</B></I> slums ! Suppose there are 10 slums and you are given the permission of destroying 5 slums, surly you can do it in 252 ways, which is only a 3 digit number, Your task is to find out the digits in ways you can destroy the slums !</P>
<P ALIGN="JUSTIFY">&nbsp;</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001003000000000000000">The Input</A></H2>
</FONT><P>The input file will contain one or more test cases. </P>
<P>Each test case consists of one line containing two integers n (n&gt;=1) and k (1&lt;=&lt;k=&lt;n).</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001004000000000000000">The Output</A></H2>
</FONT><P>For each test case, print one line containing the required number. This number will always fit into an integer, i.e. it will be less than 2^31-1.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001005000000000000000">Sample Input</A></H2>
</FONT><PRE>
20 5
100 10
200 15</PRE>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001006000000000000000">Sample Output</A></H2>
</FONT><PRE>
5
14
23</PRE>
<P>--------------------------------------------------------------------------------------------------------------------</P>
<B><P>Ahmed Shamsul Arefin </P>
</B><P>&nbsp;</P></BODY>
</HTML>

______________________________________________________
10220||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"><!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds --></P>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 WIDTH=290>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#0000ff">
<P ALIGN="CENTER"><B><FONT SIZE=5 COLOR="#00ffff">&nbsp;I Love Big Numbers !</B></FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT COLOR="#0000ff"><H2 ALIGN="CENTER"><A NAME="SECTION0001002000000000000000"></H2>
<H2>The Problem</A></H2>
</FONT><P ALIGN="JUSTIFY">A Japanese young girl went to a Science Fair at Tokyo. There she met with a Robot named Mico-12, which had AI (You must know about AI-Artificial Intelligence). The Japanese girl thought, she can do some fun with that Robot. She asked her, "Do you have any idea about maths ?"."Yes! I love mathematics", The Robot replied.</P>
<P ALIGN="JUSTIFY">"Okey ! Then I am giving you a number, you have to find out the Factorial of that number. Then find the sum of the digits of your result!. Suppose the number is 5.You first calculate 5!=120, then find sum of the digits 1+2+0=3.Can you do it?"</P>
<P ALIGN="JUSTIFY">"Yes. I can do!"Robot replied.</P>
<P ALIGN="JUSTIFY">"Suppose the number is 100, what will be the result ?".At this point the Robot started thinking and calculating. After a few minutes the Robot head burned out and it cried out loudly "Time Limit Exceeds".</P>
<P ALIGN="JUSTIFY">The girl laughed at the Robot and said "The sum is definitely 648". </P>
<P ALIGN="JUSTIFY">"How can you tell that ?" Robot asked the girl. "Because I am an ACM World Finalist and I can solve the Big Number problems easily." Saying this, the girl closed her laptop computer and went away. </P>
<P ALIGN="JUSTIFY">Now, your task is to help the Robot with the similar problem. </P>
<P ALIGN="JUSTIFY">&nbsp;</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001003000000000000000">The Input</A></H2>
</FONT><P>The input file will contain one or more test cases. </P>
<P>Each test case consists of one line containing an integers n (n&lt;=1000).</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001004000000000000000">The Output</A></H2>
</FONT><P>For each test case, print one line containing the required number. This number will always fit into an integer, i.e. it will be less than 2^31-1.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001005000000000000000">Sample Input</A></H2>
</FONT><PRE>
5
60
100 </PRE>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001006000000000000000">Sample Output</A></H2>
</FONT><PRE>
3
288
648
</PRE>
<P>--------------------------------------------------------------------------------------------------------------------</P>
<B><P>Ahmed Shamsul Arefin </P>
</B><P>&nbsp;</P>
<P>&nbsp;</P></BODY>
</HTML>

______________________________________________________
10221||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"><!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds --></P>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 WIDTH=227>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#0000ff">
<P ALIGN="CENTER"><B><FONT SIZE=5 COLOR="#00ffff">&nbsp;Satellites</B></FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT COLOR="#0000ff"><H2 ALIGN="CENTER"><A NAME="SECTION0001002000000000000000"></H2>
<H2>The Problem</A></H2>
</FONT><P ALIGN="JUSTIFY">The radius of earth is 6440 Kilometer. There are many Satellites and Asteroids moving around the earth. If two Satellites create an angle with the center of earth, can you find out the <B><I>distance</B></I> between them? By <B><I>distance </B></I>we mean both the <B>arc</B> and <B>chord </B>distances. Both satellites are on the same orbit. (However, please consider that they are revolving on a circular path rather than an elliptical path.)</P>
<P ALIGN="JUSTIFY">&nbsp;</P><DIR>
<DIR>
<DIR>
<DIR>
<DIR>
<DIR>

<P ALIGN="JUSTIFY"><IMG SRC="http://uva.onlinejudge.org/external/102/p10221.gif"  WIDTH=300 HEIGHT=300></P><DIR>
<DIR>
<DIR>
<DIR>

<P ALIGN="CENTER">&nbsp;</P></DIR>
</DIR>
</DIR>
</DIR>
</DIR>
</DIR>
</DIR>
</DIR>
</DIR>
</DIR>

<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001003000000000000000">The Input</A></H2>
</FONT><P>The input file will contain one or more test cases. </P>
<P>Each test case consists of one line containing two-integer <B><I>s</B></I> and <B><I>a</B></I> and a string "<B>min</B>" or "<B>deg</B>". Here <B><I>s</B></I> is the distance of the satellite from the surface of the earth and <B><I>a</B></I> is the angle that the satellites make with the center of earth. It may be in minutes ( <FONT FACE="Courier">Â‘</FONT> ) or in degrees ( <SUP>0 </SUP>). Remember that the same line will never contain minute and degree at a time.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001004000000000000000">The Output</A></H2>
</FONT><P ALIGN="JUSTIFY">For each test case, print one line containing the required distances i.e. both <B><I>arc distance</B></I> and <B><I>chord distance</B></I> respectively between two satellites in Kilometer. The distance will be a floating-point value with six digits after decimal point.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001005000000000000000">Sample Input</A></H2>
</FONT><PRE>
500 30 deg
700 60 min
200 45 deg</PRE>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001006000000000000000">Sample Output</A></H2>
</FONT><PRE>
3633.775503 3592.408346
124.616509 124.614927
5215.043805 5082.035982</PRE>
<P>--------------------------------------------------------------------------------------------------------------------</P>
<B><P>Ahmed Shamsul Arefin </P>
</B><P>&nbsp;</P></BODY>
</HTML>

______________________________________________________
10222||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"><!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds --></P>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 WIDTH=246>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#0000ff" HEIGHT=29>
<P ALIGN="CENTER"><B><FONT SIZE=6 COLOR="#00ffff">&nbsp;</FONT><FONT SIZE=5 COLOR="#00ffff">Decode the Mad man </B></FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT COLOR="#0000ff"><H2 ALIGN="CENTER"><A NAME="SECTION0001002000000000000000"></H2>
<H2>The Problem</A></H2>
</FONT><P ALIGN="JUSTIFY">Once in BUET, an old professor had gone completely mad. He started talking with some peculiar words. Nobody could realize his speech and lectures. Finally the BUET authority fall in great trouble. There was no way left to keep that man working in university. Suddenly a student (definitely he was a registered author at UVA ACM Chapter and hold a good rank on 24 hour-Online Judge) created a program that was able to decode that professorÂ’s speech.&nbsp;After his invention, everyone got comfort again and that old teacher started his everyday works as before. </P>
<P ALIGN="JUSTIFY">So, if you ever visit BUET and see a teacher talking with a microphone, which is connected to a IBM computer equipped with a voice recognition software and students are taking their lecture from the computer screen, donÂ’t get thundered! Because now your job is to write the same program which can decode that mad teacher's speech!</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001003000000000000000">The Input</A></H2>
</FONT><P>The input file will contain only one test case i.e. the encoded message. </P>
<P>The test case consists of one or more words.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001004000000000000000">The Output</A></H2>
</FONT><P ALIGN="JUSTIFY">For the given test case, print a line containing the decoded words. However, it is not so hard task to<FONT SIZE=2> </FONT>replace each letter or punctuation symbol by the two immediately to its left alphabet on your standard keyboard.</P>
<P ALIGN="JUSTIFY">&nbsp;</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001005000000000000000">Sample Input</A></H2>
</FONT><PRE>
k[r dyt I[o</PRE>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001006000000000000000"></H2>
<H2>Sample Output</A></H2>
</FONT><PRE>
how are you</PRE>
<P>--------------------------------------------------------------------------------------------------------------------</P>
<B><P>Ahmed Shamsul Arefin </P>
</B><P>&nbsp;</P></BODY>
</HTML>

______________________________________________________
10223||||||false||||||
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN"><!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds --></P>
<P ALIGN="CENTER"><CENTER><TABLE CELLSPACING=0 BORDER=0 WIDTH=320>
<TR><TD VALIGN="MIDDLE" BGCOLOR="#0000ff">
<P ALIGN="CENTER"><B><FONT SIZE=6 COLOR="#00ffff">&nbsp;</FONT><FONT SIZE=5 COLOR="#00ffff">How many nodes ? </B></FONT></TD>
</TR>
</TABLE>
</CENTER></P>

<FONT COLOR="#0000ff"><H2 ALIGN="CENTER"><A NAME="SECTION0001002000000000000000"></H2>
<H2>The Problem</A></H2>
</FONT><P ALIGN="JUSTIFY">One of the most popular topic of Data Structures is Rooted Binary Tree. If you are given some nodes you can definitely able to make the maximum number of trees with them. But if you are given the maximum number of trees built upon a few nodes, Can you find out how many nodes built those trees?</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001003000000000000000">The Input</A></H2>
</FONT><P>The input file will contain one or more test cases. </P>
<P>Each test case consists of an integer n (n&lt;=4,294,967,295). Here n is the maximum number of trees.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001004000000000000000">The Output</A></H2>
</FONT><P ALIGN="JUSTIFY">For each test case, print one line containing the actual number of nodes.</P>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001005000000000000000">Sample Input</A></H2>
</FONT><PRE>
5
14
42</PRE>
<FONT COLOR="#0000ff"><H2><A NAME="SECTION0001006000000000000000"></H2>
<H2>Sample Output</A></H2>
</FONT><PRE>
3
4
5</PRE>
<P>--------------------------------------------------------------------------------------------------------------------------</P>
<I><P>"When I came to you, you pushed me away! Because that was your time. Now, you are calling me back, (However, now it is my time!) should I look behind?<FONT SIZE=4>"</P>
</I></FONT><B><P>Ahmed Shamsul Arefin </P>
</B><P>&nbsp;</P>
<FONT SIZE=2><P>&nbsp;</P></FONT></BODY>
</HTML>

______________________________________________________
10224||||||false||||||
<body TEXT="#000000" BGCOLOR="#FFFFFF" >
<img src=p10224.jpg align=right>
<h2>Problem A:  Return of the Jedi</h2> 

Luke Skywalker races through the forest on a speeder bike, trying to
outrun a patrol of Imperial scouts on Endor. A small moon near a new
Death Star, Endor is covered by dense foliage and a thick forest of
ancient towering trees. The speeder bike , which Luke stole from an
Imperial scout, is an antigravity vehicle capable of speeds of 200
miles an hour.  How quickly can Luke reach Princess Leia in the Ewok
village?
<p>
The forest is a plane with T trees.  Luke's position
is specified by a pair of coordinates ( x<sub>luke</sub> , y<sub>luke</sub> ) within the plane.  The
Ewok village has coordinates ( x<sub>ewok</sub> , y<sub>ewok</sub> ).
You are to find the shortest travel time from Luke's position to
the Ewok village.
<p>
The first line of input contains the number of test cases followed by a blank
line. The first line of each
test case&nbsp; contain T,  x<sub>luke</sub> ,
y<sub>luke</sub>  x<sub>ewok</sub> , y<sub>ewok</sub> .
T lines follow; each gives the coordinates and diameter of a tree:
x<sub>tree<sub>i</sub></sub> , y<sub>tree<sub>i</sub></sub> , d<sub>tree<sub>i</sub></sub> .  T is an integer not exceeding 10; coordinates and diameters
are real numbers in miles.  Trees do not intersect or touch one another. There
is a blank line between each consecutive test case.
<p>
For each test case output is a single real number, to two decimal places, giving the minimum
travel time in seconds. Print a blank line<br>
between 2 consecutive data sets.
<h3>
Sample Input
</h3>
<pre>1

2 0.0 0.0 10.0 0.0
4.0 0.0 1.0
6.0 0.0 1.0
</pre>
<h3>
Output for Sample Input
</h3>
<pre>
181.13
</pre>

______________________________________________________
10225||||||false||||||
<body TEXT="#000000" BGCOLOR="#FFFFFF" >
<img src=p10225.jpg align=right><h2>Problem B:  Discrete Logging</h2>

Given a prime P, 2 &lt;= P < 2<sup>31</sup>, an integer B, 2 &lt;= B < P, and an integer N,
2 &lt;= N < P, compute the discrete logarithm of N, base B, modulo P.
That is, find an integer L such that
<pre>
    B<sup>L</sup> == N (mod P)
</pre>
Read several lines of input, each containing P,B,N separated by a space,
and for each line print the logarithm on a separate line.  If there are
several, print the smallest; if there is none, print "no solution".
<p>
The solution to this problem requires a well known result in number theory 
that is probably
expected of you for Putnam but not ACM competitions.  It is Fermat's theorem 
that states
<pre>
   B<sup>(P-1)</sup> == 1 (mod P)
</pre>
for any prime P and some other (fairly rare) numbers known as base-B
pseudoprimes.  A rarer subset of the base-B pseudoprimes, known as
Carmichael numbers, are pseudoprimes for every base between 2 and P-1.
A corollary to Fermat's theorem is that for any m
<pre>
   B<sup>(-m)</sup> == B<sup>(P-1-m)</sup> (mod P) .
</pre>

<h3>Sample Input</h3>
<pre>
5 2 1
5 2 2
5 2 3
5 2 4
5 3 1
5 3 2
5 3 3
5 3 4
5 4 1
5 4 2
5 4 3
5 4 4
12345701 2 1111111
1111111121 65537 1111111111
</pre><h3>
Sample Output
</h3><pre>
0
1
3
2
0
3
1
2
0
no solution
no solution
1
9584351
462803587
</pre>

______________________________________________________
10226||||||false||||||
<body TEXT="#000000" BGCOLOR="#FFFFFF" >
<img src=p10226.gif align=right><h2>Problem C:  Hardwood Species</h2>

Hardwoods are the botanical group of trees that have broad leaves, produce a fruit or nut,
and generally go dormant in the winter.
<p>
America's temperate climates produce forests with hundreds of hardwood species -- trees
that share certain biological characteristics. Although oak, maple and cherry all are types
of hardwood trees, for example, they are different species. Together, all the hardwood
species represent 40 percent of the trees in the United States.
<p>
On the other hand, softwoods, or conifers, from the Latin word meaning "cone-bearing,"
have needles. Widely available US softwoods include cedar, fir, hemlock, pine, redwood,
spruce and cypress. In a home, the softwoods are used primarily as structural lumber such
as 2x4s and 2x6s, with some limited decorative applications.
<p>
Using satellite imaging technology, the Department of Natural Resources
has compiled an inventory of every tree standing on a particular day.
You are to compute the total fraction of the tree population represented
by each species.
<p>The first line is the number of test cases, followed by a blank line. Each
test case of your program consists of a list of the species of every tree
observed by the satellite; one tree per line.  No species name exceeds
30 characters.  There are no more than 10,000 species and no more than
1,000,000 trees. There is a blank line between each consecutive test case.
<p>
For each test case print the name of each species represented in the population, in
alphabetical order, followed by the percentage of the population it represents, to 4 decimal places.
Print a blank line between 2 consecutive data sets.
<h3>Sample Input</h3>
<pre>1

Red Alder
Ash
Aspen
Basswood
Ash
Beech
Yellow Birch
Ash
Cherry
Cottonwood
Ash
Cypress
Red Elm
Gum
Hackberry
White Oak
Hickory
Pecan
Hard Maple
White Oak
Soft Maple
Red Oak
Red Oak
White Oak
Poplan
Sassafras
Sycamore
Black Walnut
Willow
</pre>
<h3>
Output for Sample Input</h3>
<pre>
Ash 13.7931
Aspen 3.4483
Basswood 3.4483
Beech 3.4483
Black Walnut 3.4483
Cherry 3.4483
Cottonwood 3.4483
Cypress 3.4483
Gum 3.4483
Hackberry 3.4483
Hard Maple 3.4483
Hickory 3.4483
Pecan 3.4483
Poplan 3.4483
Red Alder 3.4483
Red Elm 3.4483
Red Oak 6.8966
Sassafras 3.4483
Soft Maple 3.4483
Sycamore 3.4483
White Oak 10.3448
Willow 3.4483
Yellow Birch 3.4483
</pre>

______________________________________________________
10227||||||false||||||
<body TEXT="#000000" BGCOLOR="#FFFFFF" >
<img src=p10227.jpg align=right><h2>Problem D:  Forests</h2>
If a tree falls in the forest, and there's nobody there to hear,
does it make a sound?  This classic conundrum was coined by
George Berkeley (1685-1753), the Bishop and influential Irish philosopher whose primary philosophical
achievement is the advancement of what has come to be called <i>subjective idealism</i>.  He wrote a number of works, of which the most widely-read are
<i>Treatise Concerning the Principles of Human Knowledge</i> (1710) and <i>Three Dialogues between Hylas and Philonous</i> (1713)
(Philonous, the "lover of the mind," representing Berkeley himself). 
<p>
A forest contains <i>T</i> trees numbered from 1 to <i>T</i> and <i>P</i> 
people numbered from 1 to <i>P</i>.  
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


Standard input consists of a line
containing <i>P</i> and <i>T</i> followed by several
lines,  containing a pair of integers <i>i</i> and <i>j</i>, 
indicating that person <i>i</i> has heard tree <i>j</i> fall.  
People may have different opinions as to which trees,
according to Berkeley, have made a sound.  
<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
How many different opinions are 
represented in the input?  Two people hold the same opinion only if they
hear exactly the same set of trees.
You may assume that
<i>P &lt; 100</i> and <i>T &lt; 100</i>.
<h3>Sample Input</h3>
<pre>
1

3 4
1 2
3 3
1 3
2 2
3 2
2 4
</pre>
<h3>Output for Sample Input</h3>
<pre>
2
</pre>

______________________________________________________
10228||||||false||||||
<body TEXT="#000000" BGCOLOR="#FFFFFF" >
<img src=p10228.jpg align=right><h2>Problem E:  A Star not a Tree?</h2>
Luke wants to upgrade his home computer network from 10mbs to 100mbs.
His existing network uses 10base2 (coaxial) cables that allow you
to connect any number of computers together in a linear arrangement.
Luke is particulary proud that he solved a nasty NP-complete problem
in order to minimize the total cable length.
<p>
Unfortunately, Luke cannot use his existing cabling.
The 100mbs system uses 100baseT (twisted pair) cables. 
Each 100baseT cable connects only two devices:  either two network cards
or a network card and a hub.  (A hub is an electronic device that 
interconnects several cables.)  Luke has a choice:  He can buy
2N-2 network cards and connect his N computers together by inserting
one or more cards into each computer and connecting them all together.
Or he can buy N network cards and a hub and connect each of his N computers
to the hub.  The first approach would require that Luke configure his operating
system to forward network traffic.  However, with the installation of
Winux 2007.2, Luke discovered that network forwarding no longer worked.
He couldn't figure out how to re-enable forwarding, and he had never
heard of Prim or Kruskal, so he settled on the second approach:  
N network cards and a hub.
<p>
Luke lives in a loft and so is prepared to run the cables and place the 
hub anywhere.  But he won't move his computers.  He wants to minimize
the total length of cable he must buy.
<p>
The first line of input contains the number of case that you need to test
followed by a blank line. Each
test case start with a positive integer N &lt;= 100, the number 
of computers.  N lines follow; each gives the (x,y) coordinates (in mm.)
of a computer within the room.  All coordinates are integers between 
0 and 10,000.There is a blank line between each consecutive test case.
<p>
Output consists of one number, the total length
of the cable segments, rounded to the nearest mm. Print a blank line between 2 consecutive
test case.
<h3>Sample Input</h3>
<pre>1

4
0 0
0 10000
10000 10000
10000 0
</pre>
<h3>Output for Sample Input</h3>
<pre>
28284
</pr>
______________________________________________________
10229||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Modular Fibonacci</TITLE>
<META NAME="description" CONTENT="Fibonacci">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
 <H1><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><BR CLEAR=ALL><CENTER><!--mstheme--></font></h1>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><B><FONT SIZE=5 COLOR=#C0FFFF>
Problem A: Modular Fibonacci</FONT></B><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER>
<P>
The Fibonacci numbers (0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...) are defined by the recurrence:
<P ALIGN="left" style="margin-left: 159"> <b><i>F<sub>0</sub> = 0<br>
F<sub>1</sub> = 1<br>
F<sub>i</sub> = F<sub>i-1</sub> + F<sub>i-2</sub> </i>for<i> i&gt;1</i></b>
<P>
Write a program which calculates <b><i>M<sub>n</sub> = F<sub>n</sub> </i>mod<i>
2<sup>m</sup></i></b> for given pair of <i><b> n</b></i> and <b><i>m</i></b>. <b><i><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">0</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
n</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
2147483647 </span></i></b>and <b><i><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">0</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
m</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">&lt;
</span><span style="font-size: 12pt; font-family: Times New Roman; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">20</span></i></b>.
Note that <b><i>a mod b</i></b> gives the remainder when <b><i>a</i></b> is
divided by <b><i>b</i></b>.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input and Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
<P>
Input consists of several lines specifying a pair of <b><i> n</i></b> and <b><i>m</i></b>. Output should be corresponding
<b><i>M<sub>n</sub></i></b>, one per line.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>11 7
11 6</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>89
25</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/images/blesepa.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>
______________________________________________________
10230||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Savage Garden</TITLE>
<META NAME="description" CONTENT="Fibonacci">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <CENTER>
 <p>&nbsp;</p>
 <!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><b><font size="5" color="#C0FFFF">Problem
      B: Savage Garden</font></b><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER>
 <P align=justify>Mr. Savage has a huge square-shaped garden named Savage
 Garden. The Savage Garden is very famous for its rare plants and amazing
 beauty. Currently, he is thinking of improving the garden by changing the
 orientation of plants into a special way. He wishes to divide the garden into
 smaller square regions such that the length of the complete square region is a
 power of two. Then, he wants to group the regions into <b><i>L-shaped regions</i></b> formed
 by three smaller squares. Each <b><i>L-shaped region</i></b> will have a different plant from
 the adjacent <b><i>L-shaped regions</i></b>. He feels that the <b><i>L</i></b> will represent Love and
 his loved ones from all over the world and in the heavens can enjoy its beauty
 forever.<P align=justify>You have been hired by Mr. Savage to generate a plan
 for Savage Garden.&nbsp;<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P align=justify>
Input consists of several test cases. Each test case specifies three integers, <b><i>N</i></b>,
 <b><i>X</i></b> and <b><i>Y</i></b>. <b><i>N</i></b>, <b><i>1<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>N<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>10</i></b> represents that Savage Garden is of size <i><b>2<sup>N</sup>
 X 2<sup>N</sup></b></i>, after division. <b><i>X</i></b> and <b><i>Y</i></b>
 indicate the region where his house is located. For example, topmost-leftmost
 region is indicated by <b><i>X=1</i></b> and <b><i>Y=1</i></b>. Of course, he
 doesn't want his house to be planted with saplings. So, make sure you leave his
 house intact while deriving the plan. You can assume that the co-ordinates
 given are always within the square region.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><font color="#0070E8">Output</font><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P align=justify>For each test case, output a square matrix showing the Savage Garden. Indicate his house by the character '*'. All other regions should be
 indicated by alphabets 'a'-'z'. Character used to represent one <b><i>L-shaped region</i></b>
 should be different from the ones used to represent its neighboring <b><i> L-shaped
 regions</i></b>. Assume that each small square region has 8 neighbors. If there are many solutions,
 you may output any of them. You may assume that there is at least one solution
 for the given test cases. Output a blank line after each test case.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
2 3 4
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
aadd
abbd
cbee
cc*e
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/images/blesepa.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>
______________________________________________________
10231||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML>
<HEAD>
<TITLE>Matrix World</TITLE>
<META NAME="description" CONTENT="Triangle">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <CENTER>
 <p>&nbsp;</p>
 <!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><b><font size="5" color="#C0FFFF">Problem
      C: Matrix World</font></b><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER><P align="justify">Yes, The Matrix exists! Actually, it existed much before, but people started
 thinking about it only after the mega movie The Matrix. Nowadays, lot of people go
 out of the Matrix into the real world, mainly to collect diamond treasures.
 After spending lot of time in front of the computer, you decide to take a break
 and go into the real world. The real world has lot of radar stations to locate
 the objects and you plan to attack one of those radar stations to get a nice
 idea of the region. The radar stations show a map of the nearby area which
 follows the legend given below.
 <blockquote>
  <blockquote>
    <blockquote>
      <blockquote>
        <blockquote>
          <blockquote>
            <blockquote>
              <blockquote>
                <P align="justify"><i><b>'*' -&nbsp; Diamond Treasure<br>
                '.' -&nbsp; Empty Cell<br>
                '#' -&nbsp; Forbidden Rock Cell<br>
                'X' -&nbsp; Guard Machines<br>
                'O' -&nbsp; Your Current Position.</b></i>
              </blockquote>
            </blockquote>
          </blockquote>
        </blockquote>
      </blockquote>
    </blockquote>
  </blockquote>
 </blockquote>
 <P align="justify">Of course the Guard Machines will sense your arrival and
 start moving. You estimate that you will take exactly one second to move from
 one cell to another. Collecting one diamond treasure will also take exactly one
 second. The Guard Machines also move at one cell per second. Of course, you
 wish to collect the maximum number of diamond treasures (don't you ?). If there
 are several ways to collect the maximum number of treasures, you want to do it
 in the fastest time possible. The region shown on the radar is fenced and
 protected from outside. So, you cannot go out of the region and no Guard
 Machine can come into it.<P align="justify">Write a program which computes
 the minimum time to collect the maximum number of treasures from the real world
 given the map of the region.<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P align="justify">Input consists of several test cases. Each test case begins
 with a line containing two integers <i><b>M</b></i> and <b><i>N</i></b> which
 specify the size of the map, <b><i>2<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>N, M<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>30</i></b>. Next <b><i>M</i></b> lines give <b><i>N</i></b> characters
 that describe the map itself. Each of the maps in the input follow the legend
 given above. The number of diamond treasures in a map is limited to 10.&nbsp;<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><font color="#0070E8">Output</font><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <p align="justify">For each test case in input, first print the line &quot;<b><i>Case
 t:</i></b>&quot; where <b><i>t</i></b> is the case number starting from 1. If
 it is not possible to collect any treasures from the real world, print the line
 &quot;<b><i>No treasures can be collected.</i></b>&quot;. Otherwise, print the
 line &quot;<b><i>Maximum number of collectible treasures: max.</i></b>&quot; where <b><i>max</i></b>
 is the maximum number of treasures that can be collected from the region
 without being terminated by the Guard Machines. If a Guard Machine can reach a
 cell at the same time you finish collecting a treasure, that treasure should
 not be counted as collected because you need some time to escape from the real
 world. In the next line, print the line &quot;<b><i>Minimum Time: min sec.</i></b>&quot;
 where <b><i>min</i></b> is the minimum time required to collect <b><i>max</i></b>
 treasures. Print a blank line after every test case.&nbsp;</p>
 <!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
5 5
....X
.####
...*#
#*..#
#..O#
4 3
O**
*..
##.
X..
4 3
.O.
*..
##X
X..
3 3
##*
.O.
*#*
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
Case 1:
Maximum number of collectible treasures: 2.
Minimum Time: 7 sec.

Case 2:
Maximum number of collectible treasures: 2.
Minimum Time: 4 sec.

Case 3:
No treasures can be collected.

Case 4:
Maximum number of collectible treasures: 3.
Minimum Time: 11 sec.

</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/images/blesepa.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>
______________________________________________________
10232||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML>
<HEAD>
<TITLE>Bit-wise Sequence</TITLE>
<META NAME="description" CONTENT="Triangle">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <CENTER>
 <p>&nbsp;</p>
 <!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><b><font size="5" color="#C0FFFF">Problem
      D: Bit-wise Sequence</font></b><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER><P align="justify">Dr.
 DoLots is an expert in number theory and he is currently studying prime
 numbers. In fact, some people say that he has some formula which can generate
 the prime numbers in increasing order. But, his formula needs to order the
 non-negative integers according to the increasing number of ones in their
 binary representation. That is, all non-negative integers with <b> <i> m</i></b> ones in their
 binary representation should be ordered before all the non-negative integers with <b>
 <i>
 m+1</i></b> ones.<P align="justiy">More formally, lets define the non-negative integer sequence <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">B<sub>n</sub></span></i></b> such that for every
 non-negative integers <b> <i> m</i></b> and <b> <i> n</i></b> where <b> <i> n&lt;m</i></b>,&nbsp;<br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1. either <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">O(B<sub>n</sub>)</span><span style="mso-char-type: symbol; mso-symbol-font-family: Symbol; font-size: 12.0pt; font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-fareast-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">&lt;</span><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA"> O(B<sub>m</sub>)</span></i></b><br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2. or <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">O(B<sub>n</sub>) = O(B<sub>m</sub>)</span></i></b>
 and <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">B<sub>n</sub></span></i></b><b><i><span style="mso-char-type: symbol; mso-symbol-font-family: Symbol; font-size: 12.0pt; font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-fareast-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">&lt;</span></i></b>
 <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">B<sub>m</sub></span></i></b>.<br>
 where <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">O(n)</span></i></b> is the number of ones in the binary representation of <b><i>n</i></b>.<P align="justify">Dr.
 DoLots wants you to write a program which computes the value of <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">B<sub>n</sub></span></i></b> for
 arbitrary values of <b><i>n</i></b>, <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">0</span><span style="mso-char-type: symbol; mso-symbol-font-family: Symbol; font-size: 12.0pt; font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-fareast-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">Â£</span><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA"> n</span><span style="mso-char-type: symbol; mso-symbol-font-family: Symbol; font-size: 12.0pt; font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-fareast-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">Â£</span><span style="font-size:
12.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">
 2147483647</span></i></b>. For simplicity, we consider only non-negative integers less than 2147483648 to appear in
 the sequence. You might be wondering why the doctor cannot do it himself. He is
 very busy and he wants to spent his time on more important things (That is what
 he says, actually, he is a bit lazy, but you can help him, can't you ?).<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P>
Input consists of several lines specifying one non-negative integer value for <b><i>n</i></b>.<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><font color="#0070E8">Output</font><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <p>Output should follow the same format as the input except that <b><i>n</i></b> is replaced
 by <b><i><span style="font-size:12.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">B<sub>n</sub></span></i></b>.</p>
 <!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
0
1
2
31
32
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
0
1
2
1073741824
3
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/images/blesepa.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>
______________________________________________________
10233||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML>
<HEAD>
<TITLE>Dermuba Triangle</TITLE>
<META NAME="description" CONTENT="Triangle">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <CENTER>
 <p>&nbsp;</p>
 <!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><b><font size="5" color="#C0FFFF">Problem
      E: Dermuba Triangle</font></b><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER><P align="justify">Dermuba
 Triangle is the universe-famous flat and triangular region in the
 L-PAX planet in the Geometria galaxy. Actually nobody knows whether the region
 is triangular or how it came into existence or how big it is. But the people of
 Dermuba firmly believe that the region extends to infinity. They
 live in equilateral triangular fields with sides exactly equal to 1km. Houses are always built at the circumcentres of the triangular fields. Their houses are numbered as shown in the
 figure below.<P align="center"><img border="0" src="http://uva.onlinejudge.org/external/102/p10233.gif"  width="248" height="214"><P align="justify">When
 Dermubian people wishes to visit each other, they follow the shortest path from
 their house to the destination house. This shortest path is obviously the
 straight line distance that connects these two houses. Moreover, they also
 visit all the houses that lie in the straight line they travel. Now, comes your task.
 You have to write a program which computes the length of the shortest path between two houses given their house numbers.<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P align="justify">Input consists of several lines with two non-negative
 integer values <i><b> n</b></i> and <b><i> m</i></b> which specify the start and destination house numbers.<i><b><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">0</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
 n, m</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£</span><span style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'Times New Roman'; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">
 2147483647</span></b></i>. Actually, there are houses beyond this region, but
 some seventh-sense people in Dermuba say that these houses are left for the
 dead people.<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><font color="#0070E8">Output</font><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <p align="justify">For each line in the input, print the shortest distance
 between the given houses in kilometers rounded off to three decimal places.</p>
 <!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
0 7
2 8
9 10
10 11
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
1.528
1.528
0.577
0.577
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/p10233.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>

______________________________________________________
10234||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Frequent Substrings</TITLE>
<META NAME="description" CONTENT="Fibonacci">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <CENTER>
 <p>&nbsp;</p>
 <!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><b><font size="5" color="#C0FFFF">Problem
      F: Frequent </font></b><b><font size="5" color="#C0FFFF">Substrings</font></b><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER>
 <P align=justify>You are working for the R&amp;D department of <b><i>International
 Embedded Equipments Enterprise</i></b> (<b><i>IEEE</i></b>). One day, your boss
 calls you up and tells this:&nbsp;<P align=justify><i>&quot;Yes, I think we
 should use the N-Gram Analysis for the project. What do you think ??&quot;<br>
 &quot;Ye...s, I also thought so...&quot;</i>, you replied.<P align=justify>After the conversation,
 having no clue about what he said, you start searching the internet and find the following sentences.<P align=justify><i><b>N-Grams</b> are
 substrings of length <b>N</b>. <b>N-Gram Analysis</b> is a method of matching text, based on the
 statistical similarity of occurrences of <b>N-Grams</b>. <b>N-Gram Analysis</b>
 is used in research areas such as speech recognition, database interfacing,
 network communication etc.</i>&nbsp;
 <P align=justify>After going through the topic a few times and reading several
 articles, you figure out the main parts of the project you have to accomplish.
 One of the parts required you to do this: Given a string <b><i>S</i></b>, you
 have to find the most frequently occurring <i><b>N-Gram</b></i> in <b><i>S</i></b>. Since you found this part interesting, you decide to
 complete it soon. Note that the occurrences can partially overlap. That is, the
 string <b><i>bcbcbc</i></b> has two occurrences of the substring <i><b>cbc</b></i>.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P align=justify>
Input consists of several test cases. Each test case begins with a line
 specifying the string <b><i>S</i></b>. <b><i>S</i></b> will contain no more
 than <b><i>1,000</i></b> characters. <i><b>S</b></i> can contain any of the
 printable ASCII characters. Capitalization should be ignored while finding the <b><i>N-Grams</i></b>. The next line specifies an integer <b><i>T</i></b>. Next <b><i>T</i></b>
 lines give the values for <b><i>N</i></b>, <b><i>0</i></b><i><b><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">&lt;
 </span></b></i><b><i>N<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>Length(S)</i></b>.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><font color="#0070E8">Output</font><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P align=justify>For each test case, output <b><i>T</i></b> lines specifying
 the number of occurrences of the <i><b>N-Gram</b> </i> followed by the <i><b> N-Gram</b></i>
 itself separated by exactly one
 space. If there are several such <b><i>N-Grams</i></b>, output the <b><i>least lexicographical</i></b> 
 one, compared in terms of ASCII values.<br>
 <br>
 <b><i>Note :</i></b>&nbsp; Given two strings <b><i>a=a<sub>0</sub>a<sub>1</sub>a<sub>2</sub>...a<sub>m</sub></i></b>
 and <b><i>b=b<sub>0</sub>b<sub>1</sub>b<sub>2</sub>...b<sub>m</sub></i></b>
 over the same alphabet <b><i>V</i></b>, we say that <b><i>a</i></b> is <b><i>lexicographically
 less</i></b> than <b><i>b</i></b> if there exist an integer <b><i>j</i></b>, <b><i>0<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>j<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">Â£
 </span>m</i></b>, so that <b><i>a<sub>i</sub>=b<sub>i</sub></i></b> for all <b><i>i=0,1,...,j-1</i></b>
 and <i><b>a<sub>j</sub><span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">&lt;
 </span>b<sub>j</sub></b></i>.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
In theory, there is no difference between theory and practice, but in practice, there is.
2
4
9
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
4  the
2  practice
</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/images/blesepa.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>
______________________________________________________
10235||||||false||||||
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML>
<HEAD>
<TITLE>Simply Emirp</TITLE>
<META NAME="description" CONTENT="Triangle">
<meta name="Microsoft Theme" content="blends 011">
</HEAD>
<BODY LANG="EN" bgcolor=#CCCCCC background="images/blegtext.gif" text="#000000" link="#993300" vlink="#0000FF" alink="#FF9900">
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <CENTER>
 <p>&nbsp;</p>
 <!--mstheme--></font>
 <TABLE BGCOLOR=#0060F0><TR><TD><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><b><font size="5" color="#C0FFFF">Problem
      G: Simply Emirp</font></b><!--mstheme--></font></TABLE><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"></CENTER><P align="justify"><i>An
 integer greater than 1 is called a prime number if its only positive divisors
 (factors) are 1 and itself</i>. Prime numbers have been studied over the years by
 a lot of mathematicians. Applications of prime numbers arise in Cryptography
 and Coding Theory among others.<P align="justify">Have you tried reversing a
 prime ? For most primes, you get a composite (43 becomes 34). <i> An Emirp
 (Prime spelt backwards) is a Prime that gives you a different Prime when its
 digits are reversed</i>. For example, 17 is <i>Emirp</i> because 17 as well as 71
 are Prime. In this problem, you have to decide whether a number <b><i>N</i></b>
 is Non-prime or Prime or <i>Emirp</i>. Assume that <b><i>1<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">&lt;
 </span>N<span style="FONT-SIZE: 12pt; FONT-FAMILY: Symbol; mso-fareast-font-family: Times New Roman; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA; mso-char-type: symbol; mso-symbol-font-family: Symbol; mso-ascii-font-family: Times New Roman; mso-hansi-font-family: Times New Roman; mso-bidi-font-family: Times New Roman">&lt;
 </span>1000000</i></b>.<P align="justify">Interestingly, Emirps are not new to
 NTU students. We have been boarding 199 and 179 buses for quite a long time!<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <P>
Input consists of several lines specifying values for <b><i>N</i></b>.<!--mstheme--></font><H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><font color="#0070E8">Output</font><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <p>For each <b><i> N</i></b> given in the input, output should contain one of the following:</p>
 <p>&nbsp;&nbsp;&nbsp; 1. &quot;<font face="Courier New"><b><i>N</i></b> is not prime.</font>&quot;,
 if <b><i>N</i></b> is not a Prime number.<br>
 &nbsp;&nbsp;&nbsp; 2. &quot;<font face="Courier New"><b><i>N</i></b> is prime.</font>&quot;,
 if <b><i>N</i></b> is Prime and <b><i> N</i></b> is not <i>Emirp</i>.<br>
 &nbsp;&nbsp;&nbsp; 3. &quot;<font face="Courier New"><b><i>N</i></b> is emirp.</font>&quot;,
 if <b><i>N</i></b> is <i>Emirp</i>.<!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Input</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
17
18
19
179
199</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<H2><!--mstheme--><font face="Trebuchet MS, Arial, Helvetica" color="#330099"><FONT COLOR=#0070E8>Sample Output</FONT><!--mstheme--></font></H2>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica"><!--mstheme--></font>
<PRE>
17 is emirp.
18 is not prime.
19 is prime.
179 is emirp.
199 is emirp.</PRE>
 <!--mstheme--><font face="Trebuchet MS, Arial, Helvetica">
 <!--msthemeseparator--><p align="center"><img src="http://uva.onlinejudge.org/external/102/images/blesepa.gif" ></p>
<ADDRESS>
<I>Arun Kishore</I>
 <!--mstheme--></font>
</BODY>
</HTML>
______________________________________________________
10236||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p0_files/filelist.xml">
<link rel=Edit-Time-Data href="p0_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - World Finals Warmup (Oriental) Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>32</o:Revision>
  <o:TotalTime>243</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2002-02-22T08:55:00Z</o:Created>
  <o:LastSaved>2002-02-27T02:03:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>186</o:Words>
  <o:Characters>1065</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>8</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1249</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:"Americana BT";
	panose-1:2 2 5 4 7 5 6 2 9 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:135 0 0 0 27 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;}
h4
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:8.5pt;
	font-family:"Americana BT";
	color:black;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="8194"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem A</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>The Fibonacci Primes</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 8 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The Fibonacci number sequence is <b
style='mso-bidi-font-weight:normal'>1, 1, 2, 3, 5, 8, <span class=GramE>13</span></b>
and so on. You can see that except the first two numbers the others are
summation of their previous two numbers. A Fibonacci Prime is a Fibonacci
number which is relatively prime to all the smaller Fibonacci numbers. First
such Fibonacci Prime is <b style='mso-bidi-font-weight:normal'>2</b>, the
second one is <b style='mso-bidi-font-weight:normal'>3</b>, the third one is <b
style='mso-bidi-font-weight:normal'>5</b>, <span class=GramE>the</span> fourth
one is <b style='mso-bidi-font-weight:normal'>13</b> and so on. Given the
serial of a Fibonacci Prime you will have to print the first nine digits of it.
If the number has less than nine digits then print all the digits.<span
style='mso-spacerun:yes'>&nbsp; </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>
<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains an integer <b style='mso-bidi-font-weight:
normal'>N(0&ltN&lt=22000)</b> which indicates the serial of a Fibonacci Prime. Input is
terminated by End of File.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each line of input produce one line of output which contains at most
nine digits according to the problem statement.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><o:p>&nbsp;</o:p></span></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>

1<br>
2<br>
3<br>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>

<font face="Courier,Times New Roman,Arial Helvetica" size=3>

2<br>
3<br>
5<br>
</font>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b>(World Finals Warmup <span class=GramE>Contest ,</span>
Problem setter: Shahriar Manzoor)</b><span style='mso-bidi-font-size:13.5pt;
color:windowtext'><br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>&#8220;Floating Point Errors
are more often caused by our limitations <o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:13.5pt;color:windowtext'>than the limitations of the
Computer.&#8221;<o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10237||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p1_files/filelist.xml">
<link rel=Edit-Time-Data href="p1_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem B - World Finals Warmup (Oriental) Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h3
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem B</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>Bishops</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 4 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>A bishop is a piece used in the
game of chess which is played on a board of square grids. A bishop can only move
diagonally from its current position and two bishops attack each other if one
is on the path of the other. In the following figure, the dark squares
represent the reachable locations for bishop <b><i>B</i><sub>1</sub></b> form
its current position.&nbsp; The figure also shows that the bishops <b><i>B</i><sub>1</sub></b>
and <b><i>B</i><sub>2</sub></b> are in attacking positions whereas <b><i>B</i><sub>1</sub></b>
and <b><i>B</i><sub>3</sub></b> are not. <b><i>B</i><sub>2</sub></b> and <b><i>B</i><sub>3</sub></b>
are also in non-attacking positions. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=224
height=223  src="http://uva.onlinejudge.org/external/102/p10237.jpg" ></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Now, given two numbers <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>n</span></b>
and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>k</span></b>, your job is to determine the number of ways one can put <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>k</span></b>
bishops on an <b style='mso-bidi-font-weight:normal'><i>n &times; n</i></b>
chessboard so that no two of them are in attacking positions. </p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>

<p class=MsoNormal><span style='color:black'>&nbsp;</span>The input file may
contain multiple test cases. Each test case occupies a single line in the input
file and contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>n</span></b> <b style='mso-bidi-font-weight:
normal'>(1 &le; n &le; 30)</b> and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>k</span> (0 &le; k &le; n<sup>2</sup>)</b>. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing two zeros
for <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>n</span></b> and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>k</span></b> terminates the input and you
wonÂ’t need to process this particular input.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing the total number of ways one can put the given number
of bishops on a chessboard of the given size so that no two of them are in
attacking positions. You may safely assume that this number will be less than <b
style='mso-bidi-font-weight:normal'>10<sup>15</sup></b>.</p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
8 6<br>
4 4<br>
20 40<br>
30 5<br>
0 0<br>
</font>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>

<font face="Courier,Times New Roman,Arial Helvetica" size=3>

5599888<br>
260<br>
0<br>
3127859642656<br>
</font>
<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='mso-outline-level:1'><b><span style='mso-bidi-font-size:
10.0pt;color:black'>(World Finals Warm-up Contest, Problem setter: Rezaul Alam
Chowdhury)<o:p></o:p></span></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>


<p class=MsoNormal><span style='font-family:"Courier New"'>&nbsp;</span></p>

</div>
<center>
"I think Garry Kasparov will like this problem very much!!!"
</center>
</body>

</html>

______________________________________________________
10238||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p2_files/filelist.xml">
<link rel=Edit-Time-Data href="p2_files/editdata.mso">
<link rel=OLE-Object-Data href="p2_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - World Finals Warmup (Oriental) Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>15</o:Revision>
  <o:TotalTime>601</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2002-02-22T05:31:00Z</o:Created>
  <o:LastSaved>2002-02-26T16:14:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>340</o:Words>
  <o:Characters>1938</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>16</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2274</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="5122"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem C</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>Throw the Dice!</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 30 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>


<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'>In the pictures below, you can see several types of Dices. It is very
easy to assume that they are used in many different types of games. In this problem,
the face of the dices will be like those on the first figure, that means each
will have some dots it each face, which will indicate the value of that
particular face. But the looks of the dices will be like those on the second
figure, that means each dice may have <b style='mso-bidi-font-weight:normal'>2,
3, 4, 5</b> up to <b style='mso-bidi-font-weight:normal'>50</b> different
faces. A dice with <b style='mso-bidi-font-weight:normal'>p </b>faces have face
values <b style='mso-bidi-font-weight:normal'>1, 2, 3 &#8230; p</b>. When a
dice is thrown all the faces are equally likely to come on top. For example an
ordinary dice in figure-1 has face values <b style='mso-bidi-font-weight:normal'>1,
2, 3, 4, 5, 6</b> and the probability that face with value <b style='mso-bidi-font-weight:
normal'>1</b> will be on top is <b style='mso-bidi-font-weight:normal'>1/6</b>.
The same is the probability for the other faces coming on top.<o:p></o:p></span></p>

<p class=MsoBodyText style='text-align:justify'><span style='mso-bidi-font-size:
13.5pt'><o:p>&nbsp;</o:p></span></p>


<div align=center>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:-25.5pt;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:480;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0'>
<tr>
<td width=230><center><img src="http://uva.onlinejudge.org/external/102/p10238a.jpg" ></center></td>


<td width=230><center><img src="http://uva.onlinejudge.org/external/102/p10238a.jpg" ></center></td>

</tr>
<tr>
<td><b>Figure 1: Two conventional dices</b></td>
<td><b>Figure 2: Dices of different shape</b></td>
</tr>
</table>

</div>

<p class=MsoBodyText><span style='mso-bidi-font-size:13.5pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>The situation becomes complicated when you throw a dice more than once
dice. For example when you throw a dice twice, for any arbitrary incident the
summation of the top two faces can be within the range (inclusive) <b
style='mso-bidi-font-weight:normal'>2...12</b>. But their probability is not equally
likely or <b style='mso-bidi-font-weight:normal'>1/12</b>. The probability that
the sum will be two is <b style='mso-bidi-font-weight:normal'>1/36</b>, but the
probability that some will be three is <b style='mso-bidi-font-weight:normal'>2/36</b>
and so on. Given the description of a dice throw, that&#8217;s how many faces
it have, how many throws will be made and value for the sum, you will have to
find the probability of obtaining that sum. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>

<p class=MsoNormal style='text-align:justify'>The input will contain several
lines of input. Each line contains three integers <b style='mso-bidi-font-weight:
normal'>F</b> (The number of faces of the dice thrown, <b style='mso-bidi-font-weight:
normal'>1&lt;=F&lt;=50</b>), <b style='mso-bidi-font-weight:normal'>N</b> (The
number of throws and <b style='mso-bidi-font-weight:normal'>0&lt;=N&lt;=50</b>)
and <b style='mso-bidi-font-weight:normal'>S</b> (The summation value for which
you to find out the probability, <b style='mso-bidi-font-weight:normal'>0&lt;S&lt;=4000</b>).
</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'>For each line
of input you will have to produce one line of output which will be of the form <b
style='mso-bidi-font-weight:normal'>a/b (Here b = F</b><b style='mso-bidi-font-weight:
normal'><sup><span style='mso-bidi-font-size:12.0pt'>N</span></sup>)</b>. Here <b
style='mso-bidi-font-weight:normal'>a/b </b>means the probability value. Note
that we don&#8217;t need the floating point value of probability. </p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><o:p>&nbsp;</o:p></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>

<font face="Courier,Times New Roman,Arial Helvetica" size=3>
6 2 2<br>
6 2 3<br>
6 3 10<br>
</font>
<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><o:p>&nbsp;</o:p></span></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>

1/36<br>
2/36<br>
27/216<br>
</font>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b>(World Final Warm-up Contest, Problem setter: Shahriar
Manzoor)</b><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><br
style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoBodyText align=center style='text-align:center'>&#8220;He He!!! Why
does this guy like probability so much? :-)&#8221;<span style='mso-bidi-font-size:
12.0pt'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10239||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0054)http://acm.uva.es/contest/data/0040/problemset/p3.html -->
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:v = 
"urn:schemas-microsoft-com:vml" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word"><HEAD><TITLE>Problem D - World Finals Warmup (Oriental) Contest</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.2600.0" name=GENERATOR>
<META content="Microsoft Word 10" name=Originator><LINK 
href="p3_files/filelist.xml" rel=File-List><LINK href="p3_files/editdata.mso" 
rel=Edit-Time-Data><!--[if !mso]>
<STYLE>v\:* {
	BEHAVIOR: url(#default#VML)
}
o\:* {
	BEHAVIOR: url(#default#VML)
}
w\:* {
	BEHAVIOR: url(#default#VML)
}
.shape {
	BEHAVIOR: url(#default#VML)
}
</STYLE>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Muks</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>398</o:TotalTime>
  <o:Created>2002-02-22T09:11:00Z</o:Created>
  <o:LastSaved>2002-02-25T04:57:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>329</o:Words>
  <o:Characters>1881</o:Characters>
  <o:Company>Vankaks</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2206</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<STYLE>@page Section1 {size: 8.5in 11.0in; margin: 1.0in 1.25in 1.0in 1.25in; mso-header-margin: .5in; mso-footer-margin: .5in; mso-paper-source: 0; }
P.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
P.Preformatted {
	FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; LAYOUT-GRID-MODE: char; FONT-FAMILY: "Courier New"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
LI.Preformatted {
	FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; LAYOUT-GRID-MODE: char; FONT-FAMILY: "Courier New"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
DIV.Preformatted {
	FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; LAYOUT-GRID-MODE: char; FONT-FAMILY: "Courier New"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
SPAN.GramE {
	mso-style-name: " ; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--></HEAD>
<BODY lang=EN-US style="tab-interval: .5in">
<DIV class=Section1>
<CENTER><B><FONT face="Times New Roman,Arial Helvetica" size=5>Problem 
D</FONT></B><BR><B><FONT face="Times New Roman,Arial Helvetica" size=6>The 
Book-shelverÂ’s Problem</FONT></B><BR></B><FONT 
face="Times New Roman,Arial Helvetica" size=3><B>Input:</B> standard 
input<BR><B>Output:</B> standard output<BR><B>Time Limit:</B> 5 
seconds<BR><B>Memory Limit:</B> 32 MB<BR></CENTER>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">You are given a collection of 
books, which must be shelved in a library bookcase ordered (from top to bottom 
in the bookcase and from left to right in each shelf) by the booksÂ’ catalogue 
numbers. The bookcase has a fixed width, but you may have any height you like. 
The books are placed on shelves in the bookcase in the usual upright manner 
(i.e., you cannot lay a book on its side). You may use as many shelves as you 
like, placed wherever you like up to the height of the bookcase, and you may put 
as many books on each shelf as you like up to the width of the bookcase. You may 
assume that the shelves have negligible thickness. </P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">Now, given an ordered (by 
catalogue numbers) list of the heights and widths of the books and the width of 
the bookcase, you are expected to determine <SPAN class=GramE>what is the 
minimum height bookcase that can shelve all those books</SPAN>.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></P><B><FONT 
face="Times New Roman,Arial Helvetica" size=5>Input</FONT></B><BR>
<P class=MsoNormal style="TEXT-ALIGN: justify">The input file may contain 
multiple test cases. The first line of each test case contains an integer <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">N</SPAN> (1 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> N 
</B><B style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
1000)</B> that denotes the number of books to shelve, and a floating-point 
number <B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">W</SPAN> (0 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">&lt;</SPAN></SPAN> 
<SPAN style="mso-bidi-font-style: italic">W</SPAN> </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
1000)</B> that denotes the width of the bookcase in centimeters. Then follow <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">N</SPAN></B> lines where the <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">i</SPAN>-th (1 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
<SPAN style="mso-bidi-font-style: italic">i</SPAN> </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
N)</B> line contains two floating-point numbers <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">h<SUB>i</SUB></SPAN> (0 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">&lt;</SPAN></SPAN> 
<SPAN style="mso-bidi-font-style: italic">h<SUB>i</SUB></SPAN> </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
100)</B> and <B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">w<SUB>i</SUB></SPAN> (0 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">&lt;</SPAN></SPAN> 
<SPAN style="mso-bidi-font-style: italic">w<SUB>i</SUB></SPAN> </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
<SPAN style="mso-bidi-font-style: italic">W</SPAN>)</B> indicating the height 
and width (both in centimeters) of the <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">i</SPAN>-th</B> book in the list ordered by 
catalogue numbers. Each floating-point number will have four digits after the 
decimal point.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">A test case containing two zeros 
for <B style="mso-bidi-font-weight: normal">N</B><SPAN 
style="mso-bidi-font-style: italic"> and </SPAN><B 
style="mso-bidi-font-weight: normal">W</B> terminates the input.<SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></P><B><FONT 
face="Times New Roman,Arial Helvetica" size=5>Output</FONT></B><BR>
<P class=MsoNormal style="TEXT-ALIGN: justify">For each test case in the input 
print a line containing the minimum height (in centimeters, up to four digits 
after the decimal point) of the bookcase that can shelve all the books in the 
list.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-SIZE: 14pt; COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></B></P><B><FONT 
face="Times New Roman,Arial Helvetica" size=5>Sample Input</FONT></B><BR><FONT 
face="Courier,Times New Roman,Arial Helvetica" size=3>5 30.0000<BR>30.0000 
20.0000<BR>20.0000 10.0000<BR>25.0000 10.0000<BR>30.0000 15.0000<BR>10.0000 
5.0000<BR>10 20.0000<BR>10.0000 2.0000<BR>15.0000 10.0000<BR>20.0000 
5.0000<BR>6.0000 2.0000<BR>10.0000 3.0000<BR>30.0000 6.0000<BR>5.0000 
3.0000<BR>35.0000 2.0000<BR>32.0000 4.0000<BR>10.0000 6.0000<BR>0 0.0000</SPAN> 
</FONT>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><o:p>&nbsp;</o:p></SPAN></B></P><B><FONT 
face="Times New Roman,Arial Helvetica" size=5>Sample Output</FONT></B><BR><FONT 
face="Courier,Times New Roman,Arial Helvetica" 
size=3>60.0000<BR>65.0000<BR></FONT>
<DIV class=MsoNormal style="TEXT-ALIGN: center" align=center>
<HR align=center width="100%" SIZE=2>
</DIV>
<P class=MsoNormal style="mso-outline-level: 1"><B><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt">(World Finals Warm-up Contest, 
Problem setter: Rezaul Alam Chowdhury)<o:p></o:p></SPAN></B></P>
<P class=MsoNormal><o:p>&nbsp;</o:p></P></DIV>
<CENTER>"Even the darkest clowd has a silver 
lining."</CENTER></FONT></BODY></HTML>

______________________________________________________
10240||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p4_files/filelist.xml">
<link rel=Edit-Time-Data href="p4_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem E - World Finals Warmup (Oriental) Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="City"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>22</o:Revision>
  <o:TotalTime>382</o:TotalTime>
  <o:LastPrinted>2002-02-25T12:32:00Z</o:LastPrinted>
  <o:Created>2002-02-22T05:27:00Z</o:Created>
  <o:LastSaved>2002-02-25T13:09:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>459</o:Words>
  <o:Characters>2617</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>21</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>3070</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:273754912;
	mso-list-type:hybrid;
	mso-list-template-ids:1067624912 -736611782 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:48.0pt;
	mso-level-number-position:left;
	margin-left:48.0pt;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="5122"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem E</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>The n-Dimensional Cities</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 5 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>


<p style='text-align:justify'>In an n<b style='mso-bidi-font-weight:normal'>-</b>dimensional
space there can be maximum <b style='mso-bidi-font-weight:normal'>(n+1)</b>
points that are equidistant from one another. The n-Dimensional creatures of
country Talisman has build <b style='mso-bidi-font-weight:normal'>(n+1)</b>
cities which are equidistant from each other. The roads of Talisman are built
according to the following rules</p>

<p style='margin-left:48.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]><span
style='mso-list:Ignore'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Every city is reachable from every other city via road.</p>

<p style='margin-left:48.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]><span
style='mso-list:Ignore'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>A road segment only connects two different cities.</p>

<p style='margin-left:48.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]><span
style='mso-list:Ignore'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>There is no more than one direct road segment between
two cities.</p>

<p style='margin-left:48.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]><span
style='mso-list:Ignore'>d)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>If you take any arbitrary city you will find that no neighboring
city of it is directly connected. Two cities <b style='mso-bidi-font-weight:
normal'>A</b> and <b style='mso-bidi-font-weight:normal'>B</b> are neighboring
if and only if they have a direct road segment between them. If two neighboring
city of <st1:City><st1:place><b style='mso-bidi-font-weight:normal'>A</b></st1:place></st1:City>,
is <b style='mso-bidi-font-weight:normal'>B</b> and <b style='mso-bidi-font-weight:
normal'>C</b> then <b style='mso-bidi-font-weight:normal'>B</b> and <b
style='mso-bidi-font-weight:normal'>C</b> will never be neighbors. This is done
to ensure security (to reduce alternate paths).</p>

<p style='margin-left:48.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]><span
style='mso-list:Ignore'>e)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Road segments that connect two neighboring cities are
either straight or circular. The circular road segments are actually part of a
circle whose center is <b style='mso-bidi-font-weight:normal'>d</b> miles away
from both the cities. Here <b style='mso-bidi-font-weight:normal'>d&gt;=0.5*(linear
distance of the two cities)</b>. In Talisman maximum <b style='mso-bidi-font-weight:
normal'>50 %</b> roads are circular and circular roads are never more than
straight roads in number.</p>

<p style='margin-left:48.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 48.0pt'><![if !supportLists]><span
style='mso-list:Ignore'>f)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>You can assume that no two road segments intersect.</p>

<p style='text-align:justify'>The Communication Minister of Talisman wants to
build as many road segments as possible (preserving the constraints above) and
the Nature Minister wants the roads to be as long as possible as he plants
trees on both sides of the roads. From a given description of Talisman youÂ’ll
have to find the number of road segments in Talisman and also the total length
of road segments.</p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>

<p style='text-align:justify'><span style='mso-bidi-font-weight:bold'>The input
file contains several lines of input. Each line contains three integers <b>dim </b>(The
Dimension of the World), <b>dist </b>(The linear distance between any two
cities) and <b>d</b><i style='mso-bidi-font-style:normal'> </i>(Explained in
the problem statement above).<span style='mso-spacerun:yes'>Â  </span>Note that <b>dim</b>
is a positive integer less than <b>10000</b>, <b>(0&lt;dist&lt;=10000)</b> and
(<b>dist/2.0) &lt;=d&lt;10000.</b> <o:p></o:p></span></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p style='text-align:justify'>For each line of input you should give one line
of output which contains two numbers. The first round number denotes the number
of road segments and the second round number denotes the total length of the road
segments (The total actual length rounded to the nearest integer).<span
style='mso-spacerun:yes'>Â  </span></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>

2 10 10<br>
3 5 6<br>
</font>
<br>
<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>
<font face="Courier, Times New Roman,Arial Helvetica" size=3>
2 20<br>
4 20<br>
</font>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<pre style='text-align:justify'><b><span style='font-size:12.0pt;font-family:
"Times New Roman"'>(World Finals Warm-up Contest, Problem setter: Shahriar Manzoor)<o:p></o:p></span></b></pre></div>
<br><br><center>
"Make new friends but keep the old,<br>
When these are silver those are gold."<br></center>
</body>

</html>

______________________________________________________
10241||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0092)http://www.pi.informatik.tu-darmstadt.de/acm-contest/Darmstadt99/Problems/puzzle/puzzle.html --><!--Converted with LaTeX2HTML 96.1-h (September 30, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p5_files/filelist.xml">
<link rel=Edit-Time-Data href="p5_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem F - World Finals Warmup (Oriental) Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>67</o:Revision>
  <o:TotalTime>808</o:TotalTime>
  <o:LastPrinted>2001-05-09T04:39:00Z</o:LastPrinted>
  <o:Created>2001-06-30T12:55:00Z</o:Created>
  <o:LastSaved>2002-02-26T06:43:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>142</o:Words>
  <o:Characters>813</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>6</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>954</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	mso-layout-grid-align:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
code
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1246107867;
	mso-list-template-ids:99769726;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
<meta content="No Title" name=description>
<meta content=puzzle name=keywords>
<meta content=document name=resource-type>
<meta content=global name=distribution>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="7170"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem F</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>Semi-triangular and also Square</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> This program has no input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 8 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>


<h2 style='text-align:justify'><a name=SECTION00013000000000000000><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;
mso-bidi-font-weight:bold'>Triangular numbers are </span></a><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN'>1, 3, 6, 10, 15</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'> etc. Square numbers are </span></span><span style='mso-bookmark:SECTION00013000000000000000'><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN'>1, 4, 9, 16, 25</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'> etc. Semi-triangular numbers are numbers of the form </span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN'>(2n+1)*T</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'>, here </span></span><span style='mso-bookmark:SECTION00013000000000000000'><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN'>(0&lt;=n&lt;8)</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'> and </span></span><span style='mso-bookmark:SECTION00013000000000000000'><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN'>T</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'> is a triangular number. You will have to print all such numbers less
than </span></span><span style='mso-bookmark:SECTION00013000000000000000'><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN'>16E34</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'> or </span></span><span style='mso-bookmark:SECTION00013000000000000000'><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN'>160000000000000000000000000000000000</span></span><span
style='mso-bookmark:SECTION00013000000000000000'><span lang=EN
style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:
bold'>, which are semi-triangular and also square.<o:p></o:p></span></span></h2>

<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>

<h2><a name=SECTION00014000000000000000><span lang=EN style='font-size:12.0pt;
mso-ansi-language:EN;font-weight:normal;mso-bidi-font-weight:bold'>This program
has no input. <o:p></o:p></span></a></h2>

<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<h2 style='text-align:justify'><a name=SECTION00015000000000000000><span
lang=EN style='font-size:12.0pt;mso-ansi-language:EN;font-weight:normal;
mso-bidi-font-weight:bold'>The output file contains several lines. Each line
contains a number which is semi-triangular and also square. The numbers are
printed in ascending order.<o:p></o:p></span></a></h2>

<span style='mso-bookmark:SECTION00015000000000000000'></span>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
1<br>
9<br>
36<br>
196<br>
225<br>
324<br>
900<br>
....<br>
....<br>
.....<br>
.....<br>
.....<br>
.....<br>
</font>
<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='mso-layout-grid-align:none'><b>(World Final Warm-up
Contest, Problem setter: Shahriar Manzoor)<o:p></o:p></b></p>

<p class=MsoNormal style='mso-layout-grid-align:none'><b><o:p>&nbsp;</o:p></b></p>

<p class=MsoNormal style='mso-layout-grid-align:none'><b><span
style='mso-bidi-font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoBodyText>Â“A problem statement has Sample Output for two reasons:</p>

<p class=MsoBodyText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>To
make you understand what the correct output format is.</p>

<p class=MsoBodyText style='margin-left:.5in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list .5in'><![if !supportLists]><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><![endif]>To
make you believe that your incorrect solution has solved the problem correctly
:-)Â”</p>

</div>

</body>

</html>

______________________________________________________
10242||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p6_files/filelist.xml">
<link rel=Edit-Time-Data href="p6_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem G - World Finals Warmup (Oriental) Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceType"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>27</o:Revision>
  <o:TotalTime>67</o:TotalTime>
  <o:Created>2002-02-24T04:55:00Z</o:Created>
  <o:LastSaved>2002-02-27T01:46:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>201</o:Words>
  <o:Characters>1149</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1348</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;
	font-weight:bold;}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem G</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>Fourth Point!!</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 2 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>



<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Given are the <b
style='mso-bidi-font-weight:normal'>(x, y)</b> coordinates of the endpoints of
two adjacent sides of a parallelogram. Find the <b style='mso-bidi-font-weight:
normal'>(x, y)</b> coordinates of the fourth point. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>
<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>

<p style='text-align:justify'>Each line of input contains eight floating point
numbers: the <b style='mso-bidi-font-weight:normal'>(x, y)</b> coordinates of
one of the endpoints of the first side followed by the <b style='mso-bidi-font-weight:
normal'>(x, y)</b> coordinates of the other endpoint of the first side,
followed by the <b style='mso-bidi-font-weight:normal'>(x, y)</b> coordinates
of one of the endpoints of the second side followed by the <b style='mso-bidi-font-weight:
normal'>(x, y)</b> coordinates of the other endpoint of the second side. All
coordinates are in meters, to the nearest mm. All coordinates are between <b
style='mso-bidi-font-weight:normal'>-10000</b> and <b style='mso-bidi-font-weight:
normal'>+10000</b>. Input is terminated by end of file.</p>


<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p style='text-align:justify'>For each line of input, print the <b
style='mso-bidi-font-weight:normal'>(x, y)</b> coordinates of the fourth point
of the parallelogram in meters, to the nearest mm, separated by a single space.
</p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
0.000 0.000 0.000 1.000 0.000 1.000 1.000 1.000<br>
1.000 0.000 3.500 3.500 3.500 3.500 0.000 1.000<br>
1.866 0.000 3.127 3.543 3.127 3.543 1.412 3.145<br>
</font>
<br>
<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>

1.000 0.000<br>
-2.500 -2.500<br>
0.151 -0.398<br>
</font>
<div class=MsoNormal align=center style='text-align:center;page-break-after:
avoid;mso-outline-level:1;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='page-break-after:avoid;mso-outline-level:1;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='mso-bidi-font-size:10.0pt;color:black'>(World Finals Warm-up Contest,
Problem Source: </span></b><st1:place><st1:PlaceType><b><span style='mso-bidi-font-size:
  10.0pt;color:black'>University</span></b></st1:PlaceType><b><span
 style='mso-bidi-font-size:10.0pt;color:black'> of </span></b><st1:PlaceName><b><span
  style='mso-bidi-font-size:10.0pt;color:black'>Alberta</span></b></st1:PlaceName></st1:place><b><span
style='mso-bidi-font-size:10.0pt;color:black'> Local Contest)<o:p></o:p></span></b></p>

<p class=MsoNormal style='page-break-after:avoid;mso-outline-level:1;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='mso-bidi-font-size:10.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='page-break-after:avoid;mso-outline-level:1;
tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='mso-bidi-font-size:10.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid;
mso-outline-level:1;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:10.0pt;color:black;mso-bidi-font-weight:bold'>Â“You
donÂ’t get a rank in a contest if you donÂ’t solve any problem. So there must be
a Problem<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid;
mso-outline-level:1;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:10.0pt;color:black;mso-bidi-font-weight:bold'>which
can be solved by almost every team.Â”<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><o:p>&nbsp;</o:p></p>

<pre><o:p>&nbsp;</o:p></pre></div>

</body>

</html>

______________________________________________________
10243||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:v = 
"urn:schemas-microsoft-com:vml" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word" xmlns:st1 = 
"urn:schemas-microsoft-com:office:smarttags"><HEAD><TITLE>Problem H - World Finals Warmup (Oriental) Contest</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.2600.0" name=GENERATOR>
<META content="Microsoft Word 10" name=Originator><LINK 
href="p7_files/filelist.xml" rel=File-List><LINK href="p7_files/editdata.mso" 
rel=Edit-Time-Data><!--[if !mso]>
<STYLE>v\:* {
	BEHAVIOR: url(#default#VML)
}
o\:* {
	BEHAVIOR: url(#default#VML)
}
w\:* {
	BEHAVIOR: url(#default#VML)
}
.shape {
	BEHAVIOR: url(#default#VML)
}
</STYLE>
<![endif]--><o:SmartTagType name="PlaceType" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><o:SmartTagType 
name="PlaceName" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><o:SmartTagType 
name="place" 
namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Muks</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>14</o:Revision>
  <o:TotalTime>106</o:TotalTime>
  <o:Created>2002-02-22T09:16:00Z</o:Created>
  <o:LastSaved>2002-03-04T04:43:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>326</o:Words>
  <o:Characters>1862</o:Characters>
  <o:Company>Vankaks</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2184</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]>
<OBJECT id=ieooui classid=clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D></OBJECT>
<STYLE>st1\:* {
	BEHAVIOR: url(#ieooui)
}
</STYLE>
<![endif]-->
<STYLE>@font-face {
	font-family: Courier;
}
@page Section1 {size: 8.5in 11.0in; margin: 1.0in 1.25in 1.0in 1.25in; mso-header-margin: .5in; mso-footer-margin: .5in; mso-paper-source: 0; }
P.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: " ; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
H1 {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: "Times New Roman"; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 1; mso-font-kerning: 0pt
}
P.Preformatted {
	FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; LAYOUT-GRID-MODE: char; FONT-FAMILY: "Courier New"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
LI.Preformatted {
	FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; LAYOUT-GRID-MODE: char; FONT-FAMILY: "Courier New"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
DIV.Preformatted {
	FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; LAYOUT-GRID-MODE: char; FONT-FAMILY: "Courier New"; mso-pagination: none; mso-fareast-font-family: "Times New Roman"; mso-style-name: Preformatted; tab-stops: 0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt; mso-bidi-font-family: "Times New Roman"
}
SPAN.GramE {
	mso-style-name: " ; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--></HEAD>
<BODY lang=EN-US style="tab-interval: .5in">
<DIV class=Section1>
<P class=MsoNormal style="TEXT-ALIGN: center" align=center><B><SPAN 
style="FONT-SIZE: 18pt">Problem H</SPAN></B><BR><B><SPAN 
style="FONT-SIZE: 24pt">Fire! Fire!! Fire!!!</SPAN></B><BR><B>Input:</B> 
standard input<BR><B>Output:</B> standard output<BR><B>Time Limit:</B> 15 
seconds<BR><B>Memory Limit:</B> 32 MB</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">The <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">ACM</SPAN> 
(</B><st1:place><st1:PlaceName><SPAN style="mso-bidi-font-style: italic"><B 
style="mso-bidi-font-weight: normal">Asian</B></SPAN></st1:PlaceName><B 
style="mso-bidi-font-weight: normal"><SPAN style="mso-bidi-font-style: italic"> 
</SPAN></B><st1:PlaceName><B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">Cultural</SPAN></B></st1:PlaceName><B 
style="mso-bidi-font-weight: normal"><SPAN style="mso-bidi-font-style: italic"> 
</SPAN></B><st1:PlaceType><B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">Museum</SPAN></B></st1:PlaceType></st1:place><B 
style="mso-bidi-font-weight: normal">)</B> authority is planning to install fire 
exits in its galleries in order to handle the emergency situation arising in 
case of a sudden fire. The museum is a collection of numerous interconnected 
galleries. The galleries are connected by corridors in such a way that from any 
gallery there is exactly one path to reach any other gallery without visiting 
any intermediate gallery (a gallery that is on that path) more than once. </P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">However, in order to reduce 
installation cost, it has been decided that not every gallery will have a fire 
exit. Fire exits will be installed in such a way that if any gallery does not 
have a fire exit then at least one of its adjacent galleries must have one and 
for each corridor at least one of the two galleries it connects must have a fire 
exit<SPAN class=GramE>..</SPAN> You are hired to determine where to put the fire 
exits under this constraint.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">However, as a first step, you are 
expected to determine the minimum number of fire exits required.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal><B><SPAN style="FONT-SIZE: 18pt">Input</SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">The input file may contain 
multiple test cases. The first line of each test case contains an integer <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">N</SPAN> (1 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> N 
</B><B style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
1,000)</B> indicating the number of galleries in this test case. Then follow <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">N</SPAN></B> lines where <SPAN 
class=GramE>the <B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">i</SPAN></B></SPAN><B 
style="mso-bidi-font-weight: normal">-th (1 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> i 
</B><B style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
N)</B> line is the adjacency list of the <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">i</SPAN>-th</B> gallery (Each gallery is 
given a unique identification number from <B 
style="mso-bidi-font-weight: normal">1</B> to <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">N</SPAN></B> for convenience). The adjacency 
list for gallery <B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">i</SPAN></B> starts with an integer <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">n<SUB>i</SUB></SPAN> (0 </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
<SPAN style="mso-bidi-font-style: italic">n<SUB>i</SUB></SPAN> </B><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-FAMILY: Symbol; mso-ascii-font-family: 'Times New Roman'; mso-hansi-font-family: 'Times New Roman'; mso-char-type: symbol; mso-symbol-font-family: Symbol"><SPAN 
style="mso-char-type: symbol; mso-symbol-font-family: Symbol">Â£</SPAN></SPAN> 
N<SPAN style="mso-bidi-font-style: italic"> - 1</SPAN>)</B> indicating the 
number of galleries adjacent to this gallery, followed by <B 
style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">n<SUB>i</SUB></SPAN></B> integers giving the 
identification numbers of those galleries.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">A test case containing a zero for 
<B style="mso-bidi-font-weight: normal"><SPAN 
style="mso-bidi-font-style: italic">N</SPAN></B> terminates the input. <SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p></o:p></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal><B><SPAN style="FONT-SIZE: 18pt">Output</SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: justify">For each test case in the input 
file print a line containing the minimum number of fire exits required to meet 
the given constraint.</P>
<P class=MsoNormal style="TEXT-ALIGN: justify"><B 
style="mso-bidi-font-weight: normal"><SPAN 
style="FONT-SIZE: 14pt; COLOR: black; mso-bidi-font-size: 10.0pt"><SPAN 
style="mso-spacerun: yes">&nbsp;</SPAN><o:p></o:p></SPAN></B></P>
<P class=MsoNormal><B><SPAN style="FONT-SIZE: 18pt">Sample 
Input</SPAN></B><BR><SPAN style="FONT-FAMILY: Courier">4<BR>3 2 3 4<BR>1 1<BR>1 
1<BR>1 1<BR>16<BR>4 6 12 15 16<BR>3 3 8 10<BR>4 2 4 6 9<BR>1 3<BR>1 6<BR>3 1 3 
5<BR>1 15<BR>1 2<BR>1 3<BR>1 2<BR>1 16<BR>1 1<BR>1 15<BR>1 15<BR>4 1 7 13 
14<BR>2 1 11<BR>0</SPAN></P>
<P class=MsoNormal><SPAN 
style="FONT-SIZE: 11pt; LAYOUT-GRID-MODE: line; COLOR: black; FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: 'Times New Roman'"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal><B><SPAN style="FONT-SIZE: 18pt">Sample 
Output</SPAN></B><BR><SPAN style="FONT-FAMILY: Courier">1<BR>6</SPAN></P>
<DIV class=MsoNormal style="TEXT-ALIGN: center" align=center>
<HR align=center width="100%" SIZE=2>
</DIV>
<P class=MsoNormal style="mso-outline-level: 1"><B><SPAN 
style="COLOR: black; mso-bidi-font-size: 10.0pt">(World Finals Warm-up Contest, 
Problem setter: Rezaul Alam Chowdhury)<o:p></o:p></SPAN></B></P>
<P class=MsoNormal><o:p>&nbsp;</o:p></P>
<P class=MsoNormal><o:p>&nbsp;</o:p></P>
<P class=MsoNormal style="TEXT-ALIGN: center" align=center>Â“I would rather make 
fire escapes in all galleries than solve this problem 
:-)Â”</P></DIV></BODY></HTML>

______________________________________________________
10244||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p8_files/filelist.xml">
<link rel=Edit-Time-Data href="p8_files/editdata.mso">
<link rel=OLE-Object-Data href="p8_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem I - World Finals Warmup (Oriental) Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="country-region"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>32</o:Revision>
  <o:TotalTime>577</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2002-02-22T09:01:00Z</o:Created>
  <o:LastSaved>2002-02-26T09:00:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>381</o:Words>
  <o:Characters>2174</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2550</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:24.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="7170"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem I</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>First Love!!!</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 6 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>It is now a very difficult time now for Arif as he is coming back to </span><st1:country-region><st1:place><span
  style='mso-bidi-font-size:12.0pt'>Bangladesh</span></st1:place></st1:country-region><span
style='mso-bidi-font-size:12.0pt'> from </span><st1:country-region><st1:place><b
  style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:12.0pt'>USA</span></b></st1:place></st1:country-region><span
style='mso-bidi-font-size:12.0pt'> after four long years. He knows that he will
meet his first love here again (He knows he will, that is his destiny) but does
not know what to do. At first he plans not to recognize her, but then realizes
that it is the only face he recognizes well. (Arif, is a genius programmer
working in <b style='mso-bidi-font-weight:normal'>IBM</b>, his colleagues love
him very much as he solves so many difficult problems in minutes. But his
problem is that he cannot remember people&#8217;s name or even face.) So he
decides that he will recognize her and present her the same necklace (looks
same of course) he presented her <b style='mso-bidi-font-weight:normal'>4</b>
years ago. His memory betrays him again as he fails to remember how the
necklace looked like. Below you can see pictures of different necklaces.<o:p></o:p></span></p>
<br>
<center>
<img src="http://uva.onlinejudge.org/external/102/p10244.jpg" >
</center>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;mso-bidi-font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>After thinking for along time he remembers the different type of beads
that the necklace had, he also remembers the length of the necklace but fails
to remember the pattern of beads (The frequency of different types of beads and
their ordering). Arif is very rich now and so he decides to buy a long string
of beads from which he will be able to cut away any pattern of necklace. Help
Arif to solve this problem, because, in solving problems related to his first
love he is still very nervous and inefficient. Remember that the bead string 
<b>ABBB</b> and <b>BBBA</b> are not the same because the beads are not always 
symmetric. There are also some other reasons which are not worth mentioning
here.<span
style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></b></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Input</font></b><br>
<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains a string and an integer separated by a
single space. The string contains different alpha numerals, which denote
the different types of beads the necklace have. The length of this string is less
than five. The next integer <b style='mso-bidi-font-weight:normal'>N</b> <b
style='mso-bidi-font-weight:normal'>(0&lt;N&lt;=20)</b> denotes the length of
the necklace or the number of beads of in the necklace.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Output</font></b><br>

<p class=MsoNormal style='text-align:justify'>For each line of input produce
two lines of output. On the first line you will have to print the minimum length
of the bead string that Arif will buy. If the length of the bead string is less
than <b style='mso-bidi-font-weight:normal'>10001</b> you will have to print
the bead string on the next line. If its length is greater than <b
style='mso-bidi-font-weight:normal'>10000</b> then print the line <b
style='mso-bidi-font-weight:normal'>&#8220;TOO LONG TO PRINT.&#8221;</b>
instead.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Input</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
10 3<br>
ABC 9<br><br>
</font>
<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'><o:p>&nbsp;</o:p></span></p>

<b><font face="Times New Roman,Arial Helvetica" size=5>Sample Output</font></b><br>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
10<br>
1110001011<br>
19691<br>
TOO LONG TO PRINT.<br>
</font>
<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b><span style='mso-bidi-font-size:12.0pt'>(World Final
Warm-up Contest, Problem setter: Shahriar Manzoor)</span></b><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><br style='mso-special-character:
line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></p>

<p class=MsoBodyText3>&#8220;If you can give the right person proper
recognition people will praise you.</p>

<p class=MsoBodyText3>But if you fail to give someone proper recognition, time
will come</p>

<p class=MsoBodyText3>when you will badly need recognition from the one</p>

<p class=MsoBodyText3>you never wanted to recognize.&#8221;</p>

</div>

</body>

</html>

______________________________________________________
10245||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p9_files/filelist.xml">
<link rel=Edit-Time-Data href="p9_files/editdata.mso">
<!--[if !mso]>
<style>

v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem J - World Finals Warmup (Oriental) Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>18</o:Revision>
  <o:TotalTime>497</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2002-02-22T05:36:00Z</o:Created>
  <o:LastSaved>2002-02-24T07:22:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>194</o:Words>
  <o:Characters>1107</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>9</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1299</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>
<center><b>
<font face="Times New Roman,Arial Helvetica" size=5>Problem J</font></b><br>
<b><font face="Times New Roman,Arial Helvetica" size=6>The Closest Pair Problem</font></b><br></b>
<font face="Times New Roman,Arial Helvetica" size=3>
<b>Input:</b> standard input<br>
<b>Output:</b> standard output<br>
<b>Time Limit:</b> 8 seconds<br>
<b>Memory Limit:</b> 32 MB<br>
</center>



<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Given a set of points in a two
dimensional space, you will have to find the distance between the closest two
points.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<h2>Input</h2>

<p class=MsoNormal><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
sets of input. Each set of input starts with an integer <b style='mso-bidi-font-weight:
normal'>N (0&lt;=N&lt;=10000)</b>, which denotes the number of points in this
set. The next <b style='mso-bidi-font-weight:normal'>N </b>line contains the
coordinates of <b style='mso-bidi-font-weight:normal'>N</b> two-dimensional
points. The first of the two numbers denotes the <b style='mso-bidi-font-weight:
normal'>X-coordinate</b> and the latter denotes the <b style='mso-bidi-font-weight:
normal'>Y-coordinate</b>. The input is terminated by a set whose <b
style='mso-bidi-font-weight:normal'>N=0</b>. This set should not be processed.
The value of the coordinates will be less than <b style='mso-bidi-font-weight:
normal'>40000</b> and non-negative.</p>

<p class=MsoNormal style='text-align:justify'><span
style='mso-spacerun:yes'>Â </span><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<h2>Output</h2>

<p class=MsoNormal style='text-align:justify'><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>For each set of input produce a single
line of output containing a floating point number (with four digits after the
decimal point) which denotes the distance between the closest two points. If
there is no such two points in the input whose distance is less than <b
style='mso-bidi-font-weight:normal'>10000</b>, print the line <b
style='mso-bidi-font-weight:normal'>INFINITY</b>.</p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<h2>Sample Input</h2>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
3<br>
0 0<br>
10000 10000<br>
20000 20000<br>

5<br>
0 2<br>
6 67<br>
43 71<br>
39 107<br>
189 140<br>
0<br>
</font>
<h2><o:p>&nbsp;</o:p></h2>

<h2>Sample Output</h2>
<font face="Courier,Times New Roman,Arial Helvetica" size=3>
INFINITY<br>
36.2215<br>


<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal style='page-break-after:avoid;mso-outline-level:1'><b>(World
Final Warm-up Contest, Problem setter: Shahriar Manzoor)<o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal align=center style='text-align:center'>Â“Generally, a brute
force method has only two kinds of reply, a) Accepted b) Time Limit Exceeded.Â”</p>

</div>

</body>

</html>

______________________________________________________
10246||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p0_files/filelist.xml">
<link rel=Edit-Time-Data href="p0_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem A</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>Asterix and Obelix</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard
input</p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>5 seconds<b style='mso-bidi-font-weight:normal'> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>After winning a gruesome battle
against the Romans in a far-away land, Asterix and his dearest friend Obelix
are now returning home. However Obelix is not with Asterix now. He has left
Asterix in order to deliver menhir to one of his international buyers (as you
probably know, recently he has extended his trade to international markets).
But he has promised to join Asterix on his way home and Asterix has promised to
host a feast for Obelix (you know how fat he is!) in the city they meet. Obelix
may meet Asterix in any city on his way home including the starting and the
destination city.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=273
height=294 id="_x0000_i1025" src="http://uva.onlinejudge.org/external/102/p10246.jpg" ></p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Now Asterix is sitting with a map
and trying to figure out the cheapest route home. The map shows the cities and
the cost (in sestertii) of going from one city to another if there is a road
connecting them directly. For each city in the map Asterix has also calculated
the cost (in sestertii) of hosting a feast for Obelix in that city. There will
be only one feast and for safety Asterix has decided to set aside enough
sestertii to host a feast in the costliest city on the route.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Since Asterix does not have a
computer, he seeks your help to find out the cheapest route home.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>The input may contain multiple
test cases.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>The first line of each test case
contains three integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>C</span> (</b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> 80)</b>, <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>R</span> (</b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span>
1000)</b> and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>Q</span> (</b><b style='mso-bidi-font-weight:normal'><span
style='font-family:Symbol'>Â£</span> 6320)</b> where <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>C</span></b> indicates the
number of cities (cities are numbered using distinct integers ranging from 1 to
<b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>C</span></b>),
<b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>R</span></b>
represents the number of roads and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>Q</span></b> is the number of queries.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>The next line contains <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>C</span></b>
integers where the <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>i</span></b>-th integer <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>f<sub>i</sub></span></b> is
the cost (in sestertii) of hosting a feast in city <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>i</span></b>. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Each of the next <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>R</span></b>
lines contains three integers: <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>c</span><sub>1</sub>, <span
style='mso-bidi-font-style:italic'>c</span><sub>2</sub> (</b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â¹</span> <span
style='mso-bidi-font-style:italic'>c</span><sub>1</sub>)</b> and <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>d</span></b>
indicating that the cost of going from city <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>c</span><sub>1<span
style='mso-bidi-font-weight:bold'> </span></sub></b>to <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>c</span><sub>2</sub></b> (or
from <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>c</span><sub>2<span style='mso-bidi-font-weight:bold'> </span></sub></b>to
<b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>c</span><sub>1</sub></b>)
is <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>d</span></b> sestertii. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Each of the next <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>Q</span></b>
lines contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>c</span><sub>1</sub></b> and <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>c</span><sub>2</sub>
(<span style='mso-bidi-font-style:italic'>c</span><sub>1<span style='mso-bidi-font-weight:
bold'> </span></sub></b><b style='mso-bidi-font-weight:normal'><span
style='font-family:Symbol'>Â¹</span> <span style='mso-bidi-font-style:italic'>c</span><sub>2</sub>)</b>
asking for the cost (in sestertii) of the cheapest route from city <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>c</span><sub>1<span
style='mso-bidi-font-weight:bold'> </span></sub></b>to city <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>c</span><sub>2</sub></b>.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>The input will terminate with
three zeros form <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>C</span></b>, <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>S</span></b> and <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>Q</span></b>.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
first output the test case number (starting from 1) as shown in the sample
output. Then for each query in the input print a line giving the minimum cost
(in sestertii) of going from the first to the second city in the query. If
there exists no path between them just print Â“<span style='font-family:"Courier New"'>Â–1</span>Â”.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Print a blank line between two
consecutive test cases.</p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>7 8 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>2 3 5 15 4 4 6</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 2 20</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 4 20</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 5 50</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>2 3 10</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>3 4 10</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>3 5 10</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 5 15</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>6 7 10</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 6</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>5 1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>3 1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>6 7</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 4 2</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>2 1 8 3</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 2 7</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 3 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>2 4 8</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>3 4 6</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1 4</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>2 3</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>0 0 0</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>Case
#1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>45</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>-1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>45</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>35</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>16</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>Case
#2</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>18</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>20<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(World Finals Warm-up Contest,
Problem Setter: Rezaul Alam Chowdhury)</span></b></p>

</div>

</body>

</html>

______________________________________________________
10247||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p1_files/filelist.xml">
<link rel=Edit-Time-Data href="p1_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem B - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>98</o:Revision>
  <o:TotalTime>946</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-03-11T00:31:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>181</o:Words>
  <o:Characters>1032</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>8</o:Lines>
  <o:Paragraphs>2</o:Paragraphs>
  <o:CharactersWithSpaces>1211</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="7170"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem B<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Complete Tree Labeling! </span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Input: </span></b><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Output: </span></b><span style='mso-bidi-font-size:
12.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
12.0pt'> 45 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'>Memory Limit: </span></b><span
style='mso-bidi-font-size:12.0pt'>32 MB<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>A complete <b style='mso-bidi-font-weight:normal'>k</b>-ary tree is a <b
style='mso-bidi-font-weight:normal'>k</b>-ary tree in which all leaves have
same depth and all internal nodes have degree <b style='mso-bidi-font-weight:
normal'>k</b>. This <b style='mso-bidi-font-weight:normal'>k</b> is also known
as the branching factor of a tree. It is very easy to determine the number of
nodes of such a tree. Given the depth and branching factor of such a tree, you
will have to determine in how many different ways you can number the nodes of
the tree so that the label of each node is less that that of its descendants.
You should assume that for numbering a tree with <b style='mso-bidi-font-weight:
normal'>N</b> nodes you have the <b style='mso-bidi-font-weight:normal'>(1, 2,
3, N-1, N)</b> labels available.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file will contain
several lines of input. Each line will contain two integers <b
style='mso-bidi-font-weight:normal'>k</b> and <b style='mso-bidi-font-weight:
normal'>d</b>. Here <b style='mso-bidi-font-weight:normal'>k</b> is the
branching factor of the complete <b style='mso-bidi-font-weight:normal'>k-ary</b>
tree and <b style='mso-bidi-font-weight:normal'>d</b> is the depth of the
complete <b style='mso-bidi-font-weight:normal'>k</b>-ary tree (<b
style='mso-bidi-font-weight:normal'>k&gt;0, d&gt;0, k*d&lt;=21</b>).</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'>For each line
of input, produce one line of output containing a round number, which is the
number of ways the <b style='mso-bidi-font-weight:normal'>k</b>-ary tree can be
labeled, maintaining the constraints described above.</p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'>2 2<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'>10 1<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'>80<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'>3628800</span><span style='mso-bidi-font-size:12.0pt;
color:windowtext'><o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>(World Final Warm-up
Contest, Problem Setter: Shahriar Manzoor)</b><b><span style='mso-bidi-font-size:
13.5pt;color:windowtext'><o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10248||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p2_files/filelist.xml">
<link rel=Edit-Time-Data href="p2_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>76</o:Revision>
  <o:TotalTime>340</o:TotalTime>
  <o:LastPrinted>2001-08-13T05:09:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-03-11T06:51:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>228</o:Words>
  <o:Characters>1306</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>10</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1531</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:13.5pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="4098"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem C<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>The Integer All-time Champ</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 30 seconds</span><span style='font-size:13.5pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>As Alan Turing and his friend
David Champernowne gave the name &#8220;The All-time Champ&#8221; number (as a joke
with the David surname) to the trascendental constant <b style='mso-bidi-font-weight:
normal'>0.1234567891011...</b> <span class=GramE>obtained</span> by
concatenating the positive integers and interpreting them as decimal digits to
the right of a decimal point, let us nominate &#8220;All-time Champ
Integers&#8221; to the numbers constructed by concatenating the digits of a set
of consecutive integers.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Given two natural numbers <b
style='mso-bidi-font-weight:normal'>0&lt;m&lt;=n</b>, there is a such integer,
but there are other natural numbers that contain, as substrings, all the
numbers between <b style='mso-bidi-font-weight:normal'>m</b> and <b
style='mso-bidi-font-weight:normal'>n</b>, both included. For example for <b
style='mso-bidi-font-weight:normal'>m=1</b> and <b style='mso-bidi-font-weight:
normal'>n=13</b>, possible solutions are <b style='mso-bidi-font-weight:normal'>12345678910111213</b>
(the corresponding &#8220;Champ&#8221;), <b style='mso-bidi-font-weight:normal'>1011213456789</b>
or <b style='mso-bidi-font-weight:normal'>1101213456789</b>. We can see that
the last two numbers have only <b style='mso-bidi-font-weight:normal'>13</b>
digits as against the <b style='mso-bidi-font-weight:normal'>17</b> of the
&#8220;Champ&#8221;. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Your task is to find out the
shortest such integer.</p>

<p class=MsoNormal style='text-align:justify;tab-stops:429.75pt'><span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains two natural numbers <b style='mso-bidi-font-weight:
normal'>m</b> and <b style='mso-bidi-font-weight:normal'>n</b> <b
style='mso-bidi-font-weight:normal'>(0&lt;m&lt;=n&lt;100)</b>. Input is
terminated by end of file.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>For each line of input produce one line of output. <span class=GramE>This
line contain</span> the shortest integer that contains as substring all the
numbers between <b style='mso-bidi-font-weight:normal'>m</b> and <b
style='mso-bidi-font-weight:normal'>n</b> (both included). There may be more
than one solution. We will accept any one of the solutions.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>1 13</p>

<p class=MsoNormal style='text-align:justify'>1 4</p>

<p class=MsoNormal style='text-align:justify'>13 14</p>

<p class=MsoNormal style='text-align:justify'>11 12</p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>1101213456789</p>

<p class=MsoNormal style='text-align:justify'>1234</p>

<p class=MsoNormal style='text-align:justify'>1314</p>

<p class=MsoNormal style='text-align:justify'>112</p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>(World Final Warm-up
Contest, Problem Setter: Miguel Revilla)<o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10249||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p3_files/filelist.xml">
<link rel=Edit-Time-Data href="p3_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem D - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:16.0pt'>Problem D</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>The Grand Dinner</span></b><span style='font-size:
24.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b><span
style='mso-bidi-font-weight:bold'>standard input</span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>15 seconds</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>Each team participating in this
yearÂ’s <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>ACM World Finals</span></b> contest is expected to join the grand dinner
to be arranged after the prize giving ceremony ends. In order to maximize the
interaction among the members of different teams, it is expected that no two
members of the same team sit at the same table. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Now, given the number of members
in each team (including contestants, coaches, reserves, guests etc.) and the
seating capacity of each available table, you are to determine whether it is
possible for the teams to sit as described in the previous paragraph. If such
an arrangement is possible you must also output one possible seating
arrangement. If there are multiple possible arrangements, any one is
acceptable.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span>The
input file may contain multiple test cases. The first line of each test case
contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>M</span> (1 </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> <span style='mso-bidi-font-style:
italic'>M</span> </b><b style='mso-bidi-font-weight:normal'><span
style='font-family:Symbol'>Â£</span> 70)</b> and <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>N</span> (1 </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span> <span
style='mso-bidi-font-style:italic'>N</span> </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> 50)</b> denoting the number
of teams and the number of tables respectively. The second line of the test
case contains <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>M</span></b> integers where the <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>i</span></b>-th <b style='mso-bidi-font-weight:
normal'>(1 </b><b style='mso-bidi-font-weight:normal'><span style='font-family:
Symbol'>Â£</span> <span style='mso-bidi-font-style:italic'>i</span> </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span> <span
style='mso-bidi-font-style:italic'>M</span>)</b> integer <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>m<sub>i</sub></span> (1 </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span> <span
style='mso-bidi-font-style:italic'>m<sub>i</sub></span> </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span>
100)</b> indicates the number of members of team <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>i</span></b>. The third line
contains <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>N</span></b> integers where the <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>j</span></b>-th <b style='mso-bidi-font-weight:
normal'>(1 </b><b style='mso-bidi-font-weight:normal'><span style='font-family:
Symbol'>Â£</span> <span style='mso-bidi-font-style:italic'>j</span> </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span> <span
style='mso-bidi-font-style:italic'>N</span>)</b> integer <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>n<sub>j</sub></span> (2 </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span> <span
style='mso-bidi-font-style:italic'>n<sub>j</sub></span> </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span>
100)</b> indicates the seating capacity of table <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>j</span></b>.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>A test case containing two zeros
for <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>M</span></b> and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>N</span></b> terminates the input.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>For each test case in the input
print a line containing either <b style='mso-bidi-font-weight:normal'>1</b> or <b
style='mso-bidi-font-weight:normal'>0</b> depending on whether or not there
exists a valid seating arrangement of the team members. In case of a successful
arrangement print <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>M</span></b> additional lines where <span
class=GramE>the <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>i</span></b></span>-th <b style='mso-bidi-font-weight:normal'>(1 </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span> <span
style='mso-bidi-font-style:italic'>i</span> </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span><span style='mso-bidi-font-style:
italic'> M</span>)</b> of these lines contains a table number (an integer from <b
style='mso-bidi-font-weight:normal'>1</b> to <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>N</span></b>) for each of the
members of team <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>i</span></b>.</p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";layout-grid-mode:line'>4 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 5 3 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>3 5 2 6 4</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 5 3 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>3 5 2 6 3</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>0 0</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New"'>1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>1 2
4 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>1 2
3 4 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>2 4
5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>1 2
3 4 5</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>0<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(World Finals Warm-up Contest,
Problem Setter: Rezaul Alam Chowdhury)<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10250||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p4_files/filelist.xml">
<link rel=Edit-Time-Data href="p4_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem E - World Finals Warmup Occidental Contest</title>

<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rezaul Alam Chowdhury</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>66</o:Revision>
  <o:TotalTime>553</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-08-25T15:11:00Z</o:Created>
  <o:LastSaved>2002-03-11T04:37:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>290</o:Words>
  <o:Characters>1658</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1945</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem E<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>The Other Two Trees</span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>You have a quadrilateral shaped
land whose opposite fences are of equal length. You have four neighbors whose lands
are exactly adjacent to your four fences, that <span class=GramE>means</span>
you have a common fence with all of them. For example if you have a fence of
length <b style='mso-bidi-font-weight:normal'>d</b> in one side, this fence of
length <b style='mso-bidi-font-weight:normal'>d</b> is also the fence of the
adjacent neighbor on that side. The adjacent neighbors have no fence in common
among themselves and their lands also donÂ’t intersect. The main difference
between their land and your land is that their lands are all square shaped. All
your neighbors have a tree at the center of their lands. Given the Cartesian
coordinates of trees of two opposite neighbors, you will have to find the
Cartesian coordinates of the other two trees. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<h2>Input</h2>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt'>The
input file contains several lines of input. Each line contains four floating
point or integer numbers <b style='mso-bidi-font-weight:normal'>x1, y1, x2, y2,</b>
where <b style='mso-bidi-font-weight:normal'>(x1, y1), (x2, y2)</b> are the
coordinates of the trees of two opposite neighbors. Input is terminated by end
of file.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt'><o:p>&nbsp;</o:p></span></p>

<h2>Output</h2>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>For each line of input produce one line of output which contains the
line <b style='mso-bidi-font-weight:normal'>Â“Impossible.Â”</b> without the
quotes, if you cannot determine the coordinates of the other two trees.
Otherwise, print four floating point numbers separated by a single space with
ten digits after the decimal point <b style='mso-bidi-font-weight:normal'>ax1,
ay1, ax2, ay2,</b> where <b style='mso-bidi-font-weight:normal'>(ax1, ay1)<span
style='mso-spacerun:yes'>Â  </span></b>and<b style='mso-bidi-font-weight:normal'>
(ax2, ay2)</b> are the coordinates of the other two trees. The output will be
checked with special judge program, so donÂ’t worry about the ordering of the
points or small precision errors. The sample output will make it clear.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>

<h2>Sample Input</h2>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>10 0 -10 0<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>10 0 -10 0<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>10 0 -10 0<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'><o:p>&nbsp;</o:p></span></p>

<h2>Sample Output</h2>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>0.0000000000 10.0000000000 0.0000000000 -10.0000000000<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>0.0000000000 10.0000000000 -0.0000000000 -10.0000000000<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'>0.0000000000 -10.0000000000 0.0000000000 10.0000000000</span><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>(World Final Warm-up
Contest, Problem Setter: Shahriar Manzoor)<o:p></o:p></b></p>

</div>

</body>

</html>

______________________________________________________
10251||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p5_files/filelist.xml">
<link rel=Edit-Time-Data href="p5_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem F - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Administrator</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>84</o:Revision>
  <o:TotalTime>205</o:TotalTime>
  <o:Created>2001-08-02T03:19:00Z</o:Created>
  <o:LastSaved>2002-03-11T04:56:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>435</o:Words>
  <o:Characters>2483</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2913</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
tt
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:2073505680;
	mso-list-type:hybrid;
	mso-list-template-ids:-1384852558 -806846940 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:57.0pt;
	mso-level-number-position:left;
	margin-left:57.0pt;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="9218"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem F<span style='color:black'><o:p></o:p></span></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Min-Max Cake</span> </b><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:10.0pt;
color:black'><o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<span style='color:black'> <o:p></o:p></span></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:13.5pt'>Memory Limit: </span></b><span
style='mso-bidi-font-size:13.5pt'>64 MB</span><span style='font-size:13.5pt'><o:p></o:p></span></p>

<p style='text-align:justify'><span style='mso-bidi-font-weight:bold'>Motashota
is a very fat boy. His younger brother Sumit, is very thin (Quite understandable
as Motashota eats all the food at home). Sumit does not complain much but he
wants equal share of only one thing. I guess you have seen the big Birthday
Cakes which have a big round flower positioned within the cake. Sumit always
wants equal share of this creamy flower and Motashota likes everything but this
creamy flower of a cake so he does not hesitate to share this creamy flower.
Given the description of a cake and the position of the center of the creamy
flower you will have to determine the minimum amount (volume) of cake (Except
the flower) that Sumit must have to get his equal share of flower. You should
assume that<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>a)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>A knife is used to cut the Cake<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>The cutting path is always a straight line.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>c)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>Cakes are either circular or square shaped.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>d)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>The Cutting plain is always vertical.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>e)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>The flower is always strictly inside the
Cake.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>f)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-bidi-font-weight:bold'>The
height of the cake is same everywhere.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>g)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>The side walls of the cake are vertical.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>h)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-weight:bold'>All the surfaces of the cake are plain except
the position of the flower.<o:p></o:p></span></p>

<p style='margin-left:57.0pt;text-align:justify;text-indent:-.25in;mso-list:
l0 level1 lfo2;tab-stops:list 57.0pt'><![if !supportLists]><span
style='mso-bidi-font-weight:bold'><span style='mso-list:Ignore'>i)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-bidi-font-weight:bold'>The
flower is symmetric in all direction and placed on the top plain surface of the
cake.<span style='mso-spacerun:yes'>Â  </span><o:p></o:p></span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Input <o:p></o:p></span></b></p>

<p style='text-align:justify'><span style='mso-bidi-font-weight:bold'>The first
line of the input file is an integer <b>N</b> which indicates how many sets of
inputs are there. Each of the next <b>N</b> lines contains three (if the Cake
is circular) or four (if the Cake is square shaped) integers.<o:p></o:p></span></p>

<p style='text-align:justify'><span style='mso-bidi-font-weight:bold'>If the
cake is circular then the first integer <b>L</b> denotes the radius of the
cake, the second integer <b>H</b> denotes the height of the cake and the third
integer <b>D (D&lt;L)</b> denotes the distance of the center of the flower from
the center of the Cake.<o:p></o:p></span></p>

<p style='text-align:justify'>If the cake is square shaped then the first
integer <b style='mso-bidi-font-weight:normal'>L</b> denotes the length of one
side of the cake, the second integer <b style='mso-bidi-font-weight:normal'>H </b>denotes
the height of the cake and the third integer <b style='mso-bidi-font-weight:
normal'>DX (DX&lt;L/2.0) </b>denotes the horizontal distance of the center of
the flower from the center of the cake and <b style='mso-bidi-font-weight:normal'>DY
(DY&lt;L/2.0) </b>denotes the vertical distance of the center of the flower
from the center of the cake. The center of a square is the intersection point
of its two diagonals. You may assume that the square shaped cake is placed on a
graph paper and its sides are parallel to x-axis or y-axis, horizontal and
vertical distance between two points means the difference of their <b
style='mso-bidi-font-weight:normal'>x</b>-coordinate and <b style='mso-bidi-font-weight:
normal'>y</b>-coordinate respectively. If the coordinates of two points is <b
style='mso-bidi-font-weight:normal'>(1, 6)</b> and <b style='mso-bidi-font-weight:
normal'>(4, 2)</b>, their horizontal distance is <b style='mso-bidi-font-weight:
normal'>(4-1) =3</b> and vertical distance is <b style='mso-bidi-font-weight:
normal'>(6-2) =4</b>.<span style='mso-spacerun:yes'>Â  </span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Output</span></b></p>

<p style='text-align:justify'><span style='mso-bidi-font-weight:bold'>For each
line of input print in a single the minimum volume of cake that Sumit must get
to get his equal share of creamy flower. This value should have three digits after
the decimal point.<o:p></o:p></span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Sample Input</span></b></p>

<p class=MsoNormal><span style='font-family:Courier'>3<br>
10 3 8<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>10 3 0 0<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:Courier'>20 1 0 0</span></p>

<p style='text-align:justify'><b><span style='font-size:18.0pt;mso-bidi-font-size:
12.0pt'>Sample Input</span></b></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>49.050<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>150.000<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>200.000<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>(World Final Warm-up
Contest, Problem Setter: Shahriar Manzoor)<o:p></o:p></b></p>

<pre style='text-align:justify'><b><span style='font-size:12.0pt;mso-bidi-font-size:
10.0pt;font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></b></pre></div>

</body>

</html>

______________________________________________________
10252||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p6_files/filelist.xml">
<link rel=Edit-Time-Data href="p6_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem G - World Finals Warmup Occidental Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceType"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>66</o:Revision>
  <o:TotalTime>198</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-03-11T06:57:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>147</o:Words>
  <o:Characters>843</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>7</o:Lines>
  <o:Paragraphs>1</o:Paragraphs>
  <o:CharactersWithSpaces>989</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="3074"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem G</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Common Permutation</span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 4 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:13.5pt'>Memory Limit: </span></b><span
style='mso-bidi-font-size:13.5pt'>32 MB</span><o:p></o:p></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>Given
two strings of lowercase letters, <b style='mso-bidi-font-weight:normal'><i>a</i></b>
and <b style='mso-bidi-font-weight:normal'><i>b</i></b>, print the longest
string <b style='mso-bidi-font-weight:normal'><i>x</i></b> of lowercase letters
such that there is a permutation of <b style='mso-bidi-font-weight:normal'><i>x</i></b>
that is a subsequence of <b style='mso-bidi-font-weight:normal'><i>a</i></b>
and there is a permutation of <b style='mso-bidi-font-weight:normal'><i>x</i></b>
that is a subsequence of <b style='mso-bidi-font-weight:normal'><i>b</i></b>. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>Input file contains several lines of input.
Consecutive two lines make a set of input. That means in the input file line <b
style='mso-bidi-font-weight:normal'>1</b> and <b style='mso-bidi-font-weight:
normal'>2</b> is a set of input, line <b style='mso-bidi-font-weight:normal'>3</b>
and <b style='mso-bidi-font-weight:normal'>4</b> is a set of input and so on.
The first line of a pair contains <b style='mso-bidi-font-weight:normal'><i>a</i></b>
and the second contains <b style='mso-bidi-font-weight:normal'><i>b</i></b>.
Each string is on a separate line and consists of at most <b style='mso-bidi-font-weight:
normal'>1000</b> lowercase letters.</span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>For each set of input, output a line containing <b
style='mso-bidi-font-weight:normal'><i>x</i></b>. If several <b
style='mso-bidi-font-weight:normal'><i>x</i></b> satisfy the criteria above,
choose the first one in alphabetical order. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<pre>pretty</pre><pre>women</pre><pre>walking</pre><pre>down</pre><pre>the</pre><pre>street</pre><pre><o:p>&nbsp;</o:p></pre>

<p class=MsoNormal style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:18.0pt'>Sample Output:</span><o:p></o:p></b></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;font-family:"Courier New";color:windowtext'>e<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;font-family:"Courier New";color:windowtext'>nw<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>et</span><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'><o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b>(World
Finals Warm-up Contest, Problem Source: </b><st1:place><st1:PlaceType><b>University</b></st1:PlaceType><b>
 of </b><st1:PlaceName><b>Alberta</b></st1:PlaceName></st1:place><b> Local
Contest)</b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10253||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p7_files/filelist.xml">
<link rel=Edit-Time-Data href="p7_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem H - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem H</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>Series-Parallel Networks</span></b><span
style='font-size:24.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b><span
style='mso-bidi-font-weight:bold'>standard input</span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Output:<span
style='mso-spacerun:yes'>Â  </span></b>standard output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>5 seconds</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>In this problem you are expected
to count <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>two-terminal series-parallel networks</span></b>. These are electric
networks considered topologically or geometrically, that is, without the
electrical properties of the elements connected. One of the two terminals can be
considered as the <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>source</span></b> and the other as the <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>sink</span></b>.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoBodyTextIndent style='text-indent:0in'>A two-terminal network will
be considered series-parallel if it can be obtained iteratively in the
following way:</p>

<p class=MsoBodyTextIndent style='text-indent:0in'><span style='font-size:6.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-left:1.0in;text-align:justify;text-indent:
-.25in'><span style='font-size:8.0pt;font-family:Wingdings'>q</span><span
style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>A single
edge is two-terminal series-parallel.</p>

<p class=MsoNormal style='margin-left:1.0in;text-align:justify;text-indent:
-.25in'><span style='font-size:8.0pt;font-family:Wingdings'>q</span><span
style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>If <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>G</span><sub>1</sub></b>
and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>G</span><sub>2</sub></b> are two-terminal series-parallel, so is the
network obtained by identifying the sources and sinks, respectively (parallel
composition). </p>

<p class=MsoNormal style='margin-left:1.0in;text-align:justify;text-indent:
-.25in'><span style='font-size:8.0pt;font-family:Wingdings'>q</span><span
style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>If <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>G</span><sub>1</sub></b>
and <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>G</span><sub>2</sub></b> are two-terminal series-parallel, so is the
network obtained by identifying the sink of <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>G</span><sub>1</sub></b><sub> </sub>with
the source of <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>G</span><sub>2</sub></b> (series composition).</p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:6.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>Note here that in a
series-parallel network two nodes can be connected by multiple edges. Moreover,
networks are regarded as equivalent, not only topologically, but also when interchange
of elements in series brings them into congruence; otherwise stated, series
interchange is an equivalence operation. For example, the following three
networks are equivalent:</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal align=center style='text-align:center'><img width=480
height=24 id="_x0000_i1025" src="http://uva.onlinejudge.org/external/102/p10253a.gif" ></p>

<p class=MsoNormal align=center style='text-align:center'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Similarly, parallel interchange
is also an equivalence operation. For example, the following three networks are
also equivalent:</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'><span
style='font-size:5.0pt'>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center'><img width=390
height=56 id="_x0000_i1026" src="http://uva.onlinejudge.org/external/102/p10253a.gif" ></p>

<p class=MsoBodyTextIndent><span style='font-size:6.0pt'>&nbsp;</span></p>

<p class=MsoBodyTextIndent style='text-indent:0in'>Now, given a number <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>N</span></b>,
you are expected to count the number of two-terminal series parallel networks
containing exactly <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>N</span></b> edges. For example, for <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>N</span>
= 4</b>, there are exactly <b style='mso-bidi-font-weight:normal'>10</b> series-parallel
networks as shown below:</p>

<p class=MsoBodyTextIndent style='text-indent:0in'><span style='font-size:6.0pt'>&nbsp;</span></p>

<p class=MsoBodyTextIndent align=center style='text-align:center;text-indent:
0in'><img width=456 height=149 id="_x0000_i1027" src="http://uva.onlinejudge.org/external/102/p10253a.gif" ></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal>Each line of the input file contains an integer <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>N</span>
(1 </b><b style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span>
<span style='mso-bidi-font-style:italic'>N</span> </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> 30)</b> specifying the number
of edges in the network.</p>

<p class=MsoNormal style='text-align:justify'>A line containing a zero for <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>N</span></b>
terminates the input and this input need not be considered.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>For each <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>N</span></b> in the input file
print a line containing the number of two-terminal series-parallel networks
that can be obtained using exactly <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>N</span></b> edges.</p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>15</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>0</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>1</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>10</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>1399068<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(World Final Warm-up Contest,
Problem Setter: Rezaul Alam Chowdhury)<o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10254||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p8_files/filelist.xml">
<link rel=Edit-Time-Data href="p8_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem I - World Finals Warmup Occidental Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceType"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="City"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>77</o:Revision>
  <o:TotalTime>311</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-03-11T06:08:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>362</o:Words>
  <o:Characters>2068</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2426</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Americana BT";
	panose-1:2 2 5 4 7 5 6 2 9 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:135 0 0 0 27 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
h3
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;}
h4
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	mso-bidi-font-size:8.5pt;
	font-family:"Americana BT";
	color:black;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="4098"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem I</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>The Priest Mathematician</span> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<h3>Time Limit: <span style='font-weight:normal'>10 seconds<o:p></o:p></span></h3>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The ancient folklore behind the <b
style='mso-bidi-font-weight:normal'>&quot;Towers of </b><st1:City><st1:place><b
  style='mso-bidi-font-weight:normal'>Hanoi</b></st1:place></st1:City><b
style='mso-bidi-font-weight:normal'>&quot;</b> puzzle invented by E. Lucas in <b
style='mso-bidi-font-weight:normal'>1883</b> is quite well known to us. One more
recent legend tells us that the Brahmin monks from <st1:place>Benares</st1:place>
never believed that the world could vanish at the moment they finished to
transfer the <b style='mso-bidi-font-weight:normal'>64</b> discs from the
needle on which they were to one of the other needles, and they decided to
finish the task as soon as possible.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal align=center style='text-align:center'><!--[if gte vml 1]><v:shapetype
 id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
 path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:350.25pt;
 height:186.75pt'>
 <v:imagedata src="http://uva.onlinejudge.org/external/102/p10254a.png"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=467 height=249
src="http://uva.onlinejudge.org/external/102/p10254a.png"  v:shapes="_x0000_i1025"><![endif]></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Fig: The Four Needle (Peg) </b><st1:place><st1:PlaceType><b
  style='mso-bidi-font-weight:normal'>Tower</b></st1:PlaceType><b
 style='mso-bidi-font-weight:normal'> of </b><st1:PlaceName><b
  style='mso-bidi-font-weight:normal'>Hanoi</b></st1:PlaceName></st1:place><b
style='mso-bidi-font-weight:normal'><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>One of the priests at the <st1:place>Benares</st1:place>
temple (who loved the mathematics) assured their colleagues to achieve the
transfer in the afternoon (the rhythm they had thought was a disc-per-second)
by using an additional needle. They couldn't believe him, but he proposed them
the following strategy:</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>-- First move the topmost discs (say the top <b
style='mso-bidi-font-weight:normal'>k</b> discs) to one of the spare needles.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>-- Then use the standard three
needles strategy to move the remaining <b style='mso-bidi-font-weight:normal'>n-k</b>
discs (for a general case with n discs) to their destination.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>-- Finally, move the top <b style='mso-bidi-font-weight:
normal'>k</b> discs into their final destination using the four needles.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>He calculated the value to <b
style='mso-bidi-font-weight:normal'>k</b> in order to minimize the number of
movements and get a total of <b style='mso-bidi-font-weight:normal'>18433</b>
transfers, so they spent just <b style='mso-bidi-font-weight:normal'>5</b>
hours, <b style='mso-bidi-font-weight:normal'>7</b> minutes and <b
style='mso-bidi-font-weight:normal'>13</b> seconds against the more than <b
style='mso-bidi-font-weight:normal'>500000</b> millions years without the
additional needle (as they would have to do <b style='mso-bidi-font-weight:
normal'>2^64-1</b> disc transfers. Can you believe it?)</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Try to follow the clever priest's
strategy and calculate the number of transfer using four needles but according
with the fixed and immutable laws of Brahma, which require that the priest on
duty must not move more than one disc at a time and that he must place this
disc on a needle so that there is no smaller disc below it. Of course, the main
goal is to calculate the k that minimize the number of transfers (even thought
it is not know for sure that this is always the optimal number of movements).</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>Input<span style='font-size:12.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains a single integer <b style='mso-bidi-font-weight:
normal'>N</b>, which is the number of disks to be transferred. Here <b
style='mso-bidi-font-weight:normal'>0&lt;=N&lt;=10000</b>. Input is terminated
by end of file.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>For each line of input produce one line of output which indicates the
number of movements required to transfer the <b>N</b> disks to the final
needle.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>1<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>2<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>28<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>64<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>1<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>3<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>769<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'>18433<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>(World Finals Warm-up
Contest, Problem Setter: Miguel Revilla)<o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10255||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p9_files/filelist.xml">
<link rel=Edit-Time-Data href="p9_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem J - World Finals Warmup Occidental Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>129</o:Revision>
  <o:TotalTime>350</o:TotalTime>
  <o:LastPrinted>2001-07-19T02:33:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-03-11T07:01:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>377</o:Words>
  <o:Characters>2154</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>17</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2526</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
a:link, span.MsoHyperlink
	{color:#771111;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:595.45pt 841.7pt;
	margin:.8in 1.0in .8in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="4098"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link="#771111" vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem J<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt;mso-bidi-font-size:10.0pt'>The KnightÂ’s
Tour<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Input: </span></b><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Output: </span></b><span style='mso-bidi-font-size:
12.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
12.0pt'> 5 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'>Memory Limit: </span></b><span
style='mso-bidi-font-size:12.0pt'>32 MB<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>The KnightÂ’s Tour Happens on a <b
style='mso-bidi-font-weight:normal'>(N x N)</b> Chess Board. There are two types
of knightÂ’s tour, a) KnightÂ’s Circuit Tour and b) KnightÂ’s Path Tour. KnightÂ’s
Circuit Tour means that Knight will start from a square, follow KnightÂ’s
movement rules and jump to another square and thus visit all the squares and
come back to its initial square without visiting any square twice. KnightÂ’s
path tour is very similar to this; the only difference is that knight wonÂ’t
have to come back to its initial square. Below you can see two types of
knightÂ’s tour in a (<b>6 x 6)</b> board. All the circuit tours are also path
tours but not vice versa.</p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal><span style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0
 style='margin-left:71.6pt;border-collapse:collapse;border:none;mso-border-alt:
 solid windowtext .5pt;mso-yfti-tbllook:480;mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-border-insideh:.5pt solid windowtext;mso-border-insidev:.5pt solid windowtext'>
 <tr style='mso-yfti-irow:0'>
  <td width=288 valign=top style='width:216.3pt;border:solid windowtext 1.0pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><!--[if gte vml 1]><o:wrapblock><v:shapetype id="_x0000_t75"
    coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
    filled="f" stroked="f">
    <v:stroke joinstyle="miter"/>
    <v:formulas>
     <v:f eqn="if lineDrawn pixelLineWidth 0"/>
     <v:f eqn="sum @0 1 0"/>
     <v:f eqn="sum 0 0 @1"/>
     <v:f eqn="prod @2 1 2"/>
     <v:f eqn="prod @3 21600 pixelWidth"/>
     <v:f eqn="prod @3 21600 pixelHeight"/>
     <v:f eqn="sum @0 0 1"/>
     <v:f eqn="prod @6 1 2"/>
     <v:f eqn="prod @7 21600 pixelWidth"/>
     <v:f eqn="sum @8 21600 0"/>
     <v:f eqn="prod @7 21600 pixelHeight"/>
     <v:f eqn="sum @10 21600 0"/>
    </v:formulas>
    <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
    <o:lock v:ext="edit" aspectratio="t"/>
   </v:shapetype><v:shape id="_x0000_s1028" type="#_x0000_t75" style='position:absolute;
    margin-left:0;margin-top:0;width:187.5pt;height:190.5pt;z-index:1'>
    <v:imagedata src="http://uva.onlinejudge.org/external/102/p10255a.png"  o:title=" />
    <w:wrap type="topAndBottom"/>
   </v:shape><![endif]--><![if !vml]><img width=250 height=254
   src="http://uva.onlinejudge.org/external/102/p10255a.png"  v:shapes="_x0000_s1028"><![endif]><!--[if gte vml 1]></o:wrapblock><![endif]--><br
  style='mso-ignore:vglayout' clear=ALL>
  <span style='font-family:"Courier New"'><o:p></o:p></span></p>
  </td>
  <td width=306 valign=top style='width:229.2pt;border:solid windowtext 1.0pt;
  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:
  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal><!--[if gte vml 1]><o:wrapblock><v:shape id="_x0000_s1029"
    type="#_x0000_t75" style='position:absolute;margin-left:0;margin-top:0;
    width:187.5pt;height:190.5pt;z-index:2;mso-position-horizontal-relative:text;
    mso-position-vertical-relative:text'>
    <v:imagedata src="http://uva.onlinejudge.org/external/102/p10255a.png"  o:title=" />
    <w:wrap type="topAndBottom"/>
   </v:shape><![endif]--><![if !vml]><img width=250 height=254
   src="http://uva.onlinejudge.org/external/102/p10255a.png"  v:shapes="_x0000_s1029"><![endif]><!--[if gte vml 1]></o:wrapblock><![endif]--><br
  style='mso-ignore:vglayout' clear=ALL>
  <span style='font-family:"Courier New"'><o:p></o:p></span></p>
  </td>
 </tr>
 <tr style='mso-yfti-irow:1;mso-yfti-lastrow:yes'>
  <td width=288 valign=top style='width:216.3pt;border:solid windowtext 1.0pt;
  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;
  padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b
  style='mso-bidi-font-weight:normal'>Fig: KnightÂ’s Circuit Tour<o:p></o:p></b></p>
  </td>
  <td width=306 valign=top style='width:229.2pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;
  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b
  style='mso-bidi-font-weight:normal'>Fig: KnightÂ’s Path Tour<o:p></o:p></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span style='font-family:"Courier New"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'>Given a board size <b>N</b> you will have to
determine whether there exists a KnightÂ’s Circuit Tour in that Board. If there is
a knight Circuit Tour you will have to print the knight Path Tour in that Board
from a given location. You can assume that there will be a possible Knight Path
Tour from that given position when there exists a knightÂ’s circuit tour in that
board.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;mso-bidi-font-weight:bold'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains three integer <b>N (1&lt;N&lt;=50)</b>, <b>row
(1&lt;= row &lt;=N)</b>, <b>col (1&lt;= col &lt;=N)</b>. Here <b>N</b> is the
board length, <b>row</b> and <b>col</b> are the row and column of the starting position.
The row increases from top to bottom and column increases from left to right. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<h2>Output<span style='mso-bidi-font-size:10.0pt'><o:p></o:p></span></h2>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>If there is no knightÂ’s circuit tour possible for the </span><b
style='mso-bidi-font-weight:normal'>(N x N)</b><span style='mso-bidi-font-weight:
bold'> board, print the line </span><b style='mso-bidi-font-weight:normal'>Â“No
Circuit Tour.Â”</b><span style='mso-bidi-font-weight:bold'>, otherwise print </span><b
style='mso-bidi-font-weight:normal'>N</b><span style='mso-bidi-font-weight:
bold'> lines each containing </span><b style='mso-bidi-font-weight:normal'>N</b><span
style='mso-bidi-font-weight:bold'> numbers. The increasing numbers actually
shows the order of knightÂ’s path tour. So the starting position will always
have </span><b style='mso-bidi-font-weight:normal'>1</b><span style='mso-bidi-font-weight:
bold'> and the last position will always have </span><b style='mso-bidi-font-weight:
normal'>(N x N)</b><span style='mso-bidi-font-weight:bold'>. All the numbers
will be printed right justified in a field width of five. A blank line should
separate the output for two consecutive sets. </span>If there is more than one
solution, any one of the solutions will be enough.<span style='mso-bidi-font-weight:
bold'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'>&nbsp;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;font-family:"Courier New"'>5 1 1<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;font-family:"Courier New"'>6 2 2<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
18.0pt;font-family:"Courier New"'>6 1 1<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output:</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'>No Circuit Tour.<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>25<span
style='mso-spacerun:yes'>Â Â  </span>32<span style='mso-spacerun:yes'>Â Â 
</span>11<span style='mso-spacerun:yes'>Â Â Â  </span>2<span
style='mso-spacerun:yes'>Â Â  </span>19<span style='mso-spacerun:yes'>Â Â 
</span>34<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>10<span
style='mso-spacerun:yes'>Â Â Â  </span>1<span style='mso-spacerun:yes'>Â Â 
</span>26<span style='mso-spacerun:yes'>Â Â  </span>33<span
style='mso-spacerun:yes'>Â Â  </span>12<span style='mso-spacerun:yes'>Â Â Â 
</span>3<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>31<span
style='mso-spacerun:yes'>Â Â  </span>24<span style='mso-spacerun:yes'>Â Â Â 
</span>9<span style='mso-spacerun:yes'>Â Â  </span>18<span
style='mso-spacerun:yes'>Â Â  </span>35<span style='mso-spacerun:yes'>Â Â 
</span>20<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â Â  </span>8<span
style='mso-spacerun:yes'>Â Â  </span>17<span style='mso-spacerun:yes'>Â Â 
</span>36<span style='mso-spacerun:yes'>Â Â  </span>27<span
style='mso-spacerun:yes'>Â Â Â  </span>4<span style='mso-spacerun:yes'>Â Â 
</span>13<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>23<span
style='mso-spacerun:yes'>Â Â  </span>30<span style='mso-spacerun:yes'>Â Â 
</span>15<span style='mso-spacerun:yes'>Â Â Â  </span>6<span
style='mso-spacerun:yes'>Â Â  </span>21<span style='mso-spacerun:yes'>Â Â 
</span>28<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>16<span
style='mso-spacerun:yes'>Â Â Â  </span>7<span style='mso-spacerun:yes'>Â Â 
</span>22<span style='mso-spacerun:yes'>Â Â  </span>29<span
style='mso-spacerun:yes'>Â Â  </span>14<span style='mso-spacerun:yes'>Â Â Â 
</span>5<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â Â  </span>1<span
style='mso-spacerun:yes'>Â Â  </span>32<span style='mso-spacerun:yes'>Â Â Â 
</span>9<span style='mso-spacerun:yes'>Â Â  </span>18<span
style='mso-spacerun:yes'>Â Â Â  </span>3<span style='mso-spacerun:yes'>Â Â 
</span>34<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>10<span
style='mso-spacerun:yes'>Â Â  </span>19<span style='mso-spacerun:yes'>Â Â Â 
</span>2<span style='mso-spacerun:yes'>Â Â  </span>33<span
style='mso-spacerun:yes'>Â Â  </span>28<span style='mso-spacerun:yes'>Â Â 
</span>17<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>31<span
style='mso-spacerun:yes'>Â Â Â  </span>8<span style='mso-spacerun:yes'>Â Â 
</span>29<span style='mso-spacerun:yes'>Â Â  </span>16<span
style='mso-spacerun:yes'>Â Â  </span>35<span style='mso-spacerun:yes'>Â Â Â 
</span>4<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>20<span
style='mso-spacerun:yes'>Â Â  </span>11<span style='mso-spacerun:yes'>Â Â 
</span>36<span style='mso-spacerun:yes'>Â Â  </span>27<span
style='mso-spacerun:yes'>Â Â  </span>24<span style='mso-spacerun:yes'>Â Â 
</span>15<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â Â  </span>7<span
style='mso-spacerun:yes'>Â Â  </span>30<span style='mso-spacerun:yes'>Â  </span><span
style='mso-spacerun:yes'>Â </span>13<span style='mso-spacerun:yes'>Â Â 
</span>22<span style='mso-spacerun:yes'>Â Â Â  </span>5<span
style='mso-spacerun:yes'>Â Â  </span>26<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:windowtext'><span style='mso-spacerun:yes'>Â Â  </span>12<span
style='mso-spacerun:yes'>Â Â  </span>21<span style='mso-spacerun:yes'>Â Â Â 
</span>6<span style='mso-spacerun:yes'>Â Â  </span>25<span
style='mso-spacerun:yes'>Â Â  </span>14<span style='mso-spacerun:yes'>Â Â 
</span>23</span><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>(World Final Warm-up
Contest, Problem Setter: Shahriar Manzoor)<o:p></o:p></b></p>

<p class=MsoNormal>&nbsp;</p>

</div>

</body>

</html>

______________________________________________________
10256||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p10_files/filelist.xml">
<link rel=Edit-Time-Data href="p10_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem K - World Finals Warmup Occidental Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;
	text-decoration:underline;
	text-underline:single;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:16.0pt'>Problem K</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:20.0pt'>The Great Divide</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b><span
style='mso-bidi-font-weight:bold'>standard input</span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>8 seconds<b style='mso-bidi-font-weight:normal'> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB<o:p></o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>Somewhere in <st1:place>Gaul</st1:place>,
there is a little village very like the village where <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>Asterix</span></b> and <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>Obelix</span></b>
live. Not very long ago they had only one chief <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>Altruistix</span></b> and
peace reigned in the village. But now those happy days are just dreams. The
villagers are now divided. Some of the villagers have elected <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>Majestix</span></b>
as their chief and the others have elected <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>Cleverdix</span></b>. </p>

<p class=MsoNormal style='text-align:justify'>&nbsp;</p>

<p class=MsoNormal style='tab-stops:center 285.0pt left 451.5pt'><span
style='mso-tab-count:1'>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span><img
width=152 height=152 id="_x0000_i1025" src="http://uva.onlinejudge.org/external/102/p10256a.jpg" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<img width=152 height=152 id="_x0000_i1026" src="http://uva.onlinejudge.org/external/102/p10256a.jpg" ><span
style='mso-tab-count:1'>Â Â Â Â Â Â  </span></p>

<p class=MsoNormal align=center style='text-align:center'><i><u>Majestix</u> </i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i><u>Cleverdix</u></i></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:8.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>The two chiefs have decided to
divide the village into two parts by digging a straight ditch through the
middle of the village so that the houses of the supporters of <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>Majestix</span></b>
lie on one part and those of the followers of <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>Cleverdix</span></b> lie on
the other. So, they have invited <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>Getafix</span></b><i>,</i> the venerable
druid of <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>Asterix</span>Â’s</b> village, to figure out whether such a dividing
line exists or not.</p>

<p class=MsoNormal align=center style='text-align:center'><img width=350
height=251 id="_x0000_i1027" src="http://uva.onlinejudge.org/external/102/p10256a.jpg" ></p>

<p class=MsoCaption>Getafix</p>

<p class=MsoNormal style='text-align:justify;text-indent:.5in'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>Since <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>Getafix</span></b> knows that
you are so good in programming, he seeks your help.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'>&nbsp;The input may contain
multiple test cases.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The first line of each test case
contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>M</span></b> and <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>C</span></b> <b
style='mso-bidi-font-weight:normal'>(1 </b><b style='mso-bidi-font-weight:normal'><span
style='font-family:Symbol'>Â£</span> <span style='mso-bidi-font-style:italic'>M</span>,
<span style='mso-bidi-font-style:italic'>C</span> </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> 500)</b>, indicating the
number of houses of the supporters of <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>Majestix</span></b> and <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>Cleverdix</span></b>
respectively. </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Each of the next <i>M</i> lines
contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>x</span></b> and <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>y</span></b> <b
style='mso-bidi-font-weight:normal'>(-1000 </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> <span style='mso-bidi-font-style:
italic'>x</span>, <span style='mso-bidi-font-style:italic'>y</span> </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span>
1000)</b> giving the co-ordinates of the house of a supporter of <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>Majestix</span></b>.
For convenience each house is considered as a single point on the plane.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Each of the next <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>C</span></b>
lines contains two integers <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>x</span></b> and <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>y</span></b> <b
style='mso-bidi-font-weight:normal'>(-1000 </b><b style='mso-bidi-font-weight:
normal'><span style='font-family:Symbol'>Â£</span> <span style='mso-bidi-font-style:
italic'>x</span>, <span style='mso-bidi-font-style:italic'>y</span> </b><b
style='mso-bidi-font-weight:normal'><span style='font-family:Symbol'>Â£</span>
1000)</b> giving the co-ordinates of the house of a supporter of <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>Cleverdix</span></b>.
</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>The input will terminate with two
zeros for <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>M</span></b> and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>C</span></b>.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoBodyText>For each test case in the input output a line containing
either Â“YesÂ” or Â“NoÂ” depending on whether there exists a straight line that
divides the two set of houses. The dividing line can NOT contain points of both sides.</p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 3</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>100 600</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>200 400</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>600 500</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>300 700</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>400 100</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>600 200</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>500 300</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>4 3</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>100 600</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>400 100</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>600 200</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>500 300</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>200 400</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>600 500</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>300 700</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
layout-grid-mode:line'>0 0</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>Yes</span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>No<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(World Final Warm-up Contest,
Problem Setter: Rezaul Alam Chowdhury)<o:p></o:p></span></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
10257||||||false||||||
<!-- X-URL: http://plg/~gvcormac/rfv/B.html -->
<!--BASE HREF="http://plg/~gvcormac/rfv/B.html">

<title>                       Dick and Jane</title-->
<h2>Question A - Dick and Jane</h2>

Dick is 12 years old.  When we say this, we mean that it is at least twelve
and not yet thirteen years since Dick was born.
<p>
Dick and Jane have three pets:  Spot the dog, Puff the Cat, and Yertle
the Turtle.  Spot was s years old when Puff was born; Puff was p years
old when Yertle was born; Spot was y years old when Yertle was born.
The sum of Spot's age, Puff's age, and Yertle's age equals the sum
of Dick's age (d) and Jane's age (j).  How old are Spot, Puff, and Yertle?
<p>
Each input line contains four non-negative integers: s, p, y, j.
For each input line, print a line containing three integers:  
Spot's age, Puff's age, and Yertle's age.  
Ages are given in years, as described in the first paragraph.
<p>
<h3>Sample Input</h3>
<pre>
5 5 10 9
5 5 10 10
5 5 11 10
</pre>
<h3>Output for Sample Input</h3>
<pre>
12 7 2
13 7 2
13 7 2
</pre>

______________________________________________________
10258||||||false||||||
<HTML>
<HEAD>
<!--TITLE>Contest Scoreboard</TITLE-->
</HEAD>
<BODY>
<H1>Question B - Contest Scoreboard</H1>
<P>

Think the contest score boards are wrong?  Here's your chance to come up
with the right rankings.

<P></P>

Contestants are ranked first by the number of problems solved (the more
the better), then by decreasing amounts of penalty time.  If two or more
contestants are tied in both problems solved and penalty time, they are
displayed in order of increasing team numbers.

<P></P>

A problem is considered solved by a contestant if any of the submissions
for that problem was judged correct.  Penalty time is computed as the
number of minutes it took for the first correct submission for a problem
to be received plus 20 minutes for each incorrect submission received
prior to the correct solution.  Unsolved problems incur no time
penalties.

</P>
<H2>Input:</H2>
<P>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


Input consists of a snapshot of the judging queue, containing entries
from some or all of contestants 1 through 100 solving problems 1 through
9.
Each line of input will consist of three numbers and a letter in the format

</P><P>
<VAR>contestant</VAR> <VAR>problem</VAR> <VAR>time</VAR> <VAR>L</VAR>
</P><P>

where <VAR>L</VAR> can be <SAMP>C</SAMP>, <SAMP>I</SAMP>, <SAMP>R</SAMP>,
<SAMP>U</SAMP> or <SAMP>E</SAMP>.  These stand for Correct, Incorrect,
clarification Request, Unjudged and Erroneous submission.  The last
three cases do not affect scoring.
</P><P>
Lines of input are in the order in which submissions were received.
</P>
<H2>Output:</H2>
<P>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Output will consist of a scoreboard sorted as previously described.
Each line of output will contain a contestant number, the number of problems
solved by the contestant and the time penalty accumulated by the
contestant.  Since not all of contestants 1-100 are actually participating,
display only the contestants that have made a submission.
</P>

<H2>Sample Input:</H2>
<PRE>
1

1 2 10 I
3 1 11 C
1 2 19 R
1 2 21 C
1 1 25 C
</PRE>
<H2>Sample Output:</H2>
<PRE>
1 2 66
3 1 11
</PRE>
</BODY>
</HTML>

______________________________________________________
10259||||||false||||||
<!--title>Problem A</title-->
<h2>Problem C - Hippity Hopscotch</h2>
The game of hopscotch involves chalk, sidewalks, jumping, and picking things
up.  Our variant of hopscotch involves money as well.  The game is played
on a square grid of dimension n:  each grid location is labelled (p,q) where
0 <= p < n and 0 <= q < n.  Each grid location has on it a stack of between
0 and 100 pennies.
<p>
A contestant begins by standing at location (0,0).  The contestant collects
the money where he or she stands and then jumps either horizontally or
vertically to another square.  That square must be within the jumping
capability of the contestant (say, k locations) and must have more
pennies than those that were on the current square.
<p>
Given n, k, and the number of pennies at each grid location, compute the
maximum number of pennies that the contestant can pick up before being
unable to move.

<h3>Input Specification</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>



<ul>
<li>a line containing two integers between 1 and 100:  n and k
<li>n lines, each with n numbers:  the first line contains the number
   of pennies at locations (0,0) (0,1) ... (0,n-1);  the next line
   contains the number of pennies at locations (1,0), (1,1), ... (1,n-1),
   and so on.
</ul>
<h3>Output Specification</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

<ul>
<li>a single integer giving the number of pennies collected
</ul>

<h3>Sample Input</h3>
<pre>
1

3 1
1 2 5
10 11 6
12 12 7
</pre>
<h3>Output for Sample Input</h3>
<pre>
37

______________________________________________________
10260||||||false||||||
<!--title>Problem B:  Soundex</title-->
<h2>Problem D: Soundex</h2>
Soundex coding groups together words that appear to sound alike based on
their spelling.  For example, "can" and "khawn", "con" and "gone" would be
equivalent under Soundex coding.
<p>
Soundex coding involves translating each word into a series of digits in
which each digit represents a letter:
<pre>
      1 represents B, F, P, or V
      2 represents C, G, J, K, Q, S, X,  or Z
      3 represents D or T
      4 represents L
      5 represents M or N
      6 represents R
</pre>
The letters A, E, I, O, U, H, W, and Y are not represented in Soundex coding,
and repeated letters with the same code digit are represented by a
single instance of that digit.  Words with the same Soundex coding are
considered equivalent.
<p>
Each line of input contains a single word, all upper case, less than 20
letters long.  For each line of input, produce a line of output giving
the Soundex code.
<h3>Sample Input</h3>
<pre>
KHAWN
PFISTER
BOBBY
</pre>
<h3>Output for Sample Input</h3>
<pre>
25
1236
11
</pre>

______________________________________________________
10261||||||false||||||
<!--title>Problem C: Ferry Loading</title-->
<h2>Problem E: Ferry Loading</h2>
Before bridges were common, ferries were used to transport cars across
rivers.  River ferries, unlike their larger cousins, run on a guide
line and are powered by the river's current.  Two lanes of cars drive
onto the ferry from one end, the ferry crosses the river, and the
cars exit from the other end of the ferry.
<p>
The cars waiting to board the
ferry form a single queue, and the operator directs each car in turn
to drive onto the port (left) or starboard (right) lane of the ferry
so as to balance the load.
Each car in the queue has a different length, which the
operator estimates by inspecting the queue.  Based on this inspection,
the operator decides which side of the ferry each car should board,
and boards as many cars as possible from the queue, subject to the
length limit of the ferry.
Your job is to write a program that will
tell the operator which car to load on which side so as
to maximize the number of cars loaded.
<h3>The Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


The first line of input contains a single integer between 1 and 100:
the length of the ferry (in metres).
For each car in the queue there is an additional line of input specifying
the length of the car (in cm, an integer between 100 and 10000 inclusive).  
A final line of input contains the integer 0.
The cars must be loaded in order, subject to the constraint that
the total length of cars on either side does not exceed the length
of the ferry.
Subject to this constraint as many cars should be loaded as possible,
starting with the first car in the queue and loading cars in order
until no more can be loaded.
<h3>
The Output
</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>

The first line of outuput should give the number of cars that
can be loaded onto the ferry.
For each car that can be loaded onto the ferry, in the order the
cars appear in the input, output a line containing "port" if the
car is to be directed to the port side and "starboard" if the
car is to be directed to the starboard side.  If several arrangements
of the cars meet the criteria above, any one will do.
<h3>Sample Input</h3>
<pre>
1

50
2500
3000
1000
1000
1500
700
800
0
</pre>
<h3>Possible Output for Sample Input</h3>
<pre>
6
port
starboard
starboard
starboard
port
port
</pre>

______________________________________________________
10262||||||false||||||
<!--title>
Problem D:  Suffidromes</title-->
<h2>Problem F: Suffidromes</h2>

Given two strings of lowercase letters, <i>a</i> and <i>b</i>, print the 
shortest string <i>x</i> of lowercase letters such that exactly
one (but not both) of <i>ax</i> or <i>bx</i> is a palindrome; that is,
equal to itself when reversed.
Standard input contains several pairs of <i>a</i> and <i>b</i>.
Each string is on a separate line and consists of between 0 and
1,000 lowercase letters.  
For each pair, output a line containing <i>x</i>.  
If several <i>x</i>
satisfy the criteria above, choose the first one in alphabetical order.
If it doesn't exist such a string <i>x</i>, print just `<tt>No solution.</tt>' as answer.

<h3>Sample Input</h3>
<pre>
abab
ababab
abc
def
</pre>
<h3>Output for Sample Input</h3>
<pre>
baba
ba
</pre>

______________________________________________________
10263||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem A: Railway</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem A: Railway</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="Railway">Problem</A></FONT></H2>
<P>

Railway is a broken line of <I>N</I> segments. The problem is to find such
a position for the railway station that the distance from it to the
given point <I>M</I> is the minimal.

</U></U><H2><FONT COLOR=#0070E8>Input</FONT></H2>
<P>
The input will consist of several input blocks.
Each input block begins with two lines with coordinates <I>Xm</I> and <I>Ym</I>
of the point <I>M</I>. In the third line there is <I>N</I> - the number of
broken line segments. The next <I>2N+2</I> lines contain the <I>X</I> and the <I>Y</I>
coordinates of consecutive broken line corners.
<P>
The input is terminated by &LT;EOF&GT;.


<H2><FONT COLOR=#0070E8>Output</FONT></H2>
<P>

For each input block there should be two output lines. The first one contains the first coordinate of the station position, the second one contains the second coordinate.
Coordinates are the floating-point values with four digits after decimal point.

<H2><FONT COLOR=#0070E8>Sample Input</FONT></H2>
<P>
<PRE>
6
-3
3
0
1
5
5
9
-5
15
3
0
0
1
1
0
2
0

</PRE>
<P>
<H2><FONT COLOR=#0070E8>Sample Output</A></FONT></H2>
<P>
<PRE>
7.8966
-2.2414
1.0000
0.0000
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
<hr size=2 width="100%" align=center>
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
</span>
<H4>Olga Zaverach, 2002</H4>
</PRE>
</BODY>
</HTML>

______________________________________________________
10264||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem B: The Most Potent Corner</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem B: The Most Potent Corner</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="The Most Potent Corner">Problem</A></FONT></H2>
<P>

Every corner of the <I>N</I>-dimensional (<I>1&LT; N&LT;15</I>) unit cube has weight (some positive integer less than 256). We will call two corners neighbouring, if they have common edge. Potency of the corner is the sum of weights of all neighbouring corners. Weights of all the corners are given. You are to determine two neighbouring corners that have the maximum sum of potencies and to output this sum.<p>

</U></U><H2><FONT COLOR=#0070E8>Input</FONT></H2>
<P>
The input will consist of several input blocks.
Each input block begins with
the integer <I>N</I>, the dimension of the
cube. Then there are weights of the corners, one per line in the natural
order:
the first line contains the weight of the corner (0,...0,0,0),
the second one - the weight of (0,...,0,0,1),
then there is the weight of (0,...,0,1,0),
then (0,...,0,1,1), then (0,...,1,0,0),
the penultimate line contains the weight of the corner (1,...,1,1,0),
the last one - (1,...,1,1,1).
<P>
The input is terminated by &LT;EOF&GT;.


<H2><FONT COLOR=#0070E8>Output</FONT></H2>
<P>
For each input block the output line should contain one number,
the maximum potencies sum.


<H2><FONT COLOR=#0070E8>Sample Input</FONT></H2>
<P>
<PRE>
3
82
73
8
49
120
44
242
58
2
1
1
1
1
</PRE>
<P>
<H2><FONT COLOR=#0070E8>Sample Output</A></FONT></H2>
<P>
<PRE>
619
4
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
<hr size=2 width="100%" align=center>
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
</span>
<H4>Sergey Karpovich, 2002</H4>
</PRE>
</BODY>
</HTML>

______________________________________________________
10265||||||false||||||
<HTML>
<HEAD>
<TITLE>Problem C: Toroidal Chess Queens' Problem</TITLE>
</HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem C: Toroidal Chess Queens' Problem</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="Toroidal Chess Queens' Problem">Problem</A></FONT></H2>
<P>

The toroidal <I>M&times;N</I> chess board is obtained from the usual
<I>M&times;N</I> one in the same way as one obtains a torus from rectangle:
by gluing together the upper side with the lower one and the left side with the right
one. The arrow directions after the gluing should coincide. The
figure below represents the toroidal chess desk <I>4&times;3:</I>

<center>
<img width=237 height=176
src="http://uva.onlinejudge.org/external/102/p10265.jpg"  v:shapes="_x0000_i1025">
</center>

So, shifting to the left from the very left column you get to
the very right one. Shifting to the right from the very right
column, you find yourself on the first one. In the same way,
moving up from the top row, you arrive on the bottom one
and moving down from the bottom row, you get to the top one.<P>

Toroidal chess figures move in the same way, as the plain ones. In
particular, the
queen attacks any figure which is situated in the same row, column
or diagonal.<P>

The problem is to place <I>K</I> queens on the toroidal chess board
so that no one will attack another.

</U></U><H2><FONT COLOR=#0070E8>Input</FONT></H2>
<P>
The input will consist of several lines. Each line contains three integers
<I>M,</I> <I>N</I> and <I>K,</I> separated by space. Here <I>M</I>
denotes number of board columns, <I>N</I> - number of
board rows, <I>K</I> - number of queens to be placed.
(<I>1&LT=M,N,K&LT=14</I>)
<P>
The input is terminated by &LT;EOF&GT;.


<H2><FONT COLOR=#0070E8>Output</FONT></H2>
<P>
For each input line the output should consist of solution
representation. The position of every queen is placed in the
separate line as a pair of two integers separated by space. The
first integer denotes the column number (from <I>1</I> to
<I>M</I>), the second - the row number  (from <I>1</I> to
<I>N</I>). If there is no solution for given <I>M, N, K,</I> you
should output two zeroes in one line.
If there are several solutions, you should output only one of them.

<H2><FONT COLOR=#0070E8>Sample Input</FONT></H2>
<P>
<PRE>
3 2 3
6 3 2
</PRE>
<P>
<H2><FONT COLOR=#0070E8>Sample Output</A></FONT></H2>
<P>
<PRE>
0 0
1 1
4 3
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
<hr size=2 width="100%" align=center>
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
</span>
<H4>Alexander Denisjuk, 2002</H4>
</PRE>
</BODY>
</HTML>

______________________________________________________
10266||||||false||||||
<HTML> <HEAD> <TITLE>Problem D: Surveying </TITLE> </HEAD> <BODY
LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;<A NAME="SECTION0001000000000000000000">Problem D: Surveying</A></FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A
NAME="Surveying">Problem</A></FONT></H2> <P>

After the radar station in Skrund (Latvia) has been abolished,
Russian Ministry of Peace decided to build a new radar station in
other neighbouring country.<P>

Before building and projecting it is necessary to provide a
surveying of the site where the radar station will be build. To do
this, first of all one introduces a coordinate grid in the
rectangular region <I>K&times;M</I>, where <I>0&LT;K,M&LT;=100</I>.
Thus every node of the grid (the intersection of a grid lines) has
coordinates <I>(i,j), 1&lt;=i&LT;=K, 1&lt;=j&LT;=M.</I> The result of
surveying is <I>geodetical  site plan,</I> i.e. the table, which
contains the relative heights of all the grid nodes measured with
respect to distinguished node, called <I>base</I>.

All the preliminary works including surveying are carrying out
in the top-secret mode. In particular, one is not allowed to clear
the site. This restricts visibility very much. That is why the
surveying is carrying out in stages. One choose the <I>point of
surveying</I> and measure the heights with
respect to this point for all the visible nodes. Then one passes
to the second point of surveying, and so on. Every time the
heights with respect to the current point of surveying are
measured. After the measuring from all the points of surveying has
been completed, one recalculates the heights with respect to the
base and write it down to the geodetical site plan. <P>

You are expected to write a program, which will read the
measurement results and form a geodetical site plan.


</U></U><H2><FONT COLOR=#0070E8>Input</FONT></H2> <P> The input
will consist of <I>N</I> input blocks separated by a blank line.
The amount <I>N</I> of input blocks will be given in the very
first line and followed by a blank line.<P>

The structure of the each input block will be the following. In
the first line there will be two integers <I>K</I> and <I>M</I>
defining the size of the site. The second line will contain two
integers also separated by a space, <I>i</I> and <I>j</I> - the
coordinates of the base. This two lines will be followed by
measurements from different points of surveying. The measurements
from each surveying point will be placed in one line. It will be a
series of triples of integers separated by a space. Each triple
will have the following form: <I> i j h </I>, where <I> i j </I>
are the coordinates of the node, <I> h </I> - its weight in
millimeters with respect to the current surveying point. There
will be also a space between the triples.  This series is
terminated by &LT;EOLN&GT;. The last line of the input block will be
followed by blank line.<P>

The last line of the last input block will be followed immediately
by &LT;EOF&GT;. <P>

Note that used geodetical equipment does not allow to measure the
heights of absolute value greater than 1 meter. (If the point
locates below the point of surveying, we think that its relative height
is negative.)<P>



<H2><FONT COLOR=#0070E8>Output</FONT></H2> <P>

For every input block there should be appropriate output block.
Please, separate all the output blocks with a blank line and do
not place a blank line after the last output block. <P>

Each output block should contain the geodetical site plan, if it
can be built according to the given measurements, or the proper
error message.<P>

The geodetical site plan should be written in the following way:
<P><PRE>
h<sub>11</sub> h<sub>12</sub> h<sub>13</sub> ... h<sub>1M</sub>
h<sub>21</sub> h<sub>22</sub> h<sub>23</sub> ... h<sub>2M</sub>
.................
h<sub>K1</sub> h<sub>K2</sub> h<sub>K3</sub> ... h<sub>KM</sub>
</PRE>

where <I>h<sub>ij</sub></I> is the relative height of the node <I>(i,j)</I>
with respect to the base, in millimeters.

<H2><FONT COLOR=#0070E8>Errors</FONT></H2> <P>
The program should process two errors. <P>

If there is not enough measurements to build a geodetical site
plan, the output should consist of one string with an
inscription "<tt>the lack of measurements</tt>".<P>

If there are conflicting measurements, i.e. the height of some
node can be determined not uniquely, the output should consist
of one string "<tt>conflicting measurements</tt>".<P>

If there are both conflicting measurements and the lack of
measurement, you should output only "<tt>conflicting measurements</tt>".<P>


<H2><FONT COLOR=#0070E8>Sample Input</FONT></H2> <P> <PRE>
3

2 2
1 2
1 1 10 1 2 10
1 2 20 2 2 30 2 1 30

2 2
1 1
1 1 10 1 2 10

2 2
1 2
1 1 10 1 2 10
1 1 20 1 2 30
</PRE> <P>


<H2><FONT COLOR=#0070E8>Sample
Output</A></FONT></H2> <P> <PRE>
0 0
10 10

the lack of measurements

conflicting measurements
<span
style='mso-bidi-font-size:13.5pt;color:windowtext'>
<hr size=2 width="100%" align=center>
<span style='mso-bidi-font-size:13.5pt;color:windowtext'> </span>
<H4>Alexander Denisjuk, 2000</H4> </PRE> </BODY> </HTML>

______________________________________________________
10267||||||false||||||
<HTML> <HEAD> <TITLE>Problem E: Graphical Editor</TITLE> </HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;Problem E: Graphical Editor</FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="Graphical
Editor">Problem</A></FONT></H2> <P>

The simple graphical editor deals with a rectangular table
<I>M&times;N (1&LT;=M,N&LT;=250)</I>. Each pixel of the table has its colour.
The picture is formed from this square pixels.
<P>
The problem is to write a program, which simulates an interactive
work of the graphical editor.

</U></U><H2><FONT COLOR=#0070E8>Input</FONT></H2> <P> Input
consists of the editor commands, one per line. Each command is
represented by one Latin capital placed in the very beginning of the line. If the command
supposes
parameters, all the parameters will be given in the same line
separated by space. As the parameters there may be: the
coordinates of the pixel - two integers, the first one is the column
number and belongs to <I>1..M,</I> the second one is the row
number and belongs to <I>1..N,</I> the origin is
in the upper left corner of the table; the colour - the Latin
capital; file name - in MSDOS 8.3 format.<P>

The editor deals with the following commands:<P>

<center><table border=1 cellspacing=1.5 cellpadding=5>
<tr>
  <td> I&nbsp;M&nbsp;N </td>
  <td> Creates a new table <i>M&times;N.</i> All the pixels are colored in white&nbsp;<i>(O).</i>
</tr>
<tr>
  <td> C </td>
  <td> Clears the table. The size remains the same.  All the pixels became white&nbsp;<i>(O).</i>
</tr>
<tr>
  <td> L&nbsp;X&nbsp;Y&nbsp;C </td>
  <td> Colors the pixel with coordinates <i>(X,Y)</i> in colour&nbsp;<i>C.</i>
</tr>
<tr>
  <td> V&nbsp;X&nbsp;Y1&nbsp;Y2&nbsp;C </td>
  <td> Draws the vertical segment in the column <I>X</I> between the rows <I>Y1</I> and <I>Y2</I> inclusive in colour&nbsp;<i>C.</i>
</tr>
<tr>
  <td> H&nbsp;X1&nbsp;X2&nbsp;Y&nbsp;C </td>
  <td> Draws the horizontal segment in the row <I>Y </I> between the columns <I>X1</I> and <I>X2</I> inclusive in colour&nbsp;<i>C.</i>
</tr>
<tr>
  <td> K&nbsp;X1&nbsp;Y1&nbsp;X2&nbsp;Y2&nbsp;C </td>
  <td> Draws the filled rectangle in colour <I>C</I>. <I>(X1,Y1)</I> is the upper left corner, <I>(X2,Y2)</I> is the lower right corner of the rectangle.
</tr>
<tr>
  <td> F&nbsp;X&nbsp;Y&nbsp;C </td>
  <td> Fills the region with the colour <I>C</I>. The region <I>R</I> to be
  filled is defined as follows. The pixel&nbsp;<I>(X,Y)</I>
  belongs to this region. The other pixel belongs to
  the region&nbsp;<I>R</I> if and only if it has the same colour
  as pixel&nbsp;<I>(X,Y)</I> and
  a common side with any
  pixel which belongs to this region.
  </td>
</tr>
<tr>
  <td> S Name </td>
  <td> Writes the picture in the file <i>Name.</i>
</tr>
<tr>
  <td> X </td>
  <td> Terminates the session.</i>
</tr>
</table></center>


<H2><FONT COLOR=#0070E8>Output</FONT></H2> <P>
Every time the command <I>S NAME</I> meets, you should output the
file name <I>NAME</I> and the current table, row by row. Each row
is represented by a pixels' colours series, see the output sample.

<H2><FONT COLOR=#0070E8>Errors</FONT></H2> <P>

If as a command there will be a character different from
<I>I, C, L, V, H, K, F, S, X,</I> the editor should ignore the whole line and pass to the next
command.<P>

In case of other errors the program behaviour is unpredictable.

<H2><FONT COLOR=#0070E8>Sample Input</FONT></H2> <P> <PRE>
I 5 6
L 2 3 A
S one.bmp
G 2 3 J
F 3 3 J
V 2 3 4 W
H 3 4 2 Z
S two.bmp
X
</PRE> <P>

<H2><FONT COLOR=#0070E8>Sample Output</A></FONT></H2> <P> <PRE>
one.bmp
OOOOO
OOOOO
OAOOO
OOOOO
OOOOO
OOOOO
two.bmp
JJJJJ
JJZZJ
JWJJJ
JWJJJ
JJJJJ
JJJJJ
<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
<hr size=2 width="100%" align=center>
<span style='mso-bidi-font-size:13.5pt;color:windowtext'> </span>
<H4>Alexander Denisjuk, 2002</H4> </PRE> </BODY> </HTML>

______________________________________________________
10268||||||false||||||
<HTML> <HEAD> <TITLE>Problem F: 498'</TITLE> </HEAD>
<BODY LANG="EN" BGCOLOR=#FFFFFF>
 <H1><BR CLEAR=ALL><CENTER><TABLE BGCOLOR=#0060F0><TR><TD><B><FONT SIZE=5 COLOR=#C0FFFF>&nbsp;Problem F: 498'</FONT>&nbsp;</B></TABLE></CENTER></H1>
<P>

<H2><FONT COLOR=#0070E8><A NAME="498'">Problem</A></FONT></H2> <P>

Looking throw the <a href="http://acm.uva.es/problemset"> Online
Judge's Problem Set Archive</a> I found a very interesting problem
number&nbsp;498, titled <a href="http://acm.uva.es/p/v4/498.html">``Polly the Polynomial''.</a> Frankly
speaking, I did not solve it, but I derived from it this
problem.<P>

Everything in this problem is a derivative of something
from&nbsp;498. In particular, 498 was <em> "...&nbsp;designed to
help you remember ... basic algebra skills, make the world a
better place, etc., etc.".</em> This problem is designed to help
you remember basic derivation algebra skills, increase the speed
in which world becomes a better place, etc., etc.<P>

In&nbsp;498 you had to evaluate the values of polynomial<P>
<I><CENTER>
a<sub>0</sub>x<sup>n</sup>+a<sub>1</sub>x<sup>n-1</sup>+...+a<sub>n-1</sub>x+a<sub>n</sub>.
</CENTER></I><P>
In this problem you should evaluate its derivative.
Remember that derivative is defined as<P>
<I><CENTER>
a<sub>0</sub>nx<sup>n-1</sup>+a<sub>1</sub>(n-1)x<sup>n-2</sup>+...+a<sub>n-1</sub>.</CENTER></I>
<P>
All the input and output data will fit into integer, i.e. its absolute
value will be less than 2<sup>31</sup>.
</U></U><H2><FONT COLOR=#0070E8>Input</FONT></H2> <P> Your program
should accept an even number of lines of text. Each pair of lines
will represent one problem. The first line will contain one integer -
a value for <I>x</I>. The second line will contain a list of
integers <I>a<sub>0</sub></I>,<I> a<sub>1</sub></I>,<I> ...</I>,<I>
a<sub>n-1</sub></I>,<I>
a<sub>n</sub></I>, which represent a set of polynomial coefficients.
<P> Input is terminated by &LTEOF&GT.

<H2><FONT COLOR=#0070E8>Output</FONT></H2> <P>
For each pair of lines, your program should evaluate the derivative of
polynomial for the given value <I>x</I> and output it in a single line.

<H2><FONT COLOR=#0070E8>Sample Input</FONT></H2> <P> <PRE>
7
1 -1
2
1 1 1
</PRE> <P>

<H2><FONT COLOR=#0070E8>Sample Output</A></FONT></H2> <P> <PRE>
1
5

<span style='mso-bidi-font-size:13.5pt;color:windowtext'>
<hr size=2 width="100%" align=center>
<span style='mso-bidi-font-size:13.5pt;color:windowtext'> </span>
<H4>Alexander Denisjuk, 2002</H4> </PRE> </BODY> </HTML>

______________________________________________________
10269||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem A - Adventure of Super Mario</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem A</font></b><br>
<b><font size=6>Adventure of Super Mario</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
After rescuing the beautiful princess, Super Mario needs to find a way home -- with the
princess of course :-) He's very familiar with the 'Super Mario World', so he doesn't need
a map, he only needs the best route in order to save time.
<p>
<center><img src="http://uva.onlinejudge.org/external/102/p10269.jpg" ></center>
<p>
There are A Villages and B Castles in the world. Villages are numbered 1..A, and Castles are numbered
A+1..A+B. Mario lives in Village 1, and the castle he starts from is numbered A+B. Also, there are two-way roads connecting them. 
Two places are connected by at most one road and a place never has a road connecting to itself.
Mario has already measured the length of every road, but they don't want to walk all the time, since he walks one unit time for one unit distance(how slow!).
<p>
Luckily, in the Castle where he saved the princess, Mario found a magic boot. If he wears it, he can super-run 
from one place to another IN NO TIME. (Don't worry about the princess, Mario has found a way to take her with him when super-running,
but he wouldn't tell you :-P)
<p>
Since there are traps in the Castles, Mario NEVER super-runs through a Castle. He always stops when there is a
castle on the way. Also, he starts/stops super-runnings ONLY at Villages or Castles.
<p>
Unfortunately, the magic boot is too old, so he cannot use it to cover
more than L kilometers at a time, and he cannot use more than K times in total. 
When he comes back home, he can have it repaired and make it usable again.

<p><b><font size=5>Input</font></b></p>
<p>
The first line in the input contains a single integer T, indicating the number of test cases. (1&lt;=T&lt;=20)
Each test case begins with five integers A, B, M, L and K -- the number of Villages, the number of Castles(1&lt;=A,B&lt;=50), the number of
roads, the maximal distance that can be covered at a time(1&lt;=L&lt;=500), and the number of times the boot can be used. (0&lt;=K&lt;=10)
The next M lines each contains three integers X<sub>i</sub>, Y<sub>i</sub>, L<sub>i</sub>. That means there is a road connecting place X<sub>i</sub> and Y<sub>i</sub>. The distance is L<sub>i</sub>, so the walk time is also L<sub>i</sub>. (1&lt;=L<sub>i</sub>&lt;=100)
</p>

<p><b><font size=5>Output</font></b></p>

<p>
For each test case in the input print a line containing a single integer indicating the minimal time needed to go home with the beautiful princess. It's guaranteed that Super Mario can always go home.
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
1<br>
4 2 6 9 1<br>
4 6 1<br>
5 6 10<br>
4 5 5<br>
3 5 4<br>
2 3 4<br>
1 2 3<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
9<br>
</font>

<font face="Times New Roman" size=3>
__________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10270||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem B - Bigger Square Please...</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem B</font></b><br>
<b><font size=6>Bigger Square Please...</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
Tomy has many paper-squares. The side length(we call it 'size') of them range from 1 to N-1, and he has
a really COUNTLESS squares of each kind. He used to be very proud of his squares, but
one day, he suddenly wants to have a bigger one -- a square of size N!
Though he doesn't have such a square, he can make it up with the squares he has. For example.
A square of size 7 can be made up with 9 smaller squares, shown below. 
<p>
<center><img src="http://uva.onlinejudge.org/external/102/p10270.jpg" ></center>
<p>
Note that there should be NO empty space 
in the square, and NO extra paper outside the square, and the small squares should NOT overlap.
As you may guess, Tomy wants to make it using the minimal number of squares he has, can you help?

<p><b><font size=5>Input</font></b></p>

<p>
The first line of the input contains a single integer T, indicating the number of 
test cases. (1&lt;=T&lt;=20)
Each case contains a single integer N. (2&lt;=N&lt;=50)
</p>

<p><b><font size=5>Output</font></b></p>

<p>
For each test case in the input, print a line containing a single integer K, indicating the minimal number of squares needed to build the target square.
In the following K lines, each contains three integers x,y,l indicating the coordinates of top-left corner, and the side length  of the corresponding square.
(1&lt;=x,y&lt;=N)
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
3<br>
4<br>
3<br>
7<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
4<br>
1 1 2<br>
1 3 2<br>
3 1 2<br>
3 3 2<br>
6<br>
1 1 2<br>
1 3 1<br>
2 3 1<br>
3 1 1<br>
3 2 1<br>
3 3 1<br>
9<br>
1 1 2<br>
1 3 2<br>
3 1 1<br>
4 1 1<br>
3 2 2<br>
5 1 3<br>
4 4 4<br>
1 5 3<br>
3 4 1<br>
</font>

<font face="Times New Roman" size=3>s
_____________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10271||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem C - Chopsticks</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem C</font></b><br>
<b><font size=6>Chopsticks</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
In China, people use a pair of chopsticks to get food on the table, but Mr. L is a bit different.
He uses a set of three chopsticks -- one pair, plus an EXTRA long chopstick to get some big food by 
piercing it through the food.
As you may guess, the length of the two shorter chopsticks should be as close as possible, but the
length of the extra one is not important, as long as it's the longest. To make things clearer, 
for the set of chopsticks with lengths A,B,C(A&lt;=B&lt;=C), (A-B)<sup>2</sup> is called the 'badness' of the set.
<p>
It's December 2nd, Mr.L's birthday! He invited K people to join his birthday party, and would like to
introduce his way of using chopsticks. So, he should prepare K+8 sets of chopsticks(for himself,
his wife, his little son, little daughter, his mother, father, mother-in-law, father-in-law, and
K other guests). But Mr.L suddenly discovered that his chopsticks are of quite different lengths!
He should find a way of composing the K+8 sets, so that the total badness of all the sets is minimized.

<p><b><font size=5>Input</font></b></p>

<p>
The first line in the input contains a single integer T, indicating the number of test cases(1&lt;=T&lt;=20).
Each test case begins with two integers K, N(0&lt;=K&lt;=1000, 3K+24&lt;=N&lt;=5000), the number of guests and the number of chopsticks.
There are N positive integers L<sub>i</sub> on the next line in non-decreasing order indicating the lengths of the chopsticks.(1&lt;=L<sub>i</sub>&lt;=32000).
</p>

<p><b><font size=5>Output</font></b></p>

<p>
For each test case in the input, print a line containing the minimal total badness of all the sets.
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
1<br>
1 40<br>
1 8 10 16 19 22 27 33 36 40 47 52 56 61 63 71 72 75 81 81 84 88 96 98 103 110 113 118 124 128 129 134 134 139 148 157 157 160 162 164<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
23<br>
</font>

<p><b><font size=5>Note</font></b></p>
For the sample input, a possible collection of the 9 sets is:<br>
<font face="Courier" size=3>
8,10,16; 19,22,27; 61,63,75; 71,72,88; 81,81,84; 96,98,103; 128,129,148; 134,134,139; 157,157,160<br>
</font>

<font face="Times New Roman" size=3>
___________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10272||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem D - DDR King</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem D</font></b><br>
<b><font size=6>DDR King</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
Do you know DDR? DDR = Dance Dance Revolution. It's a kind of music game which was very
popular not long ago. I was also a DDR fan, but I'm surely not the DDR King. Then, who is
the DDR King?

<p>
One person said, 'I am a DDR King. I can get one billion points for Paranoia Max(Dirty Mix) 190 Green.' This is
obviously a lie, since the highest score one can obtain playing that song is 385,317,900. You cannot
understand why, if you're not familiar with DDR Grading System, so let me introduce it to
you first.
<p>
<center><img src="http://uva.onlinejudge.org/external/102/p10272.gif" ></center>
<p>
When playing a song, your task is to step on the specific arrow correctly at the appropriate time.
The score you got depends totally on the judge result of each arrow. There are 5 possible results
for each arrow: PERFECT, GREAT, GOOD, BOO and MISS. If you got a PERFECT or GREAT, you are
set to be 'comboing' arrows, and the 'combo value' is increased by 1. The 'combo value'
is set to zero at the beginning of a song, and will reset to zero if you get GOOD, BOO
or MISS on an arrow. Only if you got PERFECT or GREAT on an arrow, you can get some score
for that arrow. If the combo value will be C AFTER current arrow, a PERFECT will get
((C div 4)<sup>2</sup>+1)*300 points, and a GREAT will get ((C div 4)<sup>2</sup>+1)*100 points.
(A div B means the integer part of A/B). For example, if the combo value is 11 after stepping on an arrow, 
a PERFECT will get 1500 points.

<p>
For example, if a song has 7 arrows, and a player got PERFECT,PERFECT,GREAT,PERFECT,GREAT,
PERFECT,MISS on each arrow, he/she will get 300,300,100,600,200,600 points on each arrow
and a total score of 2100 points.

<p>
Well, now, a person said that he got M points playing a song with N arrows and got a 
maximal combo value of K during the whole song, tell me whether this is possible.

<p><b><font size=5>Input</font></b></p>

<p>
The input file begins with an integer T, indicating the number of test cases. (1&lt;=T&lt;=100),
Each test case contains three integers N, K, M(0&lt;=N,K&lt;=500, 0&lt;=M&lt;=10<sup>9</sup>).
</p>

<p><b><font size=5>Output</font></b></p>

<p>
For each test case in the input print a line containing either 'Yes' or 'No' depending on whether or not 
it is possible for such a song (of N arrows altogether).
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
4<br>
7 6 2100<br>
10 5 400<br>
3 2 500<br>
5 1 700<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
Yes<br>
No<br>
No<br>
Yes<br>
</font>

<font face="Times New Roman" size=3>
____________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10273||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem E - Eat or not to Eat?</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem E</font></b><br>
<b><font size=6>Eat or not to Eat?</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
A young farmer has N cows, but they produced really really a very very small amount of milk. 
John cannot live on the milk they made, so he's planning to eat some of the 'worst' cows
to get rid of hunger. Each day, John chooses the cow that produces the LEAST amount of milk on that day
and eat them. If there are more than one cow with minimal milk, John will be puzzled and will not eat
any of them (Yeah! That's GREAT!!).
<p>
<center><img src="http://uva.onlinejudge.org/external/102/p10273.jpg" ></center>
<p>
The i-th cow has a cycle of production Ti. That means, if it produces L unit milk on one day, it
will also produce L unit after Ti days -- If it will not be eaten during these day :-).
Though John is not a clever man, he doubts whether the cows will be eventually eaten up,
so he asks for your help. Don't forget that he will offer you some nice beef for that!

<p><b><font size=5>Input</font></b></p>

<p>
The first line of the input contains a single integer T, indicating the number of test cases. (1&lt;=T&lt;=50)
Each test case begins with an integer N(1&lt;=N&lt;=1000), the number of cows. In the following N lines,
each line contains an integer T<sub>i</sub>(1&lt;=T<sub>i</sub>&lt;=10), indicating the cycle of the i-th cow, then T<sub>i</sub> integers M<sub>j</sub>(0&lt;=M<sub>j</sub>&lt;=250) 
follow, indicating the amount of milk it can produce on the j-th day.
</p>

<p><b><font size=5>Output</font></b></p>

<p>
For each test case in the input, print a single line containing two integers C, D, indicating 
the number of cows that will NOT be eaten, and the number of days passed when the last cow is eaten. If no cow is eaten, the second number should be 0.
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
1<br>
4<br>
4 7 1 2 9<br>
1 2<br>
2 7 1<br>
1 2<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
2 6<br>
</font>

<font face="Times New Roman" size=3>
__________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10274||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem F - Fans and Gems</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem F</font></b><br>
<b><font size=6>Fans and Gems</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
Tomy's fond of a game called 'Fans and Gems' (also known as <b>Gravnic</b>). In the game, he can use fans
to collect gems, but he's satisfied with his play only if all the gems are collected
with minimal number of steps. The game is played as following:
<p>
<center><img src="http://uva.onlinejudge.org/external/102/p10274.gif" ></img></center>

<p>
There are three kinds of gems, one colored red, one colored green and one colored blue.
There are walls in the space, as you see.
There are also virtual fans everywhere in the game, but you cannot see them. What you can
do each time is to select a DIRECTION to which the fans should blow. There are only
four directions possible: UP, DOWN, LEFT and RIGHT. Then, the fans will work, pushing
all the gems to fly to the selected direction at the same speed, until they cannot
move further(blocked by the wall, other gems or a flyer). Then, if there are some gems touching
some same-colored gem(touching means adjacent in one of the four directions), they
disappear simultaneously. Note that the fans are still working, so some gems may go on
moving in that direction after some gems disappeared. The fans stop working when all the
gems cannot move any more, and none of them should disappear. There may be some
flyers that can be moved by the fans, but they can NEVER disappear.
<p>
You are to write a program that finds the minimal number of operations to make all the gems disappear.

<p><b><font size=5>Input</font></b></p>

<p>
The input file begins with an integer T, indicating the number of test cases. (1&lt;=T&lt;=50)
Each test case begins with two integers N, M, indicating the height and width of the map.
(1&lt;=N&lt;=12,1&lt;=M&lt;=20) In the following N lines, each line contains M characters describing
the map. There is one line after each map, ignore them. Spaces denotes empty square, '#' denotes a wall, '1' denotes a red gem, '2' denotes
a green gem, '3' denotes a blue gem, and '@' denotes a flyer. It's guaranteed that the four
sides of the map are all walls. There is at least one gem in the map, and no two same-colored gems
will touch each other at the beginning of the game.
</p>

<p><b><font size=5>Output</font></b></p>

<p>
You should print a single line for each case. If there is a solution, write the shortest operation sequence in a string. The ith character must be
from the set {'U','D','L','R'}, describing ith operation. The four characters represent UP, 
DOWM, LEFT, RIGHT respectively. If there are more than one solution, choose the lexicographical smallest one, if there
are no solution, output -1 on the line. When a solution exists, you need only 18 or fewer steps to carry it out.
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
2<br>
9 8<br>
########<br> 
##&nbsp;&nbsp;&nbsp;1##<br>
##&nbsp;&nbsp;2&nbsp;&nbsp;#<br>
#&nbsp;&nbsp;1&nbsp;&nbsp;##<br>
##2&nbsp;&nbsp;&nbsp;##<br>
#&nbsp;&nbsp;&nbsp;1@##<br>
###&nbsp;&nbsp;&nbsp;##<br>
####&nbsp;###<br>
########<br>
<br>
7 8<br>
########<br>
#212121#<br>
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#<br>
#&nbsp;#&nbsp;#&nbsp;##<br>
#&nbsp;#&nbsp;&nbsp;&nbsp;&nbsp;#<br>
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;##<br>
########<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
LURD<br>
DL<br>
</font>

<font face="Times New Roman" size=3>
_________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10275||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem G - Guess the Number</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem G</font></b><br>
<b><font size=6>Guess the Number!</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
In this problems, we'll talk about BIG numbers.
Yes, I'm sorry, big numbers again....
Let N be a positive integer, we call S=N<sup>N</sup> the "big big power" of N.
In this time, I will calculate the exact value of S for a positive integer N. Then, I tell you S, you guess N.
<p>
Note that I may make mistakes in calculating, but I promise that if I'm wrong, my result and the correct result will
differ in exactly one single digit, and the number of digits is always correct(no missing or extra digits). That means, 
I will NOT get 'terribly wrong result' such as 3456 or 111.

<p><b><font size=5>Input</font></b></p>

<p>
The first line in the input contains a positive integer T indicating the number of test cases (1&lt;=T&lt;=10).
Each case consists of a single line containing the exact value of S. The line does not contain any character 
apart from digits (0,1,2...9), and will have at most 500,000 digits. 
Input integers do NOT contain leading zeros.
</p>

<p><b><font size=5>Output</font></b></p>
<p>
For each test case, print on a single line the value of N if a unique N satisfying N^N=S can be found. Otherwise, print -1 in the corresponding line,
showing that I made a mistake in calculating.
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
4<br>
3<br>
4<br>
3225<br>
387420489<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
-1<br>
2<br>
-1<br>
9<br>
</font>

<font face="Times New Roman" size=3>
_____________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10276||||||false||||||
<html>
<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<title>Problem H - Hanoi Tower Troubles Again!</title>

</head>

<body bgcolor="#ffffff" lang=EN-US>

<center>
<p>
<b><font size=5>Problem H</font></b><br>
<b><font size=6>Hanoi Tower Troubles Again!</font></b><br>
<b>Input:</b> Standard Input<br>
<b>Output:</b> Standard Output<br>
</p>

</center>

<p>
People stopped moving discs from peg to peg after they know the number of steps
needed to complete the entire task. But on the other hand, they didn't not stopped
thinking about similar puzzles with the Hanoi Tower. Mr.S invented a little game on it.
The game consists of N pegs and a LOT of balls. The balls are numbered 1,2,3... 
The balls look ordinary, but they are actually
magic. If the sum of the numbers on two balls is NOT a square number, they will push each 
other with a great force when they're too closed, so they can NEVER be put together touching 
each other. 
<p>
<center><img src="http://uva.onlinejudge.org/external/102/p10276.jpg" ></center>
<p>
The player should place one ball on the top of a peg at a time. He should first try
ball 1, then ball 2, then ball 3... If he fails to do so, the game ends. Help the player
to place as many balls as possible. You may take a look at the picture above, since it 
shows us a best result for 4 pegs. 

<p><b><font size=5>Input</font></b></p>

<p>
The first line of the input contains a single integer T, indicating the number of test 
cases. (1&lt;=T&lt;=50) Each test case contains a single integer N(1&lt;=N&lt;=50), indicating the number of
pegs available.
</p>

<p><b><font size=5>Output</font></b></p>

<p>
For each test case in the input print a line containing an integer indicating the
maximal number of balls that can be placed. Print -1 if an infinite number of balls
can be placed.
</p>

<p><b><font size=5>Sample Input</font></b></p>
<font face="Courier" size=3>
2<br>
4<br>
25<br>
</font>

<p><b><font size=5>Sample Output</font></b></p>
<font face="Courier" size=3>
11<br>
337<br>
</font>

<font face="Times New Roman" size=3>
______________________________________________<br>
Rujia Liu<br>

</body>
</html>

______________________________________________________
10277||||||false||||||
<title>Problem E - Boastin' Red Socks</title>
<h2>Problem E - Boastin' Red Socks</h2>
You have a drawer that is full of two kinds of socks: red and black.  You
know that there are at least 2 socks, and not more than 50000.  However,
you do not know how many there actually are, nor do you know how many are
red, or how many are black.  (Your mother does the laundry!)
<p>
You have noticed, though, that when you reach into the drawer each morning
and choose two socks to wear (in pitch darkness, so you cannot distinguish
red from black), the probability that you pick two red socks is exactly
<b>p</b>/<b>q</b>, where 0 &lt; <b>q</b> and 0 &lt;= <b>p</b> &lt;=
<b>q</b>.
<p>
From this, can you determine how many socks of each colour are in your drawer?
There may be multiple solutions - if so, pick the solution with the fewest
total number of socks, but still allowing you to wear a couple of same color socks.
<h3>Input</h3>
Input consists of multiple problems, each on a separate line.  Each problem
consists of the integers <b>p</b> and <b>q</b> separated by a single space.
Note that <b>p</b> and <b>q</b> will both fit into an unsigned long integer.
<p>
Input is terminated by a line consisting of two zeroes.
<h3>Output</h3>
For each problem, output a single line consisting of the number of red socks
and the number of black socks in your drawer, separated by one space.  If
there is no solution to the problem, print "impossible".
<h3>Sample Input</h3>
<pre>
1 2
6 8
12 2499550020
56 789
0 0
</pre>
<h3>Sample Output</h3>
<pre>
3 1
7 1
4 49992
impossible
</pre>

______________________________________________________
10278||||||false||||||
<title>Problem A:  Fire Station</title>
<h2>Problem A: Fire Station</h2>
A city is served by a number of fire stations.  Some residents have complained
that the distance from their houses to the nearest station is too far, so
a new station is to be built.  You are to choose the location of the
fire station so as to reduce the distance to the nearest station from the
houses of the disgruntled residents.
<p>
The city has up to 500 intersections, connected by road segments of
various lengths.  No more than 20 road segments intersect at a given
intersection.  The location of houses and firestations alike are
considered to be at intersections (the travel distance from the
intersection to the actual building can be discounted).  Furthermore,
we assume that there is at least one house associated with every
intersection.  There may be more than one firestation per intersection.
<h3>The Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>

The first line of input contains two positive integers:  <i>f</i>,the number of existing
fire stations (<i>f</i> &lt;= 100) and <i>i</i>, the number of intersections 
(<i>i</i> &lt;= 500).  The intersections are numbered from 1 to <i>i</i>
consecutively.  <i>f</i> lines follow; each contains the intersection
number at which an existing fire station is found. 
A number of lines follow, each containing three positive
integers:  the number of an intersection, the number of a different
intersection, and the length of the road segment connecting the
intersections.  All road segments are two-way (at least as far
as fire engines are concerned), and there will exist a route
between any pair of intersections.
<h3>The Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
You are to output a single integer:  the lowest intersection number at which
a new fire station should be built so as to minimize the maximum
distance from any intersection to the nearest fire station.
<h3>Sample Input</h3>
<pre>
1

1 6
2
1 2 10
2 3 10
3 4 10
4 5 10
5 6 10
6 1 10
</pre>
<h3>Output for Sample Input</h3>
<pre>
5
</pre>

______________________________________________________
10279||||||false||||||
<h1>Problem A: Mine Sweeper</h1>

The game <i>Minesweeper</i> is played on an <i>n</i> by <i>n</i> grid.
In this grid are hidden <i>m</i> mines, each at a distinct grid location.
The player repeatedly touches grid positions.  If a position with a mine
is touched, the mine explodes and the player loses.  If a positon not
containing a mine is touched, an integer between 0 and 8 appears denoting
the number of adjacent or diagonally adjacent grid positions that contain
a mine.  A sequence of moves in a partially played game is illustrated below.
<p>

<img src=p10279a.gif>
<img src=p10279b.gif>
<img src=p10279c.gif>

<p>Here, <i>n</i> is 8, <i>m</i> is 10, blank squares represent the
integer 0, raised squares represent unplayed positions, and the figures
resembling asterisks represent mines.  The leftmost image represents
the partially played game.  From the first image to the second, the
player has played two moves, each time choosing a safe grid position.
From the second image to the third, the player is not so lucky; he chooses
a position with a mine and therefore loses.  The player wins if he
continues to make safe moves until only <i>m</i> unplayed positions
remain; these must necessarily contain the mines.
<p>
Your job is to read the information for a partially played game and 
to print the corresponding board.
<h3>The Input</h3>
The first line of input contains how many game you have to solved followed by
blank line. The first line of each description contain a single postitive integer
<i>n <= 10</i>.
The next n lines represent the positions of the mines.  Each
line represents the contents of a row using n characters: a period
indicates an unmined positon while an asterisk indicates a mined
position.
The next n lines are each n characters
long:  touched positions are denoted by an x, and untouched
positions by a period.
The sample input corresponds to the middle figure above. There is a blank line
between each consecutive game description.&nbsp;
<h3>The Output</h3>
Your output should represent the board, with each position 
filled in appropriately.  Positions that have been touched 
and do not contain a mine should
contain an integer between 0 and 8.  If a mine has been 
touched, all positions with a mine should contain an asterisk.
All other positions should contain a period. Print a blank line between each
consecutive 2 consecutive data sets.
<h3>Sample Input</h3>
<pre>1

8
...**..*
......*.
....*...
........
........
.....*..
...**.*.
.....*..
xxx.....
xxxx....
xxxx....
xxxxx...
xxxxx...
xxxxx...
xxx.....
xxxxx...
</pre>
<h3>Output for Sample Input</h3>
<pre>
001.....
0013....
0001....
00011...
00001...
00123...
001.....
00123...
</pre>

______________________________________________________
10280||||||false||||||
<title>Problem C:  Old Wine Into New Bottles</title>
<h2>Problem C:  Old Wine Into New Bottles</h2>
<img src=p10280.gif align=right>
Wine bottles are never completely filled:  a small amount of air must be
left in the neck to allow for thermal expansion and contraction.  If too
little air is left in the bottle, the wine may expand and expel the cork;
if too much air is left in the bottle, the wine may spoil.  Thus each
bottle has a minimum and maximum capacity.
<p>
Given a certain amount of wine and a selection of bottles of various sizes,
determine which bottles to use so that each is filled to between its
minimum and maximum capacity and so that as much wine as possible is
bottled.
<p>
<h3>Input</h3>
<b>
The input begins with a single positive integer on a line by itself indicating 
the number of the cases following, each of them as described below. 
This line is followed by a blank line, and there is also a blank line between 
two consecutive inputs.
</b>
<p>
<p>


The first line of input contains two integers:  the amount of wine
to be bottled (in litres, between 0 and 1,000,000) and the number 
of sizes of bottles (between 1 and 100).  
For each size of bottle, one line of input follows 
giving 
the minimum and maximum capacity of 
each bottle in millilitres.  The maximum
capacity is not less than 325 ml and does not exceed 4500 ml.  The
minimum capacity is not less than 95% and not greater than 99%
of the maximum capacity.  You may assume that an unlimited number
of each bottle is available.
<p>
<h3>Output</h3>
<b>
For each test case, the output must follow the description below. 
The outputs of two consecutive cases will be separated by a blank line.
</b>
<p>
<p>
Your output should consist of a single integer:  the amount of wine, in ml,
that cannot be bottled.
<h3>Sample Input</h3>
<pre>
2

10 2
4450 4500
725 750

10000 2
4450 4500
725 750
</pre>
<h3>Sample Output</h3>
<pre>
250

0
</pre>


______________________________________________________
10281||||||false||||||
<h2>Problem A:  Average Speed</h2>
You have bought a car in order to drive from Waterloo to a big city.
The odometer on their car is broken, so you cannot measure distance.  
But the speedometer
and cruise control both work, so the car can maintain a constant speed which
can be adjusted from time to time in response to speed limits, traffic
jams, and border queues.  You have a stopwatch and note the elapsed time
every time the speed changes.  From time to time you wonder, "how far 
have I come?".  To solve this problem you must write a program to
run on your laptop computer in the passenger seat.
<p>
Standard input contains several lines of input:  Each speed change is
indicated by a line specifying the elapsed time since the beginning of the trip (hh:mm:ss), 
followed by the new speed in km/h.  Each query is indicated by a line
containing the elapsed time.  
At the outset of the trip the car is stationary.  
Elapsed times are given in non-decreasing order and there is at most one
speed change at any given time.
<p>
For each query in standard input, you should print a line giving the
time and the distance travelled, in the format below.
<h3>Sample Input</h3>
<pre>
00:00:01 100
00:15:01
00:30:01
01:00:01 50
03:00:01
03:00:05 140
</pre>
<h3>Output for Sample Output</h3>
<pre>
00:15:01 25.00 km
00:30:01 50.00 km
03:00:01 200.00 km
</pre>

______________________________________________________
10282||||||false||||||
<h2>Problem C: Babelfish</h2>
You have just moved from Waterloo to a big city. The people here speak
an incomprehensible dialect of a foreign language. Fortunately, you have
a dictionary to help you understand them.
<p>
Input consists of up to 100,000 dictionary entries, followed by a blank
line, followed by a message of up to 100,000 words. Each dictionary
entry is a line containing an English word, followed by a space and a
foreign language word. No foreign word appears more than once in the
dictionary. The message is a sequence of words in the foreign language,
one word on each line. Each word in the input is a sequence of at most 10
lowercase letters.

Output is the message translated to English, one word per line.  Foreign
words not in the dictionary should be translated as "eh".

<h3>Sample Input</h3>
<pre>
dog ogday
cat atcay
pig igpay
froot ootfray
loops oopslay

atcay
ittenkay
oopslay
</pre>
<h3>Output for Sample Input</h3>
<pre>
cat
eh
loops
</pre>

______________________________________________________
10283||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p0_files/filelist.xml">
<link rel=Edit-Time-Data href="p0_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem A - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3
	{margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:#772222;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="10242"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link="#772222" vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem A<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>The Kissing Circles</span></b><span style='font-size:
24.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard
input</p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>2 seconds<b style='mso-bidi-font-weight:normal'> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>There
are some interesting figures below. You can see that we can put within a circle
one or more circles of equal radius. The important property of these circles is
that every consecutive circles touch each other. Given the radius <b
style='mso-bidi-font-weight:normal'>R</b> of the larger circle and the number
of small circles <b style='mso-bidi-font-weight:normal'>N</b> of equal radius
inside,<span style='mso-spacerun:yes'>Â  </span>you will have to find the radius
of the smaller circles <b style='mso-bidi-font-weight:normal'>r,</b> the area
surrounded by the kissing small circles (light blue) <b style='mso-bidi-font-weight:
normal'>I </b>and the area outside the kissing small circles but inside the
larger circle (light green) <b style='mso-bidi-font-weight:normal'>E</b>.<o:p></o:p></span></p>
<center>
<img width=347 height=226
src="http://uva.onlinejudge.org/external/102/p10283.jpg"  ><br><br>
<b>Fig: Figures for N = 1, 2, 3, 4, 5, 6<o:p></o:p></b>
</center>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b></p>

<p class=MsoNormal style='text-align:justify'>The input file will contain
several lines of inputs.&nbsp;Each line contains non-negative integers <b
style='mso-bidi-font-weight:normal'>R(R&lt;=10000)</b> and <b style='mso-bidi-font-weight:
normal'>N (1&lt;=N&lt;=100)</b> as described before. Input is terminated by end
of file.</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>For
each line of input produce one line of output. This one line contains three
floating point numbers <b style='mso-bidi-font-weight:normal'>r</b>, <b
style='mso-bidi-font-weight:normal'>I</b> and <b style='mso-bidi-font-weight:
normal'>E</b> as described before. The floating point numbers should have ten
digits after the decimal point. The output will be checked with special
correction programs. So you wonÂ’t have to worry about small precision
errors.&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";color:black'>10 3<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";color:black'>10 4</span><span style='font-size:11.0pt;
font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New"'>10 5<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New"'>10 6<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";color:black'>4.6410161514 3.4732652470 107.6854162259<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";color:black'>4.1421356237 14.7279416563 83.8264899217<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";color:black'>3.7019190816 29.7315551092 69.1625632742<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";color:black'>3.3333333333 45.6568837582 59.0628713615<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(Math LoversÂ’ Contest, Problem Setter:
Shahriar Manzoor, </span><span style='mso-bidi-font-weight:bold'>Thanks to Dr.
Erich Friedman &amp; Math world</span></b><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>)</span></b></p>

</div>

</body>

</html>

______________________________________________________
10284||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p1_files/filelist.xml">
<link rel=Edit-Time-Data href="p1_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem B - GWCF Contest 1 - Math Lovers' Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceType"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>121</o:Revision>
  <o:TotalTime>975</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-05-21T16:28:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>267</o:Words>
  <o:Characters>1527</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1791</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:bold;}
em
	{mso-bidi-font-style:normal;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
tt
	{font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:172457567;
	mso-list-template-ids:-860346650;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1
	{mso-list-id:1354963207;
	mso-list-template-ids:-53062744;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="14338"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem B<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Chessboard in FEN </span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Input: </span></b><span style='mso-bidi-font-size:
12.0pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Output: </span></b><span style='mso-bidi-font-size:
12.0pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:12.0pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
12.0pt'> 2 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'>Memory Limit: </span></b><span
style='mso-bidi-font-size:12.0pt'>32 MB<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>In the <b style='mso-bidi-font-weight:normal'>FEN</b>
(Forsyth-Edwards Notation), a chessboard is described as follows: <o:p></o:p></span></p>

<ul type=disc>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>The Board-Content
     is specified starting with the top row and ending with the bottom row. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>Character </span><span
     style='font-size:10.0pt;font-family:"Courier New"'>/</span><span
     style='mso-bidi-font-size:12.0pt'> is used to separate data of adjacent
     rows. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>Each row is
     specified from left to right. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>White pieces
     are identified by uppercase piece letters: </span><span style='font-size:
     10.0pt;font-family:"Courier New"'>PNBRQK</span><span style='mso-bidi-font-size:
     12.0pt'>. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>Black pieces
     are identified by lowercase piece letters: </span><span style='font-size:
     10.0pt;font-family:"Courier New"'>pnbrqk</span><span style='mso-bidi-font-size:
     12.0pt'>. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>Empty squares
     are represented by the numbers one through eight. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>A number used
     represents the count of contiguous empty squares along a row. <o:p></o:p></span></li>
 <li class=MsoNormal style='color:windowtext;mso-margin-top-alt:auto;
     mso-margin-bottom-alt:auto;text-align:justify;mso-list:l1 level1 lfo3;
     tab-stops:list .5in'><span style='mso-bidi-font-size:12.0pt'>Each row's
     sum of numbers and characters must equal 8.<o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>As for example: <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt;font-family:"Courier New";color:windowtext'>5k1r/2q3p1/p3p2p/1B3p1Q/n4P2/6P1/bbP2N1P/1K1RR3</span></b><span
style='font-size:10.0pt;font-family:"Courier New";color:windowtext'>, </span><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>is the <b style='mso-bidi-font-weight:
normal'>FEN</b> notation description of the following chessboard: <o:p></o:p></span></p><br>
<center>
<img width=171 height=171
src="http://uva.onlinejudge.org/external/102/p10284.gif" >
</center><br>
<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>The chessboard of the
beginning of a chess game is described in <b style='mso-bidi-font-weight:normal'>FEN</b>
as: <o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt;font-family:
"Courier New";color:windowtext'>rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt;color:windowtext'>Your task is simple: given a chessboard description in
a <b style='mso-bidi-font-weight:normal'>FEN</b> notation you are asked to compute
the number of unoccupied squares on the board which are not attacked by any
piece.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>Input is a sequence of lines,
each line containing a FEN description of a chessboard. Note that the
description does not necessarily give a legal chess position. Input lines do
not contain white space.</p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'>For each line
of input, output one line containing an integer which gives the number of
unoccupied squares which are not attacked.</p>

<p class=MsoNormal style='text-align:justify;tab-stops:436.5pt'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input</span><o:p></o:p></b></p>

<pre>5k1r/2q3p1/p3p2p/1B3p1Q/n4P2/6P1/bbP2N1P/1K1RR3</pre><pre>rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR</pre>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;font-family:"Courier New";color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:18.0pt'>Sample Output</span><o:p></o:p></b></p>

<pre>3</pre><pre>16</pre>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<pre><b><span style='font-size:12.0pt;font-family:"Times New Roman";color:black'>(Math Lovers&#8217; Contest, Source: </span></b><st1:place><st1:PlaceType><b><span
  style='font-size:12.0pt;font-family:"Times New Roman";color:black'>University</span></b></st1:PlaceType><b><span
 style='font-size:12.0pt;font-family:"Times New Roman";color:black'> of </span></b><st1:PlaceName><b><span
  style='font-size:12.0pt;font-family:"Times New Roman";color:black'>Alberta</span></b></st1:PlaceName></st1:place><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:black'> Local Contest)</span></b><span
style='font-size:12.0pt;font-family:"Times New Roman"'><o:p></o:p></span></pre>

<p class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10285||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p2_files/filelist.xml">
<link rel=Edit-Time-Data href="p2_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem C - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>12</o:Revision>
  <o:TotalTime>23</o:TotalTime>
  <o:Created>2002-05-15T09:35:00Z</o:Created>
  <o:LastSaved>2002-05-21T22:44:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>283</o:Words>
  <o:Characters>1614</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1894</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='margin-left:9.0pt;text-align:center'><b><span
style='font-size:18.0pt'>Problem C<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='margin-left:9.0pt;text-align:center'><b><span
style='font-size:24.0pt'>Longest Run on a Snowboard</span></b><span
style='font-size:24.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='margin-left:9.0pt;text-align:center'><b>Input:
</b>standard input</p>

<p class=MsoNormal align=center style='margin-left:9.0pt;text-align:center'><b>Output:
</b>standard output</p>

<p class=MsoNormal align=center style='margin-left:9.0pt;text-align:center'><b
style='mso-bidi-font-weight:normal'>Time Limit: </b>5 seconds<b
style='mso-bidi-font-weight:normal'> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='margin-left:9.0pt;text-align:center'><b
style='mso-bidi-font-weight:normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p style='text-align:justify;tab-stops:0in'>Michael likes snowboarding. That's
not very surprising, since snowboarding is really great. The bad thing is that in
order to gain speed, the area must slide downwards. Another disadvantage is
that when you've reached the bottom of the hill you have to walk up again or
wait for the ski-lift. <o:p></o:p></p>

<p style='text-align:justify'><!-- ===================== PROBLEM ==================================== -->Michael
would like to know how long the longest run in an area is. That area is given
by a grid of numbers, defining the heights at those points. Look at this
example: </p>

<pre style='margin-left:135.0pt'><span style='mso-spacerun:yes'>Â </span><b
style='mso-bidi-font-weight:normal'><span style='font-size:11.0pt'>1<span style='mso-spacerun:yes'>Â  </span>2<span style='mso-spacerun:yes'>Â  </span>3<span style='mso-spacerun:yes'>Â  </span>4 5<o:p></o:p></span></b></pre><pre
style='margin-left:135.0pt'><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>16 17 18 19 6<o:p></o:p></span></b></pre><pre
style='margin-left:135.0pt'><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>15 24 25 20 7<o:p></o:p></span></b></pre><pre
style='margin-left:135.0pt'><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>14 23 22 21 8<o:p></o:p></span></b></pre><pre
style='margin-left:135.0pt'><b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>13 12 11 10 9<o:p></o:p></span></b></pre>

<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>One
can slide down from one point to a connected other one if and only if the
height decreases. One point is connected to another if it's at left, at right,
above or below it. In the sample map, a possible slide would be <b
style='mso-bidi-font-weight:normal'>24-17-16-1</b> (start at <b
style='mso-bidi-font-weight:normal'>24</b>, end at <b style='mso-bidi-font-weight:
normal'>1</b>). Of course if you would go <b style='mso-bidi-font-weight:normal'>25-24-23-...-3-2-1</b>,
it would be a much longer run. In fact, it's the longest possible. </p>

<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:18.0pt'>Input<o:p></o:p></span></b></p>

<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><!-- ===================== INPUT ====================================== -->The
first line contains the number of test cases <b style='mso-bidi-font-weight:
normal'>N</b>. Each test case starts with a line containing the name (it's a
single string), the number of rows <b style='mso-bidi-font-weight:normal'>R</b>
and the number of columns <b style='mso-bidi-font-weight:normal'>C</b>. After
that follow <b style='mso-bidi-font-weight:normal'>R</b> lines with <b
style='mso-bidi-font-weight:normal'>C</b> numbers each, defining the heights. <b
style='mso-bidi-font-weight:normal'>R</b> and C won't be bigger than <b
style='mso-bidi-font-weight:normal'>100</b>, <b style='mso-bidi-font-weight:
normal'>N</b> not bigger than <b style='mso-bidi-font-weight:normal'>15</b> and
the heights are always in the range from <b style='mso-bidi-font-weight:normal'>0</b>
to <b style='mso-bidi-font-weight:normal'>100</b>. <o:p></o:p></p>

<p style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><!-- ===================== OUTPUT ===================================== -->For
each test case, print a line containing the name of the area, a colon, a space
and the length of the longest run one can slide down in that area. <o:p></o:p></p>

<pre><b style='mso-bidi-font-weight:normal'><span style='font-size:18.0pt;
font-family:"Times New Roman"'><!-- ===================== SAMPLE INPUT =============================== -->Sample Input<o:p></o:p></span></b></pre><pre><span
style='font-size:11.0pt'>2<o:p></o:p></span></pre><pre><span style='font-size:
11.0pt'>Feldberg 10 5<o:p></o:p></span></pre><pre><span style='font-size:11.0pt'>56 14 51 58 88<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>26 94 24 39 41<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>24 16 8 51 51<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>76 72 77 43 10<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>38 50 59 84 81<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>5 23 37 71 77<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>96 10 93 53 82<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>94 15 96 69 9<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>74 0 62 38 96<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>37 54 55 82 38<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>Spiral 5 5<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>1 2 3 4 5<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>16 17 18 19 6<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>15 24 25 20 7<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>14 23 22 21 8<o:p></o:p></span></pre><pre><span
style='font-size:11.0pt'>13 12 11 10 9<o:p></o:p></span></pre>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><o:p>&nbsp;</o:p></p>

<!-- ===================== SAMPLE OUTPUT ============================== -->

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:18.0pt'>Sample
Output<o:p></o:p></span></b></p>

<pre>Feldberg: 7</pre><pre>Spiral: 25</pre>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:10.0pt;
color:black'><!-- ================================================================== -->(Math
LoversÂ’ Contest, Problem Setter: Stefan Pochmann)</span></b></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
10286||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p3_files/filelist.xml">
<link rel=Edit-Time-Data href="p3_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem D - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:#772222;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="8194"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link="#772222" vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:16.0pt'>Problem D</span></b></p>

<center><font face="Times New Roman" size=6><b>Trouble with a Pentagon</b></center>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b><span
style='mso-bidi-font-weight:bold'>standard input</span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>2 seconds</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>You are
asked to place the largest possible square inside a regular pentagon (whose internal
angles are same and all the sides are same in length). You are given the
information that one vertex of the square will be coincident with a vertex of
the square as shown in the figure below. You will have to find the length of a
side of the square when a side of the regular pentagon is given. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'><o:p>&nbsp;</o:p></span></p>
<center>
<img width=244 height=232
src="http://uva.onlinejudge.org/external/102/p10286.jpg"  ><br>
<font face="Times New Roman, Arial, Helvetica" size=3><b>Fig: Square in a pentagon.</b></font>
</center><br>
<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>The
input file contains several lines of input. Each line contains a floating point
number <b style='mso-bidi-font-weight:normal'>F (0&lt;=F&lt;=100000)</b> which
indicates the length of a side of the pentagon. Input is terminated by end of
file.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black;
mso-bidi-font-weight:bold'>For each line of input produce one line of output
containing a floating point number with ten digits after the decimal point.
This number indicates the largest possible side of a square that fits in the
pentagon. This output will be judged with a special correction program, so
donÂ’t worry about small precision errors.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt;
color:black'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";mso-bidi-font-weight:bold'>0.0000001<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";mso-bidi-font-weight:bold'>0.0000002<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt;
font-family:"Courier New";mso-bidi-font-weight:bold'>0.0000003</span><b><span
style='font-size:14.0pt'>&nbsp;</span></b><span style='font-size:11.0pt;
font-family:"Courier New";mso-bidi-font-weight:bold'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>0.0000001067<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>0.0000002135<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>0.0000003202<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(World Finals Warm-up Contest,
Problem Setter: Shahriar Manzoor)<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'><o:p>&nbsp;</o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10287||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p4_files/filelist.xml">
<link rel=Edit-Time-Data href="p4_files/editdata.mso">
<link rel=OLE-Object-Data href="p4_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem E - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>117</o:Revision>
  <o:TotalTime>740</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2001-08-25T15:11:00Z</o:Created>
  <o:LastSaved>2002-05-21T16:30:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>328</o:Words>
  <o:Characters>1874</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>15</o:Lines>
  <o:Paragraphs>4</o:Paragraphs>
  <o:CharactersWithSpaces>2198</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-bidi-font-weight:normal;}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1421216226;
	mso-list-type:hybrid;
	mso-list-template-ids:666686264 67698711 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="11266"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem E<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Gifts in a Hexagonal Box</span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:13.5pt'>Memory Limit:</span></b><span
style='mso-bidi-font-size:13.5pt'> 32 MB<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>When we buy gifts for someone, we
also try to make sure that the box in which the gifts are placed is also beautiful.
So the gift box is a very important thing. I donÂ’t want to discuss more on this
issue, so now letÂ’s move our attention to the image below. This image shows how
round gifts can be put optimally in a regular hexagon shaped box (A regular
hexagon is a hexagon whose all edges are equal and all internal angles are also
equal). </p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>
<center>
<img width=445 height=411
src="http://uva.onlinejudge.org/external/102/p10287.jpg"  >
</center>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'>Given the length of one side of
the hexagonal box, you will have to find the radius of the circular gifts for
all four cases. You can assume that the placement of the gifts is symmetric as
they are shown in the figure above. To be more precise</p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-list:Ignore'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>In the first case the gift touches all six sides of the
box.</p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-list:Ignore'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>In the second case both the gifts touch two sides of
the box.</p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-list:Ignore'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>In the third case all the gifts touch two different
sides of the box.</p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-list:Ignore'>d)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>In the fourth case two gifts touch two different sides
of the box and other two touches one side.</p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-list:Ignore'>e)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>The radiuses of all circular gifts are equal for every
single case. </p>

<p class=MsoNormal><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75"
 style='width:191.25pt;height:.75pt' o:ole=" >
 <v:imagedata src="http://uva.onlinejudge.org/external/102/p10287.jpg"  o:title=" />
</v:shape><![endif]--><![if !vml]><img width=255 height=1
src="http://uva.onlinejudge.org/external/102/p10287.jpg"  v:shapes="_x0000_i1026"><![endif]><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Photoshop.Image.6" ShapeID="_x0000_i1026"
  DrawAspect="Content" ObjectID="_1083525376">
  <o:WordFieldCodes>\s</o:WordFieldCodes>
 </o:OLEObject>
</xml><![endif]--></p>

<h2>Input</h2>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt'>The
input file contains several lines of input. Each line contains a single non
negative floating point number <b style='mso-bidi-font-weight:normal'>S</b> <b
style='mso-bidi-font-weight:normal'>(S&lt;=10000), </b>here <b
style='mso-bidi-font-weight:normal'>S</b> is the length of one side of the
hexagonal box.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-size:11.0pt'><o:p>&nbsp;</o:p></span></p>

<h2>Output</h2>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>For each line of input produce one line of output. This line should
contain four floating point numbers <b style='mso-bidi-font-weight:normal'>r1,
r2, r3, r4</b> separated by a single space. Here <b style='mso-bidi-font-weight:
normal'>r1</b> is the radius of the gift when only one gift is kept inside the
box; <b style='mso-bidi-font-weight:normal'>r2</b> is the radius of the gifts
when only two gifts are placed inside the box. <b style='mso-bidi-font-weight:
normal'>r3</b> and <b style='mso-bidi-font-weight:normal'>r4</b> has similar
meanings. The floating point numbers should have ten digits after the decimal
point. Outputs will be checked with special judge, so small precision errors
will be ignored.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>

<h2>Sample Input</h2>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>0.0000001<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>0.0000002<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>0.0000003<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;font-family:Courier;
color:windowtext'><o:p>&nbsp;</o:p></span></p>

<h2>Sample Output</h2>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>0.0000000866 0.0000000464 0.0000000433 0.0000000375<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>0.0000001732 0.0000000928 0.0000000866 0.0000000750<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>0.0000002598 0.0000001392 0.0000001299 0.0000001125<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>(Math LoversÂ’
Contest, Problem Setter: Shahriar Manzoor, <span style='mso-bidi-font-weight:
bold'>Thanks to Dr. Erich Friedman</span>)<o:p></o:p></b></p>

</div>

</body>

</html>

______________________________________________________
10288||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p5_files/filelist.xml">
<link rel=Edit-Time-Data href="p5_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem F - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem F</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>Coupons</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard
input</p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b>Time Limit: </b><span
style='mso-bidi-font-weight:bold'>2</span> seconds<b> </b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Memory Limit: </b>32
MB</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'>&nbsp;</span></p>

<p class=MsoNormal style='text-align:justify'>Coupons in cereal boxes are
numbered <b style='mso-bidi-font-weight:normal'>1</b> to <em><b
style='mso-bidi-font-weight:normal'><span style='font-style:normal;mso-bidi-font-style:
italic'>n</span></b></em>, and a set of one of each is required for a prize (a cereal
box, of course). With one coupon per box, how many boxes on average are
required to make a complete set of <em><b style='mso-bidi-font-weight:normal'><span
style='font-style:normal;mso-bidi-font-style:italic'>n</span></b></em> coupons?
</p>

<p style='text-align:justify'><b style='mso-bidi-font-weight:normal'><span
style='font-size:18.0pt'>Input<o:p></o:p></span></b></p>

<p style='text-align:justify'>Input consists of a sequence of lines each
containing a single positive integer <em><b style='mso-bidi-font-weight:normal'><span
style='font-style:normal;mso-bidi-font-style:italic'>n</span></b></em>, 1<b
style='mso-bidi-font-weight:normal'>&lt;=<em>n</em>&lt;=33</b>, giving the size
of the set of coupons. Input is terminated by end of file. </p>

<p style='text-align:justify'><b style='mso-bidi-font-weight:normal'><span
style='font-size:18.0pt'>Output<o:p></o:p></span></b></p>

<p style='text-align:justify'>For each input line, output the average number of
boxes required to collect the complete set of <em><b style='mso-bidi-font-weight:
normal'><span style='font-style:normal;mso-bidi-font-style:italic'>n</span></b></em>
coupons. If the answer is an integer number, output the number. If the answer
is not integer, then output the integer part of the answer followed by a space
and then by the proper fraction in the format shown below. The fractional part
should be irreducible. There should be no trailing spaces in any line of
output. </p>

<h3><span style='font-size:18.0pt'>Sample Input<o:p></o:p></span></h3>

<pre>2</pre><pre>5</pre><pre>17</pre>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:18.0pt'>Sample Output<o:p></o:p></span></h3>

<pre>3 </pre><pre>&nbsp;&nbsp;&nbsp;5</pre><pre>11 --</pre><pre>&nbsp;&nbsp; 12</pre><pre>&nbsp;&nbsp; 340463</pre><pre>58 ------</pre><pre>&nbsp;&nbsp; 720720</pre>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>

<hr size=2 width="100%" align=center>

</div>

<pre><b><span style='font-size:12.0pt;font-family:"Times New Roman";color:black'>(Math LoversÂ’ Contest, Source: University of Alberta Local Contest)</span></b><span
style='font-size:12.0pt;font-family:"Times New Roman"'><o:p></o:p></span></pre>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>

______________________________________________________
10289||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p6_files/filelist.xml">
<link rel=Edit-Time-Data href="p6_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem G - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>101</o:Revision>
  <o:TotalTime>514</o:TotalTime>
  <o:LastPrinted>1999-05-07T21:27:00Z</o:LastPrinted>
  <o:Created>2000-12-04T12:45:00Z</o:Created>
  <o:LastSaved>2002-05-21T16:31:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>267</o:Words>
  <o:Characters>1523</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>12</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1787</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="11266"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoTitle>Problem G</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>A Square &amp; Equilateral Triangles </span><o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 3 seconds<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:13.5pt'>Memory Limit: </span></b><span
style='mso-bidi-font-size:13.5pt'>32 MB</span></p>

<p class=MsoNormal><b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>The figure <b style='mso-bidi-font-weight:normal'>1, 2, 3, 4, 5, 6</b>
and <b style='mso-bidi-font-weight:normal'>7</b> shows how <b style='mso-bidi-font-weight:
normal'>1, 2, 3, 4, 5, 6</b> and <b style='mso-bidi-font-weight:normal'>8</b> triangles
of equal size can be put int a square optimally. Obviously, if the square size
remains same the triangle sizes will be decreasing from figure <b
style='mso-bidi-font-weight:normal'>1</b> to <b style='mso-bidi-font-weight:
normal'>7</b>. Given the square size you will have to find out the sides of the
triangles for all seven figures. You can assume that when the images look
exactly symmetric along a certain axis they are actually symmetric along that
certain axis. Also note that I am asking you to print the decimal value of the
exact solution and not any approximate solution.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><span style='mso-spacerun:yes'>&nbsp;</span><o:p></o:p></span></p>
<center>
<img width=520 height=558
src="http://uva.onlinejudge.org/external/102/p10289.jpg"  ></center>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>The input file contains several lines of input. Each line contains a
single floating point number <b style='mso-bidi-font-weight:normal'>S
(0&lt;=S&lt;=10000)</b> which denotes the side of a square. Input is terminated
by end of file.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>For each line of input produce one line of output. Each line will
contain seven floating point numbers <b style='mso-bidi-font-weight:normal'>t1,
t2, t3, t4, t5, t6</b> and <b style='mso-bidi-font-weight:normal'>t7</b>. Here <b
style='mso-bidi-font-weight:normal'>t1, t2, t3, t4, t5, t6</b> and <b
style='mso-bidi-font-weight:normal'>t7</b> denote the length of the side of a
triangle for the given input in case <b style='mso-bidi-font-weight:normal'>1,
2, 3, 4, 5, 6,</b> and <b style='mso-bidi-font-weight:normal'>7</b>
respectively. All floating point numbers should have ten digits after the
decimal point. The output will be checked with special correction program. So
small precision errors will be ignored.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input:</span><o:p></o:p></b></p>

<pre>0.0000001</pre><pre>0.0000002</pre><pre>0.0000003</pre><pre><span
style='font-size:11.0pt'><o:p>&nbsp;</o:p></span></pre>

<p class=MsoNormal style='text-align:justify;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='font-size:18.0pt'>Sample Output:</span></b><b><span style='font-size:
10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;font-family:Courier;color:windowtext'>0.0000001035
0.0000000816 0.0000000676 0.0000000634 0.0000000554 0.0000000526 0.0000000477<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;font-family:Courier;color:windowtext'>0.0000002071
0.0000001633 0.0000001353 0.0000001268 0.0000001109 0.0000001052 0.0000000953<o:p></o:p></span></p>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:10.0pt;font-family:Courier;color:windowtext'>0.0000003106
0.0000002449 0.0000002029 0.0000001902 0.0000001663 0.0000001577 0.0000001430<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b>(Math
Lovers&#8217; Contest, Problem setter: Shahriar Manzoor, Thanks to Dr. Erich
Friedman)</b><span style='mso-bidi-font-size:13.5pt;color:windowtext'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10290||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p7_files/filelist.xml">
<link rel=Edit-Time-Data href="p7_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem H - GWCF Contest 1 - Math Lovers' Contest</title>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	text-indent:.5in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.preformatted, li.preformatted, div.preformatted
	{mso-style-name:preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="7170"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem H</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>{<span class=GramE>sum</span>+=i++} to
Reach N<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b><span
style='mso-bidi-font-weight:bold'>standard input</span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Output:<span
style='mso-spacerun:yes'>Â  </span></b>standard output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal style='text-align:justify'><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'>All the positive numbers can be
expressed as a sum of one, two or more consecutive positive integers. For
example <b style='mso-bidi-font-weight:normal'>9</b> can be expressed in three
such ways, <b style='mso-bidi-font-weight:normal'>2+3+4</b>, <b
style='mso-bidi-font-weight:normal'>4+5</b> or <b style='mso-bidi-font-weight:
normal'>9</b>. Given an integer less than <b style='mso-bidi-font-weight:normal'>(9*10^14+1)</b>
or <b style='mso-bidi-font-weight:normal'>(9E14 + 1)</b> or <b
style='mso-bidi-font-weight:normal'>(9*10<sup>14</sup> +1)</b> you will have to
determine in how many ways that number can be expressed as summation of
consecutive numbers.</p>

<p class=MsoNormal><b><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Input</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-weight:
bold'>The input file contains less than <b>1100</b> lines of input. Each line
contains a single integer <span class=GramE><b>N</b><span
style='mso-spacerun:yes'>Â  </span><b>(</b></span><b>0&lt;=N&lt;= </b></span><b
style='mso-bidi-font-weight:normal'>9E14)</b>.<span style='mso-bidi-font-weight:
bold'> Input is terminated by end of file.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Output</span></b><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='color:black;
mso-bidi-font-weight:bold'>For each line of input produce one line of output.
This line contains an integer which tells in how many ways <b>N</b> can be expressed
as summation of consecutive integers.</span><b><span style='font-size:14.0pt;
color:black'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Input</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>9<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>11<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>12<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:14.0pt'>&nbsp;</span></b></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span></b><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>3<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>2<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New"'>2<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>(Math LoversÂ’ Contest, Problem
Setter: Shahriar Manzoor)<o:p></o:p></span></b></p>

</div>

</body>

</html>

______________________________________________________
10291||||||false||||||
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p8_files/filelist.xml">
<link rel=Edit-Time-Data href="p8_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem I - GWCF Contest 1 - Math Lovers' Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceType"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem I</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>Cut the Legs</span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard
input</p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b>Time Limit: </b>2
seconds<b> </b></p>

<p class=MsoNormal align=center style='text-align:center'><b>Memory Limit: </b>32
MB</p>

<p class=MsoNormal align=center style='text-align:center'>&nbsp;</p>

<p class=MsoNormal style='text-align:justify'>A table with four legs may rock,
even on a flat surface, if its legs are not all the same length. Interestingly,
regardless of how many legs have differing lengths, it is always possible to
saw an amount from some legs so as to make the table sit level on a flat
surface without rocking. </p>

<p style='text-align:justify'>Your job is to generalize this approach to a
table with many legs equally spaced around the perimeter of a round table. You
are to determine the total length of legs to cut so as to have the table sit
level without rocking on a flat surface with not necessarily every leg touching
the ground. </p>

<p><b><span style='font-size:18.0pt'>Input</span></b></p>

<p style='text-align:justify'>Input consists of data for a number of tables.
For each table, a line will give an integer <b>t</b>, between <b
style='mso-bidi-font-weight:normal'>3</b> and <b style='mso-bidi-font-weight:
normal'>50</b>, indicating the number of legs on the table. <b>t</b> subsequent
lines will give, in order around the table's circumference, the lengths of the
legs in millimeters. Each leg is perpendicular to the table top. A line
containing <b style='mso-bidi-font-weight:normal'>0</b> follows the data for
the last table. </p>

<p><b><span style='font-size:18.0pt'>Output</span></b></p>

<p style='text-align:justify'>Pick a strategy that cuts the least total length
from all legs and print this amount as an integer number. Print a blank line
between outputs for each table. </p>

<h3><span style='font-size:18.0pt'>Sample Input</span></h3>

<pre>3</pre><pre>2000</pre><pre>3000</pre><pre>4000</pre><pre>4</pre><pre>2000</pre><pre>2000</pre><pre>1999</pre><pre>2001</pre><pre>5</pre><pre>2000</pre><pre>2000</pre><pre>1999</pre><pre>2001</pre><pre>1999</pre><pre>0</pre>

<h3 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
style='font-size:18.0pt'>Sample Output<o:p></o:p></span></h3>

<pre>3000</pre><pre>&nbsp;</pre><pre>4</pre><pre>&nbsp;</pre><pre>1</pre>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'>

<hr size=2 width="100%" align=center>

</div>

<pre><b><span style='font-size:12.0pt;font-family:"Times New Roman";color:black'>(Math LoversÂ’ Contest, Source: </span></b><st1:place><st1:PlaceType><b><span
  style='font-size:12.0pt;font-family:"Times New Roman";color:black'>University</span></b></st1:PlaceType><b><span
 style='font-size:12.0pt;font-family:"Times New Roman";color:black'> of </span></b><st1:PlaceName><b><span
  style='font-size:12.0pt;font-family:"Times New Roman";color:black'>Alberta</span></b></st1:PlaceName></st1:place><b><span
style='font-size:12.0pt;font-family:"Times New Roman";color:black'> Local Contest)</span></b><span
style='font-size:12.0pt;font-family:"Times New Roman"'><o:p></o:p></span></pre><pre><o:p>&nbsp;</o:p></pre></div>

</body>

</html>

______________________________________________________
10292||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0053)http://www.cs.lth.se/contest/html01/ProblemGossip.htm -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p9_files/filelist.xml">
<link rel=Edit-Time-Data href="p9_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem J - GWCF Contest 1 - Math Lovers' Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="City"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>andreasb</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>14</o:Revision>
  <o:TotalTime>25</o:TotalTime>
  <o:LastPrinted>2001-09-16T11:43:00Z</o:LastPrinted>
  <o:Created>2001-10-05T17:16:00Z</o:Created>
  <o:LastSaved>2002-05-20T09:12:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>391</o:Words>
  <o:Characters>2230</o:Characters>
  <o:Company>Anoto AB</o:Company>
  <o:Lines>18</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2616</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:12.0pt;
	font-family:"Times New Roman";
	font-weight:normal;
	font-style:italic;}
h3
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.0pt;
	font-family:Arial;}
p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.MsoFootnoteReference
	{vertical-align:super;}
span.GramE
	{mso-style-name:" ;
	mso-gram-e:yes;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:579220586;
	mso-list-template-ids:531011868;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:615988656;
	mso-list-template-ids:1877504692;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="4098"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem J<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>The Gossiping System</span></b><span style='font-size:
24.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard
input</p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>4 seconds<b style='mso-bidi-font-weight:normal'> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal><span lang=EN-GB style='mso-ansi-language:EN-GB'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'>A common amusement in almost any society,
though certainly not the most glamorous one, is for its inhabitants to spread rumours
about each other. In the town of </span><st1:City><st1:place><span lang=EN-GB
  style='mso-ansi-language:EN-GB'>Knoxville</span></st1:place></st1:City><span
lang=EN-GB style='mso-ansi-language:EN-GB'>, this is definitely known to be the
case. In order to establish some sort of order without completely ruin the
pleasure of gossiping,<span style='mso-spacerun:yes'>Â  </span>they have agreed
on a system for everyday life activities, in which rumours spread in a
controlled fashion. The inhabitants meet in certain groups in their work, as
well as in their spare time, on a daily basis. The following three criteria are
met for their system:<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal style='text-align:justify;mso-list:l0 level1 lfo3;
     tab-stops:list .5in'><span lang=EN-GB style='mso-ansi-language:EN-GB'>Each
     group must have the same non-zero number of <span class=GramE>members</span>
     <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
     italic'>m</span></b>. <o:p></o:p></span></li>
 <li class=MsoNormal style='text-align:justify;mso-list:l0 level1 lfo3;
     tab-stops:list .5in'><span lang=EN-GB style='mso-ansi-language:EN-GB'>Each
     person must belong to the same number of <span class=GramE>groups</span> <b
     style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>r</span></b>,
     as any other person. <o:p></o:p></span></li>
 <li class=MsoNormal style='text-align:justify;mso-list:l0 level1 lfo3;
     tab-stops:list .5in'><span lang=EN-GB style='mso-ansi-language:EN-GB'>Each
     pair of different groups has exactly one member in common. <o:p></o:p></span></li>
</ol>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'>We say that a <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>(n<span class=GramE>,g,m,r</span>)
</span></b><i>- </i><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>gossiping system</span></b><i> </i>is such a
system consisting of <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>n</span></b> persons divided into <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>g</span></b>
groups, with <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>m</span></b> and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>r</span></b> as above. The beauty of these
systems lies in their uniformity. The construction seems fair to everyone, and
still all meetings are held in small groups. Since any two groups have a member
in common, information about the activities and people in one group is swiftly
transferred to all the other groups. Furthermore, it is easy for a messenger to
lie if he or she would like to, since the truth is hard to validate due to the
fact that no two persons share more than one group. Unfortunately, there are
several combinations of <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>n</span></b><i>, </i><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>g</span></b><i>,</i> and <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>m</span></b>
for which these systems do not exist!<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'>As a mathematician living in </span><st1:City><st1:place><span
  lang=EN-GB style='mso-ansi-language:EN-GB'>Knoxville</span></st1:place></st1:City><span
lang=EN-GB style='mso-ansi-language:EN-GB'>, you are interested in studying the
existence conditions for these systems for large values of <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-style:italic'>n</span></b>. However, you
soon realise the complexity of these combinatorial objects, and choose to study
only their simplest non-trivial class, the <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>(n<span class=GramE>,g,m,2</span>)</span></b><i>-</i>gossiping
systems.<o:p></o:p></span></p>

<h3><span lang=EN-GB style='font-size:18.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-GB'>Input<o:p></o:p></span></h3>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'>On the first line of input, is a single
positive integer <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>t</span></b>. Thereafter <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>t</span></b> test cases follow. Each test
case consists of one positive number <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>n</span></b>, <b style='mso-bidi-font-weight:
normal'>1&lt;<span style='mso-bidi-font-style:italic'>n</span>&lt;10<sup>50</sup></b><span
class=GramE>,<span style='mso-spacerun:yes'>Â  </span>given</span> in the
standard base <b style='mso-bidi-font-weight:normal'>10</b> representation,
where <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>n</span></b><i> </i>specifies the number of persons.<o:p></o:p></span></p>

<h3><span lang=EN-GB style='font-size:18.0pt;font-family:"Times New Roman";
mso-ansi-language:EN-GB'>Output<o:p></o:p></span></h3>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'>For each test case in the input, output the
text <b style='mso-bidi-font-weight:normal'>Â‘Yes.Â’</b> on a line of its own, if
there exists a <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>(n,g,m,2)</span></b><i>-</i>gossiping<i> </i>system for any positive
integers <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>g&gt;1</span></b> and <b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-style:italic'>m&gt;0</span></b> for the value of <b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:italic'>n</span></b>
in the test case, otherwise output the text <b style='mso-bidi-font-weight:
normal'>Â‘No.Â’</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span lang=EN-GB style='font-size:18.0pt;mso-ansi-language:EN-GB'>Sample
Input<o:p></o:p></span></b></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>5<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>3<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>4<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>5<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>6<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:"Courier New"'>678678658335615<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span lang=EN-GB style='font-size:18.0pt;mso-ansi-language:EN-GB'>Sample
Output<o:p></o:p></span></b></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>Yes.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>No.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>No.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-family:"Courier New"'>Yes.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='font-family:"Courier New"'>Yes.<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'>

<hr size=2 width="100%" align=center>

</div>

<p class=MsoNormal style='text-align:justify'><span class=GramE><b
style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-size:10.0pt;
color:black'>(Math LoversÂ’ Contest, Problem Source: Swedish National
Programming Contest, arranged by </span>department of Computer Science at Lund
Institute of Technology.</b><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:10.0pt;color:black'>)</span></b></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10293||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0051)http://www.cs.queensu.ca/~acmteam/icpc/tryout00/q1/ --><!--Converted with LaTeX2HTML 96.1-h (September 30, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p10_files/filelist.xml">
<link rel=Edit-Time-Data href="p10_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem K - GWCF Contest 1 - Math Lovers' Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceName"/>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="PlaceType"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>16</o:Revision>
  <o:TotalTime>30</o:TotalTime>
  <o:Created>2002-05-07T05:22:00Z</o:Created>
  <o:LastSaved>2002-05-24T10:01:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>280</o:Words>
  <o:Characters>1596</o:Characters>
  <o:Company>BUET</o:Company>
  <o:Lines>13</o:Lines>
  <o:Paragraphs>3</o:Paragraphs>
  <o:CharactersWithSpaces>1873</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>90</w:Zoom>
  <w:GrammarState>Clean</w:GrammarState>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<link rel=Stylesheet type="text/css" media=all href="p10_files/q1.css">
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h2
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
<meta content="No Title" name=description>
<meta content=q1 name=keywords>
<meta content=document name=resource-type>
<meta content=global name=distribution>
</head>

<body lang=EN-US link=blue vlink=blue style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:18.0pt'>Problem K<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:24.0pt'>Word Length and Frequency</span></b><span
style='font-size:24.0pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b>Input: </b>standard
input</p>

<p class=MsoNormal align=center style='text-align:center'><b>Output: </b>standard
output</p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Time Limit: </b>1 second<b style='mso-bidi-font-weight:normal'> <o:p></o:p></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'>Memory Limit: </b>32 MB</p>

<p class=MsoNormal><span lang=EN-GB style='mso-ansi-language:EN-GB'>&nbsp;<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN style='mso-ansi-language:
EN'>A Queen's graduate student is writing her thesis in Computer Science. She's
very worried that her advisor will be displeased because she isn't using enough
big words. Being the cunning computer scientist that she is, she decides to
write an application that will count the length of her words. <o:p></o:p></span></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>Words
can be separated by blanks, question marks, exclaimation marks, commas and
periods (the punctuation is not to add to the length of the word). Words with
apostrophes, such as <b style='mso-bidi-font-weight:normal'>``I'm''</b> and <b
style='mso-bidi-font-weight:normal'>``You've''</b>, and hyphenated words are
treated as one word. For example, <b style='mso-bidi-font-weight:normal'>``you've''</b>
is a 5-letter word. Hyphenation may occur across two lines. <o:p></o:p></span></p>

<p style='text-align:justify'><b style='mso-bidi-font-weight:normal'><span
lang=EN style='font-size:18.0pt;mso-ansi-language:EN'>Input<o:p></o:p></span></b></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>Input
file contains several blocks of input. Each block is terminated by a line
containing a <b style='mso-bidi-font-weight:normal'>Â‘#Â’</b> as its first
character. You should not consider this line within the block. There is no
space at the end of a line. You may assume each word has no more than <b
style='mso-bidi-font-weight:normal'>30</b> characters, and each line has no
more than <b style='mso-bidi-font-weight:normal'>80</b> characters. You may
assume the entire text of a block will not end with a hyphen. <o:p></o:p></span></p>

<p style='text-align:justify'><b style='mso-bidi-font-weight:normal'><span
lang=EN style='font-size:18.0pt;mso-ansi-language:EN'>Output<o:p></o:p></span></b></p>

<p style='text-align:justify'><span lang=EN style='mso-ansi-language:EN'>The
output for each block will consist of two columns of numbers. The first column
will represent the length of the word (They appear in ascending order) and the
second column will represent the frequency of that length of word. The output
should not have any word length that has no word in the input. Print a blank
line after the output for each block of input. <o:p></o:p></span></p>

<h2><a name=SECTION00011000000000000000><span lang=EN style='mso-ansi-language:
EN'>Sample Input:</span></a><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<pre><span lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>This is fun-<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>ny!<span style='mso-spacerun:yes'>Â  </span>Mr.P and I've never seen<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>this ice-cream flavour<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>before.Crazy eh?<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>#<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>This is fun-<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>ny!<span style='mso-spacerun:yes'>Â  </span>Mr.P and I've never seen<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>this ice-cream flavour<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>before.Crazy eh?<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>#<o:p></o:p></span></pre>

<h2 style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><a
name=SECTION00012000000000000000><span lang=EN style='mso-ansi-language:EN'>Sample
Output:</span></a><span lang=EN style='mso-ansi-language:EN'><o:p></o:p></span></h2>

<pre><span lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>1 1<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>2 3<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>3 2<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>4 3<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>5 3<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>6 1<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>7 1<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>8 1<o:p></o:p></span></pre>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<pre><span lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>1 1<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>2 3<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>3 2<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>4 3<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>5 3<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>6 1<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>7 1<o:p></o:p></span></pre><pre><span
lang=EN style='font-size:11.0pt;mso-ansi-language:EN'>8 1<o:p></o:p></span></pre>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'><o:p>&nbsp;</o:p></span></p>

<div class=MsoNormal align=center style='text-align:center;tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><span
lang=EN style='mso-ansi-language:EN'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal style='tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt'><b><span
style='color:black'>(Math LoversÂ’ Contest, Source: </span></b><st1:place><st1:PlaceName><b><span
  style='color:black'>Queens</span></b></st1:PlaceName><b><span
 style='color:black'> </span></b><st1:PlaceType><b><span style='color:black'>University</span></b></st1:PlaceType></st1:place><b><span
style='color:black'> &amp; </span></b><st1:place><st1:PlaceType><b><span
  style='color:black'>University</span></b></st1:PlaceType><b><span
 style='color:black'> of </span></b><st1:PlaceName><b><span style='color:black'>Toronto</span></b></st1:PlaceName></st1:place><b><span
style='color:black'> Local Contest)</span></b><span lang=EN style='mso-ansi-language:
EN'><o:p></o:p></span></p>

</div>

</body>

</html>

______________________________________________________
10294||||||false||||||
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="p11_files/filelist.xml">
<link rel=Edit-Time-Data href="p11_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Problem L - GWCF Contest 1 - Math Lovers' Contest</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Shahriar Manzoor</o:Author>
  <o:LastAuthor>Shahriar Manzoor</o:LastAuthor>
  <o:Revision>47</o:Revision>
  <o:TotalTime>780</o:TotalTime>
  <o:LastPrinted>2002-04-24T12:23:00Z</o:LastPrinted>
  <o:Created>2002-05-13T04:41:00Z</o:Created>
  <o:LastSaved>2002-05-24T11:23:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>436</o:Words>
  <o:Characters>2488</o:Characters>
  <o:Company>CSE, BUET</o:Company>
  <o:Lines>20</o:Lines>
  <o:Paragraphs>5</o:Paragraphs>
  <o:CharactersWithSpaces>2919</o:CharactersWithSpaces>
  <o:Version>10.2625</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>90</w:Zoom>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:DisplayVerticalDrawingGridEvery>0</w:DisplayVerticalDrawingGridEvery>
  <w:UseMarginsForDrawingGridOrigin/>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:" ;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:black;}
h1
	{mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:black;
	mso-font-kerning:0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{margin:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:13.5pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
em
	{mso-bidi-font-style:normal;}
p.Preformatted, li.Preformatted, div.Preformatted
	{mso-style-name:Preformatted;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:none;
	tab-stops:0in 47.95pt 95.9pt 143.85pt 191.8pt 239.75pt 287.7pt 335.65pt 383.6pt 431.55pt 479.5pt;
	layout-grid-mode:char;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:119568207;
	mso-list-type:hybrid;
	mso-list-template-ids:-377074928 67698711 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-number-format:alpha-lower;
	mso-level-text:"%1\)";
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:" ;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
table.MsoTableGrid
	{mso-style-name:"Table Grid";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	border:solid windowtext 1.0pt;
	mso-border-alt:solid windowtext .5pt;
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-border-insideh:.5pt solid windowtext;
	mso-border-insidev:.5pt solid windowtext;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="19458"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link=blue vlink=blue style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Problem L<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b style='mso-bidi-font-weight:
normal'><span style='font-size:24.0pt'>Arif in </span></b><st1:place><b
 style='mso-bidi-font-weight:normal'><span style='font-size:24.0pt'>Dhaka</span></b></st1:place><b
style='mso-bidi-font-weight:normal'><span style='font-size:24.0pt'> (First Love
Part 2)<o:p></o:p></span></b></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Input: </span></b><span style='mso-bidi-font-size:
13.5pt;mso-bidi-font-weight:bold'>standard input<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Output: </span></b><span style='mso-bidi-font-size:
13.5pt'>standard output<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='mso-bidi-font-size:13.5pt'>Time Limit:</span></b><span style='mso-bidi-font-size:
13.5pt'> 2 seconds</span><span style='font-size:13.5pt'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>Our hero Arif is now in </span><st1:place><span style='mso-bidi-font-size:
 12.0pt'>Dhaka</span></st1:place><span style='mso-bidi-font-size:12.0pt'> (Look
at problem <a href="http://acm.uva.es/p/v102/10244.html" target=blank>10244
&#8211; First Love</a> if you want to know more about Arif, but that
information is not necessary for this problem. In short, Arif is a brilliant
programmer working at <b style='mso-bidi-font-weight:normal'>IBM</b>) and he is
looking for his first love. Days pass by but his destiny theory is not working
anymore, which means that he is yet to meet his first love. He then decides to
roam around </span><st1:place><span style='mso-bidi-font-size:12.0pt'>Dhaka</span></st1:place><span
style='mso-bidi-font-size:12.0pt'> on a <b style='mso-bidi-font-weight:normal'>rickshaw</b>
(A slow vehicle pulled by human power), running <b style='mso-bidi-font-weight:
normal'>DFS</b> (by physical movement) and <b style='mso-bidi-font-weight:normal'>BFS</b>
(with his eyes) on every corner of the street and market places to increase his
probability of reaching his goal. While roaming around </span><st1:place><span
 style='mso-bidi-font-size:12.0pt'>Dhaka</span></st1:place><span
style='mso-bidi-font-size:12.0pt'> he discovers an interesting <b
style='mso-bidi-font-weight:normal'>necklace</b> shop. There he finds some
interesting <b style='mso-bidi-font-weight:normal'>necklace/bracelet</b>
construction sets. He decides to buy some of them, but his programmer mind
starts looking for other problems. He wants to find out how many different <b
style='mso-bidi-font-weight:normal'>necklace/bracelet</b> can be made with a
certain construction set. You are requested to help him again. The following
things are true for a <b style='mso-bidi-font-weight:normal'>necklace/bracelet</b>
construction set. <o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-bidi-font-size:12.0pt'><span style='mso-list:Ignore'>a)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-size:12.0pt'>All <b style='mso-bidi-font-weight:normal'>necklace/bracelet</b>
construction sets has a frame, which has <b style='mso-bidi-font-weight:normal'>N</b>
slots to place <b style='mso-bidi-font-weight:normal'>N</b> beads.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-bidi-font-size:12.0pt'><span style='mso-list:Ignore'>b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-size:12.0pt'>All the slots must be filled to make a <b
style='mso-bidi-font-weight:normal'>necklace/bracelet</b>.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;text-align:justify;text-indent:-.25in;
mso-list:l0 level1 lfo2;tab-stops:list .5in'><![if !supportLists]><span
style='mso-bidi-font-size:12.0pt'><span style='mso-list:Ignore'>c)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
style='mso-bidi-font-size:12.0pt'>There are <b style='mso-bidi-font-weight:
normal'>t</b> types of beads in a set. <b style='mso-bidi-font-weight:normal'>N</b>
beads of each type are there in the box. So the total number of beads is <b
style='mso-bidi-font-weight:normal'>tN</b> (<b style='mso-bidi-font-weight:
normal'>t</b> multiplied by <b style='mso-bidi-font-weight:normal'>N</b>), of
which exactly <b style='mso-bidi-font-weight:normal'>N</b> can be used at a
time.<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>
<center>
<img border=0 width=576 height=352
src="http://uva.onlinejudge.org/external/102/p10294a.jpg"  ><br><b>
Fig: Different types of
necklace for t=2 and different value of N</b>
</center>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>The figure above shows necklaces for some different values of <b
style='mso-bidi-font-weight:normal'>N</b> (Here, <b style='mso-bidi-font-weight:
normal'>t</b> is always <b style='mso-bidi-font-weight:normal'>2</b>). Now
let&#8217;s turn out attentions to <b style='mso-bidi-font-weight:normal'>bracelets</b>.
</span>A <b style='mso-bidi-font-weight:normal'><span style='mso-bidi-font-style:
italic'>bracelet</span></b> is a <b style='mso-bidi-font-weight:normal'>necklace</b>
that can be turned over (A junior programmer in Bangladesh says that wrist
watch is a <b style='mso-bidi-font-weight:normal'>necklace</b> (Boys!!! Don&#8217;t
mind :-))). So for a <b style='mso-bidi-font-weight:normal'>bracelet</b> the
following two arrangements are equivalent. Similarly, all other opposite
orientation or mirror images are equivalent. <b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'><o:p>&nbsp;</o:p></span></p>
<center>
<img border=0 width=381 height=131
src="http://uva.onlinejudge.org/external/102/p10294a.jpg"  ></center>


<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='mso-bidi-font-size:12.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><span style='mso-bidi-font-size:
12.0pt'>So, given the description of a <b style='mso-bidi-font-weight:normal'>necklace/bracelet</b>
construction set you will have to determine how many different necklace and
bracelet can be formed with made with that set<span
style='mso-spacerun:yes'>&nbsp; </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Input</span><o:p></o:p></b></p>

<p class=MsoNormal style='text-align:justify'>The input file contains several
lines of input. Each line contains<span style='mso-spacerun:yes'>&nbsp;
</span>two positive integers <b style='mso-bidi-font-weight:normal'>N(0&lt;N&lt;51)</b>
and <b style='mso-bidi-font-weight:normal'>t(0&lt;t&lt;11) </b>as described in
the problem statement. Also note that within this input range inputs will be
such that no final result will exceed <b style='mso-bidi-font-weight:normal'>11</b>
digits. Input is terminated by end of file.<span
style='mso-spacerun:yes'>&nbsp;&nbsp; </span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Output<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-align:justify'>For each line of input produce
one line of output which contains two round numbers <b style='mso-bidi-font-weight:
normal'>NN</b> and <b style='mso-bidi-font-weight:normal'>NB</b> separated by a
single space, where <b style='mso-bidi-font-weight:normal'>NN</b> is the number
of total possible necklaces and <b style='mso-bidi-font-weight:normal'>NB</b>
is the number of total possible bracelets for the corresponding input set.<span
style='mso-spacerun:yes'>&nbsp; </span></p>

<p class=MsoNormal style='text-align:justify'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='text-align:justify'><b style='mso-bidi-font-weight:
normal'><span style='font-size:18.0pt'>Sample Input</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>5 2<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>5 3<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>5 4<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:"Courier New";
color:windowtext'>5 5<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-bidi-font-size:12.0pt;color:windowtext'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-align:justify'><b><span style='font-size:18.0pt'>Sample
Output</span><o:p></o:p></b></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>8 8<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>51 39<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>208 136<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:11.0pt;font-family:Courier;
color:windowtext'>629 377<o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-bidi-font-size:12.0pt;font-family:Courier;color:windowtext'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='mso-bidi-font-size:12.0pt;color:windowtext'>(Math Lovers&#8217; Contest,
Problem Setter: Shahriar Manzoor)<o:p></o:p></span></b></p>

</div>

</body>

</html>
